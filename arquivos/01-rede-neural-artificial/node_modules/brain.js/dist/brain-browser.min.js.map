{"version":3,"sources":["activation/leaky-relu.js","activation/relu.js","activation/sigmoid.js","activation/tanh.js","activation/index.js","cross-validate.js","../node_modules/gpu.js/node_modules/gpu-mock.js/index.js","../node_modules/acorn/dist/acorn.es.js","../node_modules/gpu.js/src/input.js","../node_modules/gpu.js/src/texture.js","../node_modules/gpu.js/src/utils.js","../node_modules/gpu.js/src/backend/kernel.js","../node_modules/gpu.js/src/backend/function-builder.js","../node_modules/gpu.js/src/backend/function-tracer.js","../node_modules/gpu.js/src/backend/function-node.js","../node_modules/gpu.js/src/backend/cpu/function-node.js","../node_modules/gpu.js/src/backend/cpu/kernel-string.js","../node_modules/gpu.js/src/backend/cpu/kernel.js","../node_modules/gl/browser_index.js","../node_modules/gpu.js/src/backend/gl/texture/float.js","../node_modules/gpu.js/src/backend/gl/texture/array-2-float.js","../node_modules/gpu.js/src/backend/gl/texture/array-2-float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/array-2-float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/array-3-float.js","../node_modules/gpu.js/src/backend/gl/texture/array-3-float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/array-3-float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/array-4-float.js","../node_modules/gpu.js/src/backend/gl/texture/array-4-float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/array-4-float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/float-2d.js","../node_modules/gpu.js/src/backend/gl/texture/float-3d.js","../node_modules/gpu.js/src/backend/gl/texture/memory-optimized.js","../node_modules/gpu.js/src/backend/gl/texture/memory-optimized-2d.js","../node_modules/gpu.js/src/backend/gl/texture/memory-optimized-3d.js","../node_modules/gpu.js/src/backend/gl/texture/unsigned.js","../node_modules/gpu.js/src/backend/gl/texture/unsigned-2d.js","../node_modules/gpu.js/src/backend/gl/texture/unsigned-3d.js","../node_modules/gpu.js/src/backend/gl/texture/graphical.js","../node_modules/gpu.js/src/backend/gl/kernel.js","../node_modules/gpu.js/src/backend/web-gl/function-node.js","../node_modules/gpu.js/src/plugins/triangle-noise.js","../node_modules/gpu.js/src/backend/web-gl/fragment-shader.js","../node_modules/gpu.js/src/backend/web-gl/vertex-shader.js","../node_modules/gl-wiretap/index.js","../node_modules/gpu.js/src/backend/gl/kernel-string.js","../node_modules/gpu.js/src/backend/kernel-value.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/index.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/boolean.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/float.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/integer.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/html-image.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-html-image.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-number-texture.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array2.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array3.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/single-array4.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/unsigned-array.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value/dynamic-unsigned-array.js","../node_modules/gpu.js/src/backend/web-gl/kernel-value-maps.js","../node_modules/gpu.js/src/backend/web-gl/kernel.js","../node_modules/gpu.js/src/backend/headless-gl/kernel.js","../node_modules/gpu.js/src/backend/web-gl2/function-node.js","../node_modules/gpu.js/src/backend/web-gl2/fragment-shader.js","../node_modules/gpu.js/src/backend/web-gl2/vertex-shader.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/boolean.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/float.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/integer.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/html-image.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-html-image.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/html-image-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-html-image-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-unsigned-input.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-memory-optimized-number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-number-texture.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array1d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array2d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-single-array3d-i.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array2.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array3.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/single-array4.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/unsigned-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value/dynamic-unsigned-array.js","../node_modules/gpu.js/src/backend/web-gl2/kernel-value-maps.js","../node_modules/gpu.js/src/backend/web-gl2/kernel.js","../node_modules/gpu.js/src/kernel-run-shortcut.js","../node_modules/gpu.js/src/gpu.js","../node_modules/gpu.js/src/alias.js","../node_modules/gpu.js/src/index.js","utilities/kernel.js","utilities/zeros.js","utilities/zeros-2d.js","utilities/zeros-3d.js","layer/base.js","layer/types.js","layer/add.js","praxis/base.js","praxis/arthur-deviation-weights.js","praxis/arthur-deviation-biases.js","utilities/random-weight.js","utilities/randos.js","utilities/randos-2d.js","layer/random.js","layer/multiply.js","layer/sigmoid.js","layer/arthur-feed-forward.js","utilities/layer-setup.js","utilities/randos-3d.js","utilities/values.js","layer/convolution.js","layer/dropout.js","layer/feed-forward.js","layer/fully-connected.js","layer/negative.js","layer/multiply-element.js","utilities/ones.js","utilities/ones-2d.js","layer/ones.js","layer/tanh.js","layer/zeros.js","layer/gru.js","layer/input.js","layer/leaky-relu.js","layer/lstm.js","layer/target.js","layer/output.js","layer/pool.js","layer/relu.js","layer/recurrent.js","layer/regression.js","layer/soft-max.js","layer/svm.js","layer/transpose.js","layer/index.js","likely.js","lookup.js","praxis/adam.js","praxis/momentum-root-mean-squared-propagation.js","praxis/index.js","utilities/mse-2d.js","utilities/layer-from-json.js","utilities/traverse-layers-from.js","utilities/flatten-layers.js","feed-forward.js","../src/thaw.js","../src/block.js","../src/index.js","../node_modules/events/events.js","../node_modules/inherits/inherits_browser.js","../node_modules/process/browser.js","../node_modules/process-nextick-args/index.js","../node_modules/stream-browserify/node_modules/isarray/index.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/safe-buffer/index.js","../node_modules/core-util-is/lib/util.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/util-deprecate/browser.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/stream-browserify/node_modules/string_decoder/lib/string_decoder.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/writable-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/duplex-browser.js","../node_modules/stream-browserify/node_modules/readable-stream/transform.js","../node_modules/stream-browserify/node_modules/readable-stream/passthrough.js","../node_modules/stream-browserify/index.js","train-stream.js","utilities/to-array.js","utilities/max.js","utilities/mse.js","utilities/range.js","neural-network.js","neural-network-gpu.js","layer/recurrent-connection.js","layer/recurrent-input.js","layer/recurrent-zeros.js","recurrent.js","recurrent/matrix/index.js","utilities/random.js","recurrent/matrix/random-matrix.js","recurrent/matrix/clone-negative.js","recurrent/matrix/add.js","recurrent/matrix/add-b.js","recurrent/matrix/all-ones.js","recurrent/matrix/multiply.js","recurrent/matrix/multiply-b.js","recurrent/matrix/multiply-element.js","recurrent/matrix/multiply-element-b.js","recurrent/matrix/relu.js","recurrent/matrix/relu-b.js","recurrent/matrix/row-pluck.js","recurrent/matrix/row-pluck-b.js","recurrent/matrix/sigmoid.js","recurrent/matrix/sigmoid-b.js","recurrent/matrix/tanh.js","recurrent/matrix/tanh-b.js","recurrent/matrix/equation.js","recurrent/matrix/sample-i.js","recurrent/matrix/max-i.js","recurrent/matrix/softmax.js","recurrent/matrix/copy.js","utilities/data-formatter.js","recurrent/rnn.js","recurrent/rnn-time-step.js","recurrent/lstm.js","recurrent/lstm-time-step.js","recurrent/gru.js","recurrent/gru-time-step.js","index.js"],"names":["activate","weight","measure","error","module","exports","Math","max","delta","value","exp","tanh","tanhDerivative","leakyRelu","require","relu","sigmoid","testPartition","Classifier","opts","trainOpts","trainSet","testSet","classifier","beginTrain","Date","now","trainingStats","train","beginTest","testStats","test","endTest","stats","Object","assign","trainTime","testTime","iterations","trainError","learningRate","hidden","hiddenSizes","network","toJSON","shuffleArray","array","i","length","j","floor","random","temp","crossValidate","data","k","size","constructor","Array","newData","keys","forEach","key","avgs","truePos","trueNeg","falsePos","falseNeg","total","misclasses","results","dclone","slice","splice","result","avg","stat","concat","push","precision","recall","accuracy","testSize","trainSize","sets","reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","isIdentifierStart","astral","String","fromCharCode","isIdentifierChar","TokenType","label","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","options","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","prototype","hasOwnProperty","toString","has","obj","propName","call","isArray","Position","line","col","column","offset","n","SourceLocation","p","start","end","sourceFile","getLineInfo","input","cur","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","plugins","getOptions","opt","tokens","token","pushComment","block","text","startLoc","endLoc","comment","type","loc","range","keywordRegexp","words","replace","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","loadPlugins","lineStart","lastIndexOf","curLine","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","inFunction","inGenerator","inAsync","yieldPos","awaitPos","labels","skipLineComment","scopeStack","enterFunctionScope","regexpState","isKeyword","word","isReservedWord","extend","f","pluginConfigs","plugin","Error","parse","node","startNode","nextToken","parseTopLevel","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","this$1","body","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","declaration","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseExpression","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","enterLexicalScope","parseFor","init$1","parseVar","declarations","init","await","parseForIn","toAssignable","checkLVal","isAsync","parseFunction","consequent","alternate","argument","discriminant","cases","sawDefault","isCase","exitLexicalScope","empty","handler","clause","param","parseBindingAtom","finalizer","object","i$1","list","label$1","statementStart","generator","async","createNewLexicalScope","update","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","isStatement","allowExpressionBody","initFunction","oldInGen","oldInAsync","oldYieldPos","oldAwaitPos","oldInFunc","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","member","parseClassMember","method","tryContextual","noLineBreak","computed","startNodeAt","static","isGenerator","parsePropertyName","parseClassMethod","parseMethod","superClass","parseExprSubscripts","parseExprAtom","checkExport","fNode","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","statement","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","canDeclareVarName","canDeclareLexicalName","declareVarName","declareLexicalName","pp$3","checkPropClash","propHash","shorthand","proto","other","get","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","parseSubscripts","base","noCalls","maybeAsyncArrow","property","parseExprList","parseArrowExpression","callee","arguments","tag","quasi","parseTemplate","isTagged","canBeArrow","parseLiteral","regex","pattern","flags","parseParenAndDistinguishExpression","parseNew","val","innerStartPos","spreadStart","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","exitFunctionScope","allowDuplicates","nameHash","indexOf","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","target","len","sources","var","lexical","childVar","parentLexical","parentScope","childScope","currentScope","Node","parser","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","apply","$LONE","General_Category","gc","sc","Script_Extensions","scx","Script","pp$9","RegExpValidationState","validFlags","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isControlLetter","isValidUnicode","isCharacterClassEscape","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$8","codePointToString","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","e","readInt","radix","Infinity","startsWithDot","octal","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","escStart","esc","parse_dammit","LooseParser","pluginsLoose","version","parseExpressionAt","tokenizer","addLooseExports","Parser$$1","plugins$$1","Input","Int32Array","z","x","y","w","h","d","utils","erectMemoryOptimized3DFloat","subarray","Float32Array","erectMemoryOptimized2DFloat","Texture","settings","texture","dimensions","output","kernel","deleteTexture","acorn","FUNCTION_NAME","STRIP_COMMENTS","ARGUMENT_NAMES","systemEndianness","_systemEndianness","getSystemEndianness","b","ArrayBuffer","a","Uint32Array","Uint8Array","isFunction","funcObj","isFunctionString","fn","toLowerCase","getFunctionNameFromString","funcStr","trim","getFunctionBodyFromString","substring","getArgumentNamesFromString","fnStr","clone","isActiveClone","isNaN","getVariableType","strictIntegers","nodeName","Boolean","Number","isInteger","getKernelTextureSize","texelCount","optimizeFloatMemory","ceil","closestSquareDimensions","high","sqrt","low","getMemoryOptimizedFloatTextureSize","bitRatio","totalArea","roundTo","getMemoryOptimizedPackedTextureSize","getDimensions","pad","ret","dim","reverse","from","flatten2dArrayTo","flatten3dArrayTo","flatten4dArrayTo","flattenTo","splitArray","part","buffer","byteOffset","getAstString","ast","lines","join","allPropertiesOf","props","getOwnPropertyNames","getPrototypeOf","linesToString","warnDeprecated","oldName","newName","console","warn","functionToIFunction","sourceString","argumentTypes","map","returnType","flipPixels","pixels","width","height","halfHeight","bytesPerRow","Uint8ClampedArray","topOffset","bottomOffset","copyWithin","erectPackedFloat","erect2DPackedFloat","yResults","xStart","xEnd","erect3DPackedFloat","depth","zResults","erectMemoryOptimizedFloat","erectFloat","xResults","erect2DFloat","erect3DFloat","erectArray2","xResultsMax","erect2DArray2","XResultsMax","erect3DArray2","erectArray3","erect2DArray3","erect3DArray3","erectArray4","erect2DArray4","erect3DArray4","flattenFunctionToString","findDependency","thisLookup","doNotDefine","flattened","functionDependencies","flatten","lookups","lookup","foundSource","flattenedFunctionDependencies","functionDependency","splitHTMLImageToRGB","image","mode","gpu","GPU","rKernel","createKernel","pixel","thread","r","gKernel","g","bKernel","aKernel","splitRGBAToCanvases","rgba","visualGPUR","visualKernelR","color","graphical","visualGPUG","visualKernelG","visualGPUB","visualKernelB","visualGPUA","visualKernelA","destroy","canvas","Kernel","useLegacyEncoder","fallbackRequested","onRequestFallback","argumentNames","argumentSizes","argumentBitRatios","kernelArguments","kernelConstants","debug","loopMaxIterations","constants","constantTypes","constantBitRatios","dynamicArguments","dynamicOutput","checkContext","functions","nativeFunctions","subKernels","validate","immutable","pipeline","leadingReturnStatement","followingReturnStatement","fixIntegerDivisionAccuracy","warnVarUsage","setOutput","initCanvas","initContext","initPlugins","args","argType","arg","getBitRatio","needsConstantTypes","setDynamicOutput","setDynamicArguments","argumentIndex","subKernel","removeCanvasReferences","Int8Array","Uint16Array","Int16Array","threadDim","argumentsTypes","pluginNames","FunctionBuilder","rootNode","functionNodes","subKernelNodes","functionMap","nativeFunctionNames","lookupChain","argumentChain","functionNodeDependencies","functionCalls","nativeFunction","FunctionNode","extraNodeOptions","kernelConstant","needsArgumentType","functionName","functionBuilder","assignArgumentType","lookupReturnType","requestingNode","lookupFunctionArgumentTypes","lookupFunctionArgumentName","lookupFunctionArgumentBitRatio","argumentName","triggerImplyArgumentType","argumentType","triggerTrackArgumentSynonym","calleeFunctionName","trackArgumentSynonym","lookupArgumentSynonym","originFunctionName","onFunctionCall","trackFunctionCall","nodeOptions","isRootKernel","onNestedFunction","nestedFunction","traceFunctionAST","addFunctionNode","rootNodeOptions","fromJSON","isSubKernel","functionNode","retList","functionIndex","calledFunctions","traceFunctionCalls","dependantFunctionName","getPrototypes","getPrototypesFromFunctionNames","functionList","nativeIndex","jsonFunctionNodes","jsonFunctionNode","getStringFromFunctionNames","_isNativeFunction","_lookupNativeFunctionReturnType","_isFunction","_getFunction","getType","getJsAST","_getNativeFunction","argumentSynonym","synonymIndex","fnNode","calleeArgumentName","synonymUseIndex","Set","add","subKernelNode","called","functionCallIndex","FunctionTracer","runningContexts","contexts","identifiers","returnStatements","inLoopInit","scan","run","newContext","currentContext","origin","forceInteger","assignable","states","strictTypingChecking","literalTypes","_string","_internalVariableNames","astMemberExpressionUnroll","firstExpression","astErrorOutput","inParser","freeze","functionAST","dependencies","getDependencies","valueType","realType","isSafe","isSafeDependencies","identifier","getDeclaration","typeLookupMap","constantName","astGeneric","literalKey","isAstMathFunction","inferArgumentTypesIfNeeded","isState","rightType","lastType","isAstVariable","signature","getVariableSignature","findIdentifierOrigin","variableSignature","getLookupType","getConstantType","isAstMathVariable","lastReturn","findLastReturn","every","dependency","isNotSafe","details","getMemberExpressionDetails","xProperty","yProperty","zProperty","unshift","signatureString","allowedExpressions","retArr","astFunctionDeclaration","astFunctionExpression","astReturnStatement","astLiteral","astBinaryExpression","astIdentifierExpression","astAssignmentExpression","astExpressionStatement","astEmptyStatement","astBlockStatement","astIfStatement","astSwitchStatement","astBreakStatement","astContinueStatement","astForStatement","astWhileStatement","astDoWhileStatement","astVariableDeclaration","astVariableDeclarator","astThisExpression","astSequenceExpression","astUnaryExpression","astUpdateExpression","astLogicalExpression","astMemberExpression","astCallExpression","astArrayExpression","astDebuggerStatement","astConditionalExpression","debugString","splitLines","lineBefore","arrNode","isChildFunction","astFunction","esNode","eNode","brNode","crNode","varDecNode","firstDeclaration","markupType","typeMap","iVarDecNode","sNode","uNode","unaryResult","checkAndUpconvertBitwiseUnary","logNode","astToFind","stack","atNode","shift","CPUFunctionNode","idtNode","getKernelArgumentName","forNode","initArr","testArr","updateArr","bodyArr","pushState","includes","popState","iVariableName","getInternalVariableName","whileNode","doWhileNode","assNode","bNode","varWarn","ifNode","tNode","mNode","synonymName","markupName","isInput","constant","targetTypes","arrLen","subNode","constantsToString","cpuKernelString","cpuKernel","header","thisProperties","beforeReturn","useFunctionKeyword","JSON","stringify","colorFn","propertyName","getPixelsFn","getPixels","constantKeys","flattenedImageTo3DArray","_imageTo3DArray","flattenedImageTo2DArray","_imageTo2DArray","_kernelString","CPUKernel","mergeSettings","_imageData","_colorData","translatedSources","features","combinedKernel","kernelMap","isIntegerDivisionAccurate","document","createElement","OffscreenCanvas","getContext","checkOutput","fromKernel","getKernelResultType","setupConstants","setupArguments","validateSettings","translateSource","createImageData","kernelString","getKernelString","log","Function","bind","kernelThreadString","filter","_getLoopMaxString","_processConstants","_processArguments","_graphicalKernelBody","_resultKernelBody","variableName","ctx","drawImage","pixelsData","getImageData","imageArray","row","flip","images","imagesArray","_resultKernel1DLoop","_kernelOutput","_resultKernel2DLoop","_resultKernel3DLoop","_graphicalKernel2DLoop","_graphicalOutput","constructorString","_getKernelResultTypeConstructorString","_mapSubKernels","removeCanvasReference","json","createContext","gl","_getExtension","getExtension","extDestroy","loseContext","extResize","resize","_supportedExtensions","getSupportedExtensions","extName","GLTextureFloat","framebuffer","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","readPixels","RGBA","FLOAT","renderRawOutput","renderValues","GLTextureArray2Float","GLTextureArray2Float2D","GLTextureArray2Float3D","GLTextureArray3Float","GLTextureArray3Float2D","GLTextureArray3Float3D","GLTextureArray4Float","GLTextureArray4Float2D","GLTextureArray4Float3D","GLTextureFloat2D","GLTextureFloat3D","GLTextureMemoryOptimized","GLTextureMemoryOptimized2D","GLTextureMemoryOptimized3D","GLTextureUnsigned","UNSIGNED_BYTE","GLTextureUnsigned2D","GLTextureUnsigned3D","GLTextureGraphical","GLKernel","transferValues","formatValues","TextureConstructor","renderOutput","texSize","translatedSource","renderStrategy","compiledFragmentShader","compiledVertexShader","fix","floatTextures","testContext","testCanvas","build","kernelFunction","v1","v2","isStartingVariableName","isVariableChar","char","nextChar","lastKernel","bytes","readPackedPixelsToUint8Array","readPackedPixelsToFloat32Array","renderTexture","renderKernels","renderKernelsToTextures","PackedPixelTo3DFloat","PackedPixelTo2DFloat","PackedPixelToFloat","requestFallback","renderKernelsToArrays","readFloatPixelsToFloat32Array","FloatTexture","MemoryOptimizedFloatPixelToMemoryOptimized3DFloat","MemoryOptimizedFloatPixelToMemoryOptimized2DFloat","MemoryOptimizedFloatPixelToMemoryOptimizedFloat","FloatPixelTo3DArray2","FloatPixelTo2DArray2","FloatPixelToArray2","FloatPixelTo3DArray3","FloatPixelTo2DArray3","FloatPixelToArray3","FloatPixelTo3DArray4","FloatPixelTo2DArray4","FloatPixelToArray4","FloatPixelTo3DFloat","FloatPixelTo2DFloat","FloatPixelToFloat","getMainResultNumberTexture","getMainResultArray2Texture","getMainResultArray3Texture","getMainResultArray4Texture","getMainResultGraphical","getMainResultMemoryOptimizedFloats","getMainResultTexture","getMainResultPackedPixels","getMainResultKernelNumberTexture","getMainResultSubKernelNumberTexture","getMainResultKernelArray2Texture","getMainResultSubKernelArray2Texture","getMainResultKernelArray3Texture","getMainResultSubKernelArray3Texture","getMainResultKernelArray4Texture","getMainResultSubKernelArray4Texture","outputTexture","subKernelOutputTextures","toArray","updateMaxTexSize","viewport","maxTexSize","_setupOutputTexture","_setupSubOutputTextures","PackedPixelToUint8Array","PackedTexture","FloatPixelToFloat32Array","int","float","vec2","vec3","vec4","jsMathPrefix","localPrefix","WebGLFunctionNode","castLiteralToFloat","castValueToInteger","castLiteralToInteger","round","checkAndUpconvertOperator","castValueToFloat","leftType","operatorMap","literalResult","literalType","bitwiseResult","checkAndUpconvertBitwiseOperators","upconvertableOperators","foundOperator","userArgumentName","inForLoopInit","info","actualType","declarationResult","varName","fallingThrough","defaultResult","movingDefaultToEnd","pastFirstIf","testType","memberExpressionPropertyMarkup","memberExpressionXYZ","isMathFunction","functionMatch","functionReplace","targetType","functionReturnType","onBeforeRun","setUniform1f","fragmentShader","vertexShader","glWiretap","toStringWithoutUtils","glKernelString","originKernel","setupContextString","destroyContextString","postResult","useTrackablePrimitives","onReadPixels","targetName","subKernelsResultVariableSetup","subKernelsResultIndex","getRenderString","onUnrecognizedArgumentLookup","variable","uploadValue","insertVariable","setIndent","upgradedArguments","kernelArgument","imageIndex","getStringValueHandler","textureName","getContextVariableName","getToArrayString","subKernelResult","subKernelTextureName","getGetPixelsString","constantsUpload","readBackValue","kernelResult","flattenedFunctions","KernelValue","onRequestContextHandle","onUpdateValueMismatch","contextHandle","WebGLKernelValue","dimensionsId","sizeId","initialValueConstructor","onRequestTexture","onRequestIndex","textureSize","setupTexture","getTransferArrayType","Float64Array","Type","valuesFlat","WebGLKernelValueBoolean","setUniform1i","WebGLKernelValueFloat","WebGLKernelValueInteger","WebGLKernelValueHTMLImage","requestTexture","inputImage","activeTexture","bindTexture","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","WebGLKernelValueDynamicHTMLImage","setUniform3iv","setUniform2iv","WebGLKernelValueSingleInput","uploadArrayLength","WebGLKernelValueDynamicSingleInput","WebGLKernelValueUnsignedInput","TranserArrayType","preUploadValue","WebGLKernelValueDynamicUnsignedInput","WebGLKernelValueMemoryOptimizedNumberTexture","inputTexture","WebGLKernelValueDynamicMemoryOptimizedNumberTexture","WebGLKernelValueNumberTexture","WebGLKernelValueDynamicNumberTexture","WebGLKernelValueSingleArray","WebGLKernelValueDynamicSingleArray","WebGLKernelValueSingleArray1DI","setShape","valueDimensions","WebGLKernelValueDynamicSingleArray1DI","WebGLKernelValueSingleArray2DI","WebGLKernelValueDynamicSingleArray2DI","WebGLKernelValueSingleArray3DI","WebGLKernelValueDynamicSingleArray3DI","WebGLKernelValueSingleArray2","setUniform2fv","WebGLKernelValueSingleArray3","setUniform3fv","WebGLKernelValueSingleArray4","setUniform4fv","WebGLKernelValueUnsignedArray","WebGLKernelValueDynamicUnsignedArray","kernelValueMaps","unsigned","dynamic","single","lookupKernelValueType","undefined","triangleNoise","isSupported","testExtensions","canvases","maxTexSizes","WebGLKernel","endianness","extensions","argumentTextureCount","constantTextureCount","fragShader","vertShader","drawBuffersMap","switchingKernels","onRequestSwitchKernel","textureCache","programUniformLocationCache","uniform1fCache","uniform1iCache","uniform2fCache","uniform2fvCache","uniform2ivCache","uniform3fvCache","uniform3ivCache","uniform4fvCache","uniform4ivCache","OES_texture_float","OES_texture_float_linear","OES_element_index_uint","WEBGL_draw_buffers","getFeatures","WebGLRenderingContext","isDrawBuffers","getIsDrawBuffers","isFloatRead","getIsFloatRead","getIsIntegerDivisionAccurate","isTextureFloat","getIsTextureFloat","channelCount","getChannelCount","getParameter","MAX_DRAW_BUFFERS_WEBGL","setupFeatureChecks","isContextMatch","alpha","antialias","pluginsToUse","some","pluginName","WEBGL_color_buffer_float","canvasIndex","getPrototypeString","requiredChannels","returnTypes","getReturnTypes","needsArgumentTypes","textureIndexes","createTexture","TEXTURE0","kernelValue","initExtensions","failureResult","pickRenderStrategy","enable","SCISSOR_TEST","getVertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getFragmentShader","FRAGMENT_SHADER","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","vertices","texCoords","texCoordOffset","byteLength","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","bufferSubData","aPosLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","aTexCoordLoc","useProgram","updateValue","getSubKernelResultType","scissor","setUniform2f","bindRenderbuffer","RENDERBUFFER","drawArrays","TRIANGLE_STRIP","drawBuffersWEBGL","getTextureCache","getUniformLocation","uniform1f","uniform1i","value1","value2","cache","uniform2f","uniform2fv","uniform2iv","uniform3fv","uniform3iv","uniform4iv","uniform4fv","HEADER","_getHeaderString","LOOP_MAX","PLUGINS","_getPluginsString","CONSTANTS","_getConstantsString","DECODE32_ENDIANNESS","_getDecode32EndiannessString","ENCODE32_ENDIANNESS","_getEncode32EndiannessString","DIVIDE_WITH_INTEGER_CHECK","_getDivideWithIntegerCheckString","MAIN_CONSTANTS","_getMainConstantsString","MAIN_ARGUMENTS","_getMainArgumentsString","KERNEL","MAIN_RESULT","getMainResultString","getSource","kernelResultDeclaration","getMainResultKernelPackedPixels","getMainResultSubKernelPackedPixels","channels","channel","getMainResultKernelMemoryOptimizedFloats","getMainResultSubKernelMemoryOptimizedFloats","src","artifact","replaceArtifacts","_getFragShaderArtifactMap","deleteBuffer","deleteFramebuffer","deleteShader","deleteProgram","idx","destroyExtensions","extension","HeadlessGLKernel","preserveDrawingBuffer","STACKGL_resize_drawingbuffer","STACKGL_destroy_context","RENDERER","WebGL2FunctionNode","WebGL2KernelValueBoolean","WebGL2KernelValueFloat","WebGL2KernelValueInteger","WebGL2KernelValueHTMLImage","WebGL2KernelValueDynamicHTMLImage","WebGL2KernelValueHtmlImageArray","TEXTURE_2D_ARRAY","texImage3D","texSubImage3D","WebGL2KernelValueDynamicHtmlImageArray","WebGL2KernelValueSingleInput","RGBA32F","WebGL2KernelValueDynamicSingleInput","WebGL2KernelValueUnsignedInput","WebGL2KernelValueDynamicUnsignedInput","WebGL2KernelValueMemoryOptimizedNumberTexture","WebGL2KernelValueDynamicMemoryOptimizedNumberTexture","WebGL2KernelValueNumberTexture","WebGL2KernelValueDynamicNumberTexture","WebGL2KernelValueSingleArray","WebGL2KernelValueDynamicSingleArray","WebGL2KernelValueSingleArray1DI","WebGL2KernelValueDynamicSingleArray1DI","WebGL2KernelValueSingleArray2DI","WebGL2KernelValueDynamicSingleArray2DI","WebGL2KernelValueSingleArray3DI","WebGL2KernelValueDynamicSingleArray3DI","WebGL2KernelValueSingleArray2","WebGL2KernelValueSingleArray3","WebGL2KernelValueSingleArray4","WebGL2KernelValueUnsignedArray","WebGL2KernelValueDynamicUnsignedArray","WebGL2Kernel","EXT_color_buffer_float","drawBuffers","texStorage2D","R32F","RG32F","WebGL2RenderingContext","MAX_DRAW_BUFFERS","kernelRunShortcut","shortcut","Promise","accept","reject","replaceKernel","replacementKernel","bindKernelToShortcut","__defineGetter__","__defineSetter__","gpuMock","kernelOrder","kernelTypes","internalKernels","kernels","chooseKernel","addFunction","addNativeFunction","Worker","importScripts","HTMLCanvasElement","ExternalKernel","devKernel","upgradeDeprecatedCreateKernelSettings","switchableKernels","settingsCopy","fallbackKernel","kernelRun","dynamicArgument","mergedSettings","existingKernel","newKernel","firstKernel","setCanvas","setContext","setPipeline","nativeFunctionArguments","nativeFunctionReturnType","setTimeout","destroyContext","upgradedSettings","floatOutput","outputToTexture","outputImmutable","alias","fnString","gpuInstance","setup","teardown","makeKernel","createKernelMap","makeDevKernel","kernelInput","zeros","zeros2D","zeros3D","Base","deltas","weights","praxis","praxisOpts","defaults","setupPraxis","layer","predictKernel","compareKernel","previousLayer","nextLayer","jsonLayer","Activation","Internal","Filter","Model","Modifier","Operator","predict","inputWeights1","inputWeights2","Add","inputLayer1","inputLayer2","updateChange","changes","incomingWeights","inputDeltas","lastChange","inputDelta","incoming","change","momentum","ArthurDeviationWeights","weightsLayer","incomingLayer","deltaLayer","setupKernels","arthurDeviationWeights","ArthurDeviationBiases","arthurDeviationBiases","randomWeight","randos","randos2D","Random","weights1","weights2","sum","compareFromX","inputWeights","compareFromY","Multiply","compareKernel1","compareKernel2","newDeltas1","newDeltas2","multiply","inputs","compare","Sigmoid","inputLayer","noopPraxis","arthurFeedForward","weightsPraxis","biasesLayer","biasesPraxis","multiplyLayer","addLayer","sigmoidLayer","setStride","strideX","stride","strideY","setPadding","paddingX","padding","paddingY","rondos2D","fill","randos3D","values","filters","biases","startFilterX","startInputX","endFilterX","filterWidth","inputWidth","startFilterY","startInputY","endFilterY","filterHeight","inputHeight","inputDepth","filterY","inputY","filterX","inputX","compareFilterDeltas","filterDeltas","startDeltaX","endDeltaX","deltaWidth","startDeltaY","endDeltaY","deltaHeight","deltaY","deltaX","deltaZ","compareInputDeltas","compareBiases","biasDeltas","Convolution","filterCount","bias","learnFilters","learnInputs","compareFilterDeltasKernel","deltasWidth","deltasHeight","deltasDepth","compareInputDeltasKernel","compareBiasesKernel","convolution","trainingPredict","probability","Dropout","isTraining","learnKernel","dropout","feedForward","predict3D","compareInputDeltas3D","compareFilterDeltas3D","inputZ","FullyConnected","connectionCount","fullyConnected","Negative","negative","inputLayerWeights","MultiplyElement","multiplyElement","ones","ones2D","Ones","errors","Tanh","Zeros","gru","recurrentInput","updateGateWeights","updateGatePeepholes","updateGateBias","updateGate","resetGateWeights","resetGatePeepholes","resetGateBias","resetGate","cellWeights","cellPeepholes","cellBias","cell","rows","columns","reshapeInput","predict1D","lra","LeakyRelu","lstm","inputGateWeights","inputGatePeepholes","inputGateBias","inputGate","forgetGateWeights","forgetGatePeepholes","forgetGateBias","forgetGate","outputGateWeights","outputGatePeepholes","outputGateBias","outputGate","memoryWeights","memoryPeepholes","memoryBias","memory","retainCell","writeCell","compare1D","targetValues","compare2D","Target","compareFn","outputGateConnector","setSwitchY","setSwitchX","largestValue","largestX","largestY","switchY","switchX","outputWidth","outputHeight","deltasY","deltasX","switchXValue","switchYValue","compare3D","Pool","outputDepth","pool","Relu","recurrent","setDimensions","transition","Regression","learn","targets","regression","getMaxValue","maxInput","getMaxValue2D","getMaxValue3D","getSum","getSum2D","getSum3D","getExponentials","getExponentials2D","getExponentials3D","exponentials","exponentialsSum","predict2D","indicator","loss","SoftMax","getExponentialsKernel","getMaxValueKernel","getSumKernel","maxValue","softMax","SVM","svm","Transpose","transpose","net","maxProp","hashes","reducedHash","reduce","memo","hash","lookupFromHash","lookupHash","Adam","adam","getMomentum","decay","previousMomentum","clipByValue","previousMomentums","clippedDelta","clipValue","decayRate","smoothEps","regularizationStrength","isClippedByValue","MomentumRootMeanSquaredPropagation","momentums","momentumRootMeanSquaredPropagation","MRmsProp","mRmsProp","Layer","realLayer","Reflect","construct","traverseLayersFrom","cb","layers","mse2d","layerFromJSON","flattenLayers","FeedForward","hiddenLayers","outputLayer","_updateTrainingOptions","trainDefaults","structure","_validateTrainingOptions","_setLogMethod","validations","errorThresh","logPeriod","callback","callbackPeriod","timeout","errorCheckInterval","reinforce","binaryThresh","_inputLayer","_outputLayer","_connectHiddenLayers","hiddenLayer","_connectLayers","initializeLayers","inputLookup","runInput","outputLookup","toHash","status","endTime","_prepTraining","_trainingTick","_calculateTrainingError","_trainPatterns","formattedData","_formatData","initialize","transferredData","transferInput","transferOutput","formattedDatum","_trainPattern","logErrorRate","_calculateDeltas","_adjustWeights","tmp","inputDatumCheck","buildLookup","datumParam","outputDatumCheck","jsonLayers","inputLayerIndex","inputLayer1Index","inputLayer2Index","getLayer","thaw","thawing","thaws","Thaw","items","defaultSettings","each","tick","clearTimeout","delay","stop","doTick","makeReady","middle","Block","count","_next","addArray","insert","insertArray","window","ReflectOwnKeys","R","ReflectApply","receiver","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","NumberIsNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","that","_addListener","listener","prepend","m","events","existing","TypeError","create","newListener","emit","warned","emitter","onceWrapper","fired","removeListener","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","copy","spliceOne","defineProperty","enumerable","RangeError","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","on","prependListener","once","prependOnceListener","originalListener","off","removeAllListeners","rawListeners","eventNames","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","Item","noop","nextTick","title","env","argv","versions","binding","cwd","chdir","dir","umask","pna","WriteReq","chunk","encoding","CorkedRequest","entry","finish","onCorkedFinish","Writable","Duplex","asyncWrite","WritableState","util","inherits","internalUtil","deprecate","Stream","Buffer","OurUint8Array","global","_uint8ArrayToBuffer","_isUint8Array","isBuffer","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","highWaterMark","writableHwm","writableHighWaterMark","defaultHwm","finalCalled","needDrain","ending","ended","finished","destroyed","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","errorEmitted","bufferedRequestCount","corkedRequestsFree","_writableState","writable","write","_write","writev","_writev","_destroy","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","allBuffers","callFinal","prefinish","need","endWritable","corkReq","getBuffer","_","hasInstance","pipe","cork","uncork","setDefaultEncoding","_undestroy","undestroy","uniques","TrainStream","neuralNetwork","dataFormatDetermined","inputKeys","outputKeys","floodCallback","doneTrainingCallback","finishStreamIteration","enc","firstDatum","formatData","trainDatum","datum","trainPattern","lookupFromArray","sizes","inputSize","outputSize","mse","NeuralNetwork","outputs","calculateDeltas","activation","prevSize","setActivation","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","isRunnable","_initialize","_verifyIsInitialized","resolve","thawedTrain","isBinary","actual","expected","misclass","_getTrainOptsJSON","layersAsMath","nodeHandle","layerNumber","nodeKey","trainStream","checkFns","weightedSumSigmoid","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","calcErrorOutput","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","calcError","nextWeights","nextDeltas","calcChanges","previousChanges","previousOutputs","addWeights","addBiases","NeuralNetworkGPU","forwardPropagate","backwardPropagate","changesPropagate","biasesPropagate","biasCopies","copyBias","changesCopies","copyChanges","weightsCopies","copyWeights","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","getChanges","changeBiases","getMSE","weightedSum","_texturizeInputData","calcDeltas","outputTextures","texturizeOutputData","RecurrentConnection","RecurrentInput","RecurrentZeros","Recurrent","initialLayers","_outputConnection","setLayer","flattenedLayers","_inputLayers","_hiddenLayers","_outputLayers","_recurrentIndices","_model","previousHiddenLayers","firstLayer","recurrentIndex","previousHiddenLayer","setRecurrentInput","_previousInputs","_connectHiddenLayersDeep","reuseKernels","hiddenConnection","initializeDeep","hiddenLayersIndex","Matrix","ix","matrix","weightRows","deltasRows","rowIndex","weightValues","deltasValues","columnIndex","setWeight","setDeltas","randomFloat","gaussRandom","returnV","vVal","u","randomInteger","randomN","mu","std","RandomMatrix","product","leftRows","leftColumns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","rightColumnBase","leftIndex","rightIndex","leftRowRoot","rightRow","backPropagateValue","rowPluckIndex","rowBase","sig","mwi","cloneNegative","addB","allOnes","multiplyB","multiplyElementB","reluB","rowPluck","rowPluckB","sigmoidB","tanhB","Equation","inputRow","inputValue","forwardFn","backpropagationFn","self","iForward","iBackpropagate","_randomF","randomF","maxv","maxix","maxVal","DataFormatter","maxThreshold","indexTable","characterTable","characters","buildCharactersFromIterable","buildTables","tempCharactersTable","dataFormatterIndex","dataFormatterLength","characterIndex","charactersLength","character","toIndexes","indices","toCharacters","addSpecial","special","specialIndex","toIndexesInputOutput","dataFormatter","fromAllPrintable","addInputOutput","sort","sampleI","maxI","softmax","RNN","stepCache","runs","totalCost","ratioClipped","model","initialLayerInputs","equations","allMatrices","equationConnections","inputRange","mapModel","getModel","hiddenSize","lastHiddenSize","outputConnector","equation","equationConnection","getEquation","inputMatrixToRow","createInputMatrix","createHiddenLayers","createOutputMatrix","runBackpropagate","step","log2ppl","cost","bindEquation","inputIndex","inputMax","equationIndex","logProbabilities","probabilities","log2","stepSize","regc","clipval","numClipped","numTot","matrixIndex","rawInput","maxPredictionLength","isSampleI","temperature","formatDataIn","previousIndex","outputMatrix","probs","formatDataOut","setupData","keepNetworkIntact","jsonString","previousConnectionIndex","connection","states0","matrixToString","stateIndex","matrixOrigin","toInner","fileName","fnName","statesRaw","usedFunctionNames","innerFunctionsSwitch","toFunctionString","inputMatrix","previousResult","fromArrayInputOutput","RNNTimeStep","errorSum","abs","lastOutput","LSTM","inputHidden","inputBias","forgetMatrix","forgetHidden","forgetBias","outputHidden","outputBias","cellActivationMatrix","cellActivationHidden","cellActivationBias","cellWrite","LSTMTimeStep","GRU","updateGateInputMatrix","updateGateHiddenMatrix","resetGateInputMatrix","resetGateHiddenMatrix","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","GRUTimeStep","likely","brain","utilities"],"mappings":"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,QACA,kBACA,KACA,mBACA,KACA,iBACA,KACA,QACA,iBACA,KACA,oBACA,KACA,SACA,KACA,sBACA,KACA,SACA,IACA,gBACA,KACA,iBACA,KACA,mBACA,KACA,OACA,IACA,iBACA,cACA,KACA,kBACA,KACA,kBACA,KACA,kBACA,KACA,SACA,IACA,mBACA,KACA,QACA,IACA,eACA,KACA,eACA,KACA,oBACA,KACA,eACA,KACA,sBACA,KACA,cACA,KACA,cACA,IACA,QACA,YACA,IACA,kBACA,KACA,eACA,KACA,YACA,KACA,SACA,IACA,mBACA,KACA,aACA,KACA,mBACA,MAEQ,OAAA,CACR,QACA,OACA,OACA,wBACA,OACA,SACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,YACA,OACA,QACA,OACA,UACA,OACA,YACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,sBACA,OACA,SACA,OACA,qBACA,OACA,SACA,OACA,OACA,WACA,OACA,SACA,OACA,SACA,OACA,OACA,YACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,aACA,OACA,WACA,OACA,uBACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,SACA,OACA,UACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,MACA,OACA,SACA,OACA,UACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,mBACA,OACA,YACA,OACA,OACA,wBACA,OACA,yBACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,QACA,OACA,SACA,OACA,YACA,OACA,MACA,OACA,QACA,OACA,SACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,YACA,OACA,UACA,OACA,aACA,OACA,UACA,OACA,gBACA,OACA,eACA,OACA,gBACA,OACA,mBACA,OACA,uBACA,OACA,OACA,OACA,OACA,YACA,OACA,MACA,OACA,UACA,OACA,UACA,OACA,YACA,OACA,cACA,OACA,OACA,MACA,OACA,QACA,OACA,QACA,OACA,WACA,OACA,gBACA,OACA,aACA,OACA,oBACA,OACA,aACA,OACA,cACA,OACA,oBACA,OACA,aACA,OACA,QACA,OACA,QACA,OACA,UACA,OACA,eACA,OACA,YACA,OACA,cACA,OACA,WACA,OACA,aACA,OACA,kBACA,OACA,SACA,OACA,QACA,OACA,YACA,OACA,aACA,OACA,UACA,OACA,UACA,OACA,UACA,OACA,cACA,OACA,UACA,OACA,eACA,OACA,UACA,OACA,YACA,OACA,eACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,SACA,OACA,WACA,OACA,WACA,OACA,QACA,OACA,QACA,OACA,SACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,MACA,OACA,cACA,OACA,KACA,OACA,mBACA,SAGJI,MAAMkJ,UAAU9H,KAAKwjB,MAAMhlB,GAAKilB,MAAOjlB,GAAKklB,kBAC5CllB,GAAKmlB,GAAKnlB,GAAKklB,iBACfllB,GAAKolB,GAAKplB,GAAKqlB,kBAAoBrlB,GAAKslB,IAAMtlB,GAAKulB,OAEnD,IAAIC,GAAOtY,EAAO5D,UAEdmc,GAAwB,SAA+BpC,GACpDA,KAAAA,OAASA,EACTqC,KAAAA,WAAa,OAASrC,EAAOhf,QAAQ4G,aAAe,EAAI,KAAO,KAAOoY,EAAOhf,QAAQ4G,aAAe,EAAI,IAAM,IAC9GjC,KAAAA,OAAS,GACT2W,KAAAA,MAAQ,GACRrV,KAAAA,MAAQ,EACRqb,KAAAA,SAAU,EACVC,KAAAA,SAAU,EACV7iB,KAAAA,IAAM,EACN8iB,KAAAA,aAAe,EACfC,KAAAA,gBAAkB,GAClBC,KAAAA,6BAA8B,EAC9BC,KAAAA,mBAAqB,EACrBC,KAAAA,iBAAmB,EACnBC,KAAAA,WAAa,GACbC,KAAAA,mBAAqB,IAgE5B,SAASC,GAAoBC,GACvBA,OAAAA,GAAM,MAAiBnjB,OAAOC,aAAakjB,IAC/CA,GAAM,MACCnjB,OAAOC,aAA0B,OAAZkjB,GAAM,IAA8B,OAAV,KAALA,KAqSnD,SAASC,GAAkBD,GAEvBA,OAAO,KAAPA,GACAA,GAAM,IAAgBA,GAAM,IACrB,KAAPA,GACO,KAAPA,GACAA,GAAM,IAAgBA,GAAM,IAC5BA,GAAM,KAAgBA,GAAM,IAqGhC,SAASE,GAAwBF,GACxBrjB,OAAAA,EAAkBqjB,GAAI,IAAgB,KAAPA,GAA8B,KAAPA,EA0B/D,SAASG,GAAuBH,GACvBjjB,OAAAA,EAAiBijB,GAAI,IAAgB,KAAPA,GAA8B,KAAPA,GAA8B,OAAPA,GAAqC,OAAPA,EA2HnH,SAASI,GAAgBJ,GAEpBA,OAAAA,GAAM,IAAgBA,GAAM,IAC5BA,GAAM,IAAgBA,GAAM,IA0CjC,SAASK,GAAeL,GACfA,OAAAA,GAAM,GAAKA,GAAM,QAqE1B,SAASM,GAAuBN,GAE5BA,OAAO,MAAPA,GACO,KAAPA,GACO,MAAPA,GACO,KAAPA,GACO,MAAPA,GACO,KAAPA,EAmDJ,SAASO,GAA+BP,GAC/BI,OAAAA,GAAgBJ,IAAc,KAAPA,EAchC,SAASQ,GAAgCR,GAChCO,OAAAA,GAA+BP,IAAOS,GAAeT,GAyI9D,SAASS,GAAeT,GACfA,OAAAA,GAAM,IAAgBA,GAAM,GAcrC,SAASU,GAAWV,GAEfA,OAAAA,GAAM,IAAgBA,GAAM,IAC5BA,GAAM,IAAgBA,GAAM,IAC5BA,GAAM,IAAgBA,GAAM,IAGjC,SAASW,GAASX,GACZA,OAAAA,GAAM,IAAgBA,GAAM,GACjBA,EAAK,GAAX,GAELA,GAAM,IAAgBA,GAAM,IACjBA,EAAK,GAAX,GAEFA,EAAK,GAkCd,SAASY,GAAaZ,GACbA,OAAAA,GAAM,IAAgBA,GAAM,GA9+BrCZ,GAAsBnc,UAAU4d,MAAQ,SAAgB5c,EAAOoV,EAASC,GAClEwH,IAAAA,GAAkC,IAAxBxH,EAAMsC,QAAQ,KACvB3X,KAAAA,MAAgB,EAARA,EACRtB,KAAAA,OAAS0W,EAAU,GACnBC,KAAAA,MAAQA,EACRgG,KAAAA,QAAUwB,GAAW,KAAK9D,OAAOhf,QAAQ4G,aAAe,EACxD2a,KAAAA,QAAUuB,GAAW,KAAK9D,OAAOhf,QAAQ4G,aAAe,GAG/Dwa,GAAsBnc,UAAUgI,MAAQ,SAAgB+Q,GACjDgB,KAAAA,OAAO5R,iBAAiB,KAAKnH,MAAQ,gCAAmC,KAAKtB,OAAU,MAAQqZ,IAKtGoD,GAAsBnc,UAAU8d,GAAK,SAAa3nB,GAC5C4nB,IAAAA,EAAI,KAAKre,OACTse,EAAID,EAAE3nB,OACND,GAAAA,GAAK6nB,EACA,OAAC,EAENC,IAAAA,EAAIF,EAAEvU,WAAWrT,GACjB,OAAC,KAAKkmB,SAAW4B,GAAK,OAAUA,GAAK,OAAU9nB,EAAI,GAAK6nB,EACnDC,GAEDA,GAAK,IAAMF,EAAEvU,WAAWrT,EAAI,GAAK,UAG3CgmB,GAAsBnc,UAAUke,UAAY,SAAoB/nB,GAC1D4nB,IAAAA,EAAI,KAAKre,OACTse,EAAID,EAAE3nB,OACND,GAAAA,GAAK6nB,EACAA,OAAAA,EAELC,IAAAA,EAAIF,EAAEvU,WAAWrT,GACjB,OAAC,KAAKkmB,SAAW4B,GAAK,OAAUA,GAAK,OAAU9nB,EAAI,GAAK6nB,EACnD7nB,EAAI,EAENA,EAAI,GAGbgmB,GAAsBnc,UAAUme,QAAU,WACjC,OAAA,KAAKL,GAAG,KAAKrkB,MAGtB0iB,GAAsBnc,UAAUoe,UAAY,WACnC,OAAA,KAAKN,GAAG,KAAKI,UAAU,KAAKzkB,OAGrC0iB,GAAsBnc,UAAUqe,QAAU,WACnC5kB,KAAAA,IAAM,KAAKykB,UAAU,KAAKzkB,MAGjC0iB,GAAsBnc,UAAUmH,IAAM,SAAc4V,GAC9C,OAAA,KAAKoB,YAAcpB,IAChBsB,KAAAA,WACE,IAiBXnC,GAAKoC,oBAAsB,SAASC,GAM7B,IALD3V,IAEAwT,EAAamC,EAAMnC,WACnB/F,EAAQkI,EAAMlI,MAETlgB,EAAI,EAAGA,EAAIkgB,EAAMjgB,OAAQD,IAAK,CACjCqoB,IAAAA,EAAOnI,EAAM1M,OAAOxT,IACU,IAA9BimB,EAAWzD,QAAQ6F,IAPZ,KAQFxW,MAAMuW,EAAMvd,MAAO,mCAExBqV,EAAMsC,QAAQ6F,EAAMroB,EAAI,IAAM,GAVvB,KAWF6R,MAAMuW,EAAMvd,MAAO,uCAWhCkb,GAAKuC,sBAAwB,SAASF,GAC/BG,KAAAA,eAAeH,IAOfA,EAAMjC,SAAW,KAAKvhB,QAAQ4G,aAAe,GAAK4c,EAAM3B,WAAWxmB,OAAS,IAC/EmoB,EAAMjC,SAAU,EACXoC,KAAAA,eAAeH,KAKxBrC,GAAKwC,eAAiB,SAASH,GAC7BA,EAAM9kB,IAAM,EACZ8kB,EAAMhC,aAAe,EACrBgC,EAAM/B,gBAAkB,GACxB+B,EAAM9B,6BAA8B,EACpC8B,EAAM7B,mBAAqB,EAC3B6B,EAAM5B,iBAAmB,EACzB4B,EAAM3B,WAAWxmB,OAAS,EAC1BmoB,EAAM1B,mBAAmBzmB,OAAS,EAE7BuoB,KAAAA,mBAAmBJ,GAEpBA,EAAM9kB,MAAQ8kB,EAAM7e,OAAOtJ,SAEzBmoB,EAAMpX,IAAI,KACZoX,EAAMvW,MAAM,kBAEVuW,EAAMpX,IAAI,KAAiBoX,EAAMpX,IAAI,OACvCoX,EAAMvW,MAAM,6BAGZuW,EAAM5B,iBAAmB4B,EAAM7B,oBACjC6B,EAAMvW,MAAM,kBAET,IAAA,IAAI7R,EAAI,EAAGoX,EAAOgR,EAAM1B,mBAAoB1mB,EAAIoX,EAAKnX,OAAQD,GAAK,EAAG,CACpEwE,IAAAA,EAAO4S,EAAKpX,IAEwB,IAApCooB,EAAM3B,WAAWjE,QAAQhe,IAC3B4jB,EAAMvW,MAAM,sCAMlBkU,GAAKyC,mBAAqB,SAASJ,GAI1BA,IADFK,KAAAA,mBAAmBL,GACjBA,EAAMpX,IAAI,MAHJ,KAIJyX,mBAAmBL,GAIxB,KAAKM,qBAAqBN,GAAO,IACnCA,EAAMvW,MAAM,qBAEVuW,EAAMpX,IAAI,MACZoX,EAAMvW,MAAM,6BAKhBkU,GAAK0C,mBAAqB,SAASL,GAC1BA,KAAAA,EAAM9kB,IAAM8kB,EAAM7e,OAAOtJ,QAAU,KAAK0oB,eAAeP,OAKhErC,GAAK4C,eAAiB,SAASP,GACzB,OAAA,KAAKQ,oBAAoBR,IAIvBA,EAAM9B,6BAA+B,KAAKoC,qBAAqBN,IAE7DA,EAAMlC,SACRkC,EAAMvW,MAAM,uBAGT,KAGLuW,EAAMlC,SAAU,KAAK2C,eAAeT,IAAS,KAAKU,uBAAuBV,MACtEM,KAAAA,qBAAqBN,IACnB,IAOXrC,GAAK6C,oBAAsB,SAASR,GAC9Bvd,IAAAA,EAAQud,EAAM9kB,IAId8kB,GAHJA,EAAM9B,6BAA8B,EAGhC8B,EAAMpX,IAAI,KAAiBoX,EAAMpX,IAAI,IAChC,OAAA,EAILoX,GAAAA,EAAMpX,IAAI,IAAe,CACvBoX,GAAAA,EAAMpX,IAAI,KAAiBoX,EAAMpX,IAAI,IAChC,OAAA,EAEToX,EAAM9kB,IAAMuH,EAIVud,GAAAA,EAAMpX,IAAI,KAAiBoX,EAAMpX,IAAI,IAAe,CAClD+X,IAAAA,GAAa,EAIbX,GAHA,KAAKxjB,QAAQ4G,aAAe,IAC9Bud,EAAaX,EAAMpX,IAAI,KAErBoX,EAAMpX,IAAI,KAAiBoX,EAAMpX,IAAI,IAMhC,OALFwX,KAAAA,mBAAmBJ,GACnBA,EAAMpX,IAAI,KACboX,EAAMvW,MAAM,sBAEduW,EAAM9B,6BAA+ByC,GAC9B,EAKJ,OADPX,EAAM9kB,IAAMuH,GACL,GAITkb,GAAK2C,qBAAuB,SAASN,EAAOY,GAGtC,YAFa,IAAZA,IAAqBA,GAAU,KAEhC,KAAKC,2BAA2Bb,EAAOY,KACzCZ,EAAMpX,IAAI,KACH,IAMX+U,GAAKkD,2BAA6B,SAASb,EAAOY,GAE9CZ,OAAAA,EAAMpX,IAAI,KACVoX,EAAMpX,IAAI,KACVoX,EAAMpX,IAAI,KACV,KAAKkY,2BAA2Bd,EAAOY,IAG3CjD,GAAKmD,2BAA6B,SAASd,EAAOY,GAC5Cne,IAAAA,EAAQud,EAAM9kB,IACd8kB,GAAAA,EAAMpX,IAAI,KAAe,CACvBmY,IAAAA,EAAM,EAAG3rB,GAAO,EAChB,GAAA,KAAK4rB,wBAAwBhB,KAC/Be,EAAMf,EAAMhC,aACRgC,EAAMpX,IAAI,KAAiB,KAAKoY,wBAAwBhB,KAC1D5qB,EAAM4qB,EAAMhC,cAEVgC,EAAMpX,IAAI,MAKL,OAHM,IAATxT,GAAcA,EAAM2rB,IAAQH,GAC9BZ,EAAMvW,MAAM,0CAEP,EAGPuW,EAAMlC,UAAY8C,GACpBZ,EAAMvW,MAAM,yBAEduW,EAAM9kB,IAAMuH,EAEP,OAAA,GAITkb,GAAK8C,eAAiB,SAAST,GAE3B,OAAA,KAAKiB,4BAA4BjB,IACjCA,EAAMpX,IAAI,KACV,KAAKsY,mCAAmClB,IACxC,KAAKmB,yBAAyBnB,IAC9B,KAAKoB,2BAA2BpB,IAChC,KAAKqB,yBAAyBrB,IAGlCrC,GAAKuD,mCAAqC,SAASlB,GAC7Cvd,IAAAA,EAAQud,EAAM9kB,IACd8kB,GAAAA,EAAMpX,IAAI,IAAe,CACvB,GAAA,KAAK0Y,qBAAqBtB,GACrB,OAAA,EAETA,EAAM9kB,IAAMuH,EAEP,OAAA,GAETkb,GAAKyD,2BAA6B,SAASpB,GACrCvd,IAAAA,EAAQud,EAAM9kB,IACd8kB,GAAAA,EAAMpX,IAAI,IAAe,CACvBoX,GAAAA,EAAMpX,IAAI,KAAiBoX,EAAMpX,IAAI,IAAe,CAElDoX,GADCI,KAAAA,mBAAmBJ,GACpBA,EAAMpX,IAAI,IACL,OAAA,EAEToX,EAAMvW,MAAM,sBAEduW,EAAM9kB,IAAMuH,EAEP,OAAA,GAETkb,GAAK0D,yBAA2B,SAASrB,GACnCA,GAAAA,EAAMpX,IAAI,IAAe,CAOvBoX,GANA,KAAKxjB,QAAQ4G,aAAe,EACzBme,KAAAA,sBAAsBvB,GACE,KAApBA,EAAMJ,WACfI,EAAMvW,MAAM,iBAET2W,KAAAA,mBAAmBJ,GACpBA,EAAMpX,IAAI,IAEL,OADPoX,EAAM7B,oBAAsB,GACrB,EAET6B,EAAMvW,MAAM,sBAEP,OAAA,GAITkU,GAAK+C,uBAAyB,SAASV,GAEnCA,OAAAA,EAAMpX,IAAI,KACV,KAAKsY,mCAAmClB,IACxC,KAAKmB,yBAAyBnB,IAC9B,KAAKoB,2BAA2BpB,IAChC,KAAKqB,yBAAyBrB,IAC9B,KAAKwB,kCAAkCxB,IACvC,KAAKyB,mCAAmCzB,IAK5CrC,GAAK6D,kCAAoC,SAASxB,GAIzC,OAHH,KAAKc,2BAA2Bd,GAAO,IACzCA,EAAMvW,MAAM,sBAEP,GAITkU,GAAK+D,0BAA4B,SAAS1B,GACpCxB,IAAAA,EAAKwB,EAAMJ,UACXnB,QAAAA,GAAkBD,KACpBwB,EAAMhC,aAAeQ,EACrBwB,EAAMF,WACC,IAiBXnC,GAAKsD,4BAA8B,SAASjB,GAGnC,IAFHvd,IAAAA,EAAQud,EAAM9kB,IACdsjB,EAAK,GAC0B,KAA3BA,EAAKwB,EAAMJ,aAAsBnB,GAAkBD,IACzDwB,EAAMF,UAEDE,OAAAA,EAAM9kB,MAAQuH,GAIvBkb,GAAK8D,mCAAqC,SAASzB,GAC7CxB,IAAAA,EAAKwB,EAAMJ,UAEbpB,SAAQ,IAARA,GACO,KAAPA,GACEA,GAAM,IAAgBA,GAAM,IACvB,KAAPA,GACO,KAAPA,GACO,KAAPA,GACO,KAAPA,GACO,MAAPA,KAEAwB,EAAMF,WACC,IAQXnC,GAAK4D,sBAAwB,SAASvB,GAChCA,GAAAA,EAAMpX,IAAI,IAAe,CACvB,GAAA,KAAK+Y,oBAAoB3B,GAK3B,OAJyD,IAArDA,EAAM3B,WAAWjE,QAAQ4F,EAAM/B,kBACjC+B,EAAMvW,MAAM,qCAEduW,EAAM3B,WAAW1kB,KAAKqmB,EAAM/B,iBAG9B+B,EAAMvW,MAAM,mBAOhBkU,GAAKgE,oBAAsB,SAAS3B,GAE9BA,GADJA,EAAM/B,gBAAkB,GACpB+B,EAAMpX,IAAI,IAAe,CACvB,GAAA,KAAKgZ,+BAA+B5B,IAAUA,EAAMpX,IAAI,IACnD,OAAA,EAEToX,EAAMvW,MAAM,8BAEP,OAAA,GAOTkU,GAAKiE,+BAAiC,SAAS5B,GAEzC,GADJA,EAAM/B,gBAAkB,GACpB,KAAK4D,gCAAgC7B,GAAQ,CAExC,IADPA,EAAM/B,iBAAmBM,GAAoByB,EAAMhC,cAC5C,KAAK8D,+BAA+B9B,IACzCA,EAAM/B,iBAAmBM,GAAoByB,EAAMhC,cAE9C,OAAA,EAEF,OAAA,GAQTL,GAAKkE,gCAAkC,SAAS7B,GAC1Cvd,IAAAA,EAAQud,EAAM9kB,IACdsjB,EAAKwB,EAAMJ,UAMXlB,OALJsB,EAAMF,UAEK,KAAPtB,GAAuB,KAAKuD,sCAAsC/B,KACpExB,EAAKwB,EAAMhC,cAETU,GAAwBF,IAC1BwB,EAAMhC,aAAeQ,GACd,IAGTwB,EAAM9kB,IAAMuH,GACL,IAaTkb,GAAKmE,+BAAiC,SAAS9B,GACzCvd,IAAAA,EAAQud,EAAM9kB,IACdsjB,EAAKwB,EAAMJ,UAMXjB,OALJqB,EAAMF,UAEK,KAAPtB,GAAuB,KAAKuD,sCAAsC/B,KACpExB,EAAKwB,EAAMhC,cAETW,GAAuBH,IACzBwB,EAAMhC,aAAeQ,GACd,IAGTwB,EAAM9kB,IAAMuH,GACL,IAOTkb,GAAK2D,qBAAuB,SAAStB,GAEjC,SAAA,KAAKgC,wBAAwBhC,IAC7B,KAAKiC,+BAA+BjC,IACpC,KAAKkC,0BAA0BlC,IAC9BA,EAAMjC,SAAW,KAAKoE,qBAAqBnC,MAI1CA,EAAMlC,UAEgB,KAApBkC,EAAMJ,WACRI,EAAMvW,MAAM,0BAEduW,EAAMvW,MAAM,oBAEP,IAETkU,GAAKqE,wBAA0B,SAAShC,GAClCvd,IAAAA,EAAQud,EAAM9kB,IACd,GAAA,KAAKknB,wBAAwBpC,GAAQ,CACnC1d,IAAAA,EAAI0d,EAAMhC,aACVgC,GAAAA,EAAMlC,QAKD,OAHHxb,EAAI0d,EAAM5B,mBACZ4B,EAAM5B,iBAAmB9b,IAEpB,EAELA,GAAAA,GAAK0d,EAAM7B,mBACN,OAAA,EAET6B,EAAM9kB,IAAMuH,EAEP,OAAA,GAETkb,GAAKwE,qBAAuB,SAASnC,GAC/BA,GAAAA,EAAMpX,IAAI,KAAe,CACvB,GAAA,KAAK+Y,oBAAoB3B,GAEpB,OADPA,EAAM1B,mBAAmB3kB,KAAKqmB,EAAM/B,kBAC7B,EAET+B,EAAMvW,MAAM,2BAEP,OAAA,GAITkU,GAAKuE,0BAA4B,SAASlC,GAEtC,OAAA,KAAKqC,wBAAwBrC,IAC7B,KAAKsC,yBAAyBtC,IAC9B,KAAKuC,eAAevC,IACpB,KAAKwC,4BAA4BxC,IACjC,KAAK+B,sCAAsC/B,KACzCA,EAAMlC,SAAW,KAAK2E,oCAAoCzC,IAC5D,KAAK0C,yBAAyB1C,IAGlCrC,GAAK2E,yBAA2B,SAAStC,GACnCvd,IAAAA,EAAQud,EAAM9kB,IACd8kB,GAAAA,EAAMpX,IAAI,IAAe,CACvB,GAAA,KAAK+Z,wBAAwB3C,GACxB,OAAA,EAETA,EAAM9kB,IAAMuH,EAEP,OAAA,GAETkb,GAAK4E,eAAiB,SAASvC,GACzBA,OAAoB,KAApBA,EAAMJ,YAA+BX,GAAee,EAAMH,eAC5DG,EAAMhC,aAAe,EACrBgC,EAAMF,WACC,IAMXnC,GAAK0E,wBAA0B,SAASrC,GAClCxB,IAAAA,EAAKwB,EAAMJ,UACXpB,OAAO,MAAPA,GACFwB,EAAMhC,aAAe,EACrBgC,EAAMF,WACC,GAEE,MAAPtB,GACFwB,EAAMhC,aAAe,GACrBgC,EAAMF,WACC,GAEE,MAAPtB,GACFwB,EAAMhC,aAAe,GACrBgC,EAAMF,WACC,GAEE,MAAPtB,GACFwB,EAAMhC,aAAe,GACrBgC,EAAMF,WACC,GAEE,MAAPtB,IACFwB,EAAMhC,aAAe,GACrBgC,EAAMF,WACC,IAMXnC,GAAKgF,wBAA0B,SAAS3C,GAClCxB,IAAAA,EAAKwB,EAAMJ,UACXhB,QAAAA,GAAgBJ,KAClBwB,EAAMhC,aAAeQ,EAAK,GAC1BwB,EAAMF,WACC,IAYXnC,GAAKoE,sCAAwC,SAAS/B,GAChDvd,IAAAA,EAAQud,EAAM9kB,IAEd8kB,GAAAA,EAAMpX,IAAI,KAAe,CACvB,GAAA,KAAKga,yBAAyB5C,EAAO,GAAI,CACvC6C,IAAAA,EAAO7C,EAAMhC,aACbgC,GAAAA,EAAMlC,SAAW+E,GAAQ,OAAUA,GAAQ,MAAQ,CACjDC,IAAAA,EAAmB9C,EAAM9kB,IACzB8kB,GAAAA,EAAMpX,IAAI,KAAiBoX,EAAMpX,IAAI,MAAiB,KAAKga,yBAAyB5C,EAAO,GAAI,CAC7F+C,IAAAA,EAAQ/C,EAAMhC,aACd+E,GAAAA,GAAS,OAAUA,GAAS,MAEvB,OADP/C,EAAMhC,aAAiC,MAAjB6E,EAAO,QAAmBE,EAAQ,OAAU,OAC3D,EAGX/C,EAAM9kB,IAAM4nB,EACZ9C,EAAMhC,aAAe6E,EAEhB,OAAA,EAGP7C,GAAAA,EAAMlC,SACNkC,EAAMpX,IAAI,MACV,KAAKoa,oBAAoBhD,IACzBA,EAAMpX,IAAI,MACViW,GAAemB,EAAMhC,cAEd,OAAA,EAELgC,EAAMlC,SACRkC,EAAMvW,MAAM,0BAEduW,EAAM9kB,IAAMuH,EAGP,OAAA,GAOTkb,GAAK+E,yBAA2B,SAAS1C,GACnCA,GAAAA,EAAMlC,QACJ,QAAA,KAAK4D,0BAA0B1B,MAG/BA,EAAMpX,IAAI,MACZoX,EAAMhC,aAAe,IACd,GAKPQ,IAAAA,EAAKwB,EAAMJ,UACXpB,QAAO,KAAPA,GAAyBwB,EAAMjC,SAAkB,MAAPS,KAC5CwB,EAAMhC,aAAeQ,EACrBwB,EAAMF,WACC,IAOXnC,GAAKyE,wBAA0B,SAASpC,GACtCA,EAAMhC,aAAe,EACjBQ,IAAAA,EAAKwB,EAAMJ,UACXpB,GAAAA,GAAM,IAAgBA,GAAM,GAAc,CACzC,GACDwB,EAAMhC,aAAe,GAAKgC,EAAMhC,cAAgBQ,EAAK,IACrDwB,EAAMF,iBACEtB,EAAKwB,EAAMJ,YAAc,IAAgBpB,GAAM,IAClD,OAAA,EAEF,OAAA,GAITb,GAAKsE,+BAAiC,SAASjC,GACzCxB,IAAAA,EAAKwB,EAAMJ,UAEXd,GAAAA,GAAuBN,GAGlB,OAFPwB,EAAMhC,cAAgB,EACtBgC,EAAMF,WACC,EAIPE,GAAAA,EAAMlC,SACN,KAAKthB,QAAQ4G,aAAe,IACpB,KAAPob,GAA8B,MAAPA,GACxB,CAIEwB,GAHFA,EAAMhC,cAAgB,EACtBgC,EAAMF,UAEJE,EAAMpX,IAAI,MACV,KAAKqa,yCAAyCjD,IAC9CA,EAAMpX,IAAI,KAEH,OAAA,EAEToX,EAAMvW,MAAM,yBAGP,OAAA,GAgBTkU,GAAKsF,yCAA2C,SAASjD,GACnDvd,IAAAA,EAAQud,EAAM9kB,IAGd,GAAA,KAAKgoB,8BAA8BlD,IAAUA,EAAMpX,IAAI,IAAe,CACpExM,IAAAA,EAAO4jB,EAAM/B,gBACb,GAAA,KAAKkF,+BAA+BnD,GAAQ,CAC1C1qB,IAAAA,EAAQ0qB,EAAM/B,gBAEX,OADFmF,KAAAA,2CAA2CpD,EAAO5jB,EAAM9G,IACtD,GAMP,GAHJ0qB,EAAM9kB,IAAMuH,EAGR,KAAK4gB,yCAAyCrD,GAAQ,CACpDsD,IAAAA,EAActD,EAAM/B,gBAEjB,OADFsF,KAAAA,0CAA0CvD,EAAOsD,IAC/C,EAEF,OAAA,GAET3F,GAAKyF,2CAA6C,SAASpD,EAAO5jB,EAAM9G,GACjE6C,GAAKuJ,eAAetF,KAAwC,IAA/BjE,GAAKiE,GAAMge,QAAQ9kB,IACnD0qB,EAAMvW,MAAM,0BAGhBkU,GAAK4F,0CAA4C,SAASvD,EAAOsD,IACtB,IAArCnrB,GAAKilB,MAAMhD,QAAQkJ,IACrBtD,EAAMvW,MAAM,0BAMhBkU,GAAKuF,8BAAgC,SAASlD,GACxCxB,IAAAA,EAAK,EAEFO,IADPiB,EAAM/B,gBAAkB,GACjBc,GAA+BP,EAAKwB,EAAMJ,YAC/CI,EAAM/B,iBAAmBM,GAAoBC,GAC7CwB,EAAMF,UAEDE,MAA0B,KAA1BA,EAAM/B,iBAQfN,GAAKwF,+BAAiC,SAASnD,GACzCxB,IAAAA,EAAK,EAEFQ,IADPgB,EAAM/B,gBAAkB,GACjBe,GAAgCR,EAAKwB,EAAMJ,YAChDI,EAAM/B,iBAAmBM,GAAoBC,GAC7CwB,EAAMF,UAEDE,MAA0B,KAA1BA,EAAM/B,iBAQfN,GAAK0F,yCAA2C,SAASrD,GAChD,OAAA,KAAKmD,+BAA+BnD,IAI7CrC,GAAKwD,yBAA2B,SAASnB,GACnCA,GAAAA,EAAMpX,IAAI,IAAe,CAGvBoX,GAFJA,EAAMpX,IAAI,IACL4a,KAAAA,mBAAmBxD,GACpBA,EAAMpX,IAAI,IACL,OAAA,EAGToX,EAAMvW,MAAM,gCAEP,OAAA,GAMTkU,GAAK6F,mBAAqB,SAASxD,GAG1B,KAAA,KAAKyD,oBAAoBzD,IAAQ,CAClCxQ,IAAAA,EAAOwQ,EAAMhC,aACbgC,GAAAA,EAAMpX,IAAI,KAJH,KAI2B6a,oBAAoBzD,GAAQ,CAC5DvQ,IAAAA,EAAQuQ,EAAMhC,cACdgC,EAAMlC,UAAsB,IAAVtO,IAA0B,IAAXC,GACnCuQ,EAAMvW,MAAM,4BAEA,IAAV+F,IAA0B,IAAXC,GAAgBD,EAAOC,GACxCuQ,EAAMvW,MAAM,4CAQpBkU,GAAK8F,oBAAsB,SAASzD,GAC9Bvd,IAAAA,EAAQud,EAAM9kB,IAEd8kB,GAAAA,EAAMpX,IAAI,IAAe,CACvB,GAAA,KAAK8a,sBAAsB1D,GACtB,OAAA,EAELA,GAAAA,EAAMlC,QAAS,CAEb6F,IAAAA,EAAO3D,EAAMJ,WACJ,KAAT+D,GAAyBvE,GAAauE,KACxC3D,EAAMvW,MAAM,wBAEduW,EAAMvW,MAAM,kBAEduW,EAAM9kB,IAAMuH,EAGV+b,IAAAA,EAAKwB,EAAMJ,UACXpB,OAAO,KAAPA,IACFwB,EAAMhC,aAAeQ,EACrBwB,EAAMF,WACC,IAOXnC,GAAK+F,sBAAwB,SAAS1D,GAChCvd,IAAAA,EAAQud,EAAM9kB,IAEd8kB,GAAAA,EAAMpX,IAAI,IAEL,OADPoX,EAAMhC,aAAe,GACd,EAGLgC,GAAAA,EAAMlC,SAAWkC,EAAMpX,IAAI,IAEtB,OADPoX,EAAMhC,aAAe,IACd,EAGL,IAACgC,EAAMlC,SAAWkC,EAAMpX,IAAI,IAAe,CACzC,GAAA,KAAKgb,6BAA6B5D,GAC7B,OAAA,EAETA,EAAM9kB,IAAMuH,EAIZ,OAAA,KAAKwf,+BAA+BjC,IACpC,KAAKkC,0BAA0BlC,IAKnCrC,GAAKiG,6BAA+B,SAAS5D,GACvCxB,IAAAA,EAAKwB,EAAMJ,UACXX,SAAAA,GAAeT,IAAc,KAAPA,KACxBwB,EAAMhC,aAAeQ,EAAK,GAC1BwB,EAAMF,WACC,IAMXnC,GAAK6E,4BAA8B,SAASxC,GACtCvd,IAAAA,EAAQud,EAAM9kB,IACd8kB,GAAAA,EAAMpX,IAAI,KAAe,CACvB,GAAA,KAAKga,yBAAyB5C,EAAO,GAChC,OAAA,EAELA,EAAMlC,SACRkC,EAAMvW,MAAM,kBAEduW,EAAM9kB,IAAMuH,EAEP,OAAA,GAITkb,GAAKqD,wBAA0B,SAAShB,GAClCvd,IAAAA,EAAQud,EAAM9kB,IACdsjB,EAAK,EAEFS,IADPe,EAAMhC,aAAe,EACdiB,GAAeT,EAAKwB,EAAMJ,YAC/BI,EAAMhC,aAAe,GAAKgC,EAAMhC,cAAgBQ,EAAK,IACrDwB,EAAMF,UAEDE,OAAAA,EAAM9kB,MAAQuH,GAOvBkb,GAAKqF,oBAAsB,SAAShD,GAC9Bvd,IAAAA,EAAQud,EAAM9kB,IACdsjB,EAAK,EAEFU,IADPc,EAAMhC,aAAe,EACdkB,GAAWV,EAAKwB,EAAMJ,YAC3BI,EAAMhC,aAAe,GAAKgC,EAAMhC,aAAemB,GAASX,GACxDwB,EAAMF,UAEDE,OAAAA,EAAM9kB,MAAQuH,GAqBvBkb,GAAK8E,oCAAsC,SAASzC,GAC9C,GAAA,KAAK6D,qBAAqB7D,GAAQ,CAChC8D,IAAAA,EAAK9D,EAAMhC,aACX,GAAA,KAAK6F,qBAAqB7D,GAAQ,CAChC+D,IAAAA,EAAK/D,EAAMhC,aACX8F,GAAM,GAAK,KAAKD,qBAAqB7D,GACvCA,EAAMhC,aAAoB,GAAL8F,EAAe,EAALC,EAAS/D,EAAMhC,aAE9CgC,EAAMhC,aAAoB,EAAL8F,EAASC,OAGhC/D,EAAMhC,aAAe8F,EAEhB,OAAA,EAEF,OAAA,GAITnG,GAAKkG,qBAAuB,SAAS7D,GAC/BxB,IAAAA,EAAKwB,EAAMJ,UACXR,OAAAA,GAAaZ,IACfwB,EAAMhC,aAAeQ,EAAK,GAC1BwB,EAAMF,WACC,IAETE,EAAMhC,aAAe,GACd,IASTL,GAAKiF,yBAA2B,SAAS5C,EAAOnoB,GAC1C4K,IAAAA,EAAQud,EAAM9kB,IAClB8kB,EAAMhC,aAAe,EAChB,IAAA,IAAIpmB,EAAI,EAAGA,EAAIC,IAAUD,EAAG,CAC3B4mB,IAAAA,EAAKwB,EAAMJ,UACX,IAACV,GAAWV,GAEP,OADPwB,EAAM9kB,IAAMuH,GACL,EAETud,EAAMhC,aAAe,GAAKgC,EAAMhC,aAAemB,GAASX,GACxDwB,EAAMF,UAED,OAAA,GAOT,IAAIkE,GAAQ,SAAexhB,GACpBuC,KAAAA,KAAOvC,EAAEuC,KACTzP,KAAAA,MAAQkN,EAAElN,MACVmN,KAAAA,MAAQD,EAAEC,MACVC,KAAAA,IAAMF,EAAEE,IACTF,EAAEhG,QAAQqH,YACLmB,KAAAA,IAAM,IAAIzC,EAAeC,EAAGA,EAAEoC,SAAUpC,EAAEqC,SAC/CrC,EAAEhG,QAAQwH,SACLiB,KAAAA,MAAQ,CAACzC,EAAEC,MAAOD,EAAEE,OAuvB9B,QAAA,MAAA,GAlvBD,IAAIuhB,GAAO5e,EAAO5D,UAidlB,SAASyiB,GAAkBlpB,GAErBA,OAAAA,GAAQ,MAAiBK,OAAOC,aAAaN,IACjDA,GAAQ,MACDK,OAAOC,aAA4B,OAAdN,GAAQ,IAA8B,OAAR,KAAPA,KAjdrDipB,GAAKpb,KAAO,WACN,KAAKrM,QAAQsH,SACRtH,KAAAA,QAAQsH,QAAQ,IAAIkgB,GAAM,OAE9B1d,KAAAA,WAAa,KAAK5D,IAClB2D,KAAAA,aAAe,KAAK5D,MACpB0D,KAAAA,cAAgB,KAAKtB,OACrBuB,KAAAA,gBAAkB,KAAKxB,SACvBsD,KAAAA,aAGP+b,GAAKE,SAAW,WAEP,OADFtb,KAAAA,OACE,IAAImb,GAAM,OAIG,oBAAXI,SACPH,GAAKG,OAAOC,UAAY,WACpBha,IAAAA,EAAS,KAEN,MAAA,CACLxB,KAAM,WACArE,IAAAA,EAAQ6F,EAAO8Z,WACZ,MAAA,CACLG,KAAM9f,EAAMO,OAAStI,EAAMI,IAC3BvH,MAAOkP,OASjByf,GAAKnH,WAAa,WACT,OAAA,KAAKvW,QAAQ,KAAKA,QAAQ1O,OAAS,IAM5CosB,GAAK/b,UAAY,WACX4U,IAAAA,EAAa,KAAKA,aAKlB,OAJCA,GAAeA,EAAWlB,eAAsB2I,KAAAA,YAEhD9hB,KAAAA,MAAQ,KAAKvH,IACd,KAAKsB,QAAQqH,YAAkBe,KAAAA,SAAW,KAAKsB,eAC/C,KAAKhL,KAAO,KAAK2H,MAAMhL,OAAiB,KAAK2sB,YAAY/nB,EAAMI,KAE/DigB,EAAWjB,SAAmBiB,EAAWjB,SAAS,WAC1C4I,KAAAA,UAAU,KAAKC,sBAG7BT,GAAKQ,UAAY,SAASzpB,GAGpBG,OAAAA,EAAkBH,EAAM,KAAKwB,QAAQ4G,aAAe,IAAe,KAATpI,EACnD,KAAK2pB,WAET,KAAKC,iBAAiB5pB,IAG/BipB,GAAKS,kBAAoB,WACnB1pB,IAAAA,EAAO,KAAK6H,MAAMoI,WAAW,KAAK/P,KAClCF,OAAAA,GAAQ,OAAUA,GAAQ,MAAiBA,GAEvCA,GAAQ,IADL,KAAK6H,MAAMoI,WAAW,KAAK/P,IAAM,GACf,UAG/B+oB,GAAKY,iBAAmB,WAClBxa,IAQErH,EANF4B,EAAW,KAAKpI,QAAQuH,WAAa,KAAKmC,cAC1CzD,EAAQ,KAAKvH,IAAKwH,EAAM,KAAKG,MAAMuX,QAAQ,KAAM,KAAKlf,KAAO,GAG7D,IAFS,IAATwH,GAAmB+G,KAAAA,MAAM,KAAKvO,IAAM,EAAG,wBACtCA,KAAAA,IAAMwH,EAAM,EACb,KAAKlG,QAAQqH,UAGR,IAFP3C,EAAW6B,UAAYN,GAEfO,EAAQ9B,EAAW+B,KAAK,KAAKJ,SAAWG,EAAME,MAAQ,KAAKhI,OATxD,KAUA8K,QAVA,KAWFF,UAAY9C,EAAME,MAAQF,EAAM,GAAGnL,OAG1C,KAAK2E,QAAQuH,WACRvH,KAAAA,QAAQuH,WAAU,EAAM,KAAKlB,MAAMxJ,MAAMoJ,EAAQ,EAAGC,GAAMD,EAAO,KAAKvH,IACtD0J,EAAU,KAAKsB,gBAG1C+d,GAAK9c,gBAAkB,SAAS2d,GAMvB,IALHza,IAEA5H,EAAQ,KAAKvH,IACb0J,EAAW,KAAKpI,QAAQuH,WAAa,KAAKmC,cAC1CsY,EAAK,KAAK3b,MAAMoI,WAAW,KAAK/P,KAAO4pB,GACpC,KAAK5pB,IAAM,KAAK2H,MAAMhL,SAAWuJ,EAAUod,IAChDA,EANW,KAMC3b,MAAMoI,aANP,KAM2B/P,KAEpC,KAAKsB,QAAQuH,WACRvH,KAAAA,QAAQuH,WAAU,EAAO,KAAKlB,MAAMxJ,MAAMoJ,EAAQqiB,EAAW,KAAK5pB,KAAMuH,EAAO,KAAKvH,IACpE0J,EAAU,KAAKsB,gBAM1C+d,GAAKM,UAAY,WAGfQ,EAAM,KAAO,KAAK7pB,IAAM,KAAK2H,MAAMhL,QAAQ,CACrC2mB,IAAAA,EAHO,KAGK3b,MAAMoI,WAHX,KAG6B/P,KAChCsjB,OAAAA,GACH,KAAA,GAAS,KAAA,MALH,KAMAtjB,IACT,MACG,KAAA,GAC6C,KATvC,KASE2H,MAAMoI,WATR,KAS0B/P,IAAM,MAThC,KAUEA,IAER,KAAA,GAAS,KAAA,KAAW,KAAA,OAZd,KAaAA,IAbA,KAcEsB,QAAQqH,cAdV,KAeEmC,QAfF,KAgBAF,UAhBA,KAgBmB5K,KAE5B,MACG,KAAA,GACKmP,OApBC,KAoBMxH,MAAMoI,WApBZ,KAoB8B/P,IAAM,IACxC,KAAA,GArBI,KAsBA2pB,mBACP,MACG,KAAA,GAxBI,KAyBA1d,gBAAgB,GACvB,MACF,QACQ4d,MAAAA,EAER,MACF,QACMvG,KAAAA,EAAK,GAAKA,EAAK,IAAMA,GAAM,MAAQld,EAAmB1K,KAAKyE,OAAOC,aAAakjB,KAG3EuG,MAAAA,IAnCC,KAiCE7pB,OAajB+oB,GAAKO,YAAc,SAASzf,EAAMkT,GAC3BvV,KAAAA,IAAM,KAAKxH,IACZ,KAAKsB,QAAQqH,YAAkBgB,KAAAA,OAAS,KAAKqB,eAC7C0W,IAAAA,EAAW,KAAK7X,KACfA,KAAAA,KAAOA,EACPzP,KAAAA,MAAQ2iB,EAER9b,KAAAA,cAAcygB,IAYrBqH,GAAKe,cAAgB,WACfnc,IAAAA,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,IAAM,GACxC2N,GAAAA,GAAQ,IAAMA,GAAQ,GAAa,OAAA,KAAKoc,YAAW,GACnDC,IAAAA,EAAQ,KAAKriB,MAAMoI,WAAW,KAAK/P,IAAM,GACzC,OAAA,KAAKsB,QAAQ4G,aAAe,GAAc,KAATyF,GAAyB,KAAVqc,GAC7ChqB,KAAAA,KAAO,EACL,KAAKspB,YAAY/nB,EAAMmB,cAE5B,KAAK1C,IACA,KAAKspB,YAAY/nB,EAAMc,OAIlC0mB,GAAKkB,gBAAkB,WACjBtc,IAAAA,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,IAAM,GACxC,OAAA,KAAKuL,eAAiB,KAAKvL,IAAY,KAAKkqB,cACnC,KAATvc,EAAsB,KAAKwc,SAAS5oB,EAAMzF,OAAQ,GAC/C,KAAKquB,SAAS5oB,EAAMmC,MAAO,IAGpCqlB,GAAKqB,0BAA4B,SAAStqB,GACpC6N,IAAAA,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,IAAM,GACxC7C,EAAO,EACPktB,EAAqB,KAATvqB,EAAcyB,EAAMkC,KAAOlC,EAAMiC,OAS7CmK,OANA,KAAKrM,QAAQ4G,aAAe,GAAc,KAATpI,GAAwB,KAAT6N,MAChDxQ,EACFktB,EAAY9oB,EAAMoC,SAClBgK,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,IAAM,IAG7B,KAAT2N,EAAsB,KAAKwc,SAAS5oB,EAAMzF,OAAQqB,EAAO,GACtD,KAAKgtB,SAASE,EAAWltB,IAGlC4rB,GAAKuB,mBAAqB,SAASxqB,GAC7B6N,IAAAA,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,IAAM,GACxC2N,OAAAA,IAAS7N,EAAe,KAAKqqB,SAAkB,MAATrqB,EAAeyB,EAAMwB,UAAYxB,EAAMyB,WAAY,GAChF,KAAT2K,EAAsB,KAAKwc,SAAS5oB,EAAMzF,OAAQ,GAC/C,KAAKquB,SAAkB,MAATrqB,EAAeyB,EAAM0B,UAAY1B,EAAM4B,WAAY,IAG1E4lB,GAAKwB,gBAAkB,WAEjB5c,OAAS,KADF,KAAKhG,MAAMoI,WAAW,KAAK/P,IAAM,GAClB,KAAKmqB,SAAS5oB,EAAMzF,OAAQ,GAC/C,KAAKquB,SAAS5oB,EAAM2B,WAAY,IAGzC6lB,GAAKyB,mBAAqB,SAAS1qB,GAC7B6N,IAAAA,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,IAAM,GACxC2N,OAAAA,IAAS7N,EACE,KAAT6N,GAAgB,KAAKnC,UAAoD,KAAxC,KAAK7D,MAAMoI,WAAW,KAAK/P,IAAM,IAC7C,IAApB,KAAKoL,aAAoBrF,EAAUrK,KAAK,KAAKiM,MAAMxJ,MAAM,KAAKiN,WAAY,KAAKpL,MAM7E,KAAKmqB,SAAS5oB,EAAMuB,OAAQ,IAJ5BmJ,KAAAA,gBAAgB,GAChBod,KAAAA,YACE,KAAKrc,aAIH,KAATW,EAAsB,KAAKwc,SAAS5oB,EAAMzF,OAAQ,GAC/C,KAAKquB,SAAS5oB,EAAMgC,QAAS,IAGtCwlB,GAAK0B,gBAAkB,SAAS3qB,GAC1B6N,IAAAA,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,IAAM,GACxC7C,EAAO,EACPwQ,OAAAA,IAAS7N,GACX3C,EAAgB,KAAT2C,GAAuD,KAAxC,KAAK6H,MAAMoI,WAAW,KAAK/P,IAAM,GAAY,EAAI,EACxB,KAA3C,KAAK2H,MAAMoI,WAAW,KAAK/P,IAAM7C,GAAuB,KAAKgtB,SAAS5oB,EAAMzF,OAAQqB,EAAO,GACxF,KAAKgtB,SAAS5oB,EAAM+B,SAAUnG,IAE1B,KAATwQ,GAAwB,KAAT7N,GAAgB,KAAK0L,UAAoD,KAAxC,KAAK7D,MAAMoI,WAAW,KAAK/P,IAAM,IACzC,KAAxC,KAAK2H,MAAMoI,WAAW,KAAK/P,IAAM,IAMxB,KAAT2N,IAAexQ,EAAO,GACnB,KAAKgtB,SAAS5oB,EAAM8B,WAAYlG,KALhC8O,KAAAA,gBAAgB,GAChBod,KAAAA,YACE,KAAKrc,cAMhB+b,GAAK2B,kBAAoB,SAAS5qB,GAC5B6N,IAAAA,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,IAAM,GACxC2N,OAAS,KAATA,EAAsB,KAAKwc,SAAS5oB,EAAM6B,SAAkD,KAAxC,KAAKuE,MAAMoI,WAAW,KAAK/P,IAAM,GAAY,EAAI,GAC5F,KAATF,GAAwB,KAAT6N,GAAe,KAAKrM,QAAQ4G,aAAe,GACvDlI,KAAAA,KAAO,EACL,KAAKspB,YAAY/nB,EAAMgB,QAEzB,KAAK4nB,SAAkB,KAATrqB,EAAcyB,EAAMsB,GAAKtB,EAAMT,OAAQ,IAG9DioB,GAAKW,iBAAmB,SAAS5pB,GACvBA,OAAAA,GAGH,KAAA,GACI,OAAA,KAAKgqB,gBAGT,KAAA,GAAuB,QAAjB,KAAK9pB,IAAY,KAAKspB,YAAY/nB,EAAMS,QAC9C,KAAA,GAAuB,QAAjB,KAAKhC,IAAY,KAAKspB,YAAY/nB,EAAMU,QAC9C,KAAA,GAAuB,QAAjB,KAAKjC,IAAY,KAAKspB,YAAY/nB,EAAMY,MAC9C,KAAA,GAAuB,QAAjB,KAAKnC,IAAY,KAAKspB,YAAY/nB,EAAMW,OAC9C,KAAA,GAAuB,QAAjB,KAAKlC,IAAY,KAAKspB,YAAY/nB,EAAMK,UAC9C,KAAA,GAAuB,QAAjB,KAAK5B,IAAY,KAAKspB,YAAY/nB,EAAMM,UAC9C,KAAA,IAAwB,QAAjB,KAAK7B,IAAY,KAAKspB,YAAY/nB,EAAMO,QAC/C,KAAA,IAAwB,QAAjB,KAAK9B,IAAY,KAAKspB,YAAY/nB,EAAMQ,QAC/C,KAAA,GAAuB,QAAjB,KAAK/B,IAAY,KAAKspB,YAAY/nB,EAAMa,OAC9C,KAAA,GAAuB,QAAjB,KAAKpC,IAAY,KAAKspB,YAAY/nB,EAAMe,UAE9C,KAAA,GACC,GAAA,KAAKhB,QAAQ4G,YAAc,EAAK,MAE7B,QADL,KAAKlI,IACA,KAAKspB,YAAY/nB,EAAMoB,WAE3B,KAAA,GACCgL,IAAAA,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,IAAM,GACxC2N,GAAS,MAATA,GAAyB,KAATA,EAAsB,OAAA,KAAKgd,gBAAgB,IAC3D,GAAA,KAAKrpB,QAAQ4G,aAAe,EAAG,CAC7ByF,GAAS,MAATA,GAAyB,KAATA,EAAsB,OAAA,KAAKgd,gBAAgB,GAC3Dhd,GAAS,KAATA,GAAwB,KAATA,EAAsB,OAAA,KAAKgd,gBAAgB,GAK7D,KAAA,GAAS,KAAA,GAAS,KAAA,GAAS,KAAA,GAAS,KAAA,GAAS,KAAA,GAAS,KAAA,GAAS,KAAA,GAAS,KAAA,GACpE,OAAA,KAAKZ,YAAW,GAGpB,KAAA,GAAS,KAAA,GACL,OAAA,KAAKa,WAAW9qB,GAOpB,KAAA,GACI,OAAA,KAAKmqB,kBAET,KAAA,GAAS,KAAA,GACL,OAAA,KAAKG,0BAA0BtqB,GAEnC,KAAA,IAAU,KAAA,GACN,OAAA,KAAKwqB,mBAAmBxqB,GAE5B,KAAA,GACI,OAAA,KAAKyqB,kBAET,KAAA,GAAS,KAAA,GACL,OAAA,KAAKC,mBAAmB1qB,GAE5B,KAAA,GAAS,KAAA,GACL,OAAA,KAAK2qB,gBAAgB3qB,GAEzB,KAAA,GAAS,KAAA,GACL,OAAA,KAAK4qB,kBAAkB5qB,GAE3B,KAAA,IACI,OAAA,KAAKqqB,SAAS5oB,EAAMT,OAAQ,GAGhCyN,KAAAA,MAAM,KAAKvO,IAAK,yBAA2BgpB,GAAkBlpB,GAAQ,MAG5EipB,GAAKoB,SAAW,SAAStgB,EAAM1M,GACzB0tB,IAAAA,EAAM,KAAKljB,MAAMxJ,MAAM,KAAK6B,IAAK,KAAKA,IAAM7C,GAEzC,OADF6C,KAAAA,KAAO7C,EACL,KAAKmsB,YAAYzf,EAAMghB,IAGhC9B,GAAKmB,WAAa,WAIP,IAHL/a,IAEA2b,EAASC,EAASxjB,EAAQ,KAAKvH,MAC1B,CAHI,KAIAA,KAJA,KAIc2H,MAAMhL,QAJpB,KAIqC4R,MAAMhH,EAAO,mCACzD+b,IAAAA,EALO,KAKK3b,MAAMuI,OALX,KAKyBlQ,KAEhC,GADA+F,EAAUrK,KAAK4nB,IANR,KAMsB/U,MAAMhH,EAAO,mCACzCujB,EAKIA,GAAU,MALL,CACRxH,GAAO,MAAPA,EAAcyH,GAAU,OACvB,GAAW,MAAPzH,GAAcyH,EAAWA,GAAU,OACvC,GAAW,MAAPzH,IAAeyH,EAAW,MACnCD,EAAiB,OAAPxH,IAXD,KAaFtjB,IAEP2c,IAAAA,EAAU,KAAKhV,MAAMxJ,MAAMoJ,EAAO,KAAKvH,OACzC,KAAKA,IACHgrB,IAAAA,EAAa,KAAKhrB,IAClB4c,EAAQ,KAAKqO,YACb,KAAKvgB,aAAoBqD,KAAAA,WAAWid,GAGpClG,IAAAA,EAAQ,KAAK1Y,cAAgB,KAAKA,YAAc,IAAIsW,GAAsB,OAC9EoC,EAAMX,MAAM5c,EAAOoV,EAASC,GACvBiI,KAAAA,oBAAoBC,GACpBE,KAAAA,sBAAsBF,GAGvB1qB,IAAAA,EAAQ,KACR,IACFA,EAAQ,IAAIqF,OAAOkd,EAASC,GAC5B,MAAOsO,IAKF,OAAA,KAAK5B,YAAY/nB,EAAME,OAAQ,CAACkb,QAASA,EAASC,MAAOA,EAAOxiB,MAAOA,KAOhF2uB,GAAKoC,QAAU,SAASC,EAAOxL,GAIxB,IAHDzQ,IAEA5H,EAAQ,KAAKvH,IAAKjC,EAAQ,EACrBrB,EAAI,EAAGwuB,EAAW,MAAPtL,EAAcyL,EAAAA,EAAWzL,EAAKljB,EAAIwuB,IAAKxuB,EAAG,CACxDoD,IAAAA,EAJO,KAIO6H,MAAMoI,WAJb,KAI+B/P,KAAM+c,OAAO,EAKnDA,IAJcA,EAAdjd,GAAQ,GAAYA,EAAO,GAAK,GAC3BA,GAAQ,GAAYA,EAAO,GAAK,GAChCA,GAAQ,IAAMA,GAAQ,GAAYA,EAAO,GACrCurB,EAAAA,IACFD,EAAS,QATT,KAUFprB,IACTjC,EAAQA,EAAQqtB,EAAQrO,EAEtB,OAAA,KAAK/c,MAAQuH,GAAgB,MAAPqY,GAAe,KAAK5f,IAAMuH,IAAUqY,EAAc,KAErE7hB,GAGTgrB,GAAK4B,gBAAkB,SAASS,GACzBprB,KAAAA,KAAO,EACR+c,IAAAA,EAAM,KAAKoO,QAAQC,GAGhB,OAFI,MAAPrO,GAAoBxO,KAAAA,MAAM,KAAKhH,MAAQ,EAAG,4BAA8B6jB,GACxEnrB,EAAkB,KAAKupB,sBAA6Bjb,KAAAA,MAAM,KAAKvO,IAAK,oCACjE,KAAKspB,YAAY/nB,EAAMC,IAAKub,IAKrCgM,GAAKgB,WAAa,SAASuB,GACrB/jB,IAAAA,EAAQ,KAAKvH,IACZsrB,GAAsC,OAArB,KAAKH,QAAQ,KAAqB5c,KAAAA,MAAMhH,EAAO,kBACjEgkB,IAAAA,EAAQ,KAAKvrB,IAAMuH,GAAS,GAAsC,KAAjC,KAAKI,MAAMoI,WAAWxI,GACvDgkB,GAAS,KAAKtsB,QAAesP,KAAAA,MAAMhH,EAAO,kBAC1CgkB,GAAS,OAAO7vB,KAAK,KAAKiM,MAAMxJ,MAAMoJ,EAAO,KAAKvH,QAASurB,GAAQ,GACnE5d,IAAAA,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,KACzB,KAAT2N,GAAgB4d,MAChB,KAAKvrB,IACFmrB,KAAAA,QAAQ,IACbxd,EAAO,KAAKhG,MAAMoI,WAAW,KAAK/P,MAEtB,KAAT2N,GAAwB,MAATA,GAAkB4d,IAEvB,MADb5d,EAAO,KAAKhG,MAAMoI,aAAa,KAAK/P,OACR,KAAT2N,KAAiB,KAAK3N,IAChB,OAArB,KAAKmrB,QAAQ,KAAqB5c,KAAAA,MAAMhH,EAAO,mBAEjDtH,EAAkB,KAAKupB,sBAA6Bjb,KAAAA,MAAM,KAAKvO,IAAK,oCAEpE6qB,IAAAA,EAAM,KAAKljB,MAAMxJ,MAAMoJ,EAAO,KAAKvH,KACnC+c,EAAMwO,EAAQC,SAASX,EAAK,GAAKY,WAAWZ,GACzC,OAAA,KAAKvB,YAAY/nB,EAAMC,IAAKub,IAKrCgM,GAAK2C,cAAgB,WACfpI,IAAsCxjB,EAEtCwjB,GAAO,MAFF,KAAK3b,MAAMoI,WAAW,KAAK/P,KAEpB,CACV,KAAKsB,QAAQ4G,YAAc,GAAU6F,KAAAA,aACrC4d,IAAAA,IAAY,KAAK3rB,IACrBF,EAAO,KAAK8rB,YAAY,KAAKjkB,MAAMuX,QAAQ,IAAK,KAAKlf,KAAO,KAAKA,OAC/D,KAAKA,IACHF,EAAO,SAAiB+rB,KAAAA,mBAAmBF,EAAS,iCAExD7rB,EAAO,KAAK8rB,YAAY,GAEnB9rB,OAAAA,GAUTipB,GAAK6B,WAAa,SAASkB,GAIhB,IAHL3c,IAEA2S,EAAM,GAAIiK,IAAe,KAAK/rB,MACzB,CAHI,KAIAA,KAJA,KAIc2H,MAAMhL,QAJpB,KAIqC4R,MAJrC,KAIkDhH,MAAO,gCAChE+b,IAAAA,EALO,KAKK3b,MAAMoI,WALX,KAK6B/P,KACpCsjB,GAAAA,IAAOwI,EAAS,MACT,KAAPxI,GACFxB,GARS,KAQKna,MAAMxJ,MAAM4tB,EARjB,KAQoC/rB,KAC7C8hB,GATS,KASKkK,iBAAgB,GAC9BD,EAVS,KAUW/rB,MAEhBkG,EAAUod,EAZL,KAYgBhiB,QAAQ4G,aAAe,KAZvC,KAYqDqG,MAZrD,KAYkEhH,MAAO,kCAZzE,KAaAvH,KAIN,OADP8hB,GAAO,KAAKna,MAAMxJ,MAAM4tB,EAAY,KAAK/rB,OAClC,KAAKspB,YAAY/nB,EAAMG,OAAQogB,IAKxC,IAAImK,GAAgC,GAEpClD,GAAK5H,qBAAuB,WACrB+K,KAAAA,mBAAoB,EACrB,IACGC,KAAAA,gBACL,MAAO5M,GACHA,GAAAA,IAAQ0M,GAGJ1M,MAAAA,EAFD6M,KAAAA,2BAMJF,KAAAA,mBAAoB,GAG3BnD,GAAK8C,mBAAqB,SAASQ,EAAU/M,GACvC,GAAA,KAAK4M,mBAAqB,KAAK5qB,QAAQ4G,aAAe,EAClD+jB,MAAAA,GAED1d,KAAAA,MAAM8d,EAAU/M,IAIzByJ,GAAKoD,cAAgB,WAIV,IAHLhd,IAEA2S,EAAM,GAAIiK,EAAa,KAAK/rB,MACvB,CAHI,KAIAA,KAJA,KAIc2H,MAAMhL,QAJpB,KAIqC4R,MAJrC,KAIkDhH,MAAO,yBAChE+b,IAAAA,EALO,KAKK3b,MAAMoI,WALX,KAK6B/P,KACpCsjB,GAAO,KAAPA,GAAoB,KAAPA,GAAyD,MAN/D,KAM0B3b,MAAMoI,WANhC,KAMkD/P,IAAM,GAC7DmP,OAPK,KAOEnP,MAPF,KAOiBuH,OAPjB,KAOkCsC,OAAStI,EAAMiB,UAPjD,KAOoEqH,OAAStI,EAAMkB,iBAS5Fqf,GAhBS,KAgBKna,MAAMxJ,MAAM4tB,EAhBjB,KAgBoC/rB,KAhBpC,KAiBKspB,YAAY/nB,EAAMiB,SAAUsf,IAT7B,KAAPwB,GARG,KASEtjB,KAAO,EATT,KAUSspB,YAAY/nB,EAAMqB,kBAV3B,KAYI5C,IAZJ,KAaSspB,YAAY/nB,EAAMoB,YAMlC2gB,GAAO,KAAPA,EACFxB,GApBS,KAoBKna,MAAMxJ,MAAM4tB,EApBjB,KAoBoC/rB,KAC7C8hB,GArBS,KAqBKkK,iBAAgB,GAC9BD,EAtBS,KAsBW/rB,SACf,GAAIkG,EAAUod,GAAK,CAGhBA,OAFRxB,GAxBS,KAwBKna,MAAMxJ,MAAM4tB,EAxBjB,KAwBoC/rB,OAxBpC,KAyBAA,IACDsjB,GACH,KAAA,GACyC,KA5BrC,KA4BI3b,MAAMoI,WA5BV,KA4B4B/P,QA5B5B,KA4BoDA,IACxD,KAAA,GACH8hB,GAAO,KACP,MACF,QACEA,GAAO3hB,OAAOC,aAAakjB,GAjCpB,KAoCEhiB,QAAQqH,cApCV,KAqCEmC,QArCF,KAsCAF,UAtCA,KAsCmB5K,KAE5B+rB,EAxCS,KAwCW/rB,UAxCX,KA0CAA,MAMf+oB,GAAKqD,yBAA2B,WAGvB,KAAA,KAAKpsB,IAAM,KAAK2H,MAAMhL,OAAQ,KAAKqD,MAChCmP,OAHG,KAGIxH,MAHJ,KAGiB3H,MACvB,IAAA,OAJM,KAKAA,IACT,MAEG,IAAA,IACCmP,GAAiC,MAT5B,KASExH,MATF,KASe3H,IAAM,GAC5B,MAIC,IAAA,IACImP,OAfE,KAeKma,YAAY/nB,EAAMkB,gBAfvB,KAe+CkF,MAAMxJ,MAfrD,KAekEoJ,MAflE,KAegFvH,MAKxFuO,KAAAA,MAAM,KAAKhH,MAAO,0BAKzBwhB,GAAKiD,gBAAkB,SAASM,GAC1BhJ,IAAAA,EAAK,KAAK3b,MAAMoI,aAAa,KAAK/P,KAE9BsjB,SADN,KAAKtjB,IACCsjB,GACH,KAAA,IAAY,MAAA,KACZ,KAAA,IAAY,MAAA,KACZ,KAAA,IAAYnjB,OAAAA,OAAOC,aAAa,KAAKwrB,YAAY,IACjD,KAAA,IAAY5C,OAAAA,GAAkB,KAAK0C,iBACnC,KAAA,IAAY,MAAA,KACZ,KAAA,GAAW,MAAA,KACX,KAAA,IAAY,MAAA,KACZ,KAAA,IAAY,MAAA,KACZ,KAAA,GAA4C,KAApC,KAAK/jB,MAAMoI,WAAW,KAAK/P,QAAiB,KAAKA,IACzD,KAAA,GAEI,OADH,KAAKsB,QAAQqH,YAAkBiC,KAAAA,UAAY,KAAK5K,MAAO,KAAK8K,SACzD,GACT,QACMwY,GAAAA,GAAM,IAAMA,GAAM,GAAI,CACpBiJ,IAAAA,EAAW,KAAK5kB,MAAM6kB,OAAO,KAAKxsB,IAAM,EAAG,GAAG8H,MAAM,WAAW,GAC/DyjB,EAAQC,SAASe,EAAU,GAexBpsB,OAdHorB,EAAQ,MACVgB,EAAWA,EAASpuB,MAAM,GAAI,GAC9BotB,EAAQC,SAASe,EAAU,IAExBvsB,KAAAA,KAAOusB,EAAS5vB,OAAS,EAC9B2mB,EAAK,KAAK3b,MAAMoI,WAAW,KAAK/P,KACd,MAAbusB,GAA2B,KAAPjJ,GAAoB,KAAPA,IAAe,KAAKrkB,SAAUqtB,GAC7DT,KAAAA,mBACH,KAAK7rB,IAAM,EAAIusB,EAAS5vB,OACxB2vB,EACI,mCACA,gCAGDnsB,OAAOC,aAAamrB,GAEtBprB,OAAAA,OAAOC,aAAakjB,KAM/ByF,GAAK6C,YAAc,SAAShM,GACtB+L,IAAAA,EAAU,KAAK3rB,IACfoH,EAAI,KAAK+jB,QAAQ,GAAIvL,GAElBxY,OADG,OAANA,GAAmBykB,KAAAA,mBAAmBF,EAAS,iCAC5CvkB,GAST2hB,GAAKkC,UAAY,WAGVvgB,KAAAA,aAAc,EAGZ,IAFH4B,IAAAA,EAAO,GAAIwL,GAAQ,EAAMiU,EAAa,KAAK/rB,IAC3CE,EAAS,KAAKoB,QAAQ4G,aAAe,EAClC,KAAKlI,IAAM,KAAK2H,MAAMhL,QAAQ,CAC/B2mB,IAAAA,EANO,KAMKkG,oBACZnpB,GAAAA,EAAiBijB,EAAIpjB,GAPd,KAQFF,KAAOsjB,GAAM,MAAS,EAAI,MAC5B,CAAA,GAAW,KAAPA,EAaT,MAtBS,KAUF5Y,aAAc,EACrB4B,GAXS,KAWM3E,MAAMxJ,MAAM4tB,EAXlB,KAWqC/rB,KAC1CysB,IAAAA,EAZK,KAYazsB,IACwB,MAbrC,KAaE2H,MAAMoI,aAbR,KAa4B/P,MAb5B,KAcE6rB,mBAdF,KAc4B7rB,IAAK,+CAdjC,KAeAA,IACL0sB,IAAAA,EAhBK,KAgBQhB,iBACX5T,EAAQ7X,EAAoBI,GAAkBqsB,EAAKxsB,IAjBhD,KAkBE2rB,mBAAmBY,EAAU,0BACxCngB,GAAQ0c,GAAkB0D,GAC1BX,EApBS,KAoBW/rB,IAItB8X,GAAQ,EAEHxL,OAAAA,EAAO,KAAK3E,MAAMxJ,MAAM4tB,EAAY,KAAK/rB,MAMlD+oB,GAAKU,SAAW,WACVnd,IAAAA,EAAO,KAAK2e,YACZphB,EAAOtI,EAAML,KAKV,OAJH,KAAK9B,SAAS1D,KAAK4Q,KACjB,KAAK5B,aAAoBgE,KAAAA,iBAAiB,KAAKnH,MAAO,8BAAgC+E,GAC1FzC,EAAOzI,EAAWkL,IAEb,KAAKgd,YAAYzf,EAAMyC,IAwBhC,IAiCIqgB,GACAC,GACAC,GAnCAC,GAAU,QASd,SAASjgB,GAAMlF,EAAOrG,GACb,OAAA,IAAI6I,EAAO7I,EAASqG,GAAOkF,QAOpC,SAASkgB,GAAkBplB,EAAO3H,EAAKsB,GACjCgG,IAAAA,EAAI,IAAI6C,EAAO7I,EAASqG,EAAO3H,GAE5BsH,OADPA,EAAE0F,YACK1F,EAAEmK,kBAMX,SAASub,GAAUrlB,EAAOrG,GACjB,OAAA,IAAI6I,EAAO7I,EAASqG,GAS7B,SAASslB,GAAgBpgB,EAAOqgB,EAAWC,GACzCR,QAAAA,aAAAA,GAAe9f,EACf+f,QAAAA,YAAAA,GAAcM,EACdL,QAAAA,aAAAA,GAAeM,EAChB,QAAA,QAAA,GAAA,QAAA,aAAA,GAAA,QAAA,YAAA,GAAA,QAAA,aAAA;;AC7oKD,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlDMC,IAAAA,EAkDN,WAjDchzB,SAAAA,EAAAA,EAAO+C,GAAM,EAAA,KAAA,GAClB/C,KAAAA,MAAQA,EACTiD,MAAMyJ,QAAQ3J,GACXA,KAAAA,KAAOA,GAEPA,KAAAA,KAAO,IAAIkwB,WAAW,GACvBlwB,EAAKmwB,EACFnwB,KAAAA,KAAO,IAAIkwB,WAAW,CAAClwB,EAAKowB,EAAGpwB,EAAKqwB,EAAGrwB,EAAKmwB,IACxCnwB,EAAKqwB,EACTrwB,KAAAA,KAAO,IAAIkwB,WAAW,CAAClwB,EAAKowB,EAAGpwB,EAAKqwB,IAEpCrwB,KAAAA,KAAO,IAAIkwB,WAAW,CAAClwB,EAAKowB,KAInB,IAAA,EAAA,EAAA,KAAKpwB,KAfA,GAehBswB,EAfgB,EAAA,GAebC,EAfa,EAAA,GAeVC,EAfU,EAAA,GAgBnBA,GAAAA,GACE,GAAA,KAAKvzB,MAAMuC,SAAY8wB,EAAIC,EAAIC,EAC3B,MAAA,IAAI/gB,MAAoB,cAAA,OAAA,KAAKxS,MAAMuC,OAAyB8wB,oBAAAA,OAAAA,EAAOC,OAAAA,OAAAA,EAAOC,OAAAA,OAAAA,EAAQD,OAAAA,OAAAA,EAAID,EAAIE,SAE7F,GAAID,GACL,GAAA,KAAKtzB,MAAMuC,SAAY8wB,EAAIC,EACvB,MAAA,IAAI9gB,MAAoB,cAAA,OAAA,KAAKxS,MAAMuC,OAAyB8wB,oBAAAA,OAAAA,EAAOC,OAAAA,OAAAA,EAAQA,OAAAA,OAAAA,EAAID,SAGnF,GAAA,KAAKrzB,MAAMuC,SAAW8wB,EAClB,MAAA,IAAI7gB,MAAoB,cAAA,OAAA,KAAKxS,MAAMuC,OAAyB8wB,oBAAAA,OAAAA,IAuB1E,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,UAjBY,MAAA,WACUhzB,IAAVmzB,EAAUnzB,QAAQ,WAAlBmzB,MACU,EAAA,EAAA,KAAKzwB,KAFf,GAEDswB,EAFC,EAAA,GAEEC,EAFF,EAAA,GAEKC,EAFL,EAAA,GAGJA,OAAAA,EACKC,EAAMC,4BAA4B,KAAKzzB,MAAM0zB,SAAW,KAAK1zB,MAAQ,IAAI2zB,aAAa,KAAK3zB,OAAQqzB,EAAGC,EAAGC,GACvGD,EACFE,EAAMI,4BAA4B,KAAK5zB,MAAM0zB,SAAW,KAAK1zB,MAAQ,IAAI2zB,aAAa,KAAK3zB,OAAQqzB,EAAGC,GAEtG,KAAKtzB,UASlB,EAAA,GAJA,SAASuN,EAAMvN,EAAO+C,GACb,OAAA,IAAIiwB,EAAMhzB,EAAO+C,GAG1BpD,OAAOC,QAAU,CACfozB,MAAAA,EACAzlB,MAAAA;;ACXF,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EArCMsmB,IAAAA,EAqCN,WApCcC,SAAAA,EAAAA,GAAU,EAAA,KAAA,GAElBC,IAAAA,EAMED,EANFC,QACAhxB,EAKE+wB,EALF/wB,KACAixB,EAIEF,EAJFE,WACAC,EAGEH,EAHFG,OACAhjB,EAEE6iB,EAFF7iB,QAEE6iB,EAAAA,EADFrkB,KAAAA,OAAO,IAAA,EAAA,gBAPW,EAShB,IAACwkB,EAAQ,MAAM,IAAIzhB,MAAM,wCACzB,IAACvB,EAAS,MAAM,IAAIuB,MAAM,yCACzBuhB,KAAAA,QAAUA,EACVhxB,KAAAA,KAAOA,EACPixB,KAAAA,WAAaA,EACbC,KAAAA,OAASA,EACThjB,KAAAA,QAAUA,EACVijB,KAAAA,OAAS,KACTzkB,KAAAA,KAAOA,EAmBhB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,UAZY,MAAA,WACF,MAAA,IAAI+C,MAA4B,sBAAA,OAAA,KAAKxP,YAAY8D,SAW3D,CAAA,IAAA,SALW,MAAA,WACA,OAAA,KAAKmK,QAAQkjB,cAAc,KAAKJ,aAI3C,EAAA,GAAAp0B,OAAOC,QAAU,CACfi0B,QAAAA;;ACs1BF,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAh4BA,IAAMO,EAAQ/zB,QAAQ,SACJA,EAAAA,QAAQ,WAAlB2yB,EAAAA,EAAAA,MACY3yB,EAAAA,QAAQ,aAApBwzB,EAAAA,EAAAA,QAEFQ,EAAgB,mBAChBC,EAAiB,mCACjBC,EAAiB,aAOjBf,EAAQ,CAOZgB,iBAAmB,WACVC,OAAAA,GAETC,oBAAsB,WACdC,IAAAA,EAAI,IAAIC,YAAY,GACpBC,EAAI,IAAIC,YAAYH,GACpBvK,EAAI,IAAI2K,WAAWJ,GAErBvK,GADJyK,EAAE,GAAK,WACM,MAATzK,EAAE,GAAa,MAAO,KACtBA,GAAS,MAATA,EAAE,GAAa,MAAO,KACpB,MAAA,IAAI5X,MAAM,uBAQlBwiB,WAAWC,SAAAA,GACF,MAAoB,mBAAbA,GAUhBC,iBAAiBC,SAAAA,GACX,MAAc,iBAAPA,GAGY,aAFbA,EACLpxB,MAAM,EAAG,WAAWxB,QACpB6yB,eAUPC,0BAA0BC,SAAAA,GACjBjB,OAAAA,EAAc1mB,KAAK2nB,GAAS,GAAGC,QAGxCC,0BAA0BF,SAAAA,GACjBA,OAAAA,EAAQG,UAAUH,EAAQxQ,QAAQ,KAAO,EAAGwQ,EAAQ7kB,YAAY,OAQzEilB,2BAA2BP,SAAAA,GACnBQ,IAAAA,EAAQR,EAAGrlB,QAAQwkB,EAAgB,IACrCrwB,EAAS0xB,EAAM5xB,MAAM4xB,EAAM7Q,QAAQ,KAAO,EAAG6Q,EAAM7Q,QAAQ,MAAMpX,MAAM6mB,GAIpEtwB,OAHQ,OAAXA,IACFA,EAAS,IAEJA,GAQT2xB,MAAMrpB,SAAAA,GACAA,GAAQ,OAARA,GAA+B,WAAf,EAAOA,IAAoBA,EAAIH,eAAe,iBAAkB,OAAOG,EAErF5J,IAAAA,EAAO4J,EAAIvJ,cAEZ,IAAA,IAAIK,KAAOkJ,EACV9K,OAAO0K,UAAUC,eAAeK,KAAKF,EAAKlJ,KAC5CkJ,EAAIspB,cAAgB,KACpBlzB,EAAKU,GAAOmwB,EAAMoC,MAAMrpB,EAAIlJ,WACrBkJ,EAAIspB,eAIRlzB,OAAAA,GAQT+J,QAAQrK,SAAAA,GACC,OAACyzB,MAAMzzB,EAAME,SAQtBwzB,gBAAgB/1B,SAAAA,EAAOg2B,GACjBxC,GAAAA,EAAM9mB,QAAQ1M,GACZA,MAAsB,QAAtBA,EAAM,GAAGi2B,SACJ,iBAEF,QAGDj2B,OAAAA,EAAMgD,aACPkzB,KAAAA,QACI,MAAA,UACJC,KAAAA,OACCH,OAAAA,GAAkBG,OAAOC,UAAUp2B,GAC9B,UAEF,QACJ6zB,KAAAA,EACI7zB,OAAAA,EAAMyP,KACVujB,KAAAA,EACI,MAAA,QAGPhzB,MAAmB,QAAnBA,EAAMi2B,SACD,YAEHj2B,EAAMoM,eAAe,QAChBpM,EAAMyP,KAER,WAKX4mB,qBAAqBvC,SAAAA,EAAUE,GACbA,IAAAA,EAAAA,EAAAA,EADyB,GACpCX,EADoC,EAAA,GACjCC,EADiC,EAAA,GAErCgD,GAAcjD,GAAK,IAAMC,GAAK,IAFO,EAAA,IAEI,GAMzCA,OAJAQ,EAASyC,qBAA8C,WAAvBzC,EAASxvB,YAC3C+uB,EAAIiD,EAAaz2B,KAAK22B,KAAKF,EAAa,IAGtChD,EAAI,GAAKD,EAAIC,IAAMgD,EACd,IAAIrD,WAAW,CAACI,EAAGC,IAErBE,EAAMiD,wBAAwBH,IAQvCG,wBAAwBl0B,SAAAA,GAIfm0B,IAHDC,IAAAA,EAAO92B,KAAK82B,KAAKp0B,GACnBm0B,EAAO72B,KAAK22B,KAAKG,GACjBC,EAAM/2B,KAAK4C,MAAMk0B,GACdD,EAAOE,EAAMr0B,GAClBm0B,IACAE,EAAM/2B,KAAK22B,KAAKj0B,EAASm0B,GAEpB,OAAA,IAAIzD,WAAW,CAAC2D,EAAK/2B,KAAK22B,KAAKj0B,EAASq0B,MASjDC,mCAAmC7C,SAAAA,EAAY8C,GACvCC,IACAT,EADY9C,EAAMwD,SAAShD,EAAW,IAAM,IAAMA,EAAW,IAAM,IAAMA,EAAW,IAAM,IAAMA,EAAW,IAAM,GAAI,GAC5F8C,EACxBtD,OAAAA,EAAMiD,wBAAwBH,IASvCW,oCAAoCjD,SAAAA,EAAY8C,GAC5B9C,IAAAA,EAAAA,EAAAA,EADsC,GACjDX,EADiD,EAAA,GAC9CC,EAD8C,EAAA,GAC3CC,EAD2C,EAAA,GAGlD+C,EADY9C,EAAMwD,SAAS3D,GAAK,IAAMC,GAAK,IAAMC,GAAK,GAAI,IAChC,EAAIuD,GAC7BtD,OAAAA,EAAMiD,wBAAwBH,IAGvCU,QAAQhqB,SAAAA,EAAGumB,GACF1zB,OAAAA,KAAK4C,OAAOuK,EAAIumB,EAAI,GAAKA,GAAKA,GAQvC2D,cAAc/D,SAAAA,EAAGgE,GACXC,IAAAA,EACA5D,GAAAA,EAAM9mB,QAAQymB,GAAI,CAGbK,IAFD6D,IAAAA,EAAM,GACR10B,EAAOwwB,EACJK,EAAM9mB,QAAQ/J,IACnB00B,EAAIhzB,KAAK1B,EAAKJ,QACdI,EAAOA,EAAK,GAEdy0B,EAAMC,EAAIC,eACL,GAAInE,aAAaU,EACtBuD,EAAMjE,EAAEc,WACH,CAAA,KAAId,aAAaH,GAGhB,MAAA,IAAIxgB,MAA+B2gB,yBAAAA,OAAAA,IAFzCiE,EAAMjE,EAAEpwB,KAKNo0B,GAAAA,EAEKC,IADPA,EAAMn0B,MAAMs0B,KAAKH,GACVA,EAAI70B,OAAS,GAClB60B,EAAI/yB,KAAK,GAIN,OAAA,IAAI4uB,WAAWmE,IAQxBI,iBAAiBn1B,SAAAA,EAAOkjB,GAEjB,IADDxY,IAAAA,EAAS,EACJqmB,EAAI,EAAGA,EAAI/wB,EAAME,OAAQ6wB,IAChC7N,EAAO5f,IAAItD,EAAM+wB,GAAIrmB,GACrBA,GAAU1K,EAAM+wB,GAAG7wB,QASvBk1B,iBAAiBp1B,SAAAA,EAAOkjB,GAEjB,IADDxY,IAAAA,EAAS,EACJmmB,EAAI,EAAGA,EAAI7wB,EAAME,OAAQ2wB,IAC3B,IAAA,IAAIE,EAAI,EAAGA,EAAI/wB,EAAM6wB,GAAG3wB,OAAQ6wB,IACnC7N,EAAO5f,IAAItD,EAAM6wB,GAAGE,GAAIrmB,GACxBA,GAAU1K,EAAM6wB,GAAGE,GAAG7wB,QAU5Bm1B,iBAAiBr1B,SAAAA,EAAOkjB,GAEjB,IADDxY,IAAAA,EAAS,EACJod,EAAI,EAAGA,EAAI9nB,EAAME,OAAQ4nB,IAC3B,IAAA,IAAI+I,EAAI,EAAGA,EAAI7wB,EAAM8nB,GAAG5nB,OAAQ2wB,IAC9B,IAAA,IAAIE,EAAI,EAAGA,EAAI/wB,EAAM8nB,GAAG+I,GAAG3wB,OAAQ6wB,IACtC7N,EAAO5f,IAAItD,EAAM8nB,GAAG+I,GAAGE,GAAIrmB,GAC3BA,GAAU1K,EAAM8nB,GAAG+I,GAAGE,GAAG7wB,QAWjCo1B,UAAUt1B,SAAAA,EAAOkjB,GACXiO,EAAM9mB,QAAQrK,EAAM,IAClBmxB,EAAM9mB,QAAQrK,EAAM,GAAG,IACrBmxB,EAAM9mB,QAAQrK,EAAM,GAAG,GAAG,IAC5BmxB,EAAMkE,iBAAiBr1B,EAAOkjB,GAE9BiO,EAAMiE,iBAAiBp1B,EAAOkjB,GAGhCiO,EAAMgE,iBAAiBn1B,EAAOkjB,GAGhCA,EAAO5f,IAAItD,IAcfu1B,WAAWv1B,SAAAA,EAAOw1B,GAEX,IADC5zB,IAAAA,EAAS,GACN3B,EAAI,EAAGA,EAAID,EAAME,OAAQD,GAAKu1B,EACrC5zB,EAAOI,KAAK,IAAIhC,EAAMW,YAAYX,EAAMy1B,OAAY,EAAJx1B,EAAQD,EAAM01B,WAAYF,IAErE5zB,OAAAA,GAGT+zB,aAAansB,SAAAA,EAAQosB,GACbC,IAAAA,EAAQj1B,MAAMyJ,QAAQb,GAAUA,EAASA,EAAO8E,MAAM,UACtDxD,EAAQ8qB,EAAIvoB,IAAIvC,MAChBC,EAAM6qB,EAAIvoB,IAAItC,IACdnJ,EAAS,GACXkJ,GAAAA,EAAMP,OAASQ,EAAIR,KACrB3I,EAAOI,KAAK6zB,EAAM/qB,EAAMP,KAAO,GAAG6oB,UAAUtoB,EAAML,OAAQM,EAAIN,aACzD,CACL7I,EAAOI,KAAK6zB,EAAM/qB,EAAMP,KAAO,GAAG7I,MAAMoJ,EAAML,SACzC,IAAA,IAAIxK,EAAI6K,EAAMP,KAAMtK,EAAI8K,EAAIR,KAAMtK,IACrC2B,EAAOI,KAAK6zB,EAAM51B,IAEpB2B,EAAOI,KAAK6zB,EAAM9qB,EAAIR,KAAO,GAAG7I,MAAM,EAAGqJ,EAAIN,SAExC7I,OAAAA,EAAOk0B,KAAK,OAGrBC,gBAAgB7rB,SAAAA,GACR8rB,IAAAA,EAAQ,GAEX,GACDA,EAAMh0B,KAAKwjB,MAAMwQ,EAAO52B,OAAO62B,oBAAoB/rB,UAC5CA,EAAM9K,OAAO82B,eAAehsB,IAE9B8rB,OAAAA,GAOTG,cAAcN,SAAAA,GACRA,OAAAA,EAAM31B,OAAS,EACV21B,EAAMC,KAAK,OAAS,MAEpB,MAGXM,eAAehpB,SAAAA,EAAMipB,EAASC,GACxBA,EACFC,QAAQC,KAAoCppB,8BAAAA,OAAAA,EAAWipB,MAAAA,OAAAA,EAA0CC,kCAAAA,OAAAA,EAAjG,8DAEAC,QAAQC,KAAoCppB,8BAAAA,OAAAA,EAAWipB,MAAAA,OAAAA,EAAvD,oFASJI,oBAAoBjtB,SAAAA,EAAQioB,GAEtB,GADJA,EAAWA,GAAY,GACD,iBAAXjoB,GAAyC,mBAAXA,EAAuB,MAAM,IAAI2G,MAAM,mCAC1EumB,IAAAA,EAAiC,iBAAXltB,EAAsBA,EAASA,EAAOQ,WAa3D,MAAA,CACLR,OAAQktB,EACRC,cAXE/1B,MAAMyJ,QAAQonB,EAASkF,eACTlF,EAASkF,cACkB,WAAlC,EAAOlF,EAASkF,eACTxF,EAAMkC,2BAA2BqD,GAC9CE,IAAI,SAAAnyB,GAAQgtB,OAAAA,EAASkF,cAAclyB,MAAU,GAEhCgtB,EAASkF,eAAiB,GAM1CE,WAAYpF,EAASoF,YAAc,OAGvCC,WAAY,SAACC,EAAQC,EAAOC,GAOrB,IALCC,IAAAA,EAAaD,EAAS,EAAI,EAC1BE,EAAsB,EAARH,EAEd12B,EAAO,IAAI82B,kBAA0B,EAARJ,GAC7Bp1B,EAASm1B,EAAOr1B,MAAM,GACnBqvB,EAAI,EAAGA,EAAImG,IAAcnG,EAAG,CAC7BsG,IAAAA,EAAYtG,EAAIoG,EAChBG,GAAgBL,EAASlG,EAAI,GAAKoG,EAGxC72B,EAAKgD,IAAI1B,EAAOyvB,SAASgG,EAAWA,EAAYF,IAGhDv1B,EAAO21B,WAAWF,EAAWC,EAAcA,EAAeH,GAG1Dv1B,EAAO0B,IAAIhD,EAAMg3B,GAEZ11B,OAAAA,GAET41B,iBAAkB,SAACx3B,EAAOg3B,GACjBh3B,OAAAA,EAAMqxB,SAAS,EAAG2F,IAE3BS,mBAAoB,SAACz3B,EAAOg3B,EAAOC,GAE5B,IADCS,IAAAA,EAAW,IAAI92B,MAAMq2B,GAClBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CACzB4G,IAAAA,EAAS5G,EAAIiG,EACbY,EAAOD,EAASX,EACtBU,EAAS3G,GAAK/wB,EAAMqxB,SAASsG,EAAQC,GAEhCF,OAAAA,GAETG,mBAAoB,SAAC73B,EAAOg3B,EAAOC,EAAQa,GAEpC,IADCC,IAAAA,EAAW,IAAIn3B,MAAMk3B,GAClBjH,EAAI,EAAGA,EAAIiH,EAAOjH,IAAK,CAEzB,IADC6G,IAAAA,EAAW,IAAI92B,MAAMq2B,GAClBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CACzB4G,IAAAA,EAAU9G,EAAIoG,EAASD,EAASjG,EAAIiG,EACpCY,EAAOD,EAASX,EACtBU,EAAS3G,GAAK/wB,EAAMqxB,SAASsG,EAAQC,GAEvCG,EAASlH,GAAK6G,EAETK,OAAAA,GAETC,0BAA2B,SAACh4B,EAAOg3B,GAC1Bh3B,OAAAA,EAAMqxB,SAAS,EAAG2F,IAE3BzF,4BAA6B,SAACvxB,EAAOg3B,EAAOC,GAErC,IADCS,IAAAA,EAAW,IAAI92B,MAAMq2B,GAClBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CACzBrmB,IAAAA,EAASqmB,EAAIiG,EACnBU,EAAS3G,GAAK/wB,EAAMqxB,SAAS3mB,EAAQA,EAASssB,GAEzCU,OAAAA,GAETtG,4BAA6B,SAACpxB,EAAOg3B,EAAOC,EAAQa,GAE7C,IADCC,IAAAA,EAAW,IAAIn3B,MAAMk3B,GAClBjH,EAAI,EAAGA,EAAIiH,EAAOjH,IAAK,CAEzB,IADC6G,IAAAA,EAAW,IAAI92B,MAAMq2B,GAClBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CACzBrmB,IAAAA,EAAUmmB,EAAIoG,EAASD,EAAUjG,EAAIiG,EAC3CU,EAAS3G,GAAK/wB,EAAMqxB,SAAS3mB,EAAQA,EAASssB,GAEhDe,EAASlH,GAAK6G,EAETK,OAAAA,GAETE,WAAY,SAACj4B,EAAOg3B,GAGb,IAFCkB,IAAAA,EAAW,IAAI5G,aAAa0F,GAC9B/2B,EAAI,EACC6wB,EAAI,EAAGA,EAAIkG,EAAOlG,IACzBoH,EAASpH,GAAK9wB,EAAMC,GACpBA,GAAK,EAEAi4B,OAAAA,GAETC,aAAc,SAACn4B,EAAOg3B,EAAOC,GAGtB,IAFCS,IAAAA,EAAW,IAAI92B,MAAMq2B,GACvBh3B,EAAI,EACC8wB,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CAE1B,IADCmH,IAAAA,EAAW,IAAI5G,aAAa0F,GACzBlG,EAAI,EAAGA,EAAIkG,EAAOlG,IACzBoH,EAASpH,GAAK9wB,EAAMC,GACpBA,GAAK,EAEPy3B,EAAS3G,GAAKmH,EAETR,OAAAA,GAETU,aAAc,SAACp4B,EAAOg3B,EAAOC,EAAQa,GAG9B,IAFCC,IAAAA,EAAW,IAAIn3B,MAAMk3B,GACvB73B,EAAI,EACC4wB,EAAI,EAAGA,EAAIiH,EAAOjH,IAAK,CAEzB,IADC6G,IAAAA,EAAW,IAAI92B,MAAMq2B,GAClBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CAE1B,IADCmH,IAAAA,EAAW,IAAI5G,aAAa0F,GACzBlG,EAAI,EAAGA,EAAIkG,EAAOlG,IACzBoH,EAASpH,GAAK9wB,EAAMC,GACpBA,GAAK,EAEPy3B,EAAS3G,GAAKmH,EAEhBH,EAASlH,GAAK6G,EAETK,OAAAA,GAETM,YAAa,SAACr4B,EAAOg3B,GAId,IAHCkB,IAAAA,EAAW,IAAIt3B,MAAMo2B,GACrBsB,EAAsB,EAARtB,EAChB/2B,EAAI,EACC6wB,EAAI,EAAGA,EAAIwH,EAAaxH,GAAK,EACpCoH,EAASj4B,KAAOD,EAAMqxB,SAASP,EAAGA,EAAI,GAEjCoH,OAAAA,GAETK,cAAe,SAACv4B,EAAOg3B,EAAOC,GAGvB,IAFCS,IAAAA,EAAW,IAAI92B,MAAMq2B,GACrBuB,EAAsB,EAARxB,EACXjG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CAI1B,IAHCmH,IAAAA,EAAW,IAAIt3B,MAAMo2B,GACrBtsB,EAASqmB,EAAIyH,EACfv4B,EAAI,EACC6wB,EAAI,EAAGA,EAAI0H,EAAa1H,GAAK,EACpCoH,EAASj4B,KAAOD,EAAMqxB,SAASP,EAAIpmB,EAAQomB,EAAIpmB,EAAS,GAE1DgtB,EAAS3G,GAAKmH,EAETR,OAAAA,GAETe,cAAe,SAACz4B,EAAOg3B,EAAOC,EAAQa,GAG/B,IAFCQ,IAAAA,EAAsB,EAARtB,EACde,EAAW,IAAIn3B,MAAMk3B,GAClBjH,EAAI,EAAGA,EAAIiH,EAAOjH,IAAK,CAEzB,IADC6G,IAAAA,EAAW,IAAI92B,MAAMq2B,GAClBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CAI1B,IAHCmH,IAAAA,EAAW,IAAIt3B,MAAMo2B,GACrBtsB,EAAUmmB,EAAIyH,EAAcrB,EAAWlG,EAAIuH,EAC7Cr4B,EAAI,EACC6wB,EAAI,EAAGA,EAAIwH,EAAaxH,GAAK,EACpCoH,EAASj4B,KAAOD,EAAMqxB,SAASP,EAAIpmB,EAAQomB,EAAIpmB,EAAS,GAE1DgtB,EAAS3G,GAAKmH,EAEhBH,EAASlH,GAAK6G,EAETK,OAAAA,GAETW,YAAa,SAAC14B,EAAOg3B,GAId,IAHCkB,IAAAA,EAAW,IAAIt3B,MAAMo2B,GACrBsB,EAAsB,EAARtB,EAChB/2B,EAAI,EACC6wB,EAAI,EAAGA,EAAIwH,EAAaxH,GAAK,EACpCoH,EAASj4B,KAAOD,EAAMqxB,SAASP,EAAGA,EAAI,GAEjCoH,OAAAA,GAETS,cAAe,SAAC34B,EAAOg3B,EAAOC,GAGvB,IAFCqB,IAAAA,EAAsB,EAARtB,EACdU,EAAW,IAAI92B,MAAMq2B,GAClBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CAI1B,IAHCmH,IAAAA,EAAW,IAAIt3B,MAAMo2B,GACrBtsB,EAASqmB,EAAIuH,EACfr4B,EAAI,EACC6wB,EAAI,EAAGA,EAAIwH,EAAaxH,GAAK,EACpCoH,EAASj4B,KAAOD,EAAMqxB,SAASP,EAAIpmB,EAAQomB,EAAIpmB,EAAS,GAE1DgtB,EAAS3G,GAAKmH,EAETR,OAAAA,GAETkB,cAAe,SAAC54B,EAAOg3B,EAAOC,EAAQa,GAG/B,IAFCQ,IAAAA,EAAsB,EAARtB,EACde,EAAW,IAAIn3B,MAAMk3B,GAClBjH,EAAI,EAAGA,EAAIiH,EAAOjH,IAAK,CAEzB,IADC6G,IAAAA,EAAW,IAAI92B,MAAMq2B,GAClBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CAI1B,IAHCmH,IAAAA,EAAW,IAAIt3B,MAAMo2B,GACrBtsB,EAAUmmB,EAAIyH,EAAcrB,EAAWlG,EAAIuH,EAC7Cr4B,EAAI,EACC6wB,EAAI,EAAGA,EAAIwH,EAAaxH,GAAK,EACpCoH,EAASj4B,KAAOD,EAAMqxB,SAASP,EAAIpmB,EAAQomB,EAAIpmB,EAAS,GAE1DgtB,EAAS3G,GAAKmH,EAEhBH,EAASlH,GAAK6G,EAETK,OAAAA,GAETc,YAAa,SAAC74B,EAAOg3B,GAId,IAHCkB,IAAAA,EAAW,IAAIt3B,MAAMZ,GACrBs4B,EAAsB,EAARtB,EAChB/2B,EAAI,EACC6wB,EAAI,EAAGA,EAAIwH,EAAaxH,GAAK,EACpCoH,EAASj4B,KAAOD,EAAMqxB,SAASP,EAAGA,EAAI,GAEjCoH,OAAAA,GAETY,cAAe,SAAC94B,EAAOg3B,EAAOC,GAGvB,IAFCqB,IAAAA,EAAsB,EAARtB,EACdU,EAAW,IAAI92B,MAAMq2B,GAClBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CAI1B,IAHCmH,IAAAA,EAAW,IAAIt3B,MAAMo2B,GACrBtsB,EAASqmB,EAAIuH,EACfr4B,EAAI,EACC6wB,EAAI,EAAGA,EAAIwH,EAAaxH,GAAK,EACpCoH,EAASj4B,KAAOD,EAAMqxB,SAASP,EAAIpmB,EAAQomB,EAAIpmB,EAAS,GAE1DgtB,EAAS3G,GAAKmH,EAETR,OAAAA,GAETqB,cAAe,SAAC/4B,EAAOg3B,EAAOC,EAAQa,GAG/B,IAFCQ,IAAAA,EAAsB,EAARtB,EACde,EAAW,IAAIn3B,MAAMk3B,GAClBjH,EAAI,EAAGA,EAAIiH,EAAOjH,IAAK,CAEzB,IADC6G,IAAAA,EAAW,IAAI92B,MAAMq2B,GAClBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAAK,CAI1B,IAHCmH,IAAAA,EAAW,IAAIt3B,MAAMo2B,GACrBtsB,EAAUmmB,EAAIyH,EAAcrB,EAAWlG,EAAIuH,EAC7Cr4B,EAAI,EACC6wB,EAAI,EAAGA,EAAIwH,EAAaxH,GAAK,EACpCoH,EAASj4B,KAAOD,EAAMqxB,SAASP,EAAIpmB,EAAQomB,EAAIpmB,EAAS,GAE1DgtB,EAAS3G,GAAKmH,EAEhBH,EAASlH,GAAK6G,EAETK,OAAAA,GASTiB,wBAAyB,SAACxvB,EAAQioB,GACxBwH,IAAAA,EAA4CxH,EAA5CwH,eAAgBC,EAA4BzH,EAA5ByH,WAAYC,EAAgB1H,EAAhB0H,YAChCC,EAAY3H,EAAS2H,UACpBA,IACHA,EAAY3H,EAAS2H,UAAY,IAE7BxD,IAAAA,EAAM7D,EAAM3hB,MAAM5G,GAClB6vB,EAAuB,GAiIvBz3B,IAAAA,EA/HG03B,SAAAA,EAAQ1D,GACXh1B,GAAAA,MAAMyJ,QAAQurB,GAAM,CAEjB,IADCp0B,IAAAA,EAAU,GACPvB,EAAI,EAAGA,EAAI21B,EAAI11B,OAAQD,IAC9BuB,EAAQQ,KAAKs3B,EAAQ1D,EAAI31B,KAEpBuB,OAAAA,EAAQs0B,KAAK,IAEdF,OAAAA,EAAIxoB,MACL,IAAA,UACIksB,OAAAA,EAAQ1D,EAAIjjB,MAChB,IAAA,sBACgBijB,MAAAA,YAAAA,OAAAA,EAAIhe,GAAGnT,KAAQmxB,KAAAA,OAAAA,EAAI/c,OAAO+d,IAAI0C,GAASxD,KAAK,MAAWwD,MAAAA,OAAAA,EAAQ1D,EAAIjjB,OACnF,IAAA,iBAEE,IADC/Q,IAAAA,EAAS,GACN3B,EAAI,EAAGA,EAAI21B,EAAIjjB,KAAKzS,OAAQD,IACnC2B,EAAOI,KAAKs3B,EAAQ1D,EAAIjjB,KAAK1S,IAAK,OAEvB2B,MAAAA,MAAAA,OAAAA,EAAOk0B,KAAK,IAAzB,KAEG,IAAA,sBACKF,OAAAA,EAAI/f,aAAa,GAAG+B,GAAGxK,MACxB,IAAA,gBACG5D,IAAAA,EAAS8vB,EAAQ1D,EAAI/f,aAAa,GAAGC,MACrCgF,EAAa8a,EAAI/f,aAAa+gB,IAAI,SAAAljB,GAAeA,OAAAA,EAAYkE,GAAGkD,WAAW8b,IAAI0C,KAAU,GAC3F,GAAA,OAAOr6B,KAAKuK,GAAS,CAGlB,IAFC5H,IAAAA,EAAS,GACT23B,EAAUze,EAAW8b,IAAIsC,GACtBj5B,EAAI,EAAGA,EAAIs5B,EAAQr5B,OAAQD,IAAK,CACjCu5B,IAAAA,EAASD,EAAQt5B,GACnBu5B,GAAW,OAAXA,EAAAA,CACEla,IAAAA,EAAWxE,EAAW7a,GAC5B2B,EAAOI,KAAQ4zB,GAAAA,OAAAA,EAAI3iB,KAASqM,KAAAA,OAAAA,EAAgBka,OAAAA,OAAAA,EAA5C,SAGK53B,OAAAA,EAAOk0B,KAAK,IAEXF,MAAAA,GAAAA,OAAAA,EAAI3iB,KAAU6H,OAAAA,OAAAA,EAAkBtR,SAAAA,OAAAA,GAEvC,IAAA,eACOosB,MAAAA,GAAAA,OAAAA,EAAI3iB,KAAW2iB,OAAAA,OAAAA,EAAI/f,aAAa+gB,IAAI,SAAAljB,GAAe4lB,OAAAA,EAAQ5lB,EAAYkE,MAAKke,KAAK,MAAcwD,SAAAA,OAAAA,EAAQ1D,EAAI/f,aAAa,GAAGC,OAErIqjB,OAAAA,IAAqE,IAAtDA,EAAY1W,QAAQmT,EAAI/f,aAAa,GAAG+B,GAAGnT,MACrD,GAECmxB,GAAAA,OAAAA,EAAI3iB,KAAQ2iB,KAAAA,OAAAA,EAAI/f,aAAa,GAAG+B,GAAGnT,KAAU60B,OAAAA,OAAAA,EAAQ1D,EAAI/f,aAAa,GAAGC,OAChF,IAAA,iBACC8f,GAA6B,aAA7BA,EAAInW,OAAOH,SAAS7a,KACZ60B,MAAAA,GAAAA,OAAAA,EAAQ1D,EAAInW,OAAOtI,QAAWmiB,KAAAA,OAAAA,EAAQ1D,EAAInW,OAAOH,UAAasW,KAAAA,OAAAA,EAAIlW,UAAUkX,IAAI,SAAAj5B,GAAS27B,OAAAA,EAAQ37B,KAAQm4B,KAAK,MAAxH,KAEEF,GAA2B,OAA3BA,EAAInW,OAAOtI,OAAO1S,MAA4C,YAA3BmxB,EAAInW,OAAOtI,OAAO1S,KAC7C60B,MAAAA,GAAAA,OAAAA,EAAQ1D,EAAInW,OAAOtI,QAAWmiB,KAAAA,OAAAA,EAAQ1D,EAAInW,OAAOH,UAAasW,KAAAA,OAAAA,EAAIlW,UAAUkX,IAAI,SAAAj5B,GAAS27B,OAAAA,EAAQ37B,KAAQm4B,KAAK,MAAxH,KAEEF,GAA2B,mBAA3BA,EAAInW,OAAOtI,OAAO/J,KAEVwoB,OADVyD,EAAqBr3B,KAAKi3B,EAAe,OAAQrD,EAAInW,OAAOH,SAAS7a,OAC3DmxB,GAAAA,OAAAA,EAAInW,OAAOH,SAAS7a,KAAQmxB,KAAAA,OAAAA,EAAIlW,UAAUkX,IAAI,SAAAj5B,GAAS27B,OAAAA,EAAQ37B,KAAQm4B,KAAK,MAAtF,KACK,GAAIF,EAAInW,OAAOtI,OAAO1S,KAAM,CAC3Bg1B,IAAAA,EAAcR,EAAerD,EAAInW,OAAOtI,OAAO1S,KAAMmxB,EAAInW,OAAOH,SAAS7a,MAC3Eg1B,OAAgB,OAAhBA,EAEQ7D,GAAAA,OAAAA,EAAInW,OAAOtI,OAAO1S,KAAQmxB,KAAAA,OAAAA,EAAInW,OAAOH,SAAS7a,KAAQmxB,KAAAA,OAAAA,EAAIlW,UAAUkX,IAAI,SAAAj5B,GAAS27B,OAAAA,EAAQ37B,KAAQm4B,KAAK,MAAhH,MAEAuD,EAAqBr3B,KAAKy3B,GAEhB7D,GAAAA,OAAAA,EAAInW,OAAOH,SAAS7a,KAAQmxB,KAAAA,OAAAA,EAAIlW,UAAUkX,IAAI,SAAAj5B,GAAS27B,OAAAA,EAAQ37B,KAAQm4B,KAAK,MAAtF,MAEG,GAA+B,qBAA3BF,EAAInW,OAAOtI,OAAO/J,KACjBksB,MAAAA,GAAAA,OAAAA,EAAQ1D,EAAInW,OAAOtI,QAAWye,KAAAA,OAAAA,EAAInW,OAAOH,SAAS7a,KAAQmxB,KAAAA,OAAAA,EAAIlW,UAAUkX,IAAI,SAAAj5B,GAAS27B,OAAAA,EAAQ37B,KAAQm4B,KAAK,MAApH,KAEM,MAAA,IAAI3lB,MAAM,sBAGf,IAAA,kBACcmpB,MAAAA,UAAAA,OAAAA,EAAQ1D,EAAIrf,WAC1B,IAAA,mBACQ+iB,MAAAA,IAAAA,OAAAA,EAAQ1D,EAAI/d,OAAQ+d,OAAAA,EAAIzZ,UAAWmd,OAAAA,EAAQ1D,EAAI9d,OAA1D,KACG,IAAA,kBACC8d,OAAAA,EAAIvxB,OACIuxB,GAAAA,OAAAA,EAAIzZ,SAAYmd,KAAAA,OAAAA,EAAQ1D,EAAIrf,WAE5B+iB,GAAAA,OAAAA,EAAQ1D,EAAIrf,UAAaqf,KAAAA,OAAAA,EAAIzZ,UAEpC,IAAA,sBACQmd,MAAAA,IAAAA,OAAAA,EAAQ1D,EAAIpjB,YAAvB,KACG,IAAA,0BACQojB,MAAAA,IAAAA,OAAAA,EAAI/c,OAAO+d,IAAI0C,GAASxD,KAAK,MAAawD,SAAAA,OAAAA,EAAQ1D,EAAIjjB,OAC9D,IAAA,UACIijB,OAAAA,EAAI9Z,IACR,IAAA,aACI8Z,OAAAA,EAAInxB,KACR,IAAA,mBACCmxB,MAAoB,mBAApBA,EAAIze,OAAO/J,KACN8rB,EAAWtD,EAAItW,SAAS7a,MAE7BmxB,EAAIpc,SACI8f,GAAAA,OAAAA,EAAQ1D,EAAIze,QAAWmiB,KAAAA,OAAAA,EAAQ1D,EAAItW,UAA7C,KAEKga,EAAQ1D,EAAIze,QAAU,IAAMmiB,EAAQ1D,EAAItW,UAC5C,IAAA,iBACI,MAAA,OACJ,IAAA,gBACWga,MAAAA,OAAAA,OAAAA,EAAQ1D,EAAInW,QAAWmW,KAAAA,OAAAA,EAAIlW,UAAUkX,IAAI,SAAAj5B,GAAS27B,OAAAA,EAAQ37B,KAAQm4B,KAAK,MAArF,KACG,IAAA,eACYwD,MAAAA,QAAAA,OAAAA,EAAQ1D,EAAI9f,MAASwjB,KAAAA,OAAAA,EAAQ1D,EAAI32B,MAASq6B,KAAAA,OAAAA,EAAQ1D,EAAIje,QAAY2hB,MAAAA,OAAAA,EAAQ1D,EAAIjjB,OAC1F,IAAA,uBACO2mB,MAAAA,GAAAA,OAAAA,EAAQ1D,EAAI/d,OAAQ+d,OAAAA,EAAIzZ,UAAWmd,OAAAA,EAAQ1D,EAAI9d,QACtD,IAAA,mBACOwhB,MAAAA,GAAAA,OAAAA,EAAQ1D,EAAIrf,WAAYqf,OAAAA,EAAIzZ,UACnC,IAAA,cACWmd,MAAAA,OAAAA,OAAAA,EAAQ1D,EAAI32B,MAAUq6B,MAAAA,OAAAA,EAAQ1D,EAAIvf,aAC7C,IAAA,iBACaijB,MAAAA,SAAAA,OAAAA,EAAQ1D,EAAIrf,WACzB,IAAA,gBACIqf,OAAAA,EAAI9a,WAAW8b,IAAI0C,GAASxD,KAAK,MACrC,IAAA,eACIF,OAAAA,EAAI3a,SAAS2b,IAAI0C,GAASxD,KAAK,MACnC,IAAA,oBACI,MAAA,YACJ,IAAA,wBACOwD,MAAAA,GAAAA,OAAAA,EAAQ1D,EAAI32B,MAASq6B,KAAAA,OAAAA,EAAQ1D,EAAIvf,YAAeijB,KAAAA,OAAAA,EAAQ1D,EAAItf,YACnE,IAAA,WACCsf,GAAa,SAAbA,EAAI3iB,KACCqmB,OAAAA,EAAQ1D,EAAI50B,KAGrB,MAAA,IAAImP,MAAgCylB,yBAAAA,OAAAA,EAAIxoB,OAEjCksB,CAAQ1D,GACnByD,GAAAA,EAAqBn5B,OAAS,EAAG,CAE9B,IADCw5B,IAAAA,EAAgC,GAC7Bz5B,EAAI,EAAGA,EAAIo5B,EAAqBn5B,OAAQD,IAAK,CAC9C05B,IAAAA,EAAqBN,EAAqBp5B,GAC3Cm5B,EAAUO,KACbP,EAAUO,IAAsB,GAElCD,EAA8B13B,KAAKmvB,EAAM6H,wBAAwBW,EAAoBlI,GAAY,OAE5FiI,OAAAA,EAA8B5D,KAAK,IAAMl0B,EAE3CA,OAAAA,GAGTg4B,oBAAqB,SAACC,EAAOC,GACrBC,IAAAA,EAAM,IAAIC,IAAI,CAAEF,KAAAA,IAEhBG,EAAUF,EAAIG,aAAa,SAAS1H,GAEjC2H,OAAU,IADH3H,EAAE,KAAK4H,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAC9BuJ,GACZ,CACDzI,OAAQ,CAACiI,EAAM7C,MAAO6C,EAAM5C,QAC5Bh1B,UAAW,WACX00B,cAAe,CAAC,eAEZ2D,EAAUP,EAAIG,aAAa,SAAS1H,GAEjC2H,OAAU,IADH3H,EAAE,KAAK4H,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAC9ByJ,GACZ,CACD3I,OAAQ,CAACiI,EAAM7C,MAAO6C,EAAM5C,QAC5Bh1B,UAAW,WACX00B,cAAe,CAAC,eAEZ6D,EAAUT,EAAIG,aAAa,SAAS1H,GAEjC2H,OAAU,IADH3H,EAAE,KAAK4H,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAC9BwB,GACZ,CACDV,OAAQ,CAACiI,EAAM7C,MAAO6C,EAAM5C,QAC5Bh1B,UAAW,WACX00B,cAAe,CAAC,eAEZ8D,EAAUV,EAAIG,aAAa,SAAS1H,GAEjC2H,OAAU,IADH3H,EAAE,KAAK4H,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAC9B0B,GACZ,CACDZ,OAAQ,CAACiI,EAAM7C,MAAO6C,EAAM5C,QAC5Bh1B,UAAW,WACX00B,cAAe,CAAC,eAEZ/0B,EAAS,CACbq4B,EAAQJ,GACRS,EAAQT,GACRW,EAAQX,GACRY,EAAQZ,IAOHj4B,OALPA,EAAOq4B,QAAUA,EACjBr4B,EAAO04B,QAAUA,EACjB14B,EAAO44B,QAAUA,EACjB54B,EAAO64B,QAAUA,EACjB74B,EAAOm4B,IAAMA,EACNn4B,GAWT84B,oBAAqB,SAACC,EAAM3D,EAAOC,EAAQ6C,GACzB97B,IAARg8B,EAAQh8B,QAAQ,YAAhBg8B,IAEFY,EAAa,IAAIZ,EAAI,CAAEF,KAAAA,IACvBe,EAAgBD,EAAWV,aAAa,SAASrsB,GAC/CssB,IAAAA,EAAQtsB,EAAE,KAAKusB,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACtCgK,KAAAA,MAAMX,EAAME,EAAI,IAAK,EAAG,EAAG,MAC/B,CAAEzI,OAAQ,CAACoF,EAAOC,GAAS8D,WAAW,EAAMpE,cAAe,CAAE9oB,EAAG,gBACnEgtB,EAAcF,GAERK,IAAAA,EAAa,IAAIhB,EAAI,CAAEF,KAAAA,IACvBmB,EAAgBD,EAAWd,aAAa,SAASrsB,GAC/CssB,IAAAA,EAAQtsB,EAAE,KAAKusB,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACtCgK,KAAAA,MAAM,EAAGX,EAAMI,EAAI,IAAK,EAAG,MAC/B,CAAE3I,OAAQ,CAACoF,EAAOC,GAAS8D,WAAW,EAAMpE,cAAe,CAAE9oB,EAAG,gBACnEotB,EAAcN,GAERO,IAAAA,EAAa,IAAIlB,EAAI,CAAEF,KAAAA,IACvBqB,EAAgBD,EAAWhB,aAAa,SAASrsB,GAC/CssB,IAAAA,EAAQtsB,EAAE,KAAKusB,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACtCgK,KAAAA,MAAM,EAAG,EAAGX,EAAM7H,EAAI,IAAK,MAC/B,CAAEV,OAAQ,CAACoF,EAAOC,GAAS8D,WAAW,EAAMpE,cAAe,CAAE9oB,EAAG,gBACnEstB,EAAcR,GAERS,IAAAA,EAAa,IAAIpB,EAAI,CAAEF,KAAAA,IACvBuB,EAAgBD,EAAWlB,aAAa,SAASrsB,GAC/CssB,IAAAA,EAAQtsB,EAAE,KAAKusB,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACtCgK,KAAAA,MAAM,IAAK,IAAK,IAAKX,EAAM3H,EAAI,MACnC,CAAEZ,OAAQ,CAACoF,EAAOC,GAAS8D,WAAW,EAAMpE,cAAe,CAAE9oB,EAAG,gBAQ5D,OAPPwtB,EAAcV,GAEdC,EAAWU,UACXN,EAAWM,UACXJ,EAAWI,UACXF,EAAWE,UAEJ,CACLT,EAAcU,OACdN,EAAcM,OACdJ,EAAcI,OACdF,EAAcE,UAKdnJ,EAAoBjB,EAAMkB,sBAEhC/0B,OAAOC,QAAU,CACf4zB,MAAAA;;AChNF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAjrBkBnzB,IAAAA,EAAAA,QAAQ,YAAlBmzB,EAAAA,EAAAA,MACUnzB,EAAAA,QAAQ,YAAlB2yB,EAAAA,EAAAA,MAEF6K,EA8qBN,WAloBchyB,SAAAA,EAAAA,EAAQioB,GACd,GADwB,EAAA,KAAA,GACN,WAAlB,EAAOjoB,GAAqB,CAC1B,GAAkB,iBAAXA,EACH,MAAA,IAAI2G,MAAM,uBAEd,IAACghB,EAAM0B,iBAAiBrpB,GACpB,MAAA,IAAI2G,MAAM,gCAGfsrB,KAAAA,kBAAmB,EACnBC,KAAAA,mBAAoB,EACpBC,KAAAA,kBAAoB,KAMpBC,KAAAA,cAAkC,iBAAXpyB,EAAsB2nB,EAAMkC,2BAA2B7pB,GAAU,KACxFmtB,KAAAA,cAAgB,KAChBkF,KAAAA,cAAgB,KAChBC,KAAAA,kBAAoB,KACpBC,KAAAA,gBAAkB,KAClBC,KAAAA,gBAAkB,KAOlBxyB,KAAAA,OAASA,EAMTooB,KAAAA,OAAS,KAMTqK,KAAAA,OAAQ,EAMRlB,KAAAA,WAAY,EAMZmB,KAAAA,kBAAoB,EAMpBC,KAAAA,UAAY,KACZC,KAAAA,cAAgB,KAChBC,KAAAA,kBAAoB,KACpBC,KAAAA,kBAAmB,EACnBC,KAAAA,eAAgB,EAMhBhB,KAAAA,OAAS,KAMT3sB,KAAAA,QAAU,KAMV4tB,KAAAA,aAAe,KAMfzC,KAAAA,IAAM,KAMN0C,KAAAA,UAAY,KAMZC,KAAAA,gBAAkB,KAMlBC,KAAAA,WAAa,KAMbC,KAAAA,UAAW,EAMXC,KAAAA,WAAY,EAMZC,KAAAA,UAAW,EAOX76B,KAAAA,UAAY,KAEZwK,KAAAA,QAAU,KAEVoqB,KAAAA,WAAa,KACbkG,KAAAA,uBAAyB,KACzBC,KAAAA,yBAA2B,KAC3B9I,KAAAA,oBAAsB,KACtBP,KAAAA,gBAAiB,EACjBsJ,KAAAA,2BAA6B,KAC7BC,KAAAA,cAAe,EAsfxB,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,iBAnqBwBtuB,MAAAA,SAAAA,GACd,MAAA,IAAIuB,MAA8C,uCAAA,OAAA,KAAK1L,SAkqBjE,CAAA,IAAA,cA3pBuB,MAAA,WACb,MAAA,IAAI0L,MAA2C,oCAAA,OAAA,KAAK1L,SA0pB9D,CAAA,IAAA,iBAvpBwBmK,MAAAA,SAAAA,GACd,MAAA,IAAIuB,MAAqC,8BAAA,OAAA,KAAK1L,SAspBxD,CAAA,IAAA,0BAnpBmC,MAAA,WACzB,MAAA,IAAI0L,MAA8C,uCAAA,OAAA,KAAK1L,SAkpBjE,CAAA,IAAA,2BA/oBoC,MAAA,WAC1B,MAAA,IAAI0L,MAA+C,wCAAA,OAAA,KAAK1L,SA8oBlE,CAAA,IAAA,iBA3oB0B,MAAA,WAChB,MAAA,IAAI0L,MAAqC,8BAAA,OAAA,KAAK1L,SA0oBxD,CAAA,IAAA,cA1qB2B,IAAA,WACjB,MAAA,IAAI0L,MAA2C,oCAAA,OAAA,KAAK1L,WAyqB9D,EAAA,EAAA,CAAA,CAAA,IAAA,gBAnfgBgtB,MAAAA,SAAAA,GACP,IAAA,IAAI5mB,KAAK4mB,EACR,GAACA,EAAS1nB,eAAec,IAAO,KAAKd,eAAec,GAApD,CACIA,OAAAA,GACD,IAAA,SACC,IAACjK,MAAMyJ,QAAQonB,EAASG,QAAS,CAC9BuL,KAAAA,UAAU1L,EAASG,QACxB,SAEF,MACG,IAAA,YACC,GAAiC,mBAA1BH,EAASgL,UAAU,GAAmB,CAC1CA,KAAAA,UAAYhL,EAASgL,UAAU7F,IAAI,SAAAptB,GAAU2nB,OAAAA,EAAMsF,oBAAoBjtB,KAC5E,SAEF,MACG,IAAA,YACCioB,EAAS5mB,KAAO4mB,EAAS1nB,eAAe,eACrC9H,KAAAA,UAAY,YAEd4I,KAAAA,GAAK4mB,EAAS5mB,GACnB,SAECA,KAAAA,GAAK4mB,EAAS5mB,GAGhB,KAAK0wB,SAAQ,KAAKA,OAAS,KAAK6B,cAChC,KAAKxuB,UAAS,KAAKA,QAAU,KAAKyuB,eAClC,KAAK5wB,UAAS,KAAKA,QAAU,KAAK6wB,YAAY7L,MAudvD,CAAA,IAAA,QAhdU,MAAA,WACA,MAAA,IAAIthB,MAAiC,0BAAA,OAAA,KAAKxP,YAAY8D,SA+chE,CAAA,IAAA,MAtcQ,MAAA,WACE,MAAA,IAAI0L,MAA+B,wBAAA,OAAA,KAAKxP,YAAY8D,SAqc9D,CAAA,IAAA,aA9be,MAAA,WACL,MAAA,IAAI0L,MAAsC,+BAAA,OAAA,KAAKxP,YAAY8D,SA6brE,CAAA,IAAA,cAtbgB,MAAA,WACN,MAAA,IAAI0L,MAAuC,gCAAA,OAAA,KAAKxP,YAAY8D,SAqbtE,CAAA,IAAA,cA7acgtB,MAAAA,SAAAA,GACJ,MAAA,IAAIthB,MAAuC,gCAAA,OAAA,KAAKxP,YAAY8D,SA4atE,CAAA,IAAA,iBAnaiB84B,MAAAA,SAAAA,GAET,GADCxB,KAAAA,gBAAkB,GAClB,KAAKpF,cAaH,IAAA,IAAI12B,EAAI,EAAGA,EAAI,KAAK02B,cAAcz2B,OAAQD,IACxC87B,KAAAA,gBAAgB/5B,KAAK,CACxBoL,KAAM,KAAKupB,cAAc12B,UAdzB,IAAC,KAAK02B,cAAe,CAClBA,KAAAA,cAAgB,GAChB,IAAA,IAAI12B,EAAI,EAAGA,EAAIs9B,EAAKr9B,OAAQD,IAAK,CAC9Bu9B,IAAAA,EAAUrM,EAAMuC,gBAAgB6J,EAAKt9B,GAAI,KAAK0zB,gBAC9CvmB,EAAmB,YAAZowB,EAAwB,SAAWA,EAC3C7G,KAAAA,cAAc30B,KAAKoL,GACnB2uB,KAAAA,gBAAgB/5B,KAAK,CACxBoL,KAAAA,KAaHyuB,KAAAA,cAAgB,IAAIj7B,MAAM28B,EAAKr9B,QAC/B47B,KAAAA,kBAAoB,IAAIlL,WAAW2M,EAAKr9B,QAExC,IAAA,IAAID,EAAI,EAAGA,EAAIs9B,EAAKr9B,OAAQD,IAAK,CAC9Bw9B,IAAAA,EAAMF,EAAKt9B,GACZ47B,KAAAA,cAAc57B,GAAKw9B,EAAI98B,cAAgBgwB,EAAQ8M,EAAI/8B,KAAO,KAC1Do7B,KAAAA,kBAAkB77B,GAAK,KAAKy9B,YAAYD,GAG3C,GAAA,KAAK7B,cAAc17B,SAAWq9B,EAAKr9B,OAC/B,MAAA,IAAIiQ,MAAV,gCAkYN,CAAA,IAAA,iBA3XmB,MAAA,WACV6rB,KAAAA,gBAAkB,GACnB2B,IAAAA,EAA4C,OAAvB,KAAKvB,cAK1B,GAJAuB,IACGvB,KAAAA,cAAgB,IAElBC,KAAAA,kBAAoB,GACrB,KAAKF,UACF,IAAA,IAAI13B,KAAQ,KAAK03B,UAAW,CAC3BwB,GAAAA,EAAoB,CAChBvwB,IAAAA,EAAO+jB,EAAMuC,gBAAgB,KAAKyI,UAAU13B,GAAO,KAAKkvB,gBACzDyI,KAAAA,cAAc33B,GAAQ2I,EACtB4uB,KAAAA,gBAAgBh6B,KAAK,CACxByC,KAAAA,EACA2I,KAAAA,SAGG4uB,KAAAA,gBAAgBh6B,KAAK,CACxByC,KAAAA,EACA2I,KAAM,KAAKgvB,cAAc33B,KAGxB43B,KAAAA,kBAAkB53B,GAAQ,KAAKi5B,YAAY,KAAKvB,UAAU13B,OAqWvE,CAAA,IAAA,yBA3VyB6jB,MAAAA,SAAAA,GAEd,OADF4L,KAAAA,oBAAsB5L,EACpB,OAyVX,CAAA,IAAA,YAlVYsJ,MAAAA,SAAAA,GAcD,OAbHA,EAAO7nB,eAAe,KACpB6nB,EAAO7nB,eAAe,KACpB6nB,EAAO7nB,eAAe,KACnB6nB,KAAAA,OAAS,CAACA,EAAOd,EAAGc,EAAOb,EAAGa,EAAOf,GAErCe,KAAAA,OAAS,CAACA,EAAOd,EAAGc,EAAOb,GAG7Ba,KAAAA,OAAS,CAACA,EAAOd,GAGnBc,KAAAA,OAASA,EAET,OAoUX,CAAA,IAAA,WA7TWtJ,MAAAA,SAAAA,GAEA,OADF2T,KAAAA,MAAQ3T,EACN,OA2TX,CAAA,IAAA,eApTeA,MAAAA,SAAAA,GAGJ,OAFFyS,KAAAA,UAAYzS,EACZrmB,KAAAA,UAAY,WACV,OAiTX,CAAA,IAAA,uBAzSuBxE,MAAAA,SAAAA,GAEZ,OADFy+B,KAAAA,kBAAoBz+B,EAClB,OAuSX,CAAA,IAAA,eAjSe0+B,MAAAA,SAAAA,GAEJ,OADFA,KAAAA,UAAYA,EACV,OA+RX,CAAA,IAAA,mBAvRmBC,MAAAA,SAAAA,GAER,OADFA,KAAAA,cAAgBA,EACd,OAqRX,CAAA,IAAA,eA7QeK,MAAAA,SAAAA,GAMJ,MALqB,mBAAjBA,EAAU,GACdA,KAAAA,UAAYA,EAAU7F,IAAI,SAAAptB,GAAU2nB,OAAAA,EAAMsF,oBAAoBjtB,KAE9DizB,KAAAA,UAAYA,EAEZ,OAuQX,CAAA,IAAA,cA/PcnU,MAAAA,SAAAA,GAEH,OADFwU,KAAAA,SAAWxU,EACT,OA6PX,CAAA,IAAA,eArPeA,MAAAA,SAAAA,GAEJ,OADFrmB,KAAAA,UAAYqmB,EACV,OAmPX,CAAA,IAAA,qBA3OqBA,MAAAA,SAAAA,GAGV,OAFP6I,EAAMiF,eAAe,SAAU,qBAAsB,eAChD0G,KAAAA,SAAWxU,EACT,OAwOX,CAAA,IAAA,eAhOeA,MAAAA,SAAAA,GAEJ,OADFuU,KAAAA,UAAYvU,EACV,OA8NX,CAAA,IAAA,YAvNYiT,MAAAA,SAAAA,GAED,OADFA,KAAAA,OAASA,EACP,OAqNX,CAAA,IAAA,oBA9MoBjT,MAAAA,SAAAA,GAET,OADFqL,KAAAA,eAAiBrL,EACf,OA4MX,CAAA,IAAA,mBApMmBA,MAAAA,SAAAA,GAER,OADFiU,KAAAA,cAAgBjU,EACd,OAkMX,CAAA,IAAA,uBA1LuBA,MAAAA,SAAAA,GAIZ,OAHP6I,EAAMiF,eAAe,SAAU,wBAC1BwH,KAAAA,iBAAiBtV,GACjBuV,KAAAA,oBAAoBvV,GAClB,OAsLX,CAAA,IAAA,sBA9KsBA,MAAAA,SAAAA,GAEX,OADFgU,KAAAA,iBAAmBhU,EACjB,OA4KX,CAAA,IAAA,sBArKsBA,MAAAA,SAAAA,GAEX,OADFmT,KAAAA,iBAAmBnT,EACjB,OAmKX,CAAA,IAAA,kBA3JkBA,MAAAA,SAAAA,GAEP,OADF4U,KAAAA,aAAe5U,EACb,OAyJX,CAAA,IAAA,YAlJc,MAAA,WAEH,OADP6I,EAAMiF,eAAe,SAAU,aACxB,KAAKmF,SAgJhB,CAAA,IAAA,WAzIa,MAAA,WAEF,OADPpK,EAAMiF,eAAe,SAAU,YACxB,KAAKxnB,UAuIhB,CAAA,IAAA,aAhIaA,MAAAA,SAAAA,GAEF,OADFA,KAAAA,QAAUA,EACR,OA8HX,CAAA,IAAA,mBAtHmB+nB,MAAAA,SAAAA,GACX/1B,GAAAA,MAAMyJ,QAAQssB,GACXA,KAAAA,cAAgBA,OAGhB,IAAA,IAAM9rB,KADN8rB,KAAAA,cAAgB,GACLA,EAAe,CACvBmH,IAAAA,EAAgB,KAAKlC,cAAcnZ,QAAQ5X,GAC7CizB,IAAmB,IAAnBA,EAAsB,MAAM,IAAI3tB,MAAkCtF,2BAAAA,OAAAA,IACjE8rB,KAAAA,cAAcmH,GAAiBnH,EAAc9rB,GAG/C,OAAA,OA2GX,CAAA,IAAA,kBAxGkB0yB,MAAAA,SAAAA,GACV,IAAC,KAAK5B,kBACF,MAAA,IAAIxrB,MAA6C,sCAAA,OAAA,KAAKxP,YAAY8D,OAGnE,OADFi3B,KAAAA,mBAAoB,EAClB,KAAKC,kBAAkB4B,KAmGlC,CAAA,IAAA,mBA5FqB,MAAA,WACX,MAAA,IAAIptB,MAA4C,qCAAA,OAAA,KAAKxP,YAAY8D,SA2F3E,CAAA,IAAA,eAlFes5B,MAAAA,SAAAA,GAIP,GAHoB,OAApB,KAAKpB,aACFA,KAAAA,WAAa,KAEfoB,EAAUv0B,OAAQ,MAAM,IAAI2G,MAAM,uCACnC,IAAC4tB,EAAUze,UAAYmU,MAAMsK,EAAUze,UAAW,MAAM,IAAInP,MAAM,yCAClE,IAAC4tB,EAAUt5B,KAAM,MAAM,IAAI0L,MAAM,qCAE9B,OADFwsB,KAAAA,WAAW36B,KAAK+7B,GACd,OA0EX,CAAA,IAAA,UAnEUC,MAAAA,SAAAA,GACA,MAAA,IAAI7tB,MAA8B,uBAAA,OAAA,KAAKxP,YAAY8D,SAkE7D,CAAA,IAAA,cA1Dc9G,MAAAA,SAAAA,GACN,GAAmB,WAAnB,KAAKsE,UAEA,OAAA,EACF,GAAIrB,MAAMyJ,QAAQ1M,EAAM,IACtB,OAAA,KAAK+/B,YAAY//B,EAAM,IACzB,GAAIA,EAAMgD,cAAgBgwB,EACxB,OAAA,KAAK+M,YAAY//B,EAAMA,OAExBA,OAAAA,EAAMgD,aACPy2B,KAAAA,kBACA1E,KAAAA,WACAuL,KAAAA,UACI,OAAA,EACJC,KAAAA,YACAC,KAAAA,WACI,OAAA,EACJ7M,KAAAA,aACAV,KAAAA,WACL,QACS,OAAA,KAsCf,CAAA,IAAA,YA/Bc,MAAA,WACJ,MAAA,IAAIzgB,MAAgC,yBAAA,OAAA,KAAKxP,YAAY8D,SA8B/D,CAAA,IAAA,cA3BgB,MAAA,WACR,IAAC,KAAKmtB,SAAWT,EAAM9mB,QAAQ,KAAKunB,QAAS,MAAM,IAAIzhB,MAAM,8BAC7D,GAAA,KAAKyhB,OAAO1xB,OAAS,EAAG,MAAM,IAAIiQ,MAAM,kDACvC,IAAA,IAAIlQ,EAAI,EAAGA,EAAI,KAAK2xB,OAAO1xB,OAAQD,IAClCwzB,GAAAA,MAAM,KAAK7B,OAAO3xB,KAAO,KAAK2xB,OAAO3xB,GAAK,EACtC,MAAA,IAAIkQ,MAAU,GAAA,OAAA,KAAKxP,YAAY8D,KAAiBxE,YAAAA,OAAAA,EAAiC,8BAAA,OAAA,KAAK2xB,OAAO3xB,GAAnG,iDAsBR,CAAA,IAAA,SAjBW,MAAA,WAWA,MAAA,CACLwxB,SAXe,CACfG,OAAQ,KAAKA,OACbwM,UAAW,KAAKA,UAChBtB,SAAU,KAAKA,SACflB,cAAe,KAAKA,cACpByC,eAAgB,KAAK1H,cACrBwF,UAAW,KAAKA,UAChBmC,YAAa,KAAK7xB,QAAU,KAAKA,QAAQmqB,IAAI,SAAA1mB,GAAUA,OAAAA,EAAOzL,OAAQ,KACtEoyB,WAAY,KAAKA,iBAQvB,EAAA,GAAAv5B,OAAOC,QAAU,CACfi+B,OAAAA;;ACzBF,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAppBM+C,IAAAA,EAopBN,WApcc9M,SAAAA,EAAAA,GAkBN,GAlBgB,EAAA,KAAA,GACpBA,EAAWA,GAAY,GAClBI,KAAAA,OAASJ,EAASI,OAClB2M,KAAAA,SAAW/M,EAAS+M,SACpBC,KAAAA,cAAgBhN,EAASgN,eAAiB,GAC1CC,KAAAA,eAAiBjN,EAASiN,gBAAkB,GAC5ChC,KAAAA,gBAAkBjL,EAASiL,iBAAmB,GAC9CiC,KAAAA,YAAc,GACdC,KAAAA,oBAAsB,GACtBC,KAAAA,YAAc,GACdC,KAAAA,cAAgB,GAChBC,KAAAA,yBAA2B,GAC3BC,KAAAA,cAAgB,GAEjB,KAAKR,WACFG,KAAAA,YAAL,OAA6B,KAAKH,UAGhC,KAAKC,cACF,IAAA,IAAIx+B,EAAI,EAAGA,EAAI,KAAKw+B,cAAcv+B,OAAQD,IACxC0+B,KAAAA,YAAY,KAAKF,cAAcx+B,GAAGwE,MAAQ,KAAKg6B,cAAcx+B,GAIlE,GAAA,KAAKy+B,eACF,IAAA,IAAIz+B,EAAI,EAAGA,EAAI,KAAKy+B,eAAex+B,OAAQD,IACzC0+B,KAAAA,YAAY,KAAKD,eAAez+B,GAAGwE,MAAQ,KAAKi6B,eAAez+B,GAIpE,GAAA,KAAKy8B,gBACF,IAAA,IAAIz8B,EAAI,EAAGA,EAAI,KAAKy8B,gBAAgBx8B,OAAQD,IAAK,CAC9Cg/B,IAAAA,EAAiB,KAAKvC,gBAAgBz8B,GACvC2+B,KAAAA,oBAAoB58B,KAAKi9B,EAAex6B,OAmarD,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,aA3oBoBotB,MAAAA,SAAAA,EAAQqN,EAAcC,GA6BjC,IA3BHpD,IAAAA,EAsBElK,EAtBFkK,gBACAC,EAqBEnK,EArBFmK,gBACAJ,EAoBE/J,EApBF+J,cACAC,EAmBEhK,EAnBFgK,cACAC,EAkBEjK,EAlBFiK,kBACAK,EAiBEtK,EAjBFsK,UACAE,EAgBExK,EAhBFwK,kBACAJ,EAeEpK,EAfFoK,MACAC,EAcErK,EAdFqK,kBACAQ,EAaE7K,EAbF6K,gBACA9K,EAYEC,EAZFD,OACAsC,EAWErC,EAXFqC,oBACAjyB,EAUE4vB,EAVF5vB,UACAwK,EASEolB,EATFplB,QACAjD,EAQEqoB,EARFroB,OACAmzB,EAOE9K,EAPF8K,WACAF,EAME5K,EANF4K,UACAM,EAKElL,EALFkL,uBACAC,EAIEnL,EAJFmL,yBACAV,EAGEzK,EAHFyK,iBACAC,EAEE1K,EAFF0K,cACAW,EACErL,EADFqL,aAGIvG,EAAgB,IAAI/1B,MAAMm7B,EAAgB77B,QAC1Ck8B,EAAgB,GAEbn8B,EAAI,EAAGA,EAAI87B,EAAgB77B,OAAQD,IAC1C02B,EAAc12B,GAAK87B,EAAgB97B,GAAGmN,KAGnC,IAAA,IAAInN,EAAI,EAAGA,EAAI+7B,EAAgB97B,OAAQD,IAAK,CACzCm/B,IAAAA,EAAiBpD,EAAgB/7B,GACvCm8B,EAAcgD,EAAe36B,MAAQ26B,EAAehyB,KAGhDiyB,IAAAA,EAAoB,SAACC,EAAc/zB,GAChCg0B,OAAAA,EAAgBF,kBAAkBC,EAAc/zB,IAGnDi0B,EAAqB,SAACF,EAAc/zB,EAAO6B,GAC/CmyB,EAAgBC,mBAAmBF,EAAc/zB,EAAO6B,IAGpDqyB,EAAmB,SAACH,EAAc1J,EAAK8J,GACpCH,OAAAA,EAAgBE,iBAAiBH,EAAc1J,EAAK8J,IAGvDC,EAA8B,SAACL,GAC5BC,OAAAA,EAAgBI,4BAA4BL,IAG/CM,EAA6B,SAACN,EAAcxB,GACzCyB,OAAAA,EAAgBK,2BAA2BN,EAAcxB,IAG5D+B,EAAiC,SAACP,EAAcQ,GAC7CP,OAAAA,EAAgBM,+BAA+BP,EAAcQ,IAGhEC,EAA2B,SAACT,EAAcr/B,EAAG+/B,EAAcN,GAC/DH,EAAgBC,mBAAmBF,EAAcr/B,EAAG+/B,EAAcN,IAG9DO,EAA8B,SAACX,EAAcQ,EAAcI,EAAoBpC,GACnFyB,EAAgBY,qBAAqBb,EAAcQ,EAAcI,EAAoBpC,IAGjFsC,EAAwB,SAACC,EAAoBf,EAAcQ,GACxDP,OAAAA,EAAgBa,sBAAsBC,EAAoBf,EAAcQ,IAG3EQ,EAAiB,SAAChB,EAAcY,EAAoB3C,GACxDgC,EAAgBgB,kBAAkBjB,EAAcY,EAAoB3C,IA6BhEiD,EAAcphC,OAAOC,OAAO,CAChCohC,cAAc,EACdC,iBA5BuB,SAAC9K,EAAKiB,GAExB,IADC+E,IAAAA,EAAgB,GACb37B,EAAI,EAAGA,EAAI21B,EAAI/c,OAAO3Y,OAAQD,IACrC27B,EAAc55B,KAAK4zB,EAAI/c,OAAO5Y,GAAGwE,MAE7Bk8B,IAAAA,EAAiB,IAAIzB,EAAa,KAAM9/B,OAAOC,OAAO,GAAImhC,EAAa,CAC3E3J,WAAY,KACZjB,IAAAA,EACAnxB,KAAMmxB,EAAIhe,GAAGnT,KACbm3B,cAAAA,EACA6D,iBAAAA,EACAE,4BAAAA,EACAC,2BAAAA,EACAC,+BAAAA,EACAR,kBAAAA,EACAG,mBAAAA,EACAO,yBAAAA,EACAE,4BAAAA,EACAG,sBAAAA,EACAE,eAAAA,EACApD,aAAAA,KAEFyD,EAAeC,iBAAiBhL,GAChC2J,EAAgBsB,gBAAgBF,IAMhClB,iBAAAA,EACAE,4BAAAA,EACAC,2BAAAA,EACAC,+BAAAA,EACAR,kBAAAA,EACAG,mBAAAA,EACAO,yBAAAA,EACAE,4BAAAA,EACAG,sBAAAA,EACAE,eAAAA,EACApM,oBAAAA,EACAjyB,UAAAA,EACAk6B,UAAAA,EACAC,cAAAA,EACAC,kBAAAA,EACAJ,MAAAA,EACAC,kBAAAA,EACAtK,OAAAA,EACAnlB,QAAAA,EACA6vB,iBAAAA,EACAC,cAAAA,GACC4C,GAAoB,IAEjB2B,EAAkB1hC,OAAOC,OAAO,GAAImhC,EAAa,CACrDC,cAAc,EACdh8B,KAAM,SACNm3B,cAAAA,EACAjF,cAAAA,EACAkF,cAAAA,EACAC,kBAAAA,EACAiB,uBAAAA,EACAC,yBAAAA,IAGE,GAAkB,WAAlB,EAAOxzB,IAAuBA,EAAOi1B,cAChC,OAAA,IAAIF,GAAkBwC,SAASv3B,EAAOi1B,cAAeS,GAGxDV,IAAAA,EAAW,IAAIU,EAAa11B,EAAQs3B,GAEtCrC,EAAgB,KAChBhC,IACFgC,EAAgBhC,EAAU7F,IAAI,SAAC9D,GAAO,OAAA,IAAIoM,EAAapM,EAAGtpB,OAAQ,CAChEqtB,WAAY/D,EAAG+D,WACfF,cAAe7D,EAAG6D,cAClB/E,OAAAA,EACAnlB,QAAAA,EACA0vB,UAAAA,EACAC,cAAAA,EACAC,kBAAAA,EACAnI,oBAAAA,EACAjyB,UAAAA,EACAw9B,iBAAAA,EACAE,4BAAAA,EACAC,2BAAAA,EACAC,+BAAAA,EACAR,kBAAAA,EACAG,mBAAAA,EACAO,yBAAAA,EACAE,4BAAAA,EACAG,sBAAAA,EACAE,eAAAA,OAIA5B,IAAAA,EAAiB,KACjB/B,IACF+B,EAAiB/B,EAAW/F,IAAI,SAACmH,GACvBt5B,IAAAA,EAAiBs5B,EAAjBt5B,KAAM+E,EAAWu0B,EAAXv0B,OACP,OAAA,IAAI01B,EAAa11B,EAAQpK,OAAOC,OAAO,GAAImhC,EAAa,CAC7D/7B,KAAAA,EACAu8B,aAAa,EACbP,cAAc,QAKdlB,IAAAA,EAAkB,IAAIhB,EAAgB,CAC1C1M,OAAAA,EACA2M,SAAAA,EACAC,cAAAA,EACA/B,gBAAAA,EACAgC,eAAAA,IAGKa,OAAAA,MA2cX,EAAA,EAAA,CAAA,CAAA,IAAA,kBAxZkB0B,MAAAA,SAAAA,GACV,IAACA,EAAax8B,KAAM,MAAM,IAAI0L,MAAM,+BACnCwuB,KAAAA,YAAYsC,EAAax8B,MAAQw8B,EAClCA,EAAaR,eACVjC,KAAAA,SAAWyC,KAoZtB,CAAA,IAAA,qBArYqB3B,MAAAA,SAAAA,EAAc4B,GAI3B,GAHJ5B,EAAeA,GAAgB,SAC/B4B,EAAUA,GAAW,GAEjB,KAAKtC,oBAAoBnc,QAAQ6c,IAAiB,EAI7C4B,OAHgC,IAAnCA,EAAQze,QAAQ6c,IAClB4B,EAAQl/B,KAAKs9B,GAER4B,EAGHD,IAAAA,EAAe,KAAKtC,YAAYW,GAClC2B,GAAAA,EAAc,CAEVE,IAAAA,EAAgBD,EAAQze,QAAQ6c,GAClC6B,IAAmB,IAAnBA,EAAsB,CACxBD,EAAQl/B,KAAKs9B,GACb2B,EAAaj3B,WACR,IAAA,IAAI/J,EAAI,EAAGA,EAAIghC,EAAaG,gBAAgBlhC,SAAUD,EACpDohC,KAAAA,mBAAmBJ,EAAaG,gBAAgBnhC,GAAIihC,OAEtD,CAMCI,IAAAA,EAAwBJ,EAAQv/B,OAAOw/B,EAAe,GAAG,GAC/DD,EAAQl/B,KAAKs/B,IAIVJ,OAAAA,IAqWX,CAAA,IAAA,qBA7VqB5B,MAAAA,SAAAA,GACV,OAAA,KAAKiC,cAAcjC,GAAcxJ,KAAK,QA4VjD,CAAA,IAAA,gBApVgBwJ,MAAAA,SAAAA,GAIRA,OAHA,KAAKd,UACFA,KAAAA,SAASx0B,WAEZs1B,EACK,KAAKkC,+BAA+B,KAAKH,mBAAmB/B,EAAc,IAAIrK,WAEhF,KAAKuM,+BAA+BpiC,OAAO0B,KAAK,KAAK69B,gBA6UhE,CAAA,IAAA,6BArU6B8C,MAAAA,SAAAA,GAEpB,IADC1M,IAAAA,EAAM,GACH90B,EAAI,EAAGA,EAAIwhC,EAAavhC,SAAUD,EAAG,CAC/B,KAAK0+B,YAAY8C,EAAaxhC,KAEzC80B,EAAI/yB,KAAK,KAAK28B,YAAY8C,EAAaxhC,IAAI+J,YAGxC+qB,OAAAA,EAAIe,KAAK,QA6TpB,CAAA,IAAA,iCArTiC2L,MAAAA,SAAAA,GAExB,IADC1M,IAAAA,EAAM,GACH90B,EAAI,EAAGA,EAAIwhC,EAAavhC,SAAUD,EAAG,CACtCq/B,IAAAA,EAAemC,EAAaxhC,GAC5BkhC,EAAgB,KAAKvC,oBAAoBnc,QAAQ6c,GACnD6B,GAAAA,GAAiB,EACnBpM,EAAI/yB,KAAK,KAAK06B,gBAAgByE,GAAe33B,YAD3C23B,CAIE9wB,IAAAA,EAAO,KAAKsuB,YAAYW,GAC1BjvB,GACF0kB,EAAI/yB,KAAKqO,EAAKrG,aAGX+qB,OAAAA,IAuSX,CAAA,IAAA,SApSW,MAAA,WAAA,IAAA,EAAA,KACA,OAAA,KAAKsM,mBAAmB,KAAK7C,SAAS/5B,MAAMwwB,UAAU2B,IAAI,SAAAnyB,GACzDi9B,IAAAA,EAAc,EAAKhF,gBAAgBja,QAAQhe,GAC7Ci9B,GAAAA,GAAe,EACV,MAAA,CACLj9B,KAAAA,EACA+E,OAAQ,EAAKkzB,gBAAgBgF,GAAal4B,QAEvC,GAAI,EAAKm1B,YAAYl6B,GACnB,OAAA,EAAKk6B,YAAYl6B,GAAM3E,SAExB,MAAA,IAAIqQ,MAAmB1L,YAAAA,OAAAA,EAA7B,mBAyRR,CAAA,IAAA,WApRWk9B,MAAAA,SAAAA,EAAmBzC,GACrBP,KAAAA,YAAc,GACd,IAAA,IAAI1+B,EAAI,EAAGA,EAAI0hC,EAAkBzhC,OAAQD,IAAK,CAC3C2hC,IAAAA,EAAmBD,EAAkB1hC,GACtC0+B,KAAAA,YAAYiD,EAAiBnQ,SAAShtB,MAAQ,IAAIy6B,EAAa0C,EAAiBhM,IAAKgM,EAAiBnQ,UAEtG,OAAA,OA8QX,CAAA,IAAA,YAtQY6N,MAAAA,SAAAA,GACJA,OAAAA,EACK,KAAKuC,2BAA2B,KAAKR,mBAAmB/B,GAAcrK,WAExE,KAAK4M,2BAA2BziC,OAAO0B,KAAK,KAAK69B,gBAkQ5D,CAAA,IAAA,mBA/PmBW,MAAAA,SAAAA,EAAc1J,EAAK8J,GAC9B9J,GAAa,mBAAbA,EAAIxoB,KACA,MAAA,IAAI+C,MAAwDylB,iDAAAA,OAAAA,EAAIxoB,OAEpE,GAAA,KAAK00B,kBAAkBxC,GAClB,OAAA,KAAKyC,gCAAgCzC,GACvC,GAAI,KAAK0C,YAAY1C,GAAe,CACnCjvB,IAAAA,EAAO,KAAK4xB,aAAa3C,GAC3BjvB,GAAAA,EAAKwmB,WACAxmB,OAAAA,EAAKwmB,WAEP,IAAA,IAAI52B,EAAI,EAAGA,EAAI,KAAK4+B,YAAY3+B,OAAQD,IAEvC,GAAA,KAAK4+B,YAAY5+B,GAAG21B,MAAQA,EAAK,CAG/BvlB,GAA8B,IAA9BA,EAAKsmB,cAAcz2B,QAAgB01B,EAAIlW,UAAUxf,OAAS,EAAG,CAE1D,IADCq9B,IAAAA,EAAO3H,EAAIlW,UACRvf,EAAI,EAAGA,EAAIo9B,EAAKr9B,OAAQC,IAC1B0+B,KAAAA,YAAY78B,KAAK,CACpByC,KAAMi7B,EAAej7B,KACrBmxB,IAAK2H,EAAKt9B,GACVy/B,eAAAA,IAEFrvB,EAAKsmB,cAAcx2B,GAAKu/B,EAAewC,QAAQ3E,EAAKp9B,IAC/C0+B,KAAAA,YAAYvpB,MAEZjF,OAAAA,EAAKwmB,WAAaxmB,EAAK6xB,QAAQ7xB,EAAK8xB,YAGvC,MAAA,IAAIhyB,MAAM,6BAIf0uB,KAAAA,YAAY78B,KAAK,CACpByC,KAAMi7B,EAAej7B,KACrBmxB,IAAAA,EACA8J,eAAAA,IAEItyB,IAAAA,EAAOiD,EAAK6xB,QAAQ7xB,EAAK8xB,YAExB9xB,OADFwuB,KAAAA,YAAYvpB,MACVjF,EAAKwmB,WAAazpB,EAKtB,OAAA,OAiNX,CAAA,IAAA,eAzJekyB,MAAAA,SAAAA,GAIJ,OAHF,KAAK0C,YAAY1C,IAChBnvB,IAAAA,MAAkBmvB,YAAAA,OAAAA,EAAtB,eAEK,KAAKX,YAAYW,KAqJ5B,CAAA,IAAA,cAlJcA,MAAAA,SAAAA,GACHzL,OAAAA,QAAQ,KAAK8K,YAAYW,MAiJpC,CAAA,IAAA,qBA9IqBA,MAAAA,SAAAA,GACZ,IAAA,IAAIr/B,EAAI,EAAGA,EAAI,KAAKy8B,gBAAgBx8B,OAAQD,IAC3C,GAAA,KAAKy8B,gBAAgBz8B,GAAGwE,OAAS66B,EAAc,OAAO,KAAK5C,gBAAgBz8B,GAE1E,OAAA,OA0IX,CAAA,IAAA,oBAvIoBq/B,MAAAA,SAAAA,GACTzL,OAAAA,QAAQ,KAAKuO,mBAAmB9C,MAsI3C,CAAA,IAAA,kCAnIkCA,MAAAA,SAAAA,GAC1BL,IAAAA,EAAiB,KAAKmD,mBAAmB9C,GACzCL,GAAAA,EACKA,OAAAA,EAAepI,WAElB,MAAA,IAAI1mB,MAA0BmvB,mBAAAA,OAAAA,EAApC,iBA8HJ,CAAA,IAAA,8BA3H8BA,MAAAA,SAAAA,GACtB,OAAA,KAAKwC,kBAAkBxC,GAClB,KAAK8C,mBAAmB9C,GAAc3I,cACpC,KAAKqL,YAAY1C,GACnB,KAAK2C,aAAa3C,GAAc3I,cAElC,OAqHX,CAAA,IAAA,6BAlH6B2I,MAAAA,SAAAA,EAAcxB,GAChC,OAAA,KAAKmE,aAAa3C,GAAc1D,cAAckC,KAiHzD,CAAA,IAAA,iCA9GiCwB,MAAAA,SAAAA,EAAcQ,GACvC,IAAC,KAAKkC,YAAY1C,GACd,MAAA,IAAInvB,MAAM,sBAEd,GAAA,KAAKquB,SAAS/5B,OAAS66B,EAAc,CACjCr/B,IAAAA,EAAI,KAAKu+B,SAAS5C,cAAcnZ,QAAQqd,GAC1C7/B,IAAO,IAAPA,EACK,OAAA,KAAKu+B,SAAS1C,kBAAkB77B,GAEjC,MAAA,IAAIkQ,MAAM,gCAGZE,IAAAA,EAAO,KAAK4xB,aAAa3C,GACzB+C,EAAkBhyB,EAAKgyB,gBAAgBhyB,EAAKiyB,cAC9C,IAACD,EACG,MAAA,IAAIlyB,MAAM,8BAEX,OAAA,KAAK0vB,+BAA+BwC,EAAgB/C,aAAc+C,EAAgBvC,gBA6F/F,CAAA,IAAA,oBAzFoBR,MAAAA,SAAAA,EAAcr/B,GAC1B,QAAC,KAAK+hC,YAAY1C,KACP,KAAK2C,aAAa3C,GAClB3I,cAAc12B,KAsFjC,CAAA,IAAA,qBAnFqBq/B,MAAAA,SAAAA,EAAcr/B,EAAG+/B,EAAcN,GAC5C,GAAC,KAAKsC,YAAY1C,GAAlB,CACEiD,IAAAA,EAAS,KAAKN,aAAa3C,GAC5BiD,EAAO5L,cAAc12B,KACxBsiC,EAAO5L,cAAc12B,GAAK+/B,MA+EhC,CAAA,IAAA,uBA3EuBV,MAAAA,SAAAA,EAAcQ,EAAcI,EAAoBpC,GAC/D,GAAC,KAAKkE,YAAY9B,GAAlB,CACE7vB,IAAAA,EAAO,KAAK4xB,aAAa/B,GAC1B7vB,EAAKgyB,kBACRhyB,EAAKgyB,gBAAkB,IAEnBG,IAAAA,EAAqBnyB,EAAKurB,cAAckC,GACzCztB,EAAKgyB,gBAAgBG,KACxBnyB,EAAKgyB,gBAAgBG,GAAsB,IAE7CnyB,EAAKiyB,eACLjyB,EAAKgyB,gBAAgBhyB,EAAKiyB,cAAgB,CACxChD,aAAAA,EACAQ,aAAAA,EACA0C,mBAAAA,EACAtC,mBAAAA,MA4DN,CAAA,IAAA,wBAxDwBG,MAAAA,SAAAA,EAAoBf,EAAcQ,GAClDO,GAAAA,IAAuBf,EAAc,OAAOQ,EAC5C,IAAC,KAAKkC,YAAY1C,GAAe,OAAO,KACtCjvB,IAAAA,EAAO,KAAK4xB,aAAa3C,GACzB+C,EAAkBhyB,EAAKgyB,gBAAgBhyB,EAAKoyB,iBAC9C,OAACJ,EACDA,EAAgBG,qBAAuB1C,EAAqB,MAChEzvB,EAAKoyB,kBACDpC,IAAuBf,EAClB,KAAKc,sBAAsBC,EAAoBgC,EAAgB/C,aAAc+C,EAAgBvC,cAE/FuC,EAAgBvC,cANM,OAmDjC,CAAA,IAAA,oBA1CoBR,MAAAA,SAAAA,EAAcY,EAAoB3C,GAC7C,KAAKwB,yBAAyBO,KAC5BP,KAAAA,yBAAyBO,GAAgB,IAAIoD,IAC7C1D,KAAAA,cAAcM,GAAgB,IAEhCP,KAAAA,yBAAyBO,GAAcqD,IAAIzC,GAC3ClB,KAAAA,cAAcM,GAAct9B,KAAKu7B,KAoC1C,CAAA,IAAA,sBAjCwB,MAAA,WACb,OAAA,KAAKiB,SAAS3H,YAAc,KAAK2H,SAAS0D,QAAQ,KAAK1D,SAAS5I,OAgC3E,CAAA,IAAA,yBA7ByBrqB,MAAAA,SAAAA,GAGhB,IAFCq3B,IAAAA,EAAgB,KAAKlE,eAAenzB,GACtCs3B,GAAS,EACJC,EAAoB,EAAGA,EAAoB,KAAKtE,SAASQ,cAAc9+B,OAAQ4iC,IAAqB,CACtF,KAAKtE,SAASQ,cAAc8D,GAChClN,IAAInW,OAAOhb,OAASm+B,EAAcn+B,OACjDo+B,GAAS,GAGT,IAACA,EACG,MAAA,IAAI1yB,MAAoByyB,aAAAA,OAAAA,EAAcn+B,KAA5C,4BAEKm+B,OAAAA,EAAc/L,YAAc+L,EAAcV,QAAQU,EAAcT,cAiB3E,CAAA,IAAA,iBAdmB,MAAA,WAKV,IAJCvgC,IAAAA,EACH,EAAA,GAAA,KAAK48B,SAAS/5B,KAAO,KAAK+5B,SAAS0D,QAAQ,KAAK1D,SAAS5I,MAEtDve,EAAO,KAAKgqB,mBAAmB,KAAK7C,SAAS/5B,MAC1CxE,EAAI,EAAGA,EAAIoX,EAAKnX,OAAQD,IAAK,CAC9Bq/B,IAAAA,EAAejoB,EAAKpX,GACpBghC,EAAe,KAAKtC,YAAYW,GACtC19B,EAAO09B,GAAgB2B,EAAaiB,QAAQjB,EAAarL,KAEpDh0B,OAAAA,MAIX,EAAA,GAAAtE,OAAOC,QAAU,CACfghC,gBAAAA;;AC7eF,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA7KMwE,IAAAA,EA6KN,WA5KcnN,SAAAA,EAAAA,GAAK,EAAA,KAAA,GACVoN,KAAAA,gBAAkB,GAClBC,KAAAA,SAAW,GACXjE,KAAAA,cAAgB,GAChBnpB,KAAAA,aAAe,GACfqtB,KAAAA,YAAc,GACdzG,KAAAA,UAAY,GACZ0G,KAAAA,iBAAmB,GACnBC,KAAAA,YAAa,EACbC,KAAAA,KAAKzN,GAmKd,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aA5Ja0N,MAAAA,SAAAA,GACHC,IAAAA,EAAankC,OAAOC,OAAO,GAAI,KAAKmkC,gBACrCP,KAAAA,SAASjhC,KAAKuhC,GACdP,KAAAA,gBAAgBhhC,KAAKuhC,GAC1BD,IACKN,KAAAA,gBAAgB1tB,QAuJzB,CAAA,IAAA,OAhJOsgB,MAAAA,SAAAA,GAAK,IAAA,EAAA,KACJh1B,GAAAA,MAAMyJ,QAAQurB,GACX,IAAA,IAAI31B,EAAI,EAAGA,EAAI21B,EAAI11B,OAAQD,IACzBojC,KAAAA,KAAKzN,EAAI31B,SAIV21B,OAAAA,EAAIxoB,MACL,IAAA,UACEi2B,KAAAA,KAAKzN,EAAIjjB,MACd,MACG,IAAA,iBACE4wB,KAAAA,WAAW,WACd,EAAKF,KAAKzN,EAAIjjB,QAEhB,MACG,IAAA,uBACE0wB,KAAAA,KAAKzN,EAAI/d,MACTwrB,KAAAA,KAAKzN,EAAI9d,OACd,MACG,IAAA,mBACEurB,KAAAA,KAAKzN,EAAI/d,MACV+d,EAAI9d,OAAO,KAAKurB,KAAKzN,EAAI9d,OAC7B,MACG,IAAA,mBAGA,IAAA,kBACEurB,KAAAA,KAAKzN,EAAIrf,UACd,MACG,IAAA,sBACE8sB,KAAAA,KAAKzN,EAAI/f,cACd,MACG,IAAA,qBACK2tB,IAAAA,EAAmB,KAAnBA,eACF9vB,EAAc,CAClBkiB,IAAKA,EACLhnB,QAAS40B,EACT/+B,KAAMmxB,EAAIhe,GAAGnT,KACbg/B,OAAQ,cACRC,aAAc,KAAKN,WACnBO,YAAa,KAAKP,aAAeI,EAAez5B,eAAe6rB,EAAIhe,GAAGnT,OAExE++B,EAAe5N,EAAIhe,GAAGnT,MAAQiP,EACzBmC,KAAAA,aAAa7T,KAAK0R,GAClB2vB,KAAAA,KAAKzN,EAAIhe,IACTyrB,KAAAA,KAAKzN,EAAI9f,MACd,MACG,IAAA,qBACA,IAAA,sBACiC,IAAhC,KAAKktB,gBAAgB9iC,OAClBmjC,KAAAA,KAAKzN,EAAIjjB,MAET8pB,KAAAA,UAAUz6B,KAAK4zB,GAEtB,MACG,IAAA,cACEyN,KAAAA,KAAKzN,EAAI32B,MACTokC,KAAAA,KAAKzN,EAAIvf,YACVuf,EAAItf,WAAW,KAAK+sB,KAAKzN,EAAItf,WACjC,MACG,IAAA,eACEitB,KAAAA,WAAW,WACV3N,EAAI9f,OACN,EAAKstB,YAAa,EAClB,EAAKC,KAAKzN,EAAI9f,MACd,EAAKstB,YAAa,GAEhBxN,EAAI32B,MACN,EAAKokC,KAAKzN,EAAI32B,MAEhB,EAAKokC,KAAKzN,EAAIje,QACd,EAAK4rB,WAAW,WACd,EAAKF,KAAKzN,EAAIjjB,UAGlB,MACG,IAAA,mBACA,IAAA,iBACE4wB,KAAAA,WAAW,WACd,EAAKF,KAAKzN,EAAIjjB,MACd,EAAK0wB,KAAKzN,EAAI32B,QAEhB,MACG,IAAA,aACEikC,KAAAA,YAAYlhC,KAAK,CACpB4M,QAAS,KAAK40B,eACd5N,IAAAA,IAEF,MACG,IAAA,kBACEuN,KAAAA,iBAAiBnhC,KAAK4zB,GACtByN,KAAAA,KAAKzN,EAAIrf,UACd,MACG,IAAA,mBACE8sB,KAAAA,KAAKzN,EAAIze,QACTksB,KAAAA,KAAKzN,EAAItW,UACd,MACG,IAAA,sBACE+jB,KAAAA,KAAKzN,EAAIpjB,YACd,MACG,IAAA,iBACH,MACG,IAAA,iBACEwsB,KAAAA,cAAch9B,KAAK,CACtB4M,QAAS,KAAK40B,eACd5N,IAAAA,IAEGyN,KAAAA,KAAKzN,EAAIlW,WACd,MACG,IAAA,kBACE2jB,KAAAA,KAAKzN,EAAI3a,UACd,MACG,IAAA,wBACEooB,KAAAA,KAAKzN,EAAI32B,MACTokC,KAAAA,KAAKzN,EAAItf,WACT+sB,KAAAA,KAAKzN,EAAIvf,YACd,MACG,IAAA,kBACEgtB,KAAAA,KAAKzN,EAAIpf,cACT6sB,KAAAA,KAAKzN,EAAInf,OACd,MACG,IAAA,aACCmf,EAAI32B,MAAM,KAAKokC,KAAKzN,EAAI32B,MACvBokC,KAAAA,KAAKzN,EAAIvf,YACd,MACG,IAAA,oBACEgtB,KAAAA,KAAKzN,EAAI/d,MACTwrB,KAAAA,KAAKzN,EAAI9d,OACd,MACG,IAAA,UAEA,IAAA,oBAEA,IAAA,iBAEA,IAAA,iBACH,MACF,QACQ,MAAA,IAAI3H,MAAyBylB,mBAAAA,OAAAA,EAAIxoB,KAAvC,SAKR,CAAA,IAAA,iBAhKuB,IAAA,WACZ,OAAA,KAAK41B,gBAAgB9iC,OAAS,EAAI,KAAK8iC,gBAAgB,KAAKA,gBAAgB9iC,OAAS,GAAK,SA+JrG,EAAA,GAAA5C,OAAOC,QAAU,CACfwlC,eAAAA;;ACg0CF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA9+CA,IAAMhR,EAAQ/zB,QAAQ,SACJA,EAAAA,QAAQ,YAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,qBAA3B+kC,EAAAA,EAAAA,eAOF7D,EAq+CN,WA/9Cc11B,SAAAA,EAAAA,EAAQioB,GACd,GADwB,EAAA,KAAA,IACvBjoB,IAAWioB,EAASmE,IACjB,MAAA,IAAIzlB,MAAM,+BAiDdshB,GA/CJA,EAAWA,GAAY,GAClBjoB,KAAAA,OAASA,EACTosB,KAAAA,IAAM,KACNnxB,KAAAA,KAAyB,iBAAX+E,EAAsBioB,EAASgP,aAChD,SACChP,EAAShtB,MAAQ0sB,EAAM6B,0BAA0BxpB,GAAW,KAC1D43B,KAAAA,gBAAkB,GAClBjF,KAAAA,UAAY,GACZC,KAAAA,cAAgB,GAChBC,KAAAA,kBAAoB,GACpBoE,KAAAA,cAAe,EACfO,KAAAA,aAAc,EACd/E,KAAAA,MAAQ,KACRpmB,KAAAA,aAAe,KACf4mB,KAAAA,UAAY,KACZyG,KAAAA,YAAc,KACdD,KAAAA,SAAW,KACXjE,KAAAA,cAAgB,KAChB4E,KAAAA,OAAS,GACTvE,KAAAA,kBAAoB,KACpBG,KAAAA,mBAAqB,KACrBC,KAAAA,iBAAmB,KACnBE,KAAAA,4BAA8B,KAC9BE,KAAAA,+BAAiC,KACjCE,KAAAA,yBAA2B,KAC3BE,KAAAA,4BAA8B,KAC9BG,KAAAA,sBAAwB,KACxBM,KAAAA,iBAAmB,KACnBJ,KAAAA,eAAiB,KACjBpM,KAAAA,oBAAsB,KACtBjyB,KAAAA,UAAY,KACZi6B,KAAAA,kBAAoB,KACpBN,KAAAA,cAAwC,iBAAhB,KAAKpyB,OAAsB2nB,EAAMkC,2BAA2B,KAAK7pB,QAAU,KACnGmtB,KAAAA,cAAgB,GAChBkF,KAAAA,cAAgB,GAChBC,KAAAA,kBAAoB,KACpBjF,KAAAA,WAAa,KACbjF,KAAAA,OAAS,GACTnlB,KAAAA,QAAU,KACVswB,KAAAA,uBAAyB,KACzBC,KAAAA,yBAA2B,KAC3BT,KAAAA,cAAgB,KAChBD,KAAAA,iBAAmB,KACnBuH,KAAAA,sBAAuB,EACvB5G,KAAAA,2BAA6B,KAC7BC,KAAAA,cAAe,EAEhBzL,EACG,IAAA,IAAM5mB,KAAK4mB,EACTA,EAAS1nB,eAAec,IACxB,KAAKd,eAAec,KACpBA,KAAAA,GAAK4mB,EAAS5mB,IAIlBy3B,KAAAA,cAAgB,EAChBG,KAAAA,gBAAkB,EAClBJ,KAAAA,gBAAkB,GAClByB,KAAAA,aAAe,GAEflH,KAAAA,WACAmH,KAAAA,QAAU,KACVC,KAAAA,uBAAyB,GA65ClC,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,WA15Ca,MAAA,WACL,GAAuB,iBAAhB,KAAKx6B,SAAwB,KAAKosB,IACrC,MAAA,IAAIzlB,MAAM,4BAGd,IAAC,KAAKylB,MAAQzE,EAAM0B,iBAAiB,KAAKrpB,QACtC,MAAA,IAAI2G,MAAM,qCAGd,IAAC,KAAK1L,KACF,MAAA,IAAI0L,MAAM,8BAGd,GAAA,KAAKwmB,cAAcz2B,OAAS,GAAK,KAAKy2B,cAAcz2B,SAAW,KAAK07B,cAAc17B,OAC9E,MAAA,IAAIiQ,MAAiC,0BAAA,OAAA,KAAKwmB,cAAcz2B,OAAoB,aAAA,OAAA,KAAK07B,cAAc17B,SAGnG,GAAA,KAAK0xB,OAAO1xB,OAAS,EACjB,MAAA,IAAIiQ,MAAM,mCAw4CtB,CAAA,IAAA,uBAh4CuB1L,MAAAA,SAAAA,GACf,QAAC,KAAK03B,WACH,KAAKA,UAAUpyB,eAAetF,KA83CzC,CAAA,IAAA,UA33CUq7B,MAAAA,SAAAA,GACC,MAAiE,UAAjE,KAAKnJ,cAAc,KAAKiF,cAAcnZ,QAAQqd,MA03CzD,CAAA,IAAA,YAv3CYzX,MAAAA,SAAAA,GACHub,KAAAA,OAAO5hC,KAAKqmB,KAs3CrB,CAAA,IAAA,WAn3CWA,MAAAA,SAAAA,GACH,GAAA,KAAKA,QAAUA,EACX,MAAA,IAAIlY,MAA0BkY,mBAAAA,OAAAA,EAAmB,aAAA,OAAA,KAAKA,QAEzDub,KAAAA,OAAOtuB,QA+2ChB,CAAA,IAAA,UA52CU+S,MAAAA,SAAAA,GACC,OAAA,KAAKA,QAAUA,IA22C1B,CAAA,IAAA,4BAz1C4BuN,MAAAA,SAAAA,GACpBA,GAAa,eAAbA,EAAIxoB,KACCwoB,OAAAA,EAAInxB,KACN,GAAiB,mBAAbmxB,EAAIxoB,KACN,MAAA,OAGLwoB,GAAa,qBAAbA,EAAIxoB,MACFwoB,EAAIze,QAAUye,EAAItW,SAEhBsW,OAAAA,EAAIze,OAAOpN,eAAe,SAAkC,MAAvB6rB,EAAIze,OAAO1S,KAAK,GAChD,KAAKw/B,0BAA0BrO,EAAItW,UAI1C,KAAK2kB,0BAA0BrO,EAAIze,QACnC,IACA,KAAK8sB,0BAA0BrO,EAAItW,UAMrCsW,GAAAA,EAAI7rB,eAAe,eAAgB,CAC/Bm6B,IAAAA,EAAkBtO,EAAI7X,YAAY,GACpCmmB,GAAyB,YAAzBA,EAAgB92B,MAAgD,IAA1B82B,EAAgBvmC,OAA0C,IAA3Bi4B,EAAI7X,YAAY7d,OAChF,OAAA,KAAK+jC,0BAA0BrO,EAAI7X,YAAY,IAKpD,MAAA,KAAKomB,eAAe,oCAAqCvO,KA0zCnE,CAAA,IAAA,WA/yCWwO,MAAAA,SAAAA,GACH,GAAA,KAAKxO,IACA,OAAA,KAAKA,IAEV,GAAuB,WAAvB,EAAO,KAAKpsB,QAEP,OADFo3B,KAAAA,iBAAiB,KAAKp3B,QACpB,KAAKosB,IAAM,KAAKpsB,OAIrB46B,GAAa,QADjBA,EAAWA,GAAYrS,GAEf,MAAA,IAAI5hB,MAAM,4BAGZylB,IAAAA,EAAMx2B,OAAOilC,OAAOD,EAASh0B,MAAuB,gBAAA,OAAA,KAAK3L,KAAY,OAAA,OAAA,KAAK+E,OAAY,KAAA,CAC1F0C,WAAW,KAGPo4B,EAAc1O,EAAIjjB,KAAK,GAAGkD,aAAa,GAAGC,KAG5C,GAFC8qB,KAAAA,iBAAiB0D,IAEjB1O,EACG,MAAA,IAAIzlB,MAAM,2BAGX,OAAA,KAAKylB,IAAM0O,IAsxCtB,CAAA,IAAA,mBAnxCmB1O,MAAAA,SAAAA,GAC2D,IAAA,EAAA,IAAImN,EAAenN,GAArFqN,EAAAA,EAAAA,SAAUptB,EAAAA,EAAAA,aAAc4mB,EAAAA,EAAAA,UAAWyG,EAAAA,EAAAA,YAAalE,EAAAA,EAAAA,cACnDiE,KAAAA,SAAWA,EACXC,KAAAA,YAAcA,EACdlE,KAAAA,cAAgBA,EAChBnpB,KAAAA,aAAe,GACf4mB,KAAAA,UAAYA,EACZ,IAAA,IAAIx8B,EAAI,EAAGA,EAAI4V,EAAa3V,OAAQD,IAAK,CACtCyT,IAAAA,EAAcmC,EAAa5V,GACzB21B,EAAyDliB,EAAzDkiB,IAAKhnB,EAAoD8E,EAApD9E,QAASnK,EAA2CiP,EAA3CjP,KAAMg/B,EAAqC/vB,EAArC+vB,OAAQC,EAA6BhwB,EAA7BgwB,aAAcC,EAAejwB,EAAfiwB,WAC1C7tB,EAAS8f,EAAT9f,KACFyuB,EAAe,KAAKC,gBAAgB1uB,GACtC2uB,EAAY,KAEZf,GAAAA,EACFe,EAAY,eAER3uB,GAAAA,EAAM,CACF4uB,IAAAA,EAAW,KAAKxC,QAAQpsB,GACtB4uB,OAAAA,GACD,IAAA,UACA,IAAA,QACA,IAAA,SAEDD,EADgB,qBAAd3uB,EAAK1I,KACKs3B,EAEA,SAEd,MACG,IAAA,iBACHD,EAAY,SACZ,MACF,QACEA,EAAYC,GAIf7uB,KAAAA,aAAa7T,KAAK,CACrByiC,UAAAA,EACAF,aAAAA,EACAI,OAAQ,KAAKC,mBAAmBL,GAChC3O,IAAAA,EACAnxB,KAAAA,EACAmK,QAAAA,EACA60B,OAAAA,EACAE,WAAAA,IAIC,IAAA,IAAI1jC,EAAI,EAAGA,EAAIw8B,EAAUv8B,OAAQD,IAC/BygC,KAAAA,iBAAiBjE,EAAUx8B,MAiuCtC,CAAA,IAAA,iBA7tCiB21B,MAAAA,SAAAA,GACR,IAAA,IAAI31B,EAAI,EAAGA,EAAI,KAAKijC,YAAYhjC,OAAQD,IAAK,CAC1C4kC,IAAAA,EAAa,KAAK3B,YAAYjjC,GAChC21B,GAAAA,IAAQiP,EAAWjP,KAAOiP,EAAWj2B,QAAQ7E,eAAe6rB,EAAInxB,MAC7D,IAAA,IAAItE,EAAI,EAAGA,EAAI,KAAK0V,aAAa3V,OAAQC,IAAK,CAC3CuT,IAAAA,EAAc,KAAKmC,aAAa1V,GAClCuT,GAAAA,EAAYjP,OAASmxB,EAAInxB,MAAQiP,EAAY9E,QAAQgnB,EAAInxB,QAAUogC,EAAWj2B,QAAQgnB,EAAInxB,MACrFiP,OAAAA,GAKR,OAAA,OAitCX,CAAA,IAAA,kBAzsCkBkiB,MAAAA,SAAAA,GACVA,GAAa,eAAbA,EAAIxoB,KACA,MAAA,IAAI+C,MAAgBylB,UAAAA,OAAAA,EAAIxoB,KAA9B,sBAEEA,IAAAA,EAAO,KACL0wB,EAAgB,KAAKlC,cAAcnZ,QAAQmT,EAAInxB,MACjDq5B,IAAmB,IAAnBA,EAAsB,CAClBpqB,IAAAA,EAAc,KAAKoxB,eAAelP,GACpCliB,GAAAA,EACKA,OAAAA,EAAY+wB,cAEhB,CACCzE,IAAAA,EAAe,KAAKrJ,cAAcmH,GACpCkC,IACF5yB,EAAO4yB,GAGP,IAAC5yB,GAAQ,KAAKy2B,qBACV,MAAA,IAAI1zB,MAAwB1L,kBAAAA,OAAAA,KAAlC,eAEK2I,OAAAA,IAqrCX,CAAA,IAAA,gBA7qCgBA,MAAAA,SAAAA,GACR,IAAC23B,EAAch7B,eAAeqD,GAC1B,MAAA,IAAI+C,MAAgC/C,yBAAAA,OAAAA,IAErC23B,OAAAA,EAAc33B,KAyqCzB,CAAA,IAAA,kBAtqCkB43B,MAAAA,SAAAA,GACV,GAAA,KAAK5I,cAAc4I,GAAe,CAC9B53B,IAAAA,EAAO,KAAKgvB,cAAc4I,GAC5B53B,MAAS,UAATA,EACK,SAEAA,EAGL,MAAA,IAAI+C,MAA6B60B,sBAAAA,OAAAA,EAAvC,qBA6pCJ,CAAA,IAAA,wBAnpCwBvgC,MAAAA,SAAAA,GAChB,OAAC,KAAK27B,uBAEa,IADD,KAAKxE,cAAcnZ,QAAQhe,GAChB,KAC1B,KAAK27B,sBAAsB,SAAU,KAAK37B,KAAMA,GAHf,OAkpC5C,CAAA,IAAA,WA5oCa,MAAA,WACL,OAAA,KAAKs/B,QAAgB,KAAKA,QACvB,KAAKA,QAAU,KAAKkB,WAAW,KAAK9C,WAAY,IAAIrM,KAAK,IAAI5C,SA0oCxE,CAAA,IAAA,SAvoCW,MAAA,WACDzB,IAAAA,EAAW,CACfjoB,OAAQ,KAAKA,OACb/E,KAAM,KAAKA,KACX03B,UAAW,KAAKA,UAChBC,cAAe,KAAKA,cACpBqE,aAAc,KAAKA,aACnBO,YAAa,KAAKA,YAClB/E,MAAO,KAAKA,MACZrK,OAAQ,KAAKA,OACbsK,kBAAmB,KAAKA,kBACxBN,cAAe,KAAKA,cACpBjF,cAAe,KAAKA,cACpBkF,cAAe,KAAKA,cACpBhF,WAAY,KAAKA,WACjBkG,uBAAwB,KAAKA,uBAC7BC,yBAA0B,KAAKA,0BAG1B,MAAA,CACLpH,IAAK,KAAKA,IACVnE,SAAAA,KAknCN,CAAA,IAAA,UAzmCUmE,MAAAA,SAAAA,GACFh1B,GAAAA,MAAMyJ,QAAQurB,GACT,OAAA,KAAKsM,QAAQtM,EAAIA,EAAI11B,OAAS,IAE/B01B,OAAAA,EAAIxoB,MACL,IAAA,iBACI,OAAA,KAAK80B,QAAQtM,EAAIjjB,MACrB,IAAA,kBACcijB,MAAAA,SAAAA,OAAAA,EAAI3a,SAAS/a,OAA9B,KACG,IAAA,UACGglC,IAAAA,EAAgBtP,GAAAA,OAAAA,EAAI9qB,MAAS8qB,KAAAA,OAAAA,EAAI7qB,KACnC,OAAA,KAAK+4B,aAAaoB,GACb,KAAKpB,aAAaoB,GAEvBpR,OAAOC,UAAU6B,EAAIj4B,OAChB,kBACgB,IAAdi4B,EAAIj4B,QAAgC,IAAdi4B,EAAIj4B,MAC5B,UAEA,SAEJ,IAAA,uBACI,OAAA,KAAKukC,QAAQtM,EAAI/d,MACrB,IAAA,iBACC,GAAA,KAAKstB,kBAAkBvP,GAClB,MAAA,SAEL,IAACA,EAAInW,SAAWmW,EAAInW,OAAOhb,KAAM,CAC/BmxB,GAAoB,uBAApBA,EAAInW,OAAOrS,MAAiCwoB,EAAInW,OAAO1B,YAAY6X,EAAInW,OAAO1B,YAAY7d,OAAS,GAAGof,SAAS7a,KAAM,CACjH66B,IAAAA,EAAe1J,EAAInW,OAAO1B,YAAY6X,EAAInW,OAAO1B,YAAY7d,OAAS,GAAGof,SAAS7a,KAEjF,OADF2gC,KAAAA,2BAA2B9F,EAAc1J,EAAIlW,WAC3C,KAAK+f,iBAAiBH,EAAc1J,EAAK,MAE5C,MAAA,KAAKuO,eAAe,0BAA2BvO,GAEnDA,GAAAA,EAAInW,QAAUmW,EAAInW,OAAOhb,KAAM,CAC3B66B,IAAAA,EAAe1J,EAAInW,OAAOhb,KAEzB,OADF2gC,KAAAA,2BAA2B9F,EAAc1J,EAAIlW,WAC3C,KAAK+f,iBAAiBH,EAAc1J,EAAK,MAE5C,MAAA,KAAKuO,eAA2CvO,2BAAAA,OAAAA,EAAIxoB,KAAUwoB,KAAAA,GACjE,IAAA,mBAEKA,OAAAA,EAAIzZ,UACL,IAAA,IACA,IAAA,IACC,GAAA,KAAK8gB,2BACA,MAAA,SAEP,MAEG,IAAA,IACA,IAAA,IACI,MAAA,UACJ,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,KACA,IAAA,KACA,IAAA,MACI,MAAA,UAEP7vB,IAAAA,EAAO,KAAK80B,QAAQtM,EAAI/d,MAC1B,GAAA,KAAKwtB,QAAQ,2BAA4B,OAAOj4B,EAChDA,GAAS,mBAATA,EAA2B,CACvBk4B,IAAAA,EAAY,KAAKpD,QAAQtM,EAAI9d,OAC/BwtB,MAAc,mBAAdA,EACE1P,EAAI/d,KAAKla,MAAQ,GAAM,EAClB,UAEA,QAGJ2nC,EAEFP,OAAAA,EAAc33B,IAASA,EAC3B,IAAA,mBACI,OAAA,KAAK80B,QAAQtM,EAAIrf,UACrB,IAAA,kBACCqf,MAAiB,MAAjBA,EAAIzZ,SACC,UAEF,KAAK+lB,QAAQtM,EAAIrf,UACrB,IAAA,sBAGE,IAFCV,IACF0vB,EADE1vB,EAAe+f,EAAI/f,aAEhB5V,EAAI,EAAGA,EAAI4V,EAAa3V,OAAQD,IAAK,CACtCyT,IAAAA,EAAcmC,EAAa5V,GACjCslC,EAAW,KAAKrD,QAAQxuB,GAEtB,IAAC6xB,EACG,MAAA,KAAKpB,eAAsDvO,sCAAAA,GAE5D2P,OAAAA,EAEJ,IAAA,qBACG7xB,IAAAA,EAAc,KAAKoxB,eAAelP,EAAIhe,IACxC,IAAClE,EACG,MAAA,KAAKywB,eAA4CvO,4BAAAA,GAGrD,IAACliB,EAAY+wB,UACT,MAAA,KAAKN,eAAsDvO,sCAAAA,GAG5DliB,OAAAA,EAAY+wB,UAChB,IAAA,aACC7O,GAAa,aAAbA,EAAInxB,KACC,MAAA,SAEL,GAAA,KAAK+gC,cAAc5P,GAEjB6P,GAAc,UADA,KAAKC,qBAAqB9P,GACjB,CACnBxoB,IAAAA,EAAO,KAAKsmB,gBAAgBkC,GAC9B,IAACxoB,EACG,MAAA,KAAK+2B,eAAsDvO,sCAAAA,GAE5DxoB,OAAAA,EAGLq2B,IAAAA,EAAS,KAAKkC,qBAAqB/P,GACrC6N,OAAAA,GAAUA,EAAO3tB,KACZ,KAAKosB,QAAQuB,EAAO3tB,MAEtB,KACJ,IAAA,kBACI,OAAA,KAAKosB,QAAQtM,EAAIrf,UACrB,IAAA,mBACC,GAAA,KAAK4uB,kBAAkBvP,GAAM,CACvBA,OAAAA,EAAItW,SAAS7a,MACd,IAAA,OAEA,IAAA,QAEA,IAAA,QACI,MAAA,UAEJ,MAAA,SAEL,GAAA,KAAK+gC,cAAc5P,GAAM,CAEnBgQ,OADkB,KAAKF,qBAAqB9P,IAE7C,IAAA,UACI,OAAA,KAAKiQ,cAAc,KAAKnS,gBAAgBkC,EAAIze,SAChD,IAAA,YACI,OAAA,KAAK0uB,cAAc,KAAKnS,gBAAgBkC,EAAIze,OAAOA,SACvD,IAAA,cACI,OAAA,KAAK0uB,cAAc,KAAKnS,gBAAgBkC,EAAIze,OAAOA,OAAOA,SAC9D,IAAA,gBACI,OAAA,KAAK0uB,cAAc,KAAKnS,gBAAgBkC,EAAIze,OAAOA,OAAOA,OAAOA,SACrE,IAAA,qBACA,IAAA,oBACI,MAAA,UACJ,IAAA,oBACI,OAAA,KAAKolB,cAAgB,UAAY,iBACrC,IAAA,uBACI,OAAA,KAAKuJ,gBAAgBlQ,EAAItW,SAAS7a,MACtC,IAAA,yBACI,OAAA,KAAKohC,cAAc,KAAKC,gBAAgBlQ,EAAIze,OAAOmI,SAAS7a,OAChE,IAAA,2BACI,OAAA,KAAKohC,cAAc,KAAKC,gBAAgBlQ,EAAIze,OAAOA,OAAOmI,SAAS7a,OACvE,IAAA,6BACI,OAAA,KAAKohC,cAAc,KAAKC,gBAAgBlQ,EAAIze,OAAOA,OAAOA,OAAOmI,SAAS7a,OAC9E,IAAA,+BACI,OAAA,KAAKohC,cAAc,KAAKC,gBAAgBlQ,EAAIze,OAAOA,OAAOA,OAAOA,OAAOmI,SAAS7a,OACrF,IAAA,SAEA,IAAA,WAEA,IAAA,aACI,OAAA,KAAKohC,cAAc,KAAK3D,QAAQtM,EAAIze,SACxC,IAAA,cACC,GAAA,KAAK4uB,kBAAkBnQ,GAClB,MAAA,SAEDA,OAAAA,EAAItW,SAAS7a,MACd,IAAA,IAEA,IAAA,IAEA,IAAA,IAEA,IAAA,IACI,OAAA,KAAKohC,cAAc,KAAKnS,gBAAgBkC,EAAIze,SAElD,IAAA,OACI,MAAA,SAEP,MAAA,KAAKgtB,eAAe,qCAAsCvO,GAE5D,MAAA,KAAKuO,eAAe,qCAAsCvO,GAC7D,IAAA,wBACI,OAAA,KAAKsM,QAAQtM,EAAIvf,YACrB,IAAA,sBACA,IAAA,qBACG2vB,IAAAA,EAAa,KAAKC,eAAerQ,EAAIjjB,MACvCqzB,OAAAA,EACK,KAAK9D,QAAQ8D,GAEf,KACJ,IAAA,cACI,OAAA,KAAK9D,QAAQtM,EAAIvf,YAC1B,QACQ,MAAA,KAAK8tB,eAA2CvO,2BAAAA,OAAAA,EAAIxoB,KAAUwoB,KAAAA,MA85B9E,CAAA,IAAA,6BA15B6B0J,MAAAA,SAAAA,EAAc/B,GAElC,IAAA,IAAIt9B,EAAI,EAAGA,EAAIs9B,EAAKr9B,OAAQD,IAC3B,GAAC,KAAKo/B,kBAAkBC,EAAcr/B,GAAtC,CACEmN,IAAAA,EAAO,KAAK80B,QAAQ3E,EAAKt9B,IAC3B,IAACmN,EACG,MAAA,KAAK+2B,eAA2ClkC,4BAAAA,OAAAA,GAAKs9B,EAAKt9B,IAE7Du/B,KAAAA,mBAAmBF,EAAcr/B,EAAGmN,MAk5B/C,CAAA,IAAA,oBA94BoBwoB,MAAAA,SAAAA,GAWTA,MAAa,qBAAbA,EAAIxoB,MACTwoB,EAAIze,QAA8B,eAApBye,EAAIze,OAAO/J,MACL,SAApBwoB,EAAIze,OAAO1S,MACXmxB,EAAItW,UACkB,eAAtBsW,EAAItW,SAASlS,MAdQ,CACrB,IACA,KACA,QACA,UACA,MACA,OACA,QACA,UAOeqV,QAAQmT,EAAItW,SAAS7a,OAAS,IA83BnD,CAAA,IAAA,oBA33BoBmxB,MAAAA,SAAAA,GAuBTA,MAAa,mBAAbA,EAAIxoB,MACTwoB,EAAInW,QACgB,qBAApBmW,EAAInW,OAAOrS,MACXwoB,EAAInW,OAAOtI,QACgB,eAA3Bye,EAAInW,OAAOtI,OAAO/J,MACS,SAA3BwoB,EAAInW,OAAOtI,OAAO1S,MAClBmxB,EAAInW,OAAOH,UACkB,eAA7BsW,EAAInW,OAAOH,SAASlS,MA7BA,CACpB,MACA,OACA,OACA,OACA,QACA,OACA,MACA,MACA,QACA,MACA,OACA,MACA,MACA,MACA,SACA,QACA,OACA,MACA,OACA,OAUcqV,QAAQmT,EAAInW,OAAOH,SAAS7a,OAAS,IA41BzD,CAAA,IAAA,gBAz1BgBmxB,MAAAA,SAAAA,GACLA,MAAa,eAAbA,EAAIxoB,MAAsC,qBAAbwoB,EAAIxoB,OAw1B5C,CAAA,IAAA,SAr1BSwoB,MAAAA,SAAAA,GACE,OAAA,KAAKgP,mBAAmB,KAAKJ,gBAAgB5O,MAo1BxD,CAAA,IAAA,qBAj1BqB2O,MAAAA,SAAAA,GACVA,OAAAA,IAAgBA,EAAa2B,OAAQ3B,EAAa2B,MAAM,SAAAC,GAAcA,OAAAA,EAAWxB,WAg1B5F,CAAA,IAAA,kBAt0BkB/O,MAAAA,SAAAA,EAAK2O,EAAc6B,GAI7B,GAHC7B,IACHA,EAAe,KAEZ3O,EAAK,OAAO,KACbh1B,GAAAA,MAAMyJ,QAAQurB,GAAM,CACjB,IAAA,IAAI31B,EAAI,EAAGA,EAAI21B,EAAI11B,OAAQD,IACzBukC,KAAAA,gBAAgB5O,EAAI31B,GAAIskC,EAAc6B,GAEtC7B,OAAAA,EAED3O,OAAAA,EAAIxoB,MACL,IAAA,uBAGIm3B,OAFFC,KAAAA,gBAAgB5O,EAAI/d,KAAM0sB,EAAc6B,GACxC5B,KAAAA,gBAAgB5O,EAAI9d,MAAOysB,EAAc6B,GACvC7B,EACJ,IAAA,UACHA,EAAaviC,KAAK,CAChByhC,OAAQ,UACR9lC,MAAOi4B,EAAIj4B,MACXgnC,QAAsB,IAAdyB,IAA6BxQ,EAAIj4B,OAASixB,EAAAA,GAAYgH,EAAIj4B,MAAQixB,EAAAA,IAAa6E,MAAMmC,EAAIj4B,UAEnG,MACG,IAAA,qBACI,OAAA,KAAK6mC,gBAAgB5O,EAAI9f,KAAMyuB,EAAc6B,GACjD,IAAA,aACG1yB,IAAAA,EAAc,KAAKoxB,eAAelP,GACpCliB,GAAAA,EACF6wB,EAAaviC,KAAK,CAChByC,KAAMmxB,EAAInxB,KACVg/B,OAAQ,cACRkB,QAAQyB,GAAoB,KAAKxB,mBAAmBlxB,EAAY6wB,qBAE7D,GAAI,KAAK3I,cAAcnZ,QAAQmT,EAAInxB,OAAS,EACjD8/B,EAAaviC,KAAK,CAChByC,KAAMmxB,EAAInxB,KACVg/B,OAAQ,WACRkB,QAAQ,SAEL,GAAI,KAAKd,qBACR,MAAA,IAAI1zB,MAAwCylB,kCAAAA,OAAAA,EAAInxB,KAAtD,MAEF,MACG,IAAA,sBACI,OAAA,KAAK+/B,gBAAgB5O,EAAIjjB,KAAKA,KAAKijB,EAAIjjB,KAAKA,KAAKzS,OAAS,GAAIqkC,EAAc6B,GAChF,IAAA,kBACI,OAAA,KAAK5B,gBAAgB5O,EAAIrf,SAAUguB,GACvC,IAAA,mBAIIA,OAHP6B,EAA8B,MAAjBxQ,EAAIzZ,UAAqC,MAAjByZ,EAAIzZ,SACpCqoB,KAAAA,gBAAgB5O,EAAI/d,KAAM0sB,EAAc6B,GACxC5B,KAAAA,gBAAgB5O,EAAI9d,MAAOysB,EAAc6B,GACvC7B,EACJ,IAAA,kBACA,IAAA,mBACI,OAAA,KAAKC,gBAAgB5O,EAAIrf,SAAUguB,EAAc6B,GACrD,IAAA,sBACI,OAAA,KAAK5B,gBAAgB5O,EAAI/f,aAAc0uB,EAAc6B,GACzD,IAAA,kBAKI7B,OAJPA,EAAaviC,KAAK,CAChByhC,OAAQ,cACRkB,QAAQ,IAEHJ,EACJ,IAAA,iBAKIA,OAJPA,EAAaviC,KAAK,CAChByhC,OAAQ,WACRkB,QAAQ,IAEHJ,EACJ,IAAA,mBACG8B,IAAAA,EAAU,KAAKC,2BAA2B1Q,GACxCyQ,OAAAA,EAAQZ,WACT,IAAA,UACEjB,KAAAA,gBAAgB5O,EAAIze,OAAQotB,EAAc6B,GAC/C,MACG,IAAA,YACE5B,KAAAA,gBAAgB5O,EAAIze,OAAOA,OAAQotB,EAAc6B,GACtD,MACG,IAAA,cACE5B,KAAAA,gBAAgB5O,EAAIze,OAAOA,OAAOA,OAAQotB,EAAc6B,GAC7D,MACG,IAAA,oBACC,KAAK7J,eACPgI,EAAaviC,KAAK,CAChByC,KAAM4hC,EAAQ5hC,KACdg/B,OAAQ,SACRkB,QAAQ,IAKZ0B,GAAAA,EAaK9B,OAZH8B,EAAQ/mB,UACLklB,KAAAA,gBAAgB6B,EAAQ/mB,SAAUilB,EAAc6B,GAEnDC,EAAQE,WACL/B,KAAAA,gBAAgB6B,EAAQE,UAAWhC,EAAc6B,GAEpDC,EAAQG,WACLhC,KAAAA,gBAAgB6B,EAAQG,UAAWjC,EAAc6B,GAEpDC,EAAQI,WACLjC,KAAAA,gBAAgB6B,EAAQI,UAAWlC,EAAc6B,GAEjD7B,EAET,QACQ,MAAA,KAAKJ,eAAkCvO,kBAAAA,OAAAA,EAAIxoB,KAA4BwoB,uBAAAA,GAE5E2O,OAAAA,IAytBX,CAAA,IAAA,uBAttBuB3O,MAAAA,SAAAA,GACf,IAAC,KAAK4P,cAAc5P,GAChB,MAAA,IAAIzlB,MAAuBylB,gBAAAA,OAAAA,EAAIxoB,KAArC,kCAEEwoB,GAAa,eAAbA,EAAIxoB,KACC,MAAA,QAGF,IADDq4B,IAAAA,EAAY,GAEX7P,GACDA,EAAIpc,SACNisB,EAAUzjC,KAAK,MACO,mBAAb4zB,EAAIxoB,KACbq4B,EAAUiB,QAAQ,QACT9Q,EAAItW,UAAYsW,EAAItW,SAAS7a,KAEd,MAAtBmxB,EAAItW,SAAS7a,MACS,MAAtBmxB,EAAItW,SAAS7a,MACS,MAAtBmxB,EAAItW,SAAS7a,KAEbghC,EAAUiB,QAAQ,UAEI,cAAtB9Q,EAAItW,SAAS7a,MACS,WAAtBmxB,EAAItW,SAAS7a,MACS,WAAtBmxB,EAAItW,SAAS7a,KAEbghC,EAAUiB,QAAQ,IAAM9Q,EAAItW,SAAS7a,MAErCghC,EAAUiB,QAAQ,UAEX9Q,EAAInxB,KACbghC,EAAUiB,QAAQ,SACT9Q,EAAInW,QAAUmW,EAAInW,OAAOhb,KAClCghC,EAAUiB,QAAQ,QACT9Q,EAAI3a,SACbwqB,EAAUiB,QAAQ,MAElBjB,EAAUiB,QAAQ,WAEpB9Q,EAAMA,EAAIze,OAGNwvB,IAAAA,EAAkBlB,EAAU3P,KAAK,IAqBnC8Q,MApBuB,CACzB,QACA,UACA,YACA,cACA,gBACA,cACA,qBACA,oBACA,oBACA,uBACA,yBACA,2BACA,6BACA,+BACA,SACA,WACA,aACA,QAEqBnkB,QAAQkkB,IAAoB,EAC1CA,EAEF,OAopBX,CAAA,IAAA,QAjpBU,MAAA,WACC,OAAA,KAAK38B,WAAW9J,OAAS,IAgpBpC,CAAA,IAAA,aAvoBa01B,MAAAA,SAAAA,EAAKiR,GACVjR,GAAQ,OAARA,EACI,MAAA,KAAKuO,eAAe,WAAYvO,GAElCh1B,GAAAA,MAAMyJ,QAAQurB,GAAM,CACjB,IAAA,IAAI31B,EAAI,EAAGA,EAAI21B,EAAI11B,OAAQD,IACzBglC,KAAAA,WAAWrP,EAAI31B,GAAI4mC,GAEnBA,OAAAA,EAGDjR,OAAAA,EAAIxoB,MACL,IAAA,sBACI,OAAA,KAAK05B,uBAAuBlR,EAAKiR,GACrC,IAAA,qBACI,OAAA,KAAKE,sBAAsBnR,EAAKiR,GACpC,IAAA,kBACI,OAAA,KAAKG,mBAAmBpR,EAAKiR,GACjC,IAAA,UACI,OAAA,KAAKI,WAAWrR,EAAKiR,GACzB,IAAA,mBACI,OAAA,KAAKK,oBAAoBtR,EAAKiR,GAClC,IAAA,aACI,OAAA,KAAKM,wBAAwBvR,EAAKiR,GACtC,IAAA,uBACI,OAAA,KAAKO,wBAAwBxR,EAAKiR,GACtC,IAAA,sBACI,OAAA,KAAKQ,uBAAuBzR,EAAKiR,GACrC,IAAA,iBACI,OAAA,KAAKS,kBAAkB1R,EAAKiR,GAChC,IAAA,iBACI,OAAA,KAAKU,kBAAkB3R,EAAKiR,GAChC,IAAA,cACI,OAAA,KAAKW,eAAe5R,EAAKiR,GAC7B,IAAA,kBACI,OAAA,KAAKY,mBAAmB7R,EAAKiR,GACjC,IAAA,iBACI,OAAA,KAAKa,kBAAkB9R,EAAKiR,GAChC,IAAA,oBACI,OAAA,KAAKc,qBAAqB/R,EAAKiR,GACnC,IAAA,eACI,OAAA,KAAKe,gBAAgBhS,EAAKiR,GAC9B,IAAA,iBACI,OAAA,KAAKgB,kBAAkBjS,EAAKiR,GAChC,IAAA,mBACI,OAAA,KAAKiB,oBAAoBlS,EAAKiR,GAClC,IAAA,sBACI,OAAA,KAAKkB,uBAAuBnS,EAAKiR,GACrC,IAAA,qBACI,OAAA,KAAKmB,sBAAsBpS,EAAKiR,GACpC,IAAA,iBACI,OAAA,KAAKoB,kBAAkBrS,EAAKiR,GAChC,IAAA,qBACI,OAAA,KAAKqB,sBAAsBtS,EAAKiR,GACpC,IAAA,kBACI,OAAA,KAAKsB,mBAAmBvS,EAAKiR,GACjC,IAAA,mBACI,OAAA,KAAKuB,oBAAoBxS,EAAKiR,GAClC,IAAA,oBACI,OAAA,KAAKwB,qBAAqBzS,EAAKiR,GACnC,IAAA,mBACI,OAAA,KAAKyB,oBAAoB1S,EAAKiR,GAClC,IAAA,iBACI,OAAA,KAAK0B,kBAAkB3S,EAAKiR,GAChC,IAAA,kBACI,OAAA,KAAK2B,mBAAmB5S,EAAKiR,GACjC,IAAA,oBACI,OAAA,KAAK4B,qBAAqB7S,EAAKiR,GACnC,IAAA,wBACI,OAAA,KAAK6B,yBAAyB9S,EAAKiR,GAGxC,MAAA,KAAK1C,eAAe,sBAAwBvO,EAAIxoB,KAAMwoB,KA+jBlE,CAAA,IAAA,iBAvjBiBv4B,MAAAA,SAAAA,EAAOu4B,GAChB,GAAuB,iBAAhB,KAAKpsB,OACP,OAAA,IAAI2G,MAAM9S,GAGbsrC,IAAAA,EAAcxX,EAAMwE,aAAa,KAAKnsB,OAAQosB,GAE9CgT,EADgB,KAAKp/B,OAAOumB,OAAO6F,EAAI9qB,OACZwD,MAAM,MACjCu6B,EAAaD,EAAW1oC,OAAS,EAAI0oC,EAAWA,EAAW1oC,OAAS,GAAK,EACxE,OAAA,IAAIiQ,MAAS9S,GAAAA,OAAAA,EAAkBurC,aAAAA,OAAAA,EAAW1oC,OAAsB2oC,eAAAA,OAAAA,EAAW3oC,OAAeyoC,QAAAA,OAAAA,MA8iBrG,CAAA,IAAA,uBA3iBuBG,MAAAA,SAAAA,EAASjC,GACrBA,OAAAA,IA0iBX,CAAA,IAAA,2BAviB2BjR,MAAAA,SAAAA,EAAKiR,GACxBjR,GAAa,0BAAbA,EAAIxoB,KACA,MAAA,KAAK+2B,eAAe,+BAAgCvO,GASrDiR,OAPPA,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWrP,EAAI32B,KAAM4nC,GAC1BA,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWrP,EAAIvf,WAAYwwB,GAChCA,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWrP,EAAItf,UAAWuwB,GAC/BA,EAAO7kC,KAAK,KACL6kC,IA4hBX,CAAA,IAAA,cAnhBcjR,MAAAA,SAAAA,EAAKiR,GACT,MAAA,IAAI12B,MAAuC,gCAAA,OAAA,KAAKxP,YAAY8D,SAkhBtE,CAAA,IAAA,yBAzgByBmxB,MAAAA,SAAAA,EAAKiR,GACtB,OAAA,KAAKkC,gBAAgBnT,GAChBiR,EAEF,KAAKmC,YAAYpT,EAAKiR,KAqgBjC,CAAA,IAAA,wBAngBwBjR,MAAAA,SAAAA,EAAKiR,GACrB,OAAA,KAAKkC,gBAAgBnT,GAChBiR,EAEF,KAAKmC,YAAYpT,EAAKiR,KA+fjC,CAAA,IAAA,kBA7fkBjR,MAAAA,SAAAA,GACT,IAAA,IAAI31B,EAAI,EAAGA,EAAI,KAAKw8B,UAAUv8B,OAAQD,IACrC,GAAA,KAAKw8B,UAAUx8B,KAAO21B,EACjB,OAAA,EAGJ,OAAA,IAufX,CAAA,IAAA,qBArfqBA,MAAAA,SAAAA,EAAKiR,GACfA,OAAAA,IAofX,CAAA,IAAA,aAlfajR,MAAAA,SAAAA,EAAKiR,GAEPA,OADF/C,KAAAA,aAAgBlO,GAAAA,OAAAA,EAAI9qB,MAAS8qB,KAAAA,OAAAA,EAAI7qB,MAAS,SACxC87B,IAgfX,CAAA,IAAA,sBA9esBjR,MAAAA,SAAAA,EAAKiR,GAChBA,OAAAA,IA6eX,CAAA,IAAA,0BA3e0BjR,MAAAA,SAAAA,EAAKiR,GACpBA,OAAAA,IA0eX,CAAA,IAAA,0BAxe0BjR,MAAAA,SAAAA,EAAKiR,GACpBA,OAAAA,IAueX,CAAA,IAAA,yBA/dyBoC,MAAAA,SAAAA,EAAQpC,GAGtBA,OAFF5B,KAAAA,WAAWgE,EAAOz2B,WAAYq0B,GACnCA,EAAO7kC,KAAK,KACL6kC,IA4dX,CAAA,IAAA,oBApdoBqC,MAAAA,SAAAA,EAAOrC,GAChBA,OAAAA,IAmdX,CAAA,IAAA,oBAjdoBjR,MAAAA,SAAAA,EAAKiR,GACdA,OAAAA,IAgdX,CAAA,IAAA,iBA9ciBjR,MAAAA,SAAAA,EAAKiR,GACXA,OAAAA,IA6cX,CAAA,IAAA,qBA3cqBjR,MAAAA,SAAAA,EAAKiR,GACfA,OAAAA,IA0cX,CAAA,IAAA,oBAlcoBsC,MAAAA,SAAAA,EAAQtC,GAEjBA,OADPA,EAAO7kC,KAAK,UACL6kC,IAgcX,CAAA,IAAA,uBAxbuBuC,MAAAA,SAAAA,EAAQvC,GAEpBA,OADPA,EAAO7kC,KAAK,eACL6kC,IAsbX,CAAA,IAAA,kBApbkBjR,MAAAA,SAAAA,EAAKiR,GACZA,OAAAA,IAmbX,CAAA,IAAA,oBAjboBjR,MAAAA,SAAAA,EAAKiR,GACdA,OAAAA,IAgbX,CAAA,IAAA,sBA9asBjR,MAAAA,SAAAA,EAAKiR,GAChBA,OAAAA,IA6aX,CAAA,IAAA,yBArayBwC,MAAAA,SAAAA,EAAYxC,GAC3BhxB,IAAAA,EAAewzB,EAAWxzB,aAC5B,IAACA,IAAiBA,EAAa,KAAOA,EAAa,GAAGC,KAClD,MAAA,KAAKquB,eAAe,wBAAyBkF,GAE/CznC,IACA0nC,EAAmBzzB,EAAa,GAChCC,EAAOwzB,EAAiBxzB,KAC1B1I,EAAO,KAAKi4B,QAAQ,oBAAsB,UAAY,KAAKnD,QAAQpsB,GAC1D,mBAAT1I,IAEFA,EAAO,UAEHm8B,IAAAA,EAAaC,QAAQp8B,GACvB,IAACm8B,EACG,MAAA,KAAKpF,eAA+BoF,eAAAA,OAAAA,EAA2BF,gBAAAA,GAEpD,KAAK7E,gBAAgB8E,EAAiBxzB,MACnD,MAAA,IAAI3F,MAAM,eAmZpB,CAAA,IAAA,wBAlXwBs5B,MAAAA,SAAAA,EAAa5C,GAM1BA,OALF5B,KAAAA,WAAWwE,EAAY7xB,GAAIivB,GACP,OAArB4C,EAAY3zB,OACd+wB,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWwE,EAAY3zB,KAAM+wB,IAE7BA,IA4WX,CAAA,IAAA,oBA1WoBjR,MAAAA,SAAAA,EAAKiR,GACdA,OAAAA,IAyWX,CAAA,IAAA,wBAvWwB6C,MAAAA,SAAAA,EAAO7C,GACtB,IAAA,IAAI5mC,EAAI,EAAGA,EAAIypC,EAAM3rB,YAAY7d,OAAQD,IACxCA,EAAI,GACN4mC,EAAO7kC,KAAK,KAETijC,KAAAA,WAAWyE,EAAM3rB,YAAa8oB,GAE9BA,OAAAA,IAgWX,CAAA,IAAA,qBAxVqB8C,MAAAA,SAAAA,EAAO9C,GAEpB+C,OADgB,KAAKC,8BAA8BF,EAAO9C,GAErDA,GAGL8C,EAAMtlC,QACRwiC,EAAO7kC,KAAK2nC,EAAMxtB,UACb8oB,KAAAA,WAAW0E,EAAMpzB,SAAUswB,KAE3B5B,KAAAA,WAAW0E,EAAMpzB,SAAUswB,GAChCA,EAAO7kC,KAAK2nC,EAAMxtB,WAGb0qB,KA0UX,CAAA,IAAA,gCAvUgC8C,MAAAA,SAAAA,EAAO9C,MAuUvC,CAAA,IAAA,sBA/TsB8C,MAAAA,SAAAA,EAAO9C,GASlBA,OARH8C,EAAMtlC,QACRwiC,EAAO7kC,KAAK2nC,EAAMxtB,UACb8oB,KAAAA,WAAW0E,EAAMpzB,SAAUswB,KAE3B5B,KAAAA,WAAW0E,EAAMpzB,SAAUswB,GAChCA,EAAO7kC,KAAK2nC,EAAMxtB,WAGb0qB,IAsTX,CAAA,IAAA,uBA9SuBiD,MAAAA,SAAAA,EAASjD,GAMrBA,OALPA,EAAO7kC,KAAK,KACPijC,KAAAA,WAAW6E,EAAQjyB,KAAMgvB,GAC9BA,EAAO7kC,KAAK8nC,EAAQ3tB,UACf8oB,KAAAA,WAAW6E,EAAQhyB,MAAO+uB,GAC/BA,EAAO7kC,KAAK,KACL6kC,IAwSX,CAAA,IAAA,sBAtSsBjR,MAAAA,SAAAA,EAAKiR,GAChBA,OAAAA,IAqSX,CAAA,IAAA,oBAnSoBjR,MAAAA,SAAAA,EAAKiR,GACdA,OAAAA,IAkSX,CAAA,IAAA,qBAhSqBjR,MAAAA,SAAAA,EAAKiR,GACfA,OAAAA,IA+RX,CAAA,IAAA,6BAvR6BjR,MAAAA,SAAAA,GACrBA,GAAa,qBAAbA,EAAIxoB,KACA,MAAA,KAAK+2B,eAA8BvO,cAAAA,OAAAA,EAAIxoB,KAAgCwoB,2BAAAA,GAE3EnxB,IAAAA,EAAO,KACP2I,EAAO,KACLw4B,EAAoB,KAAKF,qBAAqB9P,GAC5CgQ,OAAAA,GACD,IAAA,QACI,OAAA,KACJ,IAAA,qBACA,IAAA,oBACA,IAAA,oBACI,MAAA,CACLH,UAAWG,EACTx4B,KAAM,UACN3I,KAAMmxB,EAAItW,SAAS7a,MAEpB,IAAA,UACC,GAA2B,iBAApBmxB,EAAIze,OAAO1S,KACd,MAAA,KAAK0/B,eAAe,wBAAyBvO,GAG9C,MAAA,CACLnxB,KAFFA,EAAOmxB,EAAIze,OAAO1S,KAGhBg/B,OAAQ,OACNgC,UAAWG,EACXx4B,KAAM,KAAKsmB,gBAAgBkC,EAAIze,QAC/BovB,UAAW3Q,EAAItW,UAEhB,IAAA,YACC,GAAkC,iBAA3BsW,EAAIze,OAAOA,OAAO1S,KACrB,MAAA,KAAK0/B,eAAe,wBAAyBvO,GAG9C,MAAA,CACLnxB,KAFFA,EAAOmxB,EAAIze,OAAOA,OAAO1S,KAGvBg/B,OAAQ,OACNgC,UAAWG,EACXx4B,KAAM,KAAKsmB,gBAAgBkC,EAAIze,OAAOA,QACtCqvB,UAAW5Q,EAAIze,OAAOmI,SACtBinB,UAAW3Q,EAAItW,UAEhB,IAAA,cACC,GAAyC,iBAAlCsW,EAAIze,OAAOA,OAAOA,OAAO1S,KAC5B,MAAA,KAAK0/B,eAAe,wBAAyBvO,GAG9C,MAAA,CACLnxB,KAFFA,EAAOmxB,EAAIze,OAAOA,OAAOA,OAAO1S,KAG9Bg/B,OAAQ,OACNgC,UAAWG,EACXx4B,KAAM,KAAKsmB,gBAAgBkC,EAAIze,OAAOA,OAAOA,QAC7CsvB,UAAW7Q,EAAIze,OAAOA,OAAOmI,SAC7BknB,UAAW5Q,EAAIze,OAAOmI,SACtBinB,UAAW3Q,EAAItW,UAEhB,IAAA,gBACC,GAAgD,iBAAzCsW,EAAIze,OAAOA,OAAOA,OAAOA,OAAO1S,KACnC,MAAA,KAAK0/B,eAAe,wBAAyBvO,GAG9C,MAAA,CACLnxB,KAFFA,EAAOmxB,EAAIze,OAAOA,OAAOA,OAAOA,OAAO1S,KAGrCg/B,OAAQ,OACNgC,UAAWG,EACXx4B,KAAM,KAAKsmB,gBAAgBkC,EAAIze,OAAOA,OAAOA,OAAOA,QACpDsvB,UAAW7Q,EAAIze,OAAOA,OAAOmI,SAC7BknB,UAAW5Q,EAAIze,OAAOmI,SACtBinB,UAAW3Q,EAAItW,UAEhB,IAAA,cACC,GAA6B,iBAAtBsW,EAAItW,SAAS7a,KAChB,MAAA,KAAK0/B,eAAe,wBAAyBvO,GAEjD,GAAA,KAAKmQ,kBAAkBnQ,GAElB,MAAA,CACLnxB,KAFFA,EAAOmxB,EAAItW,SAAS7a,KAGlBg/B,OAAQ,OACRr2B,KAAM,SACNq4B,UAAWG,GAGPhQ,OAAAA,EAAItW,SAAS7a,MACd,IAAA,IACA,IAAA,IACA,IAAA,IACA,IAAA,IAEI,MAAA,CACLA,KAFFA,EAAOmxB,EAAIze,OAAO1S,KAGhB6a,SAAUsW,EAAItW,SAAS7a,KACrBg/B,OAAQ,OACRgC,UAAWG,EACXx4B,KAAM,UAEZ,QACQ,MAAA,KAAK+2B,eAAe,wBAAyBvO,GAElD,IAAA,uBACC,GAA6B,iBAAtBA,EAAItW,SAAS7a,KAChB,MAAA,KAAK0/B,eAAe,wBAAyBvO,GAIjD,GAFJnxB,EAAOmxB,EAAItW,SAAS7a,OACpB2I,EAAO,KAAK04B,gBAAgBrhC,IAEpB,MAAA,KAAK0/B,eAAe,uBAAwBvO,GAE7C,MAAA,CACLnxB,KAAAA,EACA2I,KAAAA,EACAq2B,OAAQ,YACNgC,UAAWG,GAEZ,IAAA,yBACC,GAAoC,iBAA7BhQ,EAAIze,OAAOmI,SAAS7a,KACvB,MAAA,KAAK0/B,eAAe,wBAAyBvO,GAIjD,GAFJnxB,EAAOmxB,EAAIze,OAAOmI,SAAS7a,OAC3B2I,EAAO,KAAK04B,gBAAgBrhC,IAEpB,MAAA,KAAK0/B,eAAe,uBAAwBvO,GAE7C,MAAA,CACLnxB,KAAAA,EACA2I,KAAAA,EACAq2B,OAAQ,YACNgC,UAAWG,EACXW,UAAW3Q,EAAItW,UAEhB,IAAA,2BACC,GAA2C,iBAApCsW,EAAIze,OAAOA,OAAOmI,SAAS7a,KAC9B,MAAA,KAAK0/B,eAAe,wBAAyBvO,GAIjD,GAFJnxB,EAAOmxB,EAAIze,OAAOA,OAAOmI,SAAS7a,OAClC2I,EAAO,KAAK04B,gBAAgBrhC,IAEpB,MAAA,KAAK0/B,eAAe,uBAAwBvO,GAE7C,MAAA,CACLnxB,KAAAA,EACA2I,KAAAA,EACAq2B,OAAQ,YACRgC,UAAWG,EACXY,UAAW5Q,EAAIze,OAAOmI,SACtBinB,UAAW3Q,EAAItW,UAGd,IAAA,6BACC,GAAkD,iBAA3CsW,EAAIze,OAAOA,OAAOA,OAAOmI,SAAS7a,KACrC,MAAA,KAAK0/B,eAAe,wBAAyBvO,GAIjD,GAFJnxB,EAAOmxB,EAAIze,OAAOA,OAAOA,OAAOmI,SAAS7a,OACzC2I,EAAO,KAAK04B,gBAAgBrhC,IAEpB,MAAA,KAAK0/B,eAAe,uBAAwBvO,GAE7C,MAAA,CACLnxB,KAAAA,EACA2I,KAAAA,EACAq2B,OAAQ,YACRgC,UAAWG,EACXa,UAAW7Q,EAAIze,OAAOA,OAAOmI,SAC7BknB,UAAW5Q,EAAIze,OAAOmI,SACtBinB,UAAW3Q,EAAItW,UAGd,IAAA,SACA,IAAA,OACI,MAAA,CACLmmB,UAAWG,EACTtmB,SAAUsW,EAAItW,UAEpB,QACQ,MAAA,KAAK6kB,eAAe,wBAAyBvO,MAwG7D,CAAA,IAAA,uBApGuBmU,MAAAA,SAAAA,GAGZC,IAFDA,IAAAA,EAAQ,CAAC,KAAKpU,KAEboU,EAAM9pC,OAAS,GAAG,CACjB+pC,IAAAA,EAASD,EAAM,GACjBC,GAAgB,uBAAhBA,EAAO78B,MAAiC68B,EAAOryB,IAAMqyB,EAAOryB,GAAGnT,MAAQwlC,EAAOryB,GAAGnT,OAASslC,EAAUtlC,KAC/FwlC,OAAAA,EAGLA,GADJD,EAAME,QACFD,EAAO1zB,SACTyzB,EAAMhoC,KAAKioC,EAAO1zB,eACb,GAAI0zB,EAAOt3B,KAChBq3B,EAAMhoC,KAAKioC,EAAOt3B,WACb,GAAIs3B,EAAOp0B,aAChBm0B,EAAMhoC,KAAKioC,EAAOp0B,mBACb,GAAIjV,MAAMyJ,QAAQ4/B,GAClB,IAAA,IAAIhqC,EAAI,EAAGA,EAAIgqC,EAAO/pC,OAAQD,IACjC+pC,EAAMhoC,KAAKioC,EAAOhqC,IAIjB,OAAA,OA+EX,CAAA,IAAA,iBA5EiB21B,MAAAA,SAAAA,GAGNoU,IAFDA,IAAAA,EAAQ,CAACpU,GAAO,KAAKA,KAEpBoU,EAAM9pC,OAAS,GAAG,CACjB+pC,IAAAA,EAASD,EAAM10B,MACjB20B,GAAgB,oBAAhBA,EAAO78B,KACF68B,OAAAA,EAELA,GAAgB,wBAAhBA,EAAO78B,KAGP68B,GAAAA,EAAO1zB,SACTyzB,EAAMhoC,KAAKioC,EAAO1zB,eACb,GAAI0zB,EAAOt3B,KAChBq3B,EAAMhoC,KAAKioC,EAAOt3B,WACb,GAAIs3B,EAAOp0B,aAChBm0B,EAAMhoC,KAAKioC,EAAOp0B,mBACb,GAAIjV,MAAMyJ,QAAQ4/B,GAClB,IAAA,IAAIhqC,EAAI,EAAGA,EAAIgqC,EAAO/pC,OAAQD,IACjC+pC,EAAMhoC,KAAKioC,EAAOhqC,SAEXgqC,EAAO5zB,WAChB2zB,EAAMhoC,KAAKioC,EAAO5zB,YACT4zB,EAAOxzB,OAChBuzB,EAAMhoC,KAAKioC,EAAOxzB,OAGf,OAAA,OAiDX,CAAA,IAAA,0BA9C0BhS,MAAAA,SAAAA,GAKlB,OAJC,KAAKu/B,uBAAuBj6B,eAAetF,KACzCu/B,KAAAA,uBAAuBv/B,GAAQ,GAEjCu/B,KAAAA,uBAAuBv/B,KACc,IAAtC,KAAKu/B,uBAAuBv/B,GACvBA,EAEFA,EAAO,KAAKu/B,uBAAuBv/B,KAsC9C,CAAA,IAAA,UAnCY,MAAA,WACR8xB,QAAQC,KAAK,qKAkCjB,CAAA,IAAA,QAx2Cc,IAAA,WACH,OAAA,KAAKoN,OAAO,KAAKA,OAAO1jC,OAAS,OAu2C5C,EAAA,GA9BM6kC,EAAgB,CACV,OAAA,SACD,MAAA,QACE,QAAA,UACF,MAAA,SACG,WAAA,SACA,WAAA,SACA,WAAA,SACD,QAAA,SACA,QAAA,SACF,MAAA,SACI,UAAA,WACK,eAAA,WACD,cAAA,SACe,6BAAA,SAClB,aAAA,WACA,aAAA,WACA,aAAA,WACA,aAAA,WACA,aAAA,WACA,aAAA,WACA,aAAA,WACA,aAAA,WACA,aAAA,WACK,kBAAA,SACA,kBAAA,WACA,kBAAA,WACA,kBAAA,YAGrBznC,OAAOC,QAAU,CACf2hC,aAAAA;;ACn2BF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA5oByBlhC,IAAAA,EAAAA,QAAQ,oBAAzBkhC,EAAAA,EAAAA,aAOFiL,EAqoBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAroB8BjL,GAqoB9B,EAAA,EAAA,CAAA,CAAA,IAAA,cA9nBctJ,MAAAA,SAAAA,EAAKiR,GAGX,IAAC,KAAKpG,aAAc,CACtBoG,EAAO7kC,KAAK,YACZ6kC,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,KAAKyC,MACjBoiC,EAAO7kC,KAAK,KAGP,IAAA,IAAI/B,EAAI,EAAGA,EAAI,KAAK27B,cAAc17B,SAAUD,EAAG,CAC5C6/B,IAAAA,EAAe,KAAKlE,cAAc37B,GAEpCA,EAAI,GACN4mC,EAAO7kC,KAAK,MAEd6kC,EAAO7kC,KAAK,SACZ6kC,EAAO7kC,KAAK89B,GAId+G,EAAO7kC,KAAK,SAIT,IAAA,IAAI/B,EAAI,EAAGA,EAAI21B,EAAIjjB,KAAKA,KAAKzS,SAAUD,EACrCglC,KAAAA,WAAWrP,EAAIjjB,KAAKA,KAAK1S,GAAI4mC,GAClCA,EAAO7kC,KAAK,MAOP6kC,OAJF,KAAKpG,cAERoG,EAAO7kC,KAAK,OAEP6kC,IA4lBX,CAAA,IAAA,qBAnlBqBjR,MAAAA,SAAAA,EAAKiR,GAChBz5B,IAAAA,EAAO,KAAKypB,YAAc,KAAKqL,QAAQtM,EAAIrf,UAsB1CswB,OApBF,KAAKhQ,aACHA,KAAAA,WAAazpB,GAGhB,KAAKqzB,cACPoG,EAAO7kC,KAAK,KAAK+6B,wBACZkI,KAAAA,WAAWrP,EAAIrf,SAAUswB,GAC9BA,EAAO7kC,KAAK,OACZ6kC,EAAO7kC,KAAK,KAAKg7B,0BACjB6J,EAAO7kC,KAAK,gBACH,KAAKg/B,aACd6F,EAAO7kC,KAAyB,mBAAA,OAAA,KAAKyC,KAArC,QACKwgC,KAAAA,WAAWrP,EAAIrf,SAAUswB,GAC9BA,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAgC,0BAAA,OAAA,KAAKyC,KAA5C,QAEAoiC,EAAO7kC,KAAK,WACPijC,KAAAA,WAAWrP,EAAIrf,SAAUswB,GAC9BA,EAAO7kC,KAAK,MAEP6kC,IA4jBX,CAAA,IAAA,aAnjBajR,MAAAA,SAAAA,EAAKiR,GAGVpT,GAAAA,MAAMmC,EAAIj4B,OACN,MAAA,KAAKwmC,eACT,uCAAyCvO,EAAIj4B,MAC7Ci4B,GAMGiR,OAFPA,EAAO7kC,KAAK4zB,EAAIj4B,OAETkpC,IAuiBX,CAAA,IAAA,sBA9hBsBjR,MAAAA,SAAAA,EAAKiR,GAMhBA,OALPA,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAK4zB,EAAIzZ,UACX8oB,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GAC3BA,EAAO7kC,KAAK,KACL6kC,IAwhBX,CAAA,IAAA,0BA/gB0BuD,MAAAA,SAAAA,EAASvD,GAC3BuD,GAAiB,eAAjBA,EAAQh9B,KACJ,MAAA,KAAK+2B,eACT,2CACAiG,GAIIA,OAAAA,EAAQ3lC,MACT,IAAA,WACHoiC,EAAO7kC,KAAK,YACZ,MACF,QACM,GAAA,KAAKm6B,WAAa,KAAKA,UAAUpyB,eAAeqgC,EAAQ3lC,MAC1DoiC,EAAO7kC,KAAK,aAAeooC,EAAQ3lC,UAC9B,CACCA,IAAAA,EAAO,KAAK4lC,sBAAsBD,EAAQ3lC,MAC5CA,EACFoiC,EAAO7kC,KAAK,QAAUyC,GAEtBoiC,EAAO7kC,KAAK,QAAUooC,EAAQ3lC,OAK/BoiC,OAAAA,IAsfX,CAAA,IAAA,kBA7ekByD,MAAAA,SAAAA,EAASzD,GACnByD,GAAiB,iBAAjBA,EAAQl9B,KACJ,MAAA,KAAK+2B,eAAe,wBAAyBmG,GAG/CC,IAAAA,EAAU,GACVC,EAAU,GACVC,EAAY,GACZC,EAAU,GACZ/F,EAAS,KAET2F,GAAAA,EAAQx0B,KAAM,CACX60B,KAAAA,UAAU,oBACV1F,KAAAA,WAAWqF,EAAQx0B,KAAMy0B,GACzB,IAAA,IAAItqC,EAAI,EAAGA,EAAIsqC,EAAQrqC,OAAQD,IAC9BsqC,EAAQtqC,GAAG2qC,UAAYL,EAAQtqC,GAAG2qC,SAAS,OAC7CjG,GAAS,GAGRkG,KAAAA,SAAS,yBAEdlG,GAAS,EA0BPA,GAvBA2F,EAAQrrC,KACLgmC,KAAAA,WAAWqF,EAAQrrC,KAAMurC,GAE9B7F,GAAS,EAGP2F,EAAQ3yB,OACLstB,KAAAA,WAAWqF,EAAQ3yB,OAAQ8yB,GAEhC9F,GAAS,EAGP2F,EAAQ33B,OACLg4B,KAAAA,UAAU,aACV1F,KAAAA,WAAWqF,EAAQ33B,KAAM+3B,GACzBG,KAAAA,SAAS,cAID,OAAXlG,IACFA,EAAS,KAAKA,OAAO2F,EAAQx0B,OAAS,KAAK6uB,OAAO2F,EAAQrrC,OAGxD0lC,EACFkC,EAAO7kC,KAAauoC,QAAAA,OAAAA,EAAQzU,KAAK,IAAO0U,KAAAA,OAAAA,EAAQ1U,KAAK,IAAO2U,KAAAA,OAAAA,EAAU3U,KAAK,IAA3E,SACA+Q,EAAO7kC,KAAK0oC,EAAQ5U,KAAK,KACzB+Q,EAAO7kC,KAAK,WACP,CACC8oC,IAAAA,EAAgB,KAAKC,wBAAwB,SAC/CR,EAAQrqC,OAAS,GACnB2mC,EAAO7kC,KAAKuoC,EAAQzU,KAAK,IAAK,OAEhC+Q,EAAO7kC,KAAiB8oC,YAAAA,OAAAA,EAAmBA,OAAAA,OAAAA,EAA0BA,cAAAA,OAAAA,EAArE,WACIN,EAAQtqC,OAAS,GACnB2mC,EAAO7kC,KAAawoC,QAAAA,OAAAA,EAAQ1U,KAAK,IAAjC,eAEF+Q,EAAO7kC,KAAK0oC,EAAQ5U,KAAK,KACzB+Q,EAAO7kC,KAAUyoC,KAAAA,OAAAA,EAAU3U,KAAK,IAAhC,MACA+Q,EAAO7kC,KAAK,OAEP6kC,OAAAA,IA6aX,CAAA,IAAA,oBApaoBmE,MAAAA,SAAAA,EAAWnE,GACvBmE,GAAmB,mBAAnBA,EAAU59B,KACN,MAAA,KAAK+2B,eACT,0BACA6G,GAcGnE,OAVPA,EAAO7kC,KAAK,wCACZ6kC,EAAO7kC,KAAK,QACPijC,KAAAA,WAAW+F,EAAU/rC,KAAM4nC,GAChCA,EAAO7kC,KAAK,SACPijC,KAAAA,WAAW+F,EAAUr4B,KAAMk0B,GAChCA,EAAO7kC,KAAK,cACZ6kC,EAAO7kC,KAAK,YACZ6kC,EAAO7kC,KAAK,OACZ6kC,EAAO7kC,KAAK,OAEL6kC,IAkZX,CAAA,IAAA,sBAzYsBoE,MAAAA,SAAAA,EAAapE,GAC3BoE,GAAqB,qBAArBA,EAAY79B,KACR,MAAA,KAAK+2B,eACT,0BACA8G,GAaGpE,OATPA,EAAO7kC,KAAK,wCACPijC,KAAAA,WAAWgG,EAAYt4B,KAAMk0B,GAClCA,EAAO7kC,KAAK,SACPijC,KAAAA,WAAWgG,EAAYhsC,KAAM4nC,GAClCA,EAAO7kC,KAAK,SACZ6kC,EAAO7kC,KAAK,YACZ6kC,EAAO7kC,KAAK,OACZ6kC,EAAO7kC,KAAK,OAEL6kC,IAwXX,CAAA,IAAA,0BA9W0BqE,MAAAA,SAAAA,EAASrE,GACzBnzB,IAAAA,EAAc,KAAKoxB,eAAeoG,EAAQrzB,MAC5CnE,GAAAA,IAAgBA,EAAYiwB,WACxB,MAAA,IAAI,KAAKQ,eAA2B+G,YAAAA,OAAAA,EAAQrzB,KAAKpT,KAA+BymC,2BAAAA,GAKjFrE,OAHF5B,KAAAA,WAAWiG,EAAQrzB,KAAMgvB,GAC9BA,EAAO7kC,KAAKkpC,EAAQ/uB,UACf8oB,KAAAA,WAAWiG,EAAQpzB,MAAO+uB,GACxBA,IAsWX,CAAA,IAAA,oBA7VoBsE,MAAAA,SAAAA,EAAOtE,GACnB,GAAA,KAAKxB,QAAQ,aAAc,CACxBsF,KAAAA,UAAU,cACV,IAAA,IAAI1qC,EAAI,EAAGA,EAAIkrC,EAAMx4B,KAAKzS,OAAQD,IAChCglC,KAAAA,WAAWkG,EAAMx4B,KAAK1S,GAAI4mC,GAE5BgE,KAAAA,SAAS,kBACT,CACLhE,EAAO7kC,KAAK,OACP,IAAA,IAAI/B,EAAI,EAAGA,EAAIkrC,EAAMx4B,KAAKzS,OAAQD,IAChCglC,KAAAA,WAAWkG,EAAMx4B,KAAK1S,GAAI4mC,GAEjCA,EAAO7kC,KAAK,OAEP6kC,OAAAA,IA+UX,CAAA,IAAA,yBAtUyBwC,MAAAA,SAAAA,EAAYxC,GACT,QAApBwC,EAAWp2B,MAAkB,KAAKiqB,cAC/BkO,KAAAA,UAEPvE,EAAO7kC,KAAQqnC,GAAAA,OAAAA,EAAWp2B,KAA1B,MAEK,IADG4C,IAAAA,EAAiBwzB,EAAjBxzB,aACC5V,EAAI,EAAGA,EAAI4V,EAAa3V,OAAQD,IACnCA,EAAI,GACN4mC,EAAO7kC,KAAK,KAETijC,KAAAA,WAAWpvB,EAAa5V,GAAI4mC,GAK5BA,OAHF,KAAKxB,QAAQ,qBAChBwB,EAAO7kC,KAAK,KAEP6kC,IAuTX,CAAA,IAAA,iBA9SiBwE,MAAAA,SAAAA,EAAQxE,GAsBdA,OArBPA,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWoG,EAAOpsC,KAAM4nC,GAC7BA,EAAO7kC,KAAK,KACmB,mBAA3BqpC,EAAOh1B,WAAWjJ,KACf63B,KAAAA,WAAWoG,EAAOh1B,WAAYwwB,IAEnCA,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWoG,EAAOh1B,WAAYwwB,GACnCA,EAAO7kC,KAAK,UAGVqpC,EAAO/0B,YACTuwB,EAAO7kC,KAAK,SACkB,mBAA1BqpC,EAAO/0B,UAAUlJ,KACd63B,KAAAA,WAAWoG,EAAO/0B,UAAWuwB,IAElCA,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWoG,EAAO/0B,UAAWuwB,GAClCA,EAAO7kC,KAAK,WAGT6kC,IAwRX,CAAA,IAAA,qBApRqBjR,MAAAA,SAAAA,EAAKiR,GACdrwB,IAAAA,EAAwBof,EAAxBpf,aAAcC,EAAUmf,EAAVnf,MACtBowB,EAAO7kC,KAAK,YACPijC,KAAAA,WAAWzuB,EAAcqwB,GAC9BA,EAAO7kC,KAAK,SACP,IAAA,IAAI/B,EAAI,EAAGA,EAAIwW,EAAMvW,OAAQD,IACV,OAAlBwW,EAAMxW,GAAGhB,MAQb4nC,EAAO7kC,KAAK,SACPijC,KAAAA,WAAWxuB,EAAMxW,GAAGhB,KAAM4nC,GAC/BA,EAAO7kC,KAAK,OACRyU,EAAMxW,GAAGoW,YAAcI,EAAMxW,GAAGoW,WAAWnW,OAAS,IACjD+kC,KAAAA,WAAWxuB,EAAMxW,GAAGoW,WAAYwwB,GACrCA,EAAO7kC,KAAK,eAZZ6kC,EAAO7kC,KAAK,cACPijC,KAAAA,WAAWxuB,EAAMxW,GAAGoW,WAAYwwB,GACjCpwB,EAAMxW,GAAGoW,YAAcI,EAAMxW,GAAGoW,WAAWnW,OAAS,GACtD2mC,EAAO7kC,KAAK,aAYlB6kC,EAAO7kC,KAAK,SA8PhB,CAAA,IAAA,oBArPoBspC,MAAAA,SAAAA,EAAOzE,GAEhBA,OADPA,EAAO7kC,KAAK,SACL6kC,IAmPX,CAAA,IAAA,sBA1OsB0E,MAAAA,SAAAA,EAAO1E,GAUrB,IAAA,EAAA,KAAKP,2BAA2BiF,GARlC9F,EAAAA,EAAAA,UACAr4B,EAAAA,EAAAA,KACAkS,EAAAA,EAAAA,SACAinB,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,UACAhiC,EAAAA,EAAAA,KACAg/B,EAAAA,EAAAA,OAEMgC,OAAAA,GACD,IAAA,oBAEIoB,OADPA,EAAO7kC,KAAsByC,gBAAAA,OAAAA,IACtBoiC,EACJ,IAAA,oBACKpiC,OAAAA,GACD,IAAA,IACHoiC,EAAO7kC,KAAK,WACZ,MACG,IAAA,IACH6kC,EAAO7kC,KAAK,WACZ,MACG,IAAA,IACH6kC,EAAO7kC,KAAK,WACZ,MACF,QACQ,MAAA,KAAKmiC,eAAe,wBAAyBoH,GAEhD1E,OAAAA,EACJ,IAAA,QACG,MAAA,KAAK1C,eAAe,wBAAyBoH,GAChD,IAAA,UACA,IAAA,YACA,IAAA,cACA,IAAA,cACC9H,GAAW,SAAXA,EAEKoD,OADPA,EAAO7kC,KAAKxE,KAAKiH,IACVoiC,EAEDvnB,OAAAA,GACD,IAAA,IAEIunB,OADPA,EAAO7kC,KAAcyC,QAAAA,OAAAA,EAArB,QACOoiC,EACJ,IAAA,IAEIA,OADPA,EAAO7kC,KAAcyC,QAAAA,OAAAA,EAArB,QACOoiC,EACJ,IAAA,IAEIA,OADPA,EAAO7kC,KAAcyC,QAAAA,OAAAA,EAArB,QACOoiC,EACJ,IAAA,IAEIA,OADPA,EAAO7kC,KAAcyC,QAAAA,OAAAA,EAArB,QACOoiC,EAEX,MACG,IAAA,uBACA,IAAA,yBACA,IAAA,2BACA,IAAA,6BACH,MACG,IAAA,SAKIA,OAJF5B,KAAAA,WAAWsG,EAAMp0B,OAAQ0vB,GAC9BA,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWsG,EAAMjsB,SAAUunB,GAChCA,EAAO7kC,KAAK,KACL6kC,EACT,QACQ,MAAA,KAAK1C,eAAe,wBAAyBoH,GAGnD,IAACA,EAAM/xB,SAEDpM,OAAAA,GACD,IAAA,SACA,IAAA,UACA,IAAA,QACA,IAAA,UAEIy5B,OADPA,EAAO7kC,KAAQyhC,GAAAA,OAAAA,EAAUh/B,KAAAA,OAAAA,IAClBoiC,EAMP2E,IAAAA,EAAc,KAAKnB,sBAAsB5lC,GACzCgnC,EAAgBhI,GAAAA,OAAAA,EAAU+H,KAAAA,OAAAA,GAAe/mC,GAEvC2I,OAAAA,GACD,IAAA,WACA,IAAA,WACA,IAAA,WACA,IAAA,iBACA,IAAA,kBACA,IAAA,kBACA,IAAA,kBACA,IAAA,kBACA,IAAA,YACL,QACM1M,IAAAA,EACAgrC,EACAjI,GAAW,cAAXA,EAAwB,CACpBkI,IAAAA,EAAW,KAAKxP,UAAU13B,GAEhC/D,GADAgrC,EAAuC,UAA7B,KAAKtP,cAAc33B,IACZknC,EAASjrC,KAAO,UAGjCA,GADAgrC,EAAU,KAAKA,QAAQF,GAAe/mC,IACrB,KAAKo3B,cAAc,KAAKD,cAAcnZ,QAAQhe,IAAS,KAE1EoiC,EAAO7kC,KAASypC,GAAAA,OAAAA,IACZhF,GAAaD,EACXkF,GACF7E,EAAO7kC,KAAK,MACPijC,KAAAA,WAAWwB,EAAWI,GAC3BA,EAAO7kC,KAAU,IAAA,OAAA,KAAKs6B,iBAAmB,sBAAwB57B,EAAK,GAAKA,EAAK,GAAhF,QACKukC,KAAAA,WAAWuB,EAAWK,GAC3BA,EAAO7kC,KAAU,IAAA,OAAA,KAAKs6B,iBAAmB,UAAY57B,EAAK,GAA1D,OACKukC,KAAAA,WAAWsB,EAAWM,GAC3BA,EAAO7kC,KAAK,OAEZ6kC,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWwB,EAAWI,GAC3BA,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWuB,EAAWK,GAC3BA,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWsB,EAAWM,GAC3BA,EAAO7kC,KAAK,MAELwkC,EACLkF,GACF7E,EAAO7kC,KAAK,MACPijC,KAAAA,WAAWuB,EAAWK,GAC3BA,EAAO7kC,KAAU,IAAA,OAAA,KAAKs6B,iBAAmB,UAAY57B,EAAK,GAA1D,OACKukC,KAAAA,WAAWsB,EAAWM,GAC3BA,EAAO7kC,KAAK,OAEZ6kC,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWuB,EAAWK,GAC3BA,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWsB,EAAWM,GAC3BA,EAAO7kC,KAAK,WAEgB,IAAdukC,IAChBM,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWsB,EAAWM,GAC3BA,EAAO7kC,KAAK,MAGX6kC,OAAAA,IAoFX,CAAA,IAAA,oBA3EoBjR,MAAAA,SAAAA,EAAKiR,GACjBjR,GAAa,mBAAbA,EAAIxoB,KAEA,MAAA,KAAK+2B,eAAe,yBAA0BvO,GAGlD0J,IAAAA,EAAe,KAAK2E,0BAA0BrO,EAAInW,QAGlD,KAAK2hB,gBAAgB3e,QAAQ6c,GAAgB,GAC1C8B,KAAAA,gBAAgBp/B,KAAKs9B,GAGL,KAAK6F,kBAAkBvP,GAG1C,KAAK0K,gBACFA,KAAAA,eAAe,KAAK77B,KAAM66B,EAAc1J,EAAIlW,WAInDmnB,EAAO7kC,KAAKs9B,GAGZuH,EAAO7kC,KAAK,KAGP,IAFC4pC,IAAAA,EAAc,KAAKjM,4BAA4BL,IAAiB,GAE7Dr/B,EAAI,EAAGA,EAAI21B,EAAIlW,UAAUxf,SAAUD,EAAG,CACvCsW,IAAAA,EAAWqf,EAAIlW,UAAUzf,GAG3B+/B,EAAe,KAAKkC,QAAQ3rB,GAC3Bq1B,EAAY3rC,IACV8/B,KAAAA,yBAAyBT,EAAcr/B,EAAG+/B,EAAc,MAG3D//B,EAAI,GACN4mC,EAAO7kC,KAAK,MAETijC,KAAAA,WAAW1uB,EAAUswB,GAKrBA,OAFPA,EAAO7kC,KAAK,KAEL6kC,IA+BX,CAAA,IAAA,qBAtBqBiC,MAAAA,SAAAA,EAASjC,GACpBgF,IAAAA,EAAS/C,EAAQ7tB,SAAS/a,OAEhC2mC,EAAO7kC,KAAK,sBACP,IAAA,IAAI/B,EAAI,EAAGA,EAAI4rC,IAAU5rC,EAAG,CAC3BA,EAAI,GACN4mC,EAAO7kC,KAAK,MAER8pC,IAAAA,EAAUhD,EAAQ7tB,SAAShb,GAC5BglC,KAAAA,WAAW6G,EAASjF,GAIpBA,OAFPA,EAAO7kC,KAAK,MAEL6kC,IASX,CAAA,IAAA,uBANuBiC,MAAAA,SAAAA,EAASjC,GAErBA,OADPA,EAAO7kC,KAAK,aACL6kC,MAIX,EAAA,GAAAvpC,OAAOC,QAAU,CACf4sC,gBAAAA;;ACnfF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GA1JkBnsC,IAAAA,EAAAA,QAAQ,eAAlBmzB,EAAAA,EAAAA,MACUnzB,EAAAA,QAAQ,eAAlB2yB,EAAAA,EAAAA,MAER,SAASob,EAAkB5P,GACnB36B,IAAAA,EAAU,GACX,IAAA,IAAMqJ,KAAKsxB,EAAW,CACnBwP,IAAAA,EAAWxP,EAAUtxB,GACZ8gC,OAAAA,EAAAA,IACR,IAAA,SACA,IAAA,UACHnqC,EAAQQ,KAAQ6I,GAAAA,OAAAA,EAAK8gC,KAAAA,OAAAA,KAGdnqC,MAAAA,KAAAA,OAAAA,EAAQs0B,OAArB,MAGF,SAASkW,EAAgBC,EAAWxnC,GAC5BynC,IAAAA,EAAS,GACTC,EAAiB,GACjBC,EAAe,GAEfC,GAAsB,YAAYptC,KAAKgtC,EAAUnR,MAAM9wB,YAezDiiC,GAbJC,EAAOlqC,KACL,qDACmCsqC,mCAAAA,OAAAA,KAAKC,UAAU3rC,MAAMs0B,KAAK+W,EAAUra,SAC/Cma,MAAAA,wBAAAA,OAAAA,EAAkBE,EAAU9P,WAHtD,MAMAgQ,EAAenqC,KACb,6BACA,eACA,cACA,mCAGEiqC,EAAUlR,UAAW,CACvBmR,EAAOlqC,KAAqDiqC,gDAAAA,OAAAA,EAAUra,OAAO,GAAOqa,MAAAA,OAAAA,EAAUra,OAAO,GAArG,OACAsa,EAAOlqC,KAAmDiqC,8CAAAA,OAAAA,EAAUra,OAAO,GAAQqa,OAAAA,OAAAA,EAAUra,OAAO,GAApG,WAEM4a,IAAAA,EAAUrb,EAAM6H,yBAAyBqT,EAAqB,YAAc,IAAMJ,EAAUnR,MAAM9wB,WAAY,CAClHkvB,WAAY,SAACuT,GACHA,OAAAA,GACD,IAAA,aACI,MAAA,aACJ,IAAA,aACI,MAAA,aACJ,IAAA,SACI,MAAA,SACJ,IAAA,SACI,MAAA,cAEJH,OAAAA,KAAKC,UAAUN,EAAUQ,KAElCxT,eAAgB,SAAC9hB,EAAQ1S,GAChB,OAAA,QAILioC,EAAcvb,EAAM6H,yBAAyBqT,EAAqB,YAAc,IAAMJ,EAAUU,UAAU3iC,WAAY,CAC1HkvB,WAAY,SAACuT,GACHA,OAAAA,GACD,IAAA,aACI,MAAA,aACJ,IAAA,aACI,MAAA,aACJ,IAAA,SACI,MAAA,SACJ,IAAA,SACI,MAAA,cAEJH,OAAAA,KAAKC,UAAUN,EAAUQ,KAElCxT,eAAgB,WACP,OAAA,QAIXkT,EAAenqC,KACb,kBACA,kBACcwqC,cAAAA,OAAAA,EAHhB,MAMAJ,EAAapqC,KACa0qC,wBAAAA,OAAAA,EAD1B,MAOG,IAFCtQ,IAAAA,EAAgB,GAChBwQ,EAAextC,OAAO0B,KAAKmrC,EAAU7P,eAClCn8B,EAAI,EAAGA,EAAI2sC,EAAa1sC,OAAQD,IACvCm8B,EAAcp6B,KAAKiqC,EAAU7P,cAAcwQ,IAEzCX,IAAuD,IAAvDA,EAAUtV,cAAclU,QAAQ,oBAAyE,IAA7C2Z,EAAc3Z,QAAQ,kBAA0B,CACxGoqB,IAAAA,EAA0B1b,EAAM6H,yBAAyBqT,EAAqB,YAAc,IAAMJ,EAAUa,gBAAgB9iC,WAAY,CAC5ImvB,YAAa,CAAC,UACdF,eAAgB,SAAC9hB,EAAQ1S,GACnB0S,MAAW,SAAXA,GACMk1B,EAAqB,YAAc,IAAMJ,EAAUxnC,GAAMuF,WAE5D,MAETkvB,WAAY,SAACuT,GACHA,OAAAA,GACD,IAAA,SACH,OACG,IAAA,UACI,MAAA,cAIfL,EAAapqC,KAAK6qC,GAClBV,EAAenqC,KAAf,wBACAmqC,EAAenqC,KAAf,6BACK,IAAsD,IAAlDiqC,EAAUtV,cAAclU,QAAQ,eAA+D,IAAxC2Z,EAAc3Z,QAAQ,aAAqB,CACrGsqB,IAAAA,EAA0B5b,EAAM6H,yBAAyBqT,EAAqB,YAAc,IAAMJ,EAAUe,gBAAgBhjC,WAAY,CAC5IivB,eAAgB,SAAC9hB,EAAQ1S,GAChB,OAAA,MAETy0B,WAAY,SAACuT,GACHA,OAAAA,GACD,IAAA,SACI,MAAA,kBACJ,IAAA,UACI,MAAA,mBAEL,MAAA,IAAIt8B,MAAM,2BAGpBi8B,EAAapqC,KAAK+qC,GAClBZ,EAAenqC,KAAf,wBAIDkqC,MAAAA,yBAAAA,OAAAA,EAAOpW,KAAK,MAWbmW,qPAAAA,OAAAA,EAAUgB,cAEGd,yBAAAA,OAAAA,EAAerW,KAAK,MAC9BsW,YAAAA,OAAAA,EAAatW,KAAK,MAfrB,yBAoBFx4B,OAAOC,QAAU,CACfyuC,gBAAAA;;ACuXF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAlhBmBhuC,IAAAA,EAAAA,QAAQ,aAAnBw9B,EAAAA,EAAAA,OACoBx9B,EAAAA,QAAQ,uBAA5BugC,EAAAA,EAAAA,gBACoBvgC,EAAAA,QAAQ,mBAA5BmsC,EAAAA,EAAAA,gBACUnsC,EAAAA,QAAQ,eAAlBmzB,EAAAA,EAAAA,MACoBnzB,EAAAA,QAAQ,mBAA5BguC,EAAAA,EAAAA,gBAMFkB,EAwgBN,SAAA,GArec1jC,SAAAA,EAAAA,EAAQioB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACtBjoB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAQioB,KACT0b,cAAc3jC,EAAOioB,UAAYA,GAEjC2b,EAAAA,WAAa,KACbC,EAAAA,WAAa,KACbJ,EAAAA,cAAgB,KAChB7S,EAAAA,OAAS,CACZtJ,EAAG,EACHC,EAAG,EACHF,EAAG,GAEAyc,EAAAA,kBAAoB,KAZG,EAqehC,OAAA,EAAA,EAxgBwB9R,GAwgBxB,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,cAvgBuB,MAAA,WACZ,OAAA,KAAK+R,WAsgBhB,CAAA,IAAA,iBA3fwB3+B,MAAAA,SAAAA,GACb,OAAA,IA0fX,CAAA,IAAA,0BAjfmC,MAAA,WACxB,OAAA,OAgfX,CAAA,IAAA,2BA7eoC,MAAA,WACzB,OAAA,OA4eX,CAAA,IAAA,iBAzewB4+B,MAAAA,SAAAA,GACbA,OAAAA,IAweX,CAAA,IAAA,WApgBwB,IAAA,WACbpuC,OAAAA,OAAOilC,OAAO,CACnBoJ,WAAW,EACXC,2BAA2B,MAigBjC,CAAA,IAAA,cA9f2B,IAAA,WAChB,OAAA,IA6fX,CAAA,IAAA,OArfoB,IAAA,WACT,MAAA,UAofX,EAAA,EAAA,CAAA,CAAA,IAAA,aAtde,MAAA,WACP,MAAoB,oBAAbC,SACFA,SAASC,cAAc,UACM,oBAApBC,gBACT,IAAIA,gBAAgB,EAAG,QADzB,IAmdX,CAAA,IAAA,cA9cgB,MAAA,WACR,OAAC,KAAKtS,OACH,KAAKA,OAAOuS,WAAW,MADL,OA6c7B,CAAA,IAAA,cAzccrc,MAAAA,SAAAA,GACH,MAAA,KAwcX,CAAA,IAAA,mBAjcmB8L,MAAAA,SAAAA,GACX,IAAC,KAAK3L,QAAiC,IAAvB,KAAKA,OAAO1xB,OAAc,CACxCq9B,GAAgB,IAAhBA,EAAKr9B,OACD,MAAA,IAAIiQ,MAAM,8DAGZqtB,IAAAA,EAAUrM,EAAMuC,gBAAgB6J,EAAK,GAAI,KAAK5J,gBAChD6J,GAAY,UAAZA,EACG5L,KAAAA,OAAST,EAAM0D,cAAc2I,OAC7B,CAAA,GAAgB,kBAAZA,GAA2C,oBAAZA,EAGlC,MAAA,IAAIrtB,MAAM,6CAA+CqtB,GAF1D5L,KAAAA,OAAS2L,EAAK,GAAG3L,QAMtB,GAAA,KAAKmJ,WACoB,IAAvB,KAAKnJ,OAAO1xB,OACR,MAAA,IAAIiQ,MAAM,mDAIf49B,KAAAA,gBA2aT,CAAA,IAAA,kBAxaoB,MAAA,WAEZ,GADChR,KAAAA,uBAAyB,KAAKnL,OAAO1xB,OAAS,EAAI,gBAAkB,eACrE,KAAKy8B,WAAY,CAEd,IADCK,IAAAA,EAA2B,GACxB/8B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAAK,CAE7CwE,IAAAA,EACE,KAAKk4B,WAAW18B,GADlBwE,KAEFu4B,EAAyBh7B,KAAK,KAAK4vB,OAAO1xB,OAAS,EAAgBuE,WAAAA,OAAAA,EAA+BA,0BAAAA,OAAAA,EAAwBA,OAAAA,UAAAA,OAAAA,EAA+BA,0BAAAA,OAAAA,EAAzJ,QAEGu4B,KAAAA,yBAA2BA,EAAyBlH,KAAK,IAE1DyJ,IAAAA,EAAkBhB,EAAgByP,WAAW,KAAM7D,GACpDmD,KAAAA,kBAAoB/N,EAAgBgC,cAAc,UAClD,KAAKxG,WAAc,KAAKlE,aACtBA,KAAAA,WAAa0I,EAAgB0O,yBAyZxC,CAAA,IAAA,QA9YU,MAAA,WAMF,GALCC,KAAAA,iBACAC,KAAAA,eAAezuB,WACf0uB,KAAAA,iBAAiB1uB,WACjB2uB,KAAAA,kBAED,KAAKtT,UAAW,CAEhBQ,IAAAA,EAEE,KAFFA,OACA3J,EACE,KADFA,OAEE,IAAC2J,EACG,MAAA,IAAIprB,MAAM,kDAEZ6mB,IAAAA,EAAQpF,EAAO,GACfqF,EAASrF,EAAO,IAAM,EAC5B2J,EAAOvE,MAAQA,EACfuE,EAAOtE,OAASA,EACXmW,KAAAA,WAAa,KAAKx+B,QAAQ0/B,gBAAgBtX,EAAOC,GACjDoW,KAAAA,WAAa,IAAIjW,kBAAkBJ,EAAQC,EAAS,GAGrDsX,IAAAA,EAAe,KAAKC,kBACrBD,KAAAA,aAAeA,EAEhB,KAAKtS,QACP1F,QAAQkY,IAAI,oBACZlY,QAAQkY,IAAIF,IAGV,IACGjL,KAAAA,IAAM,IAAIoL,SAAS,GAAIH,GAAcI,KAAK,KAApC,GACX,MAAOlgB,GACP8H,QAAQl5B,MAAM,+CAAgDoxB,MA6WpE,CAAA,IAAA,QAzWQ4L,MAAAA,SAAAA,EAAGE,EAAGjI,EAAGE,QACI,IAANA,IACTA,EAAI,GAGN6H,EAAI78B,KAAK4C,MAAU,IAAJi6B,GACfE,EAAI/8B,KAAK4C,MAAU,IAAJm6B,GACfjI,EAAI90B,KAAK4C,MAAU,IAAJkyB,GACfE,EAAIh1B,KAAK4C,MAAU,IAAJoyB,GAETwE,IAAAA,EAAQ,KAAKpF,OAAO,GACpBqF,EAAS,KAAKrF,OAAO,GAKrBrmB,EAHI,KAAK6uB,OAAOtJ,GACZmG,EAAS,KAAKmD,OAAOrJ,EAAI,GAEbiG,EAEjBqW,KAAAA,WAAmB,EAAR9hC,EAAY,GAAK8uB,EAC5BgT,KAAAA,WAAmB,EAAR9hC,EAAY,GAAKgvB,EAC5B8S,KAAAA,WAAmB,EAAR9hC,EAAY,GAAK+mB,EAC5B+a,KAAAA,WAAmB,EAAR9hC,EAAY,GAAKinB,IAoVrC,CAAA,IAAA,kBAvUoB,MAAA,WACZ,GAAuB,OAAvB,KAAKya,cAAwB,OAAO,KAAKA,cAEzC2B,IAAAA,EAAqB,KAEvBtB,EACE,KADFA,kBAoBKiB,OAlBHjB,EAAkBptC,OAAS,EAC7BotC,EAAoBA,EAAkBuB,OAAO,SAAA/b,GACvC,MAAA,YAAY7zB,KAAK6zB,GAAYA,GACjC8b,EAAqB9b,GACd,KAGT8b,EAAqBtB,EAAkBpD,QAEpB,KAAK+C,cAAuC,sBAAA,OAAA,KAAK6B,oBAG7D,4EAAA,OAAA,KAAKlT,cAAchF,IAAI,SAAAkJ,GAAgB,MAAA,QAAUA,IAAchK,KAAK,MAC1E,gBAAA,OAAA,KAAKiZ,oBACL,UAAA,OAAA,KAAKC,oBACL,UAAA,OAAA,KAAKjU,UAAY,KAAKkU,qBAAqBL,GAAsB,KAAKM,kBAAkBN,GACxFtB,UAAAA,OAAAA,EAAkBptC,OAAS,EAAIotC,EAAkBxX,KAAK,MAAQ,GAPjE,YAuTJ,CAAA,IAAA,WAxSa,MAAA,WACFkW,OAAAA,EAAgB,QAuS3B,CAAA,IAAA,oBAhSsB,MAAA,WAEhB,OAAA,KAAK9P,kBACAnN,IAAAA,OAAAA,SAAS,KAAKmN,mBACnB,KAAA,WA4RN,CAAA,IAAA,oBAxRsB,MAAA,WACd,IAAC,KAAKC,UAAW,MAAO,GAEtBv6B,IAAAA,EAAS,GACV,IAAA,IAAIiJ,KAAK,KAAKsxB,UAAW,CAEpB/uB,OADK,KAAKgvB,cAAcvxB,IAEzB,IAAA,YACHjJ,EAAOI,KAA4B6I,uBAAAA,OAAAA,EAA2CA,2CAAAA,OAAAA,EAA9E,SACA,MACG,IAAA,iBACHjJ,EAAOI,KAA4B6I,uBAAAA,OAAAA,EAA2CA,2CAAAA,OAAAA,EAA9E,SACA,MACG,IAAA,QACHjJ,EAAOI,KAA4B6I,uBAAAA,OAAAA,EAAsBA,sBAAAA,OAAAA,EAAzD,cACA,MACF,QACEjJ,EAAOI,KAA4B6I,uBAAAA,OAAAA,EAAsBA,sBAAAA,OAAAA,EAAzD,SAGCjJ,OAAAA,EAAOk0B,KAAK,MAoQvB,CAAA,IAAA,oBAjQsB,MAAA,WAEb,IADCl0B,IAAAA,EAAS,GACN3B,EAAI,EAAGA,EAAI,KAAK02B,cAAcz2B,OAAQD,IAAK,CAC5CkvC,IAAAA,EAAuB,QAAA,OAAA,KAAKvT,cAAc37B,IACxC,OAAA,KAAK02B,cAAc12B,IACpB,IAAA,YACH2B,EAAOI,KAAYmtC,OAAAA,OAAAA,EAAuCA,4BAAAA,OAAAA,EAA1D,SACA,MACG,IAAA,iBACHvtC,EAAOI,KAAYmtC,OAAAA,OAAAA,EAAuCA,4BAAAA,OAAAA,EAA1D,SACA,MACG,IAAA,QACHvtC,EAAOI,KAAYmtC,OAAAA,OAAAA,EAAkBA,OAAAA,OAAAA,EAArC,cACA,MACG,IAAA,kBACA,IAAA,kBACA,IAAA,kBACA,IAAA,kBACA,IAAA,gBACA,IAAA,+BACHvtC,EAAOI,KACPmtC,aAAAA,OAAAA,EAK8CA,oLAAAA,OAAAA,EAE9CA,kDAAAA,OAAAA,EAEwBA,wFAAAA,OAAAA,EACxBA,gBAAAA,OAAAA,EAAkBA,OAAAA,OAAAA,EACIA,+CAAAA,OAAAA,EAZtB,wBAkBCvtC,OAAAA,EAAOk0B,KAAK,MA2NvB,CAAA,IAAA,kBAxNkB+D,MAAAA,SAAAA,GACR0B,IAAAA,EAAS,KAAKA,OAChBA,EAAOvE,MAAQ6C,EAAM7C,QACvBuE,EAAOvE,MAAQ6C,EAAM7C,OAEnBuE,EAAOtE,OAAS4C,EAAM5C,SACxBsE,EAAOtE,OAAS4C,EAAM5C,QAElBmY,IAAAA,EAAM,KAAKxgC,QACjBwgC,EAAIC,UAAUxV,EAAO,EAAG,EAAGA,EAAM7C,MAAO6C,EAAM5C,QAIzC,IAHCqY,IAAAA,EAAaF,EAAIG,aAAa,EAAG,EAAG1V,EAAM7C,MAAO6C,EAAM5C,QAAQz2B,KAC/DgvC,EAAa,IAAI5uC,MAAMi5B,EAAM5C,QAC/B1rB,EAAQ,EACHwlB,EAAI8I,EAAM5C,OAAS,EAAGlG,GAAK,EAAGA,IAEhC,IADC0e,IAAAA,EAAMD,EAAWze,GAAK,IAAInwB,MAAMi5B,EAAM7C,OACnClG,EAAI,EAAGA,EAAI+I,EAAM7C,MAAOlG,IAAK,CAC9BqJ,IAAAA,EAAQ,IAAI7I,aAAa,GAC/B6I,EAAM,GAAKmV,EAAW/jC,KAAW,IACjC4uB,EAAM,GAAKmV,EAAW/jC,KAAW,IACjC4uB,EAAM,GAAKmV,EAAW/jC,KAAW,IACjC4uB,EAAM,GAAKmV,EAAW/jC,KAAW,IACjCkkC,EAAI3e,GAAKqJ,EAGNqV,OAAAA,IAgMX,CAAA,IAAA,YA7LYE,MAAAA,SAAAA,GACgB,IAAA,EAAA,EAAA,KAAK9d,OADf,GACPoF,EADO,EAAA,GACAC,EACd,EAAA,GACOyY,OAAAA,EAAOve,EAAM2F,WAAW,KAAKsW,WAAW5sC,KAAMw2B,EAAOC,GAAU,KAAKmW,WAAW5sC,KAAKkB,MAAM,KA0LrG,CAAA,IAAA,kBAvLkBiuC,MAAAA,SAAAA,GAET,IADCC,IAAAA,EAAc,IAAIhvC,MAAM+uC,EAAOzvC,QAC5BD,EAAI,EAAGA,EAAI0vC,EAAOzvC,OAAQD,IACjC2vC,EAAY3vC,GAAK,KAAK+sC,gBAAgB2C,EAAO1vC,IAExC2vC,OAAAA,IAkLX,CAAA,IAAA,oBA/KoBrB,MAAAA,SAAAA,GACR,OAAA,KAAK3c,OAAO1xB,QACb,KAAA,EACI,OAAA,KAAK2vC,oBAAoBtB,GAAgB,KAAKuB,gBAClD,KAAA,EACI,OAAA,KAAKC,oBAAoBxB,GAAgB,KAAKuB,gBAClD,KAAA,EACI,OAAA,KAAKE,oBAAoBzB,GAAgB,KAAKuB,gBACvD,QACQ,MAAA,IAAI3/B,MAAM,8BAsKxB,CAAA,IAAA,uBAlKuBy+B,MAAAA,SAAAA,GACX,OAAA,KAAKhd,OAAO1xB,QACb,KAAA,EACI,OAAA,KAAK+vC,uBAAuBrB,GAAsB,KAAKsB,mBAChE,QACQ,MAAA,IAAI//B,MAAM,8BA6JxB,CAAA,IAAA,mBAzJqB,MAAA,WACjB,MAAA,yHAwJJ,CAAA,IAAA,wCAlJ0C,MAAA,WAC9B,OAAA,KAAK0mB,YACN,IAAA,iBACA,IAAA,SACA,IAAA,UACA,IAAA,QACI,MAAA,eACJ,IAAA,WACA,IAAA,WACA,IAAA,WACI,MAAA,QACT,QACM,GAAA,KAAKkE,UACA,MAAA,eAEH,MAAA,IAAI5qB,MAA+B,wBAAA,OAAA,KAAK0mB,gBAmItD,CAAA,IAAA,sBA/HsB0X,MAAAA,SAAAA,GAGd,KADF3c,OAAAA,IAEIue,EAAoB,KAAKC,wCAEVD,MAAAA,8DAAAA,OAAAA,EAClB,oBAAA,OAAA,KAAKE,eAAe,SAAAtS,GAA8BA,MAAAA,gBAAAA,OAAAA,EAAUt5B,KAAe0rC,WAAAA,OAAAA,EAA9C,kBAA+Era,KAAK,QACjH,UAAA,OAAA,KAAKua,eAAe,SAAAtS,GAAqCA,MAAAA,uBAAAA,OAAAA,EAAUt5B,KAAtC,SAAkDqxB,KAAK,QAKlFyY,mIAAAA,OAAAA,EARL,aA0HJ,CAAA,IAAA,sBA9GsBA,MAAAA,SAAAA,GAGd,KADF3c,OAAAA,IAEIue,EAAoB,KAAKC,wCAI5B,MAAA,yHAAA,OAAA,KAAKC,eAAe,SAAAtS,GAA8BA,MAAAA,gBAAAA,OAAAA,EAAUt5B,KAA/B,8BAAgEqxB,KAAK,QAClG,UAAA,OAAA,KAAKua,eAAe,SAAAtS,GAAqCA,MAAAA,uBAAAA,OAAAA,EAAUt5B,KAAtC,SAAkDqxB,KAAK,QAInDqa,yIAAAA,OAAAA,EAC/B,sBAAA,OAAA,KAAKE,eAAe,SAAAtS,GAA+BA,MAAAA,iBAAAA,OAAAA,EAAUt5B,KAAkBs5B,cAAAA,OAAAA,EAAUt5B,KAAiB0rC,cAAAA,OAAAA,EAA7E,kBAA8Gra,KAAK,IAG9IyY,qFAAAA,OAAAA,EAZP,sBAyGJ,CAAA,IAAA,yBAxFyBA,MAAAA,SAAAA,GAGjB,KADF3c,OAAAA,IAEIue,EAAoB,KAAKC,wCAG5B,MAAA,iFAAA,OAAA,KAAKC,eAAe,SAAAtS,GAA8BA,MAAAA,gBAAAA,OAAAA,EAAUt5B,KAA/B,8BAAgEqxB,KAAK,QAClG,UAAA,OAAA,KAAKua,eAAe,SAAAtS,GAAqCA,MAAAA,uBAAAA,OAAAA,EAAUt5B,KAAtC,SAAkDqxB,KAAK,QAIlF,yGAAA,OAAA,KAAKua,eAAe,SAAAtS,GAA+BA,MAAAA,iBAAAA,OAAAA,EAAUt5B,KAAkBs5B,cAAAA,OAAAA,EAAUt5B,KAAiB0rC,cAAAA,OAAAA,EAA7E,kBAA8Gra,KAAK,IAG9IyY,qFAAAA,OAAAA,EAVP,sBAmFJ,CAAA,IAAA,sBApEsBA,MAAAA,SAAAA,GAGd,KADF3c,OAAAA,IAEIue,EAAoB,KAAKC,wCAK5B,MAAA,+JAAA,OAAA,KAAKC,eAAe,SAAAtS,GAA8BA,MAAAA,gBAAAA,OAAAA,EAAUt5B,KAA/B,8BAAgEqxB,KAAK,QAClG,UAAA,OAAA,KAAKua,eAAe,SAAAtS,GAAqCA,MAAAA,uBAAAA,OAAAA,EAAUt5B,KAAtC,SAAkDqxB,KAAK,QAIlF,sIAAA,OAAA,KAAKua,eAAe,SAAAtS,GAA+BA,MAAAA,iBAAAA,OAAAA,EAAUt5B,KAAkBs5B,cAAAA,OAAAA,EAAUt5B,KAA5D,iCAA+FqxB,KAAK,UAG/Fqa,sHAAAA,OAAAA,EAChC,wBAAA,OAAA,KAAKE,eAAe,SAAAtS,GAA+BA,MAAAA,iBAAAA,OAAAA,EAAUt5B,KAAmBs5B,eAAAA,OAAAA,EAAUt5B,KAAiB0rC,cAAAA,OAAAA,EAA9E,kBAA+Gra,KAAK,YAG/IyY,2FAAAA,OAAAA,EAhBT,iCA+DJ,CAAA,IAAA,gBAzCkB,MAAA,WACV,OAAC,KAAK5R,WAKL,gDAAA,OAAA,KAAKA,WAAW/F,IAAI,SAAAmH,GAAiBA,MAAAA,GAAAA,OAAAA,EAAUze,SAAsBye,aAAAA,OAAAA,EAAUt5B,QAASqxB,KAAK,aAFlG,YAFS,yBAuCb,CAAA,IAAA,iBA/BiBhD,MAAAA,SAAAA,GACN,OAAoB,OAApB,KAAK6J,WAAsB,CAAC,IACjC,KAAKA,WAAW/F,IAAI9D,KA6B1B,CAAA,IAAA,UAxBUwd,MAAAA,SAAAA,GACFA,UACK,KAAK/U,SAsBlB,CAAA,IAAA,SAhBW,MAAA,WACDgV,IAAAA,EAAN,EAAA,EAAA,EAAA,WAAA,SAAA,MAAA,KAAA,MAEOA,OADPA,EAAK9R,cAAgBF,EAAgByP,WAAW,KAAM7D,GAAiBrqC,SAChEywC,IAaX,CAAA,IAAA,YAVY3e,MAAAA,SAAAA,GACQA,EAAAA,EAAAA,EAAAA,WAAAA,YAAAA,MAAAA,KAAAA,KAAAA,GACQ,IAAA,EAAA,EAAA,KAAKA,OAFb,GAEToF,EAFS,EAAA,GAEFC,EAFE,EAAA,GAGZ,KAAK8D,YACFqS,KAAAA,WAAa,KAAKx+B,QAAQ0/B,gBAAgBtX,EAAOC,GACjDoW,KAAAA,WAAa,IAAIjW,kBAAkBJ,EAAQC,EAAS,OAK/D,CAAA,CAAA,IAAA,iBAlBwBroB,MAAAA,SAAAA,QAkBxB,EAAA,GAAAtR,OAAOC,QAAU,CACf2vC,UAAAA;;ACnhBF,aAEA,SAASsD,EAAexZ,EAAOC,EAAQpyB,GAGjC,GADJoyB,GAAkB,KADlBD,GAAgB,GAEF,GAAKC,EAAS,GACnB,OAAA,KAGLsE,IAIAkV,EAJAlV,EAASoS,SAASC,cAAc,UAChC,IAACrS,EACI,OAAA,KAGTA,EAAOvE,MAAQA,EACfuE,EAAOtE,OAASA,EAEZ,IACFwZ,EAAKlV,EAAOuS,WAAW,QAASjpC,GAChC,MAAO4pB,GACH,IACFgiB,EAAKlV,EAAOuS,WAAW,qBAAsBjpC,GAC7C,MAAO4pB,GACA,OAAA,MAIPiiB,IAAAA,EAAgBD,EAAGE,aACnBC,EAAa,CACftV,QAAS,WACHuV,IAAAA,EAAcH,EAActmC,KAAKqmC,EAAI,sBACrCI,GACFA,EAAYA,gBAKdC,EAAY,CACdC,OAAQ,SAAU/f,EAAGC,GACnBsK,EAAOvE,MAAQhG,EACfuK,EAAOtE,OAAShG,IAIhB+f,EAAuBP,EAAGQ,yBAAyBvvC,QAmBhD+uC,OAlBPO,EAAqBhvC,KACnB,0BACA,gCACFyuC,EAAGQ,uBAAyB,WACnBD,OAAAA,EAAqBtvC,SAG9B+uC,EAAGE,aAAe,SAAUO,GACtBzsC,IAAAA,EAAOysC,EAAQne,cACftuB,MAAS,iCAATA,EACKqsC,EAEI,4BAATrsC,EACKmsC,EAEFF,EAActmC,KAAKqmC,EAAIS,IAGzBT,GAAM,KAGfnzC,OAAOC,QAAUizC;;ACnCjB,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA/BkBxyC,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACYnzB,EAAAA,QAAQ,oBAApBwzB,EAAAA,EAAAA,QAEF2f,EA4BN,SAAA,GA3Bc1f,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EA2BxB,OAAA,EAAA,EA5B6BokB,GA4B7B,EAAA,EAAA,CAAA,CAAA,IAAA,kBAvBoB,MAAA,WACCif,IAAAA,EAAO,KAAhB7hC,QACFwiC,EAAcX,EAAGY,oBACvBZ,EAAGa,gBAAgBb,EAAGc,YAAaH,GACnCX,EAAGe,qBACDf,EAAGc,YACHd,EAAGgB,kBACHhB,EAAGiB,WACH,KAAKhgB,QACL,GAEI9vB,IAAAA,EAAS,IAAI0vB,aAAa,KAAK5wB,KAAK,GAAK,KAAKA,KAAK,GAAK,GAEvDkB,OADP6uC,EAAGkB,WAAW,EAAG,EAAG,KAAKjxC,KAAK,GAAI,KAAKA,KAAK,GAAI+vC,EAAGmB,KAAMnB,EAAGoB,MAAOjwC,GAC5DA,IAUX,CAAA,IAAA,eARiB,MAAA,WACN,OAAA,KAAKkwC,oBAOhB,CAAA,IAAA,UALY,MAAA,WACD3gB,OAAAA,EAAM8G,WAAW,KAAK8Z,eAAgB,KAAKngB,OAAO,QAI7D,EAAA,GAAAt0B,OAAOC,QAAU,CACf4zC,eAAAA;;ACnBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBnzC,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFa,EAUN,SAAA,GATcvgB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAVmC+jC,GAUnC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAMkH,YAAY,KAAK0Z,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,QAI9E,EAAA,GAAAt0B,OAAOC,QAAU,CACfy0C,qBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBh0C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFc,EAUN,SAAA,GATcxgB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAVqC+jC,GAUrC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAMoH,cAAc,KAAKwZ,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,QAIhF,EAAA,GAAAt0B,OAAOC,QAAU,CACf00C,uBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBj0C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFe,EAUN,SAAA,GATczgB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAVqC+jC,GAUrC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAMsH,cAAc,KAAKsZ,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,GAAI,KAAKA,OAAO,QAIhG,EAAA,GAAAt0B,OAAOC,QAAU,CACf20C,uBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBl0C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFgB,EAUN,SAAA,GATc1gB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAVmC+jC,GAUnC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAMuH,YAAY,KAAKqZ,eAAgB,KAAKngB,OAAO,QAI9D,EAAA,GAAAt0B,OAAOC,QAAU,CACf40C,qBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBn0C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFiB,EAUN,SAAA,GATc3gB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAVqC+jC,GAUrC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAMwH,cAAc,KAAKoZ,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,QAIhF,EAAA,GAAAt0B,OAAOC,QAAU,CACf60C,uBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBp0C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFkB,EAUN,SAAA,GATc5gB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAVqC+jC,GAUrC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAMyH,cAAc,KAAKmZ,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,GAAI,KAAKA,OAAO,QAIhG,EAAA,GAAAt0B,OAAOC,QAAU,CACf80C,uBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBr0C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFmB,EAUN,SAAA,GATc7gB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAVmC+jC,GAUnC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAM0H,YAAY,KAAKkZ,eAAgB,KAAKngB,OAAO,QAI9D,EAAA,GAAAt0B,OAAOC,QAAU,CACf+0C,qBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBt0C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFoB,EAUN,SAAA,GATc9gB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAVqC+jC,GAUrC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAM2H,cAAc,KAAKiZ,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,QAIhF,EAAA,GAAAt0B,OAAOC,QAAU,CACfg1C,uBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBv0C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFqB,EAUN,SAAA,GATc/gB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAVqC+jC,GAUrC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAM4H,cAAc,KAAKgZ,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,GAAI,KAAKA,OAAO,QAIhG,EAAA,GAAAt0B,OAAOC,QAAU,CACfi1C,uBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBx0C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFsB,EAUN,SAAA,GATchhB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAV+B+jC,GAU/B,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAMgH,aAAa,KAAK4Z,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,QAI/E,EAAA,GAAAt0B,OAAOC,QAAU,CACfk1C,iBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBz0C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFuB,EAUN,SAAA,GATcjhB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAV+B+jC,GAU/B,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAMiH,aAAa,KAAK2Z,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,GAAI,KAAKA,OAAO,QAI/F,EAAA,GAAAt0B,OAAOC,QAAU,CACfm1C,iBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkB10C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFwB,EAUN,SAAA,GATclhB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,+BAFQ,EASxB,OAAA,EAAA,EAVuC+jC,GAUvC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAM6G,0BAA0B,KAAK+Z,eAAgB,KAAKngB,OAAO,QAI5E,EAAA,GAAAt0B,OAAOC,QAAU,CACfo1C,yBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkB30C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEFyB,EAUN,SAAA,GATcnhB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,+BAFQ,EASxB,OAAA,EAAA,EAVyC+jC,GAUzC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAMI,4BAA4B,KAAKwgB,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,QAI9F,EAAA,GAAAt0B,OAAOC,QAAU,CACfq1C,2BAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkB50C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,WAA3BmzC,EAAAA,EAAAA,eAEF0B,EAUN,SAAA,GATcphB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,+BAFQ,EASxB,OAAA,EAAA,EAVyC+jC,GAUzC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACDhgB,OAAAA,EAAMC,4BAA4B,KAAK2gB,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,GAAI,KAAKA,OAAO,QAI9G,EAAA,GAAAt0B,OAAOC,QAAU,CACfs1C,2BAAAA;;ACiBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA/BkB70C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACYnzB,EAAAA,QAAQ,oBAApBwzB,EAAAA,EAAAA,QAEFshB,EA4BN,SAAA,GA3BcrhB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,gBAFQ,EA2BxB,OAAA,EAAA,EA5BgCokB,GA4BhC,EAAA,EAAA,CAAA,CAAA,IAAA,kBAvBoB,MAAA,WACCif,IAAAA,EAAO,KAAhB7hC,QACFwiC,EAAcX,EAAGY,oBACvBZ,EAAGa,gBAAgBb,EAAGc,YAAaH,GACnCX,EAAGe,qBACDf,EAAGc,YACHd,EAAGgB,kBACHhB,EAAGiB,WACH,KAAKhgB,QACL,GAEI9vB,IAAAA,EAAS,IAAI8wB,WAAW,KAAKhyB,KAAK,GAAK,KAAKA,KAAK,GAAK,GAErDkB,OADP6uC,EAAGkB,WAAW,EAAG,EAAG,KAAKjxC,KAAK,GAAI,KAAKA,KAAK,GAAI+vC,EAAGmB,KAAMnB,EAAGsC,cAAenxC,GACpEA,IAUX,CAAA,IAAA,eARiB,MAAA,WACN,OAAA,IAAI0vB,aAAa,KAAKwgB,kBAAkBrc,UAOnD,CAAA,IAAA,UALY,MAAA,WACDtE,OAAAA,EAAMqG,iBAAiB,KAAKua,eAAgB,KAAKngB,OAAO,QAInE,EAAA,GAAAt0B,OAAOC,QAAU,CACfu1C,kBAAAA;;ACnBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkB90C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACsBnzB,EAAAA,QAAQ,cAA9B80C,EAAAA,EAAAA,kBAEFE,EAUN,SAAA,GATcvhB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,gBAFQ,EASxB,OAAA,EAAA,EAVkC0lC,GAUlC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACD3hB,OAAAA,EAAMsG,mBAAmB,KAAKsa,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,QAIrF,EAAA,GAAAt0B,OAAOC,QAAU,CACfy1C,oBAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBh1C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACsBnzB,EAAAA,QAAQ,cAA9B80C,EAAAA,EAAAA,kBAEFG,EAUN,SAAA,GATcxhB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,gBAFQ,EASxB,OAAA,EAAA,EAVkC0lC,GAUlC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACD3hB,OAAAA,EAAM0G,mBAAmB,KAAKka,eAAgB,KAAKngB,OAAO,GAAI,KAAKA,OAAO,GAAI,KAAKA,OAAO,QAIrG,EAAA,GAAAt0B,OAAOC,QAAU,CACf01C,oBAAAA;;ACFF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAZ8Bj1C,IAAAA,EAAAA,QAAQ,cAA9B80C,EAAAA,EAAAA,kBAEFI,EAUN,SAAA,GATczhB,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDrkB,KAAO,kBAFQ,EASxB,OAAA,EAAA,EAViC0lC,GAUjC,EAAA,EAAA,CAAA,CAAA,IAAA,UALY,MAAA,WACD,OAAA,KAAKf,mBAIhB,EAAA,GAAAz0C,OAAOC,QAAU,CACf21C,mBAAAA;;ACm5BF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAh6BmBl1C,IAAAA,EAAAA,QAAQ,aAAnBw9B,EAAAA,EAAAA,OACYx9B,EAAAA,QAAQ,iBAApBwzB,EAAAA,EAAAA,QACUxzB,EAAAA,QAAQ,eAAlBmzB,EAAAA,EAAAA,MACyBnzB,EAAAA,QAAQ,2BAAjCg0C,EAAAA,EAAAA,qBAC2Bh0C,EAAAA,QAAQ,8BAAnCi0C,EAAAA,EAAAA,uBAC2Bj0C,EAAAA,QAAQ,8BAAnCk0C,EAAAA,EAAAA,uBACyBl0C,EAAAA,QAAQ,2BAAjCm0C,EAAAA,EAAAA,qBAC2Bn0C,EAAAA,QAAQ,8BAAnCo0C,EAAAA,EAAAA,uBAC2Bp0C,EAAAA,QAAQ,8BAAnCq0C,EAAAA,EAAAA,uBACyBr0C,EAAAA,QAAQ,2BAAjCs0C,EAAAA,EAAAA,qBAC2Bt0C,EAAAA,QAAQ,8BAAnCu0C,EAAAA,EAAAA,uBAC2Bv0C,EAAAA,QAAQ,8BAAnCw0C,EAAAA,EAAAA,uBACmBx0C,EAAAA,QAAQ,mBAA3BmzC,EAAAA,EAAAA,eACqBnzC,EAAAA,QAAQ,sBAA7By0C,EAAAA,EAAAA,iBACqBz0C,EAAAA,QAAQ,sBAA7B00C,EAAAA,EAAAA,iBAC6B10C,EAAAA,QAAQ,8BAArC20C,EAAAA,EAAAA,yBAC+B30C,EAAAA,QAAQ,iCAAvC40C,EAAAA,EAAAA,2BAC+B50C,EAAAA,QAAQ,iCAAvC60C,EAAAA,EAAAA,2BACsB70C,EAAAA,QAAQ,sBAA9B80C,EAAAA,EAAAA,kBACwB90C,EAAAA,QAAQ,yBAAhCg1C,GAAAA,EAAAA,oBACwBh1C,GAAAA,QAAQ,yBAAhCi1C,GAAAA,GAAAA,oBACuBj1C,GAAAA,QAAQ,uBAA/Bk1C,GAAAA,GAAAA,mBAMFC,GAq4BN,SAAA,GA/nBc3pC,SAAAA,EAAAA,EAAQioB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACtBjoB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAQioB,KACT2hB,eAAiB,KACjBC,EAAAA,aAAe,KACfC,EAAAA,mBAAqB,KACrBC,EAAAA,aAAe,KACfzB,EAAAA,gBAAkB,KAClB0B,EAAAA,QAAU,KACVC,EAAAA,iBAAmB,KACnBC,EAAAA,eAAiB,KACjBC,EAAAA,uBAAyB,KACzBC,EAAAA,qBAAuB,KAXA,EA+nBhC,OAAA,EAAA,EAr4BuBpY,GAq4BvB,EAAA,EAAA,CAAA,CAAA,IAAA,gCApzBgCqY,MAAAA,SAAAA,GAErB,OADF5W,KAAAA,2BAA6B4W,EAC3B,OAkzBX,CAAA,IAAA,eA3yBevrB,MAAAA,SAAAA,GAEJ,OADFrmB,KAAAA,UAAYqmB,EACV,OAyyBX,CAAA,IAAA,mBAjyBmBA,MAAAA,SAAAA,GAGR,OAFP6I,EAAMiF,eAAe,SAAU,mBAAoB,0BAC9C0d,KAAAA,cAAgBxrB,EACd,QA8xBX,CAAA,CAAA,IAAA,iBAh4B0B,MAAA,WAChBimB,IAGA1c,EAAS,IAAI,KAHnB,sDAGsC,CACpCjjB,QAAS,KAAKmlC,YACdxY,OAAQ,KAAKyY,WACbpX,UAAU,EACVhL,OAAQ,CAAC,GACT3vB,UAAW,SACX40B,WAAY,WAEdhF,EAAOoiB,QACPpiB,EAAOyR,MACD1hC,IAAAA,EAASiwB,EAAO0hB,eAEf3xC,OADPiwB,EAAOyJ,SAAQ,GACM,IAAd15B,EAAO,KAg3BlB,CAAA,IAAA,+BA72BwC,MAAA,WAI9BiwB,IAAAA,EAAS,IAAI,KAHVqiB,SAAeC,EAAIC,GACnBD,OAAAA,EAAG,KAAK/Z,OAAOtJ,GAAKsjB,EAAG,KAAKha,OAAOtJ,IAEL9mB,WAAY,CACjD4E,QAAS,KAAKmlC,YACdxY,OAAQ,KAAKyY,WACbpX,UAAU,EACVhL,OAAQ,CAAC,GACTiF,WAAY,SACZ50B,UAAW,aAEPs7B,EAAO,CACX,CAAC,EAAG,SACJ,CAAC,EAAG,OAEN1L,EAAOoiB,MAAMzuB,MAAMqM,EAAQ0L,GAC3B1L,EAAOyR,IAAI9d,MAAMqM,EAAQ0L,GACnB37B,IAAAA,EAASiwB,EAAO0hB,eAIf3xC,OAHPiwB,EAAOyJ,SAAQ,GAGM,IAAd15B,EAAO,IAA0B,OAAdA,EAAO,KAu1BrC,CAAA,IAAA,qBA5zB8B,MAAA,WACpB,MAAA,IAAIuO,MAA8C,uCAAA,OAAA,KAAK1L,SA2zBjE,CAAA,IAAA,0BAtxBiC+E,MAAAA,SAAAA,GAStBvJ,IARD02B,IAAAA,EAAgB,GAChBiF,EAAgB,GAChBgI,EAAS,GACTyQ,EAAyB,aACzBC,EAAiB,eACnBr0C,EAAI,EACJ6/B,EAAe,KACfE,EAAe,KACZ//B,EAAIuJ,EAAOtJ,QAAQ,CAClBq0C,IAAAA,EAAO/qC,EAAOvJ,GACdu0C,EAAWhrC,EAAOvJ,EAAI,GACtBooB,EAAQub,EAAO1jC,OAAS,EAAI0jC,EAAOA,EAAO1jC,OAAS,GAAK,KAG1DmoB,GAAU,uBAAVA,GAA2C,MAATksB,GAA6B,MAAbC,EAI/C,GAAc,uBAAVnsB,GAA2C,MAATksB,GAA6B,MAAbC,EAQxD,GAAc,uBAAVnsB,GAA2C,MAATksB,GAA6B,MAAbC,EAIpD,GAAc,YAAVnsB,GAAgC,OAATksB,EAQ7B,GAAc,OAAVlsB,GAA2B,MAATksB,EAAtB,CAIE,GAAc,uBAAVlsB,EAAgC,CACrCksB,GAAS,MAATA,EAAc,CAChB3Q,EAAOtuB,MACP,MAEEi/B,GAAS,MAATA,GAA6B,MAAbC,GAAsC,MAAlBhrC,EAAOvJ,EAAI,IAAgC,MAAlBuJ,EAAOvJ,EAAI,IAAgC,MAAlBuJ,EAAOvJ,EAAI,IAAgC,MAAlBuJ,EAAOvJ,EAAI,GAAY,CACxI2jC,EAAO5hC,KAAK,oBACZg+B,EAAe,QACfF,EAAe,GACf7/B,GAAK,EACL,SACK,GAAa,MAATs0C,GAA6B,MAAbC,GAAsC,MAAlBhrC,EAAOvJ,EAAI,IAAgC,MAAlBuJ,EAAOvJ,EAAI,GAAY,CAC7F2jC,EAAO5hC,KAAK,oBACZg+B,EAAe,MACfF,EAAe,GACf7/B,GAAK,EACL,SACK,GAAa,MAATs0C,GAA6B,MAAbC,GAAsC,MAAlBhrC,EAAOvJ,EAAI,IAAgC,MAAlBuJ,EAAOvJ,EAAI,IAAgC,MAAlBuJ,EAAOvJ,EAAI,GAAY,CACtH2jC,EAAO5hC,KAAK,oBACZg+B,EAAe,OACfF,EAAe,GACf7/B,GAAK,EACL,SACK,GAAa,MAATs0C,GAA6B,MAAbC,GAAsC,MAAlBhrC,EAAOvJ,EAAI,IAAgC,MAAlBuJ,EAAOvJ,EAAI,IAAgC,MAAlBuJ,EAAOvJ,EAAI,GAAY,CACtH2jC,EAAO5hC,KAAK,oBACZg+B,EAAe,OACfF,EAAe,GACf7/B,GAAK,EACL,SACK,GAAa,MAATs0C,GAA6B,MAAbC,GAAsC,MAAlBhrC,EAAOvJ,EAAI,IAAgC,MAAlBuJ,EAAOvJ,EAAI,IAAgC,MAAlBuJ,EAAOvJ,EAAI,GAAY,CACtH2jC,EAAO5hC,KAAK,oBACZg+B,EAAe,OACfF,EAAe,GACf7/B,GAAK,EACL,eAMC,GAAc,qBAAVooB,EAA8B,CACjCyX,GAAiB,KAAjBA,EAAqB,CACnByU,GAAS,MAATA,EAAc,CAChBt0C,IACA,SAEE,IAACo0C,EAAuBp1C,KAAKs1C,GACzB,MAAA,IAAIpkC,MAAM,wCAGpB2vB,GAAgByU,EACXD,EAAer1C,KAAKu1C,KACvB5Q,EAAOtuB,MACPsmB,EAAc55B,KAAK89B,GACnBnJ,EAAc30B,KAAKwnC,GAAQxJ,KAM/B//B,SA/DE2jC,EAAO5hC,KAAK,sBACZ/B,SATA2jC,EAAOtuB,MACPrV,SALA2jC,EAAO5hC,KAAK,WACZ/B,GAAK,OATL2jC,EAAOtuB,MACPrV,GAAK,OALL2jC,EAAO5hC,KAAK,sBACZ/B,GAAK,EAwFL2jC,GAAAA,EAAO1jC,OAAS,EACZ,MAAA,IAAIiQ,MAAM,kCAEX,MAAA,CACLyrB,cAAAA,EACAjF,cAAAA,KAwqBN,CAAA,IAAA,2BApqBkCntB,MAAAA,SAAAA,GACvBggC,OAAAA,GAAQhgC,EAAO6B,MAAM,sBAAsB,MAmqBtD,CAAA,IAAA,iBAhqBwBmiC,MAAAA,SAAAA,EAAgBiH,GACpCjH,EAAehoB,MAAM,KAAM9F,WAKvB+0B,IACA7yC,EADA6yC,EAAAA,EAAWjB,QAHbA,EAAAA,EAAAA,QACA5kC,EAAAA,EAAAA,QACAwvB,EAAAA,EAAAA,UAGEqW,GAAyB,WAAzBA,EAAWxyC,UAAwB,CAC/B+uB,IAAAA,EAAIwiB,EAAQ,GACZviB,EAAIzzB,KAAK22B,KAAKqf,EAAQ,GAAK,GACjC5xC,EAAS,IAAI0vB,aAAaN,EAAIC,EAAI,EAAI,GACtCriB,EAAQ+iC,WAAW,EAAG,EAAG3gB,EAAO,EAAJC,EAAOriB,EAAQgjC,KAAMhjC,EAAQijC,MAAOjwC,OAC3D,CACC8yC,IAAAA,EAAQ,IAAIhiB,WAAW8gB,EAAQ,GAAKA,EAAQ,GAAK,GACvD5kC,EAAQ+iC,WAAW,EAAG,EAAG6B,EAAQ,GAAIA,EAAQ,GAAI5kC,EAAQgjC,KAAMhjC,EAAQmkC,cAAe2B,GACtF9yC,EAAS,IAAI0vB,aAAaojB,EAAMjf,QAK9Bgf,OAFJ7yC,EAASA,EAAOyvB,SAAS,EAAG+M,EAAU,GAAKA,EAAU,GAAKA,EAAU,IAEnC,IAA7BqW,EAAW7iB,OAAO1xB,OACb0B,EAC+B,IAA7B6yC,EAAW7iB,OAAO1xB,OACpBixB,EAAMoE,WAAW3zB,EAAQ6yC,EAAW7iB,OAAO,IACZ,IAA7B6iB,EAAW7iB,OAAO1xB,OACdixB,EAAMoE,WAAW3zB,EAAQ6yC,EAAW7iB,OAAO,GAAK6iB,EAAW7iB,OAAO,IACnEgF,IAAI,SAAS9F,GAChBK,OAAAA,EAAMoE,WAAWzE,EAAG2jB,EAAW7iB,OAAO,WAH1C,IAuoBX,CAAA,IAAA,OAp4BoB,IAAA,WACT,MAAA,QAm4BX,CAAA,IAAA,aAj1B0B,IAAA,WAChB,MAAA,IAAIzhB,MAAsC,+BAAA,OAAA,KAAK1L,SAg1BzD,CAAA,IAAA,cA10B2B,IAAA,WACjB,MAAA,IAAI0L,MAAuC,gCAAA,OAAA,KAAK1L,SAy0B1D,CAAA,IAAA,WAn0BwB,IAAA,WACd,MAAA,IAAI0L,MAAoC,6BAAA,OAAA,KAAK1L,WAk0BvD,EAAA,EAAA,CAAA,CAAA,IAAA,kBAjnBoB,MAAA,WACV,MAAA,IAAI0L,MAA0C,oCAAA,OAAA,KAAKxP,YAAY8D,SAgnBzE,CAAA,IAAA,qBAxmBqB84B,MAAAA,SAAAA,GACb,GAAA,KAAKxC,UAIA,OAHF+W,KAAAA,gBAAkB,KAAK6C,6BACvBvB,KAAAA,eAAiB,SAACrc,GAAWA,OAAAA,GAC7Buc,KAAAA,mBAAqBJ,GACnB,KAEL,GAAmB,aAAnB,KAAKjxC,UAGH,GAFC6vC,KAAAA,gBAAkB,KAAK6C,6BACvBvB,KAAAA,eAAiB,KAAKwB,+BACvB,KAAK9X,SAKC,OAJHyW,KAAAA,aAAe,KAAKsB,cACD,OAApB,KAAKlY,aACFmY,KAAAA,cAAgB,KAAKC,yBAEpB,KAAKle,YACN,IAAA,iBACA,IAAA,QACA,IAAA,SACA,IAAA,UACC,OAAA,KAAKjF,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBL,GACrBS,KAAAA,eAAiBA,GAAesB,qBAC9B,MACE,KAAKpjB,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBN,GACrBU,KAAAA,eAAiBA,GAAeuB,qBAC9B,OAEF3B,KAAAA,mBAAqBR,EACrBY,KAAAA,eAAiBA,GAAewB,mBAC9B,MAGN,IAAA,WACA,IAAA,WACA,IAAA,WACI,OAAA,KAAKC,gBAAgB5X,QAMxB,OAHgB,OAApB,KAAKZ,aACFmY,KAAAA,cAAgB,KAAKM,uBAEpB,KAAKve,YACN,IAAA,iBACA,IAAA,QACA,IAAA,SACA,IAAA,UAEC,OADC0c,KAAAA,aAAe,KAAKxB,aACrB,KAAKngB,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBL,GACrBS,KAAAA,eAAiBA,GAAesB,qBAChC3B,KAAAA,aAAeliB,EAAM0G,mBACnB,MACE,KAAKjG,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBN,GACrBU,KAAAA,eAAiBA,GAAeuB,qBAChC5B,KAAAA,aAAeliB,EAAMsG,mBACnB,OAEF6b,KAAAA,mBAAqBR,EACrBY,KAAAA,eAAiBA,GAAewB,mBAChC7B,KAAAA,aAAeliB,EAAMqG,iBACnB,MAIN,IAAA,WACA,IAAA,WACA,IAAA,WACI,OAAA,KAAK2d,gBAAgB5X,OAG7B,CAAA,GAAuB,WAAnB,KAAKt7B,UA2OR,MAAA,IAAIkO,MAAiC,2BAAA,OAAA,KAAKlO,UAAhD,MAxOI,GAFC6vC,KAAAA,gBAAkB,KAAKuD,8BACvBjC,KAAAA,eAAiB,KAAKiC,8BACvB,KAAKvY,SAMC,OALH4W,KAAAA,eAAiBA,GAAe4B,aAChC/B,KAAAA,aAAe,KAAKsB,cACD,OAApB,KAAKlY,aACFmY,KAAAA,cAAgB,KAAKC,yBAEpB,KAAKle,YACN,IAAA,iBACA,IAAA,QACA,IAAA,SACA,IAAA,UACC,OAAA,KAAK3C,oBACH,KAAKtC,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBT,EACnB,MACE,KAAKjhB,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBV,EACnB,OAEFU,KAAAA,mBAAqBX,EACnB,MAGL,KAAK/gB,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBZ,EACnB,MACE,KAAK9gB,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBb,EACnB,OAEFa,KAAAA,mBAAqBnC,EACnB,MAIR,IAAA,WACC,OAAA,KAAKvf,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBpB,EACnB,MACE,KAAKtgB,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBrB,EACnB,OAEFqB,KAAAA,mBAAqBtB,EACnB,MAGN,IAAA,WACC,OAAA,KAAKpgB,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBjB,EACnB,MACE,KAAKzgB,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBlB,EACnB,OAEFkB,KAAAA,mBAAqBnB,EACnB,MAGN,IAAA,WACC,OAAA,KAAKvgB,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBd,EACnB,MACE,KAAK5gB,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBf,EACnB,OAEFe,KAAAA,mBAAqBhB,EACnB,MAQX,GAJCiB,KAAAA,aAAe,KAAKxB,aACD,OAApB,KAAKpV,aACFmY,KAAAA,cAAgB,KAAKM,uBAExB,KAAKlhB,oBACC,OAAA,KAAK2C,YACN,IAAA,iBACA,IAAA,QACA,IAAA,SACA,IAAA,UACC,OAAA,KAAKjF,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBT,EACrBa,KAAAA,eAAiBA,GAAe6B,kDAChClC,KAAAA,aAAeliB,EAAMC,4BACnB,MACE,KAAKQ,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBV,EACrBc,KAAAA,eAAiBA,GAAe8B,kDAChCnC,KAAAA,aAAeliB,EAAMI,4BACnB,OAEF+hB,KAAAA,mBAAqBX,EACrBe,KAAAA,eAAiBA,GAAe+B,gDAChCpC,KAAAA,aAAeliB,EAAM6G,0BACnB,MAGN,IAAA,WACC,OAAA,KAAKpG,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBpB,EACrBwB,KAAAA,eAAiBA,GAAegC,qBAChCrC,KAAAA,aAAeliB,EAAMsH,cACnB,MACE,KAAK7G,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBrB,EACrByB,KAAAA,eAAiBA,GAAeiC,qBAChCtC,KAAAA,aAAeliB,EAAMoH,cACnB,OAEF+a,KAAAA,mBAAqBtB,EACrB0B,KAAAA,eAAiBA,GAAekC,mBAChCvC,KAAAA,aAAeliB,EAAMkH,YACnB,MAGN,IAAA,WACC,OAAA,KAAKzG,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBjB,EACrBqB,KAAAA,eAAiBA,GAAemC,qBAChCxC,KAAAA,aAAeliB,EAAMyH,cACnB,MACE,KAAKhH,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBlB,EACrBsB,KAAAA,eAAiBA,GAAeoC,qBAChCzC,KAAAA,aAAeliB,EAAMwH,cACnB,OAEF2a,KAAAA,mBAAqBnB,EACrBuB,KAAAA,eAAiBA,GAAeqC,mBAChC1C,KAAAA,aAAeliB,EAAMuH,YACnB,MAGN,IAAA,WACC,OAAA,KAAK9G,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBd,EACrBkB,KAAAA,eAAiBA,GAAesC,qBAChC3C,KAAAA,aAAeliB,EAAM4H,cACnB,MACE,KAAKnH,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBf,EACrBmB,KAAAA,eAAiBA,GAAeuC,qBAChC5C,KAAAA,aAAeliB,EAAM2H,cACnB,OAEFwa,KAAAA,mBAAqBhB,EACrBoB,KAAAA,eAAiBA,GAAewC,mBAChC7C,KAAAA,aAAeliB,EAAM0H,YACnB,WAIL,OAAA,KAAKhC,YACN,IAAA,iBACA,IAAA,QACA,IAAA,SACA,IAAA,UACC,OAAA,KAAKjF,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBZ,EACrBgB,KAAAA,eAAiBA,GAAeyC,oBAChC9C,KAAAA,aAAeliB,EAAMiH,aACnB,MACE,KAAKxG,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBb,EACrBiB,KAAAA,eAAiBA,GAAe0C,oBAChC/C,KAAAA,aAAeliB,EAAMgH,aACnB,OAEFmb,KAAAA,mBAAqBnC,EACrBuC,KAAAA,eAAiBA,GAAe2C,kBAChChD,KAAAA,aAAeliB,EAAM8G,WACnB,MAGN,IAAA,WACC,OAAA,KAAKrG,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBpB,EACrBwB,KAAAA,eAAiBA,GAAegC,qBAChCrC,KAAAA,aAAeliB,EAAMsH,cACnB,MACE,KAAK7G,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBrB,EACrByB,KAAAA,eAAiBA,GAAeiC,qBAChCtC,KAAAA,aAAeliB,EAAMoH,cACnB,OAEF+a,KAAAA,mBAAqBtB,EACrB0B,KAAAA,eAAiBA,GAAekC,mBAChCvC,KAAAA,aAAeliB,EAAMkH,YACnB,MAGN,IAAA,WACC,OAAA,KAAKzG,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBjB,EACrBqB,KAAAA,eAAiBA,GAAemC,qBAChCxC,KAAAA,aAAeliB,EAAMyH,cACnB,MACE,KAAKhH,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBlB,EACrBsB,KAAAA,eAAiBA,GAAeoC,qBAChCzC,KAAAA,aAAeliB,EAAMwH,cACnB,OAEF2a,KAAAA,mBAAqBnB,EACrBuB,KAAAA,eAAiBA,GAAeqC,mBAChC1C,KAAAA,aAAeliB,EAAMuH,YACnB,MAGN,IAAA,WACC,OAAA,KAAK9G,OAAO,GAAK,GACd0hB,KAAAA,mBAAqBd,EACrBkB,KAAAA,eAAiBA,GAAesC,qBAChC3C,KAAAA,aAAeliB,EAAM4H,cACnB,MACE,KAAKnH,OAAO,GAAK,GACrB0hB,KAAAA,mBAAqBf,EACrBmB,KAAAA,eAAiBA,GAAeuC,qBAChC5C,KAAAA,aAAeliB,EAAM2H,cACnB,OAEFwa,KAAAA,mBAAqBhB,EACrBoB,KAAAA,eAAiBA,GAAewC,mBAChC7C,KAAAA,aAAeliB,EAAM0H,YACnB,OAQX,MAAA,IAAI1oB,MAAgC,0BAAA,OAAA,KAAK0mB,WAA/C,QAiTJ,CAAA,IAAA,kBA1SoB,MAAA,WACV,MAAA,IAAI1mB,MAAV,0BAySJ,CAAA,IAAA,uBAtSyB,MAAA,WACb,OAAA,KAAK0mB,YACN,IAAA,iBACA,IAAA,QACA,IAAA,UACA,IAAA,SACI,OAAA,KAAKyf,6BACT,IAAA,WACI,OAAA,KAAKC,6BACT,IAAA,WACI,OAAA,KAAKC,6BACT,IAAA,WACI,OAAA,KAAKC,6BACd,QACQ,MAAA,IAAItmC,MAAoC,6BAAA,OAAA,KAAK0mB,gBAwR3D,CAAA,IAAA,mCAhRqC,MAAA,WAC3B,MAAA,IAAI1mB,MAAV,0BA+QJ,CAAA,IAAA,sCAzQwC,MAAA,WAC9B,MAAA,IAAIA,MAAV,0BAwQJ,CAAA,IAAA,mCAlQqC,MAAA,WAC3B,MAAA,IAAIA,MAAV,0BAiQJ,CAAA,IAAA,sCA3PwC,MAAA,WAC9B,MAAA,IAAIA,MAAV,0BA0PJ,CAAA,IAAA,mCApPqC,MAAA,WAC3B,MAAA,IAAIA,MAAV,0BAmPJ,CAAA,IAAA,sCA7OwC,MAAA,WAC9B,MAAA,IAAIA,MAAV,0BA4OJ,CAAA,IAAA,mCAtOqC,MAAA,WAC3B,MAAA,IAAIA,MAAV,0BAqOJ,CAAA,IAAA,sCA/NwC,MAAA,WAC9B,MAAA,IAAIA,MAAV,0BA8NJ,CAAA,IAAA,yBAxN2B,MAAA,WACjB,MAAA,IAAIA,MAAV,0BAuNJ,CAAA,IAAA,qCAjNuC,MAAA,WAC7B,MAAA,IAAIA,MAAV,0BAgNJ,CAAA,IAAA,4BA1M8B,MAAA,WACpB,MAAA,IAAIA,MAAV,0BAyMJ,CAAA,IAAA,sBAtMwB,MAAA,WAChB,OAAA,KAAK4qB,UACA,KAAK2b,yBACgB,WAAnB,KAAKz0C,UACV,KAAKiyB,oBACA,KAAKyiB,qCAEP,KAAKC,uBAEL,KAAKC,8BA6LlB,CAAA,IAAA,6BAzL+B,MAAA,WACpB1lB,OAAAA,EAAMgF,cAAc,KAAK2gB,oCAC9B3lB,EAAMgF,cAAc,KAAK4gB,yCAuL/B,CAAA,IAAA,6BApL+B,MAAA,WACpB5lB,OAAAA,EAAMgF,cAAc,KAAK6gB,oCAC9B7lB,EAAMgF,cAAc,KAAK8gB,yCAkL/B,CAAA,IAAA,6BA/K+B,MAAA,WACpB9lB,OAAAA,EAAMgF,cAAc,KAAK+gB,oCAC9B/lB,EAAMgF,cAAc,KAAKghB,yCA6K/B,CAAA,IAAA,6BA1K+B,MAAA,WACpBhmB,OAAAA,EAAMgF,cAAc,KAAKihB,oCAC9BjmB,EAAMgF,cAAc,KAAKkhB,yCAwK/B,CAAA,IAAA,gBArKkB,MAAA,WACP,OAAA,IAAI,KAAK/D,mBAAmB,CACjC5hB,QAAS,KAAK4lB,cACd52C,KAAM,KAAK8yC,QACX7hB,WAAY,KAAKyM,UACjBxM,OAAQ,KAAKA,OACbhjB,QAAS,KAAKA,YA+JpB,CAAA,IAAA,+BA5JiC,MAAA,WACzB,GAAmB,aAAnB,KAAK3M,UAA0B,MAAM,IAAIkO,MAAM,4CAEjDqjC,IAAAA,EAEE,KAFFA,QACS/C,EACP,KADF7hC,QAEIhN,EAAS,IAAI8wB,WAAW8gB,EAAQ,GAAKA,EAAQ,GAAK,GAEjD5xC,OADP6uC,EAAGkB,WAAW,EAAG,EAAG6B,EAAQ,GAAIA,EAAQ,GAAI/C,EAAGmB,KAAMnB,EAAGsC,cAAenxC,GAChEA,IAoJX,CAAA,IAAA,iCAjJmC,MAAA,WACxB,OAAA,IAAI0vB,aAAa,KAAKqjB,+BAA+Blf,UAgJhE,CAAA,IAAA,gCA7IkC,MAAA,WAC1B,GAAmB,WAAnB,KAAKxzB,UAAwB,MAAM,IAAIkO,MAAM,0CAE/CqjC,IAAAA,EAEE,KAFFA,QACS/C,EACP,KADF7hC,QAEIoiB,EAAIwiB,EAAQ,GACZviB,EAAIuiB,EAAQ,GACZ5xC,EAAS,IAAI0vB,aAAaN,EAAIC,EAAI,GAEjCrvB,OADP6uC,EAAGkB,WAAW,EAAG,EAAG3gB,EAAGC,EAAGwf,EAAGmB,KAAMnB,EAAGoB,MAAOjwC,GACtCA,IAmIX,CAAA,IAAA,+CAhIiD,MAAA,WACzC,GAAmB,WAAnB,KAAKK,UAAwB,MAAM,IAAIkO,MAAM,0CAE/CqjC,IAAAA,EAEE,KAFFA,QACS/C,EACP,KADF7hC,QAEIoiB,EAAIwiB,EAAQ,GACZviB,EAAIuiB,EAAQ,GACZ5xC,EAAS,IAAI0vB,aAAaN,EAAIC,EAAI,GAEjCrvB,OADP6uC,EAAGkB,WAAW,EAAG,EAAG3gB,EAAGC,EAAGwf,EAAGmB,KAAMnB,EAAGoB,MAAOjwC,GACtCA,IAsHX,CAAA,IAAA,YA9GY8tC,MAAAA,SAAAA,GAEGe,IAAAA,EAEP,KAFF7hC,QAGsBgjB,EAAAA,EADpB,KADFA,OAHY,GAKPoF,EALO,EAAA,GAKAC,EALA,EAAA,GAMRF,EAAS,IAAIrE,WAAWsE,EAAQC,EAAS,GAGxC,OAFPwZ,EAAGkB,WAAW,EAAG,EAAG3a,EAAOC,EAAQwZ,EAAGmB,KAAMnB,EAAGsC,cAAehc,GAEvD,IAAIK,mBAAmBsY,EAAO3Y,EAAS5F,EAAM2F,WAAWC,EAAQC,EAAOC,IAASxB,UAqG3F,CAAA,IAAA,wBAlG0B,MAAA,WAIjB,IAHC7zB,IAAAA,EAAS,CACbA,OAAQ,KAAK2xC,gBAENtzC,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAC1C2B,EAAO,KAAK+6B,WAAW18B,GAAGqf,UAAY,IAAI,KAAKg0B,mBAAmB,CAChE5hB,QAAS,KAAK6lB,wBAAwBt3C,GACtCS,KAAM,KAAK8yC,QACX7hB,WAAY,KAAKyM,UACjBxM,OAAQ,KAAKA,OACbhjB,QAAS,KAAKA,UACb4oC,UAEE51C,OAAAA,IAqFX,CAAA,IAAA,0BAlF4B,MAAA,WAInB,IAHCA,IAAAA,EAAS,CACbA,OAAQ,KAAK2xC,gBAENtzC,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAC1C2B,EAAO,KAAK+6B,WAAW18B,GAAGqf,UAAY,IAAI,KAAKg0B,mBAAmB,CAChE5hB,QAAS,KAAK6lB,wBAAwBt3C,GACtCS,KAAM,KAAK8yC,QACX7hB,WAAY,KAAKyM,UACjBxM,OAAQ,KAAKA,OACbhjB,QAAS,KAAKA,UAGXhN,OAAAA,IAqEX,CAAA,IAAA,YAlEYgwB,MAAAA,SAAAA,GAEJ,GADYA,EAAAA,EAAAA,EAAAA,WAAAA,YAAAA,MAAAA,KAAAA,KAAAA,GACZ,KAAKtlB,QAAS,CACX8xB,KAAAA,UAAY,CAAC,KAAKxM,OAAO,GAAI,KAAKA,OAAO,IAAM,EAAG,KAAKA,OAAO,IAAM,GACpE4hB,KAAAA,QAAUriB,EAAM6C,qBAAqB,CACxCE,oBAAqB,KAAKA,oBAC1BjyB,UAAW,KAAKA,WACf,KAAK2vB,QACS6e,IAAAA,EAAO,KAAhB7hC,QACR6hC,EAAGa,gBAAgBb,EAAGc,YAAa,KAAKH,aACnCqG,KAAAA,mBACArG,KAAAA,YAAYpa,MAAQ,KAAKwc,QAAQ,GACjCpC,KAAAA,YAAYna,OAAS,KAAKuc,QAAQ,GAClC5kC,KAAAA,QAAQ8oC,SAAS,EAAG,EAAG,KAAKC,WAAW,GAAI,KAAKA,WAAW,IAC3Dpc,KAAAA,OAAOvE,MAAQ,KAAK2gB,WAAW,GAC/Bpc,KAAAA,OAAOtE,OAAS,KAAK0gB,WAAW,GAChCC,KAAAA,sBACD,KAAKjb,YAAc,KAAKA,WAAWz8B,OAAS,GACzC23C,KAAAA,0BAGF,OAAA,OA6CX,CAAA,IAAA,eA3CiB,MAAA,WACN,OAAA,KAAKxE,aACV,KAAKD,iBACL,KAAKxhB,OAAO,GACZ,KAAKA,OAAO,GACZ,KAAKA,OAAO,QAsClB,EAAA,GAjCM8hB,GAAiBt0C,OAAOilC,OAAO,CACnCyT,wBAAyBrrB,OAAO,2BAChCyoB,mBAAoBzoB,OAAO,sBAC3BwoB,qBAAsBxoB,OAAO,wBAC7BuoB,qBAAsBvoB,OAAO,wBAC7BsrB,cAAetrB,OAAO,iBACtBurB,yBAA0BvrB,OAAO,4BACjC4pB,kBAAmB5pB,OAAO,qBAC1B2pB,oBAAqB3pB,OAAO,uBAC5B0pB,oBAAqB1pB,OAAO,uBAC5BmpB,mBAAoBnpB,OAAO,sBAC3BkpB,qBAAsBlpB,OAAO,wBAC7BipB,qBAAsBjpB,OAAO,wBAC7BspB,mBAAoBtpB,OAAO,sBAC3BqpB,qBAAsBrpB,OAAO,wBAC7BopB,qBAAsBppB,OAAO,wBAC7BypB,mBAAoBzpB,OAAO,sBAC3BwpB,qBAAsBxpB,OAAO,wBAC7BupB,qBAAsBvpB,OAAO,wBAC7B6oB,aAAc7oB,OAAO,gBACrBgpB,gDAAiDhpB,OAAO,oCACxD+oB,kDAAmD/oB,OAAO,sCAC1D8oB,kDAAmD9oB,OAAO,wCAGtD+c,GAAU,CACdyO,IAAK,UACLC,MAAO,SACPC,KAAM,WACNC,KAAM,WACNC,KAAM,YAGR/6C,OAAOC,QAAU,CACf41C,SAAAA,GACAO,eAAAA;;AC0lBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA5/CkB11C,IAAAA,EAAAA,QAAQ,eAAlBmzB,EAAAA,EAAAA,MACiBnzB,EAAAA,QAAQ,oBAAzBkhC,EAAAA,EAAAA,aAGFoZ,EAAe,QACfC,EAAc,QAOdC,EAg/CN,SAAA,GA/+CchvC,SAAAA,EAAAA,EAAQioB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,GACtBjoB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAQioB,IACVA,GAAYA,EAAS1nB,eAAe,gCACjCkzB,EAAAA,2BAA6BxL,EAASwL,4BAHjB,EA++ChC,OAAA,EAAA,EAh/CgCiC,GAg/ChC,EAAA,EAAA,CAAA,CAAA,IAAA,cAl+CctJ,MAAAA,SAAAA,EAAKiR,GAEX,GAAA,KAAKpG,aACPoG,EAAO7kC,KAAK,YACP,CAGD,IAAC,KAAK60B,WACW,KAAKoP,mBAEjBpP,KAAAA,WAAa,KAAKqL,QAAQtM,EAAIjjB,MACX,mBAApB,KAAKkkB,aACFA,KAAAA,WAAa,WAKhBA,IAAAA,EAAe,KAAfA,WACJ,GAACA,EAEE,CACCzpB,IAAAA,EAAOo8B,EAAQ3S,GACjB,IAACzpB,EACG,MAAA,IAAI+C,MAAsB0mB,gBAAAA,OAAAA,IAElCgQ,EAAO7kC,KAAKoL,QANZy5B,EAAO7kC,KAAK,QAaZ,GAJJ6kC,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,KAAKyC,MACjBoiC,EAAO7kC,KAAK,MAEP,KAAKy+B,aAEH,IAAA,IAAIxgC,EAAI,EAAGA,EAAI,KAAK27B,cAAc17B,SAAUD,EAAG,CAC5C6/B,IAAAA,EAAe,KAAKlE,cAAc37B,GAEpCA,EAAI,GACN4mC,EAAO7kC,KAAK,MAEVg+B,IAAAA,EAAe,KAAKrJ,cAAc,KAAKiF,cAAcnZ,QAAQqd,IAE7D,IAACE,EACG,MAAA,KAAKmE,eAAmCrE,oBAAAA,OAAAA,EAAqBlK,SAAAA,GAEhD,mBAAjBoK,IACGrJ,KAAAA,cAAc12B,GAAK+/B,EAAe,UAEnC5yB,IAAAA,EAAOo8B,EAAQxJ,GACjB,IAAC5yB,EACG,MAAA,KAAK+2B,eAAe,wBAAyBvO,GAErDiR,EAAO7kC,KAAKoL,GACZy5B,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,SACZ6kC,EAAO7kC,KAAK89B,GAKhB+G,EAAO7kC,KAAK,SAGP,IAAA,IAAI/B,EAAI,EAAGA,EAAI21B,EAAIjjB,KAAKA,KAAKzS,SAAUD,EACrCglC,KAAAA,WAAWrP,EAAIjjB,KAAKA,KAAK1S,GAAI4mC,GAClCA,EAAO7kC,KAAK,MAKP6kC,OADPA,EAAO7kC,KAAK,OACL6kC,IA45CX,CAAA,IAAA,qBAn5CqBjR,MAAAA,SAAAA,EAAKiR,GAClB,IAACjR,EAAIrf,SAAU,MAAM,KAAK4tB,eAAe,8BAA+BvO,GACvE+U,KAAAA,UAAU,2BACTv9B,IAAAA,EAAO,KAAK80B,QAAQtM,EAAIrf,UACzBs0B,KAAAA,SAAS,2BAERjpC,IAAAA,EAAS,GAUP,OARH,KAAKi1B,aAEDA,KAAAA,WADM,mBAATzpB,GAAsC,YAATA,EACb,SAEAA,GAId,KAAKypB,YACN,IAAA,iBACA,IAAA,SACA,IAAA,QACKzpB,OAAAA,GACD,IAAA,UACHxL,EAAOI,KAAK,UACPijC,KAAAA,WAAWrP,EAAIrf,SAAU3U,GAC9BA,EAAOI,KAAK,KACZ,MACG,IAAA,iBACEy2C,KAAAA,mBAAmB7iB,EAAIrf,SAAU3U,GAIZ,YAAtB,KAAKsgC,QAAQtM,KACfh0B,EAAO8kC,QAAQ,UACf9kC,EAAOI,KAAK,MAEd,MACF,QACOijC,KAAAA,WAAWrP,EAAIrf,SAAU3U,GAElC,MACG,IAAA,UACKwL,OAAAA,GACD,IAAA,QACA,IAAA,SACEsrC,KAAAA,mBAAmB9iB,EAAIrf,SAAU3U,GACtC,MACG,IAAA,iBACE+2C,KAAAA,qBAAqB/iB,EAAIrf,SAAU3U,GACxC,MACF,QACOqjC,KAAAA,WAAWrP,EAAIrf,SAAU3U,GAElC,MACG,IAAA,WACA,IAAA,WACA,IAAA,WACA,IAAA,QACEqjC,KAAAA,WAAWrP,EAAIrf,SAAU3U,GAC9B,MACF,QACQ,MAAA,KAAKuiC,eAAwC,yBAAA,OAAA,KAAKtN,YAAcjB,GAYnEiR,OATH,KAAKpG,cACPoG,EAAO7kC,KAAwBJ,kBAAAA,OAAAA,EAAOk0B,KAAK,IAA3C,MACA+Q,EAAO7kC,KAAK,YACH,KAAKg/B,aACd6F,EAAO7kC,KAAyB,mBAAA,OAAA,KAAKyC,KAAY7C,OAAAA,OAAAA,EAAOk0B,KAAK,IAA7D,MACA+Q,EAAO7kC,KAAgC,0BAAA,OAAA,KAAKyC,KAA5C,OAEAoiC,EAAO7kC,KAAgBJ,UAAAA,OAAAA,EAAOk0B,KAAK,IAAnC,MAEK+Q,IA20CX,CAAA,IAAA,aAh0CajR,MAAAA,SAAAA,EAAKiR,GAEVpT,GAAAA,MAAMmC,EAAIj4B,OACN,MAAA,KAAKwmC,eACT,uCAAyCvO,EAAIj4B,MAC7Ci4B,GAIE50B,IAAAA,EAAS40B,GAAAA,OAAAA,EAAI9qB,MAAS8qB,KAAAA,OAAAA,EAAI7qB,KAmBzB87B,OAlBH/S,OAAOC,UAAU6B,EAAIj4B,OACnB,KAAK0nC,QAAQ,qBAAuB,KAAKA,QAAQ,uBAAyB,KAAKA,QAAQ,qBACpFvB,KAAAA,aAAa9iC,GAAO,UACzB6lC,EAAO7kC,KAAQ4zB,GAAAA,OAAAA,EAAIj4B,UACV,KAAK0nC,QAAQ,qBAAuB,KAAKA,QAAQ,kBACrDvB,KAAAA,aAAa9iC,GAAO,SACzB6lC,EAAO7kC,KAAQ4zB,GAAAA,OAAAA,EAAIj4B,MAAnB,QAKO,KAAK0nC,QAAQ,uBAAyB,KAAKA,QAAQ,qBACvDvB,KAAAA,aAAa9iC,GAAO,UACzB6lC,EAAO7kC,KAAKxE,KAAKo7C,MAAMhjB,EAAIj4B,UAEtBmmC,KAAAA,aAAa9iC,GAAO,SACzB6lC,EAAO7kC,KAAQ4zB,GAAAA,OAAAA,EAAIj4B,SAEdkpC,IAoyCX,CAAA,IAAA,sBA3xCsBjR,MAAAA,SAAAA,EAAKiR,GACnB,GAAA,KAAKgS,0BAA0BjjB,EAAKiR,GAC/BA,OAAAA,EAGL,GAAA,KAAK5J,4BAA+C,MAAjBrH,EAAIzZ,SAAkB,CAGnD,OAFR0qB,EAAO7kC,KAAK,uBACP2oC,KAAAA,UAAU,kBACP,KAAKzI,QAAQtM,EAAI/d,OAClB,IAAA,UACEihC,KAAAA,iBAAiBljB,EAAI/d,KAAMgvB,GAChC,MACG,IAAA,iBACE4R,KAAAA,mBAAmB7iB,EAAI/d,KAAMgvB,GAClC,MACF,QACO5B,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAGtB,OADRA,EAAO7kC,KAAK,MACJ,KAAKkgC,QAAQtM,EAAI9d,QAClB,IAAA,UACEghC,KAAAA,iBAAiBljB,EAAI9d,MAAO+uB,GACjC,MACG,IAAA,iBACE4R,KAAAA,mBAAmB7iB,EAAI9d,MAAO+uB,GACnC,MACF,QACO5B,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GAIxBA,OAFFgE,KAAAA,SAAS,kBACdhE,EAAO7kC,KAAK,KACL6kC,EAGTA,EAAO7kC,KAAK,KACN+2C,IAAAA,EAAW,KAAK7W,QAAQtM,EAAI/d,OAAS,SACrCytB,EAAY,KAAKpD,QAAQtM,EAAI9d,QAAU,SACzC,IAACihC,IAAazT,EACV,MAAA,KAAKnB,eAA8CvO,8BAAAA,GAErD50B,IAAAA,EAAM+3C,EAAW,MAAQzT,EACvBtkC,OAAAA,GACD,IAAA,oBACE2pC,KAAAA,UAAU,oBACV1F,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxC8oB,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GACtBgE,KAAAA,SAAS,oBACd,MACG,IAAA,iBACA,IAAA,iBACA,IAAA,gBACA,IAAA,kBACEF,KAAAA,UAAU,kBACV1F,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxC8oB,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GACtBgE,KAAAA,SAAS,kBACd,MACG,IAAA,kCACC,KAAKxF,QAAQ,uBAAyB,KAAKA,QAAQ,qBAChDsF,KAAAA,UAAU,oBACV1F,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxC8oB,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GACtBgE,KAAAA,SAAS,sBAETF,KAAAA,UAAU,kBACV8N,KAAAA,mBAAmB7iB,EAAI/d,KAAMgvB,GAClCA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxCs8B,KAAAA,mBAAmB7iB,EAAI9d,MAAO+uB,GAC9BgE,KAAAA,SAAS,mBAEhB,MAEG,IAAA,kBACA,IAAA,mBACCjV,IAAiB,MAAjBA,EAAIzZ,UAAqC,MAAjByZ,EAAIzZ,UAAuC,YAAnByZ,EAAI9d,MAAM1K,QAEvD0mB,OAAOC,UAAU6B,EAAI9d,MAAMna,OAAQ,CACjCgtC,KAAAA,UAAU,kBACVmO,KAAAA,iBAAiBljB,EAAI/d,KAAMgvB,GAChCA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxC8oB,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GACtBgE,KAAAA,SAAS,kBACd,MAOAjV,GAJC+U,KAAAA,UAAU,oBACV1F,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxCwuB,KAAAA,UAAU,sBACQ,YAAnB/U,EAAI9d,MAAM1K,KAAoB,CAC1B6rC,IAAAA,EAAgB,GAGlBC,GAFCjU,KAAAA,WAAWrP,EAAI9d,MAAOmhC,GAEP,YADA,KAAK/W,QAAQtM,EAAI9d,OAI7B,MAAA,KAAKqsB,eAA2DvO,2CAAAA,GAFtEiR,EAAO7kC,KAAKi3C,EAAcnjB,KAAK,UAKjC+Q,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GAC3BA,EAAO7kC,KAAK,KAET6oC,KAAAA,SAAS,sBACTA,KAAAA,SAAS,oBACd,MACG,IAAA,2BACEF,KAAAA,UAAU,oBACV1F,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxCw8B,KAAAA,qBAAqB/iB,EAAI9d,MAAO+uB,GAChCgE,KAAAA,SAAS,oBACd,MAEG,IAAA,mBACEF,KAAAA,UAAU,kBACV1F,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxC28B,KAAAA,iBAAiBljB,EAAI9d,MAAO+uB,GAC5BgE,KAAAA,SAAS,kBACd,MACG,IAAA,yBACA,IAAA,0BACC,KAAKxF,QAAQ,qBACVsF,KAAAA,UAAU,oBACf9D,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxCw8B,KAAAA,qBAAqB/iB,EAAI9d,MAAO+uB,GAChCgE,KAAAA,SAAS,sBAETF,KAAAA,UAAU,kBACV1F,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxCs8B,KAAAA,mBAAmB7iB,EAAI9d,MAAO+uB,GAC9BgE,KAAAA,SAAS,mBAEhB,MACG,IAAA,yBACA,IAAA,0BACC,KAAKxF,QAAQ,qBAAuB,KAAKA,QAAQ,qBAAuB,KAAKA,QAAQ,uBAClFsF,KAAAA,UAAU,oBACVgO,KAAAA,qBAAqB/iB,EAAI/d,KAAMgvB,GACpCA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxCu8B,KAAAA,mBAAmB9iB,EAAI9d,MAAO+uB,GAC9BgE,KAAAA,SAAS,sBAETF,KAAAA,UAAU,kBACV1F,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxCwuB,KAAAA,UAAU,oBACV1F,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GACtBgE,KAAAA,SAAS,oBACTA,KAAAA,SAAS,mBAEhB,MACG,IAAA,2BACEF,KAAAA,UAAU,oBACVgO,KAAAA,qBAAqB/iB,EAAI/d,KAAMgvB,GACpCA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxC8oB,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GACtBgE,KAAAA,SAAS,oBACd,MAEG,IAAA,oBACEF,KAAAA,UAAU,oBACV1F,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxC8oB,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GACtBgE,KAAAA,SAAS,oBACd,MAEG,IAAA,kBACEF,KAAAA,UAAU,kBACV1F,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAC1BA,EAAO7kC,KAAKg3C,EAAYpjB,EAAIzZ,WAAayZ,EAAIzZ,UACxC28B,KAAAA,iBAAiBljB,EAAI9d,MAAO+uB,GAC5BgE,KAAAA,SAAS,kBACd,MAEF,QACQ,MAAA,KAAK1G,eAAsDnjC,uCAAAA,OAAAA,GAAO40B,GAIrEiR,OAFPA,EAAO7kC,KAAK,KAEL6kC,IA8lCX,CAAA,IAAA,4BA3lC4BjR,MAAAA,SAAAA,EAAKiR,GACvBsS,IAAAA,EAAgB,KAAKC,kCAAkCxjB,EAAKiR,GAC9DsS,GAAAA,EACKA,OAAAA,EAEHE,IAIAC,EAJyB,CACxB,IAAA,MACC,KAAA,OAEqC1jB,EAAIzZ,UAC7C,IAACm9B,EAAe,OAAO,KAGnB,OAFRzS,EAAO7kC,KAAKs3C,GACZzS,EAAO7kC,KAAK,KACJ,KAAKkgC,QAAQtM,EAAI/d,OAClB,IAAA,UACEihC,KAAAA,iBAAiBljB,EAAI/d,KAAMgvB,GAChC,MACG,IAAA,iBACE4R,KAAAA,mBAAmB7iB,EAAI/d,KAAMgvB,GAClC,MACF,QACO5B,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAGtB,OADRA,EAAO7kC,KAAK,KACJ,KAAKkgC,QAAQtM,EAAI9d,QAClB,IAAA,UACEghC,KAAAA,iBAAiBljB,EAAI9d,MAAO+uB,GACjC,MACG,IAAA,iBACE4R,KAAAA,mBAAmB7iB,EAAI9d,MAAO+uB,GACnC,MACF,QACO5B,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GAGxBA,OADPA,EAAO7kC,KAAK,KACL6kC,IAwjCX,CAAA,IAAA,oCArjCoCjR,MAAAA,SAAAA,EAAKiR,GAC/BwS,IAQAC,EARyB,CACxB,IAAA,aACA,IAAA,YACA,IAAA,aACC,KAAA,2BACA,KAAA,0BACC,MAAA,6BAEoC1jB,EAAIzZ,UAC7C,IAACm9B,EAAe,OAAO,KAInBP,OAHRlS,EAAO7kC,KAAKs3C,GACZzS,EAAO7kC,KAAK,KACK,KAAKkgC,QAAQtM,EAAI/d,OAE3B,IAAA,SACA,IAAA,QACE6gC,KAAAA,mBAAmB9iB,EAAI/d,KAAMgvB,GAClC,MACG,IAAA,iBACE8R,KAAAA,qBAAqB/iB,EAAI/d,KAAMgvB,GACpC,MACF,QACO5B,KAAAA,WAAWrP,EAAI/d,KAAMgvB,GAItBvB,OAFRuB,EAAO7kC,KAAK,KACM,KAAKkgC,QAAQtM,EAAI9d,QAE5B,IAAA,SACA,IAAA,QACE4gC,KAAAA,mBAAmB9iB,EAAI9d,MAAO+uB,GACnC,MACG,IAAA,iBACE8R,KAAAA,qBAAqB/iB,EAAI9d,MAAO+uB,GACrC,MACF,QACO5B,KAAAA,WAAWrP,EAAI9d,MAAO+uB,GAGxBA,OADPA,EAAO7kC,KAAK,KACL6kC,IA8gCX,CAAA,IAAA,gCA3gCgCjR,MAAAA,SAAAA,EAAKiR,GAC3BwS,IAGAC,EAHyB,CACxB,IAAA,cAEsC1jB,EAAIzZ,UAC7C,IAACm9B,EAAe,OAAO,KAGnB,OAFRzS,EAAO7kC,KAAKs3C,GACZzS,EAAO7kC,KAAK,KACJ,KAAKkgC,QAAQtM,EAAIrf,WAClB,IAAA,SACA,IAAA,QACEmiC,KAAAA,mBAAmB9iB,EAAIrf,SAAUswB,GACtC,MACG,IAAA,iBACE8R,KAAAA,qBAAqB/iB,EAAIrf,SAAUswB,GACxC,MACF,QACO5B,KAAAA,WAAWrP,EAAIrf,SAAUswB,GAG3BA,OADPA,EAAO7kC,KAAK,KACL6kC,IAu/BX,CAAA,IAAA,uBA9+BuBjR,MAAAA,SAAAA,EAAKiR,GAIjBA,OAHF8D,KAAAA,UAAU,sBACV1F,KAAAA,WAAWrP,EAAKiR,GAChBgE,KAAAA,SAAS,sBACPhE,IA0+BX,CAAA,IAAA,qBAj+BqBjR,MAAAA,SAAAA,EAAKiR,GAIfA,OAHF8D,KAAAA,UAAU,oBACV1F,KAAAA,WAAWrP,EAAKiR,GAChBgE,KAAAA,SAAS,oBACPhE,IA69BX,CAAA,IAAA,qBAp9BqBjR,MAAAA,SAAAA,EAAKiR,GAMfA,OALF8D,KAAAA,UAAU,sBACf9D,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWrP,EAAKiR,GACrBA,EAAO7kC,KAAK,KACP6oC,KAAAA,SAAS,sBACPhE,IA88BX,CAAA,IAAA,mBAr8BmBjR,MAAAA,SAAAA,EAAKiR,GAMbA,OALF8D,KAAAA,UAAU,oBACf9D,EAAO7kC,KAAK,UACPijC,KAAAA,WAAWrP,EAAKiR,GACrBA,EAAO7kC,KAAK,KACP6oC,KAAAA,SAAS,oBACPhE,IA+7BX,CAAA,IAAA,0BAt7B0BuD,MAAAA,SAAAA,EAASvD,GAC3BuD,GAAiB,eAAjBA,EAAQh9B,KACJ,MAAA,KAAK+2B,eAAe,2CAA4CiG,GAGlEh9B,IAAAA,EAAO,KAAK80B,QAAQkI,GAEtBA,GAAiB,aAAjBA,EAAQ3lC,KAEVoiC,EAAO7kC,KAAK,wBACP,GAAa,YAAToL,EACL,KAAKwuB,cAAcnZ,QAAQ2nB,EAAQ3lC,OAAS,EAC9CoiC,EAAO7kC,KAAkBooC,aAAAA,OAAAA,EAAQ3lC,KAAjC,MAEAoiC,EAAO7kC,KAAaooC,QAAAA,OAAAA,EAAQ3lC,WAEzB,CACC80C,IAAAA,EAAmB,KAAKlP,sBAAsBD,EAAQ3lC,MACxD80C,EACF1S,EAAO7kC,KAAau3C,QAAAA,OAAAA,IAEpB1S,EAAO7kC,KAAaooC,QAAAA,OAAAA,EAAQ3lC,OAIzBoiC,OAAAA,IA65BX,CAAA,IAAA,kBAp5BkByD,MAAAA,SAAAA,EAASzD,GACnByD,GAAiB,iBAAjBA,EAAQl9B,KACJ,MAAA,KAAK+2B,eAAe,wBAAyBmG,GAG/CC,IAAAA,EAAU,GACVC,EAAU,GACVC,EAAY,GACZC,EAAU,GACZ/F,EAAS,KAET2F,GAAAA,EAAQx0B,KAAM,CACX60B,KAAAA,UAAU,oBACV1F,KAAAA,WAAWqF,EAAQx0B,KAAMy0B,GAEzB,IADG10B,IAAAA,EAAiBy0B,EAAQx0B,KAAzBD,aACC5V,EAAI,EAAGA,EAAI4V,EAAa3V,OAAQD,IACnC4V,EAAa5V,GAAG6V,MAAsC,YAA9BD,EAAa5V,GAAG6V,KAAK1I,OAC/Cu3B,GAAS,GAGTA,GAAAA,EACG,IAAA,IAAI1kC,EAAI,EAAGA,EAAIsqC,EAAQrqC,OAAQD,IAC9BsqC,EAAQtqC,GAAG2qC,UAAYL,EAAQtqC,GAAG2qC,SAAS,OAC7CjG,GAAS,GAIVkG,KAAAA,SAAS,yBAEdlG,GAAS,EA4BPA,GAzBA2F,EAAQrrC,MACL0rC,KAAAA,UAAU,oBACV1F,KAAAA,WAAWqF,EAAQrrC,KAAMurC,GACzBK,KAAAA,SAAS,qBAEdlG,GAAS,EAGP2F,EAAQ3yB,OACLstB,KAAAA,WAAWqF,EAAQ3yB,OAAQ8yB,GAEhC9F,GAAS,EAGP2F,EAAQ33B,OACLg4B,KAAAA,UAAU,aACV1F,KAAAA,WAAWqF,EAAQ33B,KAAM+3B,GACzBG,KAAAA,SAAS,cAID,OAAXlG,IACFA,EAAS,KAAKA,OAAO2F,EAAQx0B,OAAS,KAAK6uB,OAAO2F,EAAQrrC,OAGxD0lC,EACFkC,EAAO7kC,KAAauoC,QAAAA,OAAAA,EAAQzU,KAAK,IAAO0U,KAAAA,OAAAA,EAAQ1U,KAAK,IAAO2U,KAAAA,OAAAA,EAAU3U,KAAK,IAA3E,SACA+Q,EAAO7kC,KAAK0oC,EAAQ5U,KAAK,KACzB+Q,EAAO7kC,KAAK,WACP,CACC8oC,IAAAA,EAAgB,KAAKC,wBAAwB,SAC/CR,EAAQrqC,OAAS,GACnB2mC,EAAO7kC,KAAKuoC,EAAQzU,KAAK,IAAK,OAEhC+Q,EAAO7kC,KAAiB8oC,YAAAA,OAAAA,EAAmBA,OAAAA,OAAAA,EAA0BA,cAAAA,OAAAA,EAArE,WACIN,EAAQtqC,OAAS,GACnB2mC,EAAO7kC,KAAawoC,QAAAA,OAAAA,EAAQ1U,KAAK,IAAjC,eAEF+Q,EAAO7kC,KAAK0oC,EAAQ5U,KAAK,KACzB+Q,EAAO7kC,KAAUyoC,KAAAA,OAAAA,EAAU3U,KAAK,IAAhC,MACA+Q,EAAO7kC,KAAK,OAEP6kC,OAAAA,IA00BX,CAAA,IAAA,oBAj0BoBmE,MAAAA,SAAAA,EAAWnE,GACvBmE,GAAmB,mBAAnBA,EAAU59B,KACN,MAAA,KAAK+2B,eAAe,0BAA2B6G,GAGjDF,IAAAA,EAAgB,KAAKC,wBAAwB,SAQ5ClE,OAPPA,EAAO7kC,KAAiB8oC,YAAAA,OAAAA,EAAmBA,OAAAA,OAAAA,EAA0BA,cAAAA,OAAAA,EAArE,WACAjE,EAAO7kC,KAAK,SACPijC,KAAAA,WAAW+F,EAAU/rC,KAAM4nC,GAChCA,EAAO7kC,KAAK,cACPijC,KAAAA,WAAW+F,EAAUr4B,KAAMk0B,GAChCA,EAAO7kC,KAAK,OAEL6kC,IAozBX,CAAA,IAAA,sBA3yBsBoE,MAAAA,SAAAA,EAAapE,GAC3BoE,GAAqB,qBAArBA,EAAY79B,KACR,MAAA,KAAK+2B,eAAe,0BAA2B8G,GAGjDH,IAAAA,EAAgB,KAAKC,wBAAwB,SAQ5ClE,OAPPA,EAAO7kC,KAAiB8oC,YAAAA,OAAAA,EAAmBA,OAAAA,OAAAA,EAA0BA,cAAAA,OAAAA,EAArE,WACK7F,KAAAA,WAAWgG,EAAYt4B,KAAMk0B,GAClCA,EAAO7kC,KAAK,SACPijC,KAAAA,WAAWgG,EAAYhsC,KAAM4nC,GAClCA,EAAO7kC,KAAK,cACZ6kC,EAAO7kC,KAAK,OAEL6kC,IA8xBX,CAAA,IAAA,0BApxB0BqE,MAAAA,SAAAA,EAASrE,GACzBnzB,IAAAA,EAAc,KAAKoxB,eAAeoG,EAAQrzB,MAC5CnE,GAAAA,IAAgBA,EAAYiwB,WACxB,MAAA,IAAI,KAAKQ,eAA2B+G,YAAAA,OAAAA,EAAQrzB,KAAKpT,KAA+BymC,2BAAAA,GAGpFA,GAAqB,OAArBA,EAAQ/uB,SACL8oB,KAAAA,WAAWiG,EAAQrzB,KAAMgvB,GAC9BA,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWiG,EAAQrzB,KAAMgvB,GAC9BA,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWiG,EAAQpzB,MAAO+uB,GAC/BA,EAAO7kC,KAAK,SACP,CAAA,GAAyB,QAArBkpC,EAAQ/uB,SAQZ,CACC48B,IAAAA,EAAW,KAAK7W,QAAQgJ,EAAQrzB,MAChCytB,EAAY,KAAKpD,QAAQgJ,EAAQpzB,OAUhC+uB,OATF5B,KAAAA,WAAWiG,EAAQrzB,KAAMgvB,GAC9BA,EAAO7kC,KAAKkpC,EAAQ/uB,UACH,YAAb48B,GAAwC,YAAdzT,GAC5BuB,EAAO7kC,KAAK,UACPijC,KAAAA,WAAWiG,EAAQpzB,MAAO+uB,GAC/BA,EAAO7kC,KAAK,MAEPijC,KAAAA,WAAWiG,EAAQpzB,MAAO+uB,GAE1BA,EAnBF5B,KAAAA,WAAWiG,EAAQrzB,KAAMgvB,GAC9BA,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWiG,EAAQrzB,KAAMgvB,GAC9BA,EAAO7kC,KAAK,KACPijC,KAAAA,WAAWiG,EAAQpzB,MAAO+uB,GAC/BA,EAAO7kC,KAAK,QA+vBlB,CAAA,IAAA,oBAxuBoBmpC,MAAAA,SAAAA,EAAOtE,GACnB,GAAA,KAAKxB,QAAQ,aAAc,CACxBsF,KAAAA,UAAU,cACV,IAAA,IAAI1qC,EAAI,EAAGA,EAAIkrC,EAAMx4B,KAAKzS,OAAQD,IAChCglC,KAAAA,WAAWkG,EAAMx4B,KAAK1S,GAAI4mC,GAE5BgE,KAAAA,SAAS,kBACT,CACLhE,EAAO7kC,KAAK,OACP,IAAA,IAAI/B,EAAI,EAAGA,EAAIkrC,EAAMx4B,KAAKzS,OAAQD,IAChCglC,KAAAA,WAAWkG,EAAMx4B,KAAK1S,GAAI4mC,GAEjCA,EAAO7kC,KAAK,OAEP6kC,OAAAA,IA0tBX,CAAA,IAAA,yBAjtByBwC,MAAAA,SAAAA,EAAYxC,GACT,QAApBwC,EAAWp2B,MAAkB,KAAKiqB,cAC/BkO,KAAAA,UAEDv1B,IAAAA,EAAewzB,EAAWxzB,aAC5B,IAACA,IAAiBA,EAAa,KAAOA,EAAa,GAAGC,KAClD,MAAA,KAAKquB,eAAe,wBAAyBkF,GAKhD,IAHCznC,IAAAA,EAAS,GACX2jC,EAAW,KACTiU,EAAgB,KAAKnU,QAAQ,oBAC1BplC,EAAI,EAAGA,EAAI4V,EAAa3V,OAAQD,IAAK,CACtCyT,IAAAA,EAAcmC,EAAa5V,GAC3B6V,EAAOpC,EAAYoC,KACnB2jC,EAAO,KAAK3U,eAAepxB,EAAYkE,IAEvC8hC,GADYD,EAAKhV,UACJ,KAAKvC,QAAQxuB,EAAYoC,OAExC1I,GADeqsC,EAAKlV,aACbiV,EAAgB,UAAYE,GAC1B,mBAATtsC,IAEFA,EAAO,UAEHm8B,IAAAA,EAAaC,EAAQp8B,GACvB,IAACm8B,EACG,MAAA,KAAKpF,eAA+BoF,eAAAA,OAAAA,EAA2BF,gBAAAA,GAEjEsQ,IAAAA,EAAoB,GACtBD,GAAe,YAAfA,GAAqC,YAATtsC,GAAuBosC,EAiBrDC,EAAKhV,UAAYr3B,EACP,IAANnN,GAAwB,OAAbslC,EACboU,EAAkB33C,KAAQunC,GAAAA,OAAAA,EAA1B,MACSn8B,IAASm4B,GAClB3jC,EAAOI,KAAK,KACZ23C,EAAkB33C,KAAQunC,GAAAA,OAAAA,EAA1B,OAEAoQ,EAAkB33C,KAAK,KAEzBujC,EAAWn4B,EACXusC,EAAkB33C,KAAa0R,QAAAA,OAAAA,EAAYkE,GAAGnT,KAA9C,MACmB,WAAfi1C,GAAoC,YAATtsC,EACzB0I,EAAK+B,MAA2B,YAAnB/B,EAAK+B,KAAKzK,KACpB63B,KAAAA,WAAWnvB,EAAM6jC,IAEtBA,EAAkB33C,KAAK,QAClBijC,KAAAA,WAAWnvB,EAAM6jC,GACtBA,EAAkB33C,KAAK,MAGpBijC,KAAAA,WAAWnvB,EAAM6jC,OArC4C,CAGhE15C,GADJw5C,EAAKhV,UAAY,SACP,IAANxkC,GAAwB,OAAbslC,EACboU,EAAkB33C,KAAK,cAClB,CAAA,GAAIoL,IAASm4B,EACZ,MAAA,IAAIp1B,MAAM,yBAEhBwpC,EAAkB33C,KAAK,KAEzBujC,EAAWn4B,EACXusC,EAAkB33C,KAAa0R,QAAAA,OAAAA,EAAYkE,GAAGnT,KAA9C,MACAk1C,EAAkB33C,KAAK,UAClBijC,KAAAA,WAAWnvB,EAAM6jC,GACtBA,EAAkB33C,KAAK,KA0BzBJ,EAAOI,KAAK23C,EAAkB7jB,KAAK,KAO9B+Q,OAJPA,EAAO7kC,KAAKJ,EAAOk0B,KAAK,KACnB0jB,GACH3S,EAAO7kC,KAAK,KAEP6kC,IAsoBX,CAAA,IAAA,iBA7nBiBwE,MAAAA,SAAAA,EAAQxE,GAsBdA,OArBPA,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWoG,EAAOpsC,KAAM4nC,GAC7BA,EAAO7kC,KAAK,KACmB,mBAA3BqpC,EAAOh1B,WAAWjJ,KACf63B,KAAAA,WAAWoG,EAAOh1B,WAAYwwB,IAEnCA,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWoG,EAAOh1B,WAAYwwB,GACnCA,EAAO7kC,KAAK,UAGVqpC,EAAO/0B,YACTuwB,EAAO7kC,KAAK,SACkB,mBAA1BqpC,EAAO/0B,UAAUlJ,KACd63B,KAAAA,WAAWoG,EAAO/0B,UAAWuwB,IAElCA,EAAO7kC,KAAK,QACPijC,KAAAA,WAAWoG,EAAO/0B,UAAWuwB,GAClCA,EAAO7kC,KAAK,WAGT6kC,IAumBX,CAAA,IAAA,qBApmBqBjR,MAAAA,SAAAA,EAAKiR,GAClBjR,GAAa,oBAAbA,EAAIxoB,KACA,MAAA,KAAK+2B,eAAe,2BAA4BvO,GAEhDpf,IAAAA,EAAwBof,EAAxBpf,aAAcC,EAAUmf,EAAVnf,MAChBrJ,EAAO,KAAK80B,QAAQ1rB,GACpBojC,EAA+BhkB,qBAAAA,OAAAA,EAAI9qB,MAAS8qB,KAAAA,OAAAA,EAAI7qB,KAC9CqC,OAAAA,GACD,IAAA,QACA,IAAA,SACHy5B,EAAO7kC,KAAc43C,SAAAA,OAAAA,EAArB,QACK3U,KAAAA,WAAWzuB,EAAcqwB,GAC9BA,EAAO7kC,KAAK,OACZ,MACG,IAAA,UACH6kC,EAAO7kC,KAAY43C,OAAAA,OAAAA,EAAnB,QACK3U,KAAAA,WAAWzuB,EAAcqwB,GAC9BA,EAAO7kC,KAAK,OAIZyU,GAAiB,IAAjBA,EAAMvW,SAAiBuW,EAAM,GAAGxX,KAE3B4nC,OADF5B,KAAAA,WAAWxuB,EAAM,GAAGJ,WAAYwwB,GAC9BA,EAQJ,IAJDgT,IAAAA,GAAiB,EACjBC,EAAgB,GAChBC,GAAqB,EACrBC,GAAc,EACT/5C,EAAI,EAAGA,EAAIwW,EAAMvW,OAAQD,IAAK,CAEjC,GAACwW,EAAMxW,GAAGhB,KAQP,CAaDmO,GAXM,IAANnN,GAAY+5C,EAIVH,GACFhT,EAAO7kC,KAAQ43C,GAAAA,OAAAA,EAAf,SACAC,GAAiB,GAEjBhT,EAAO7kC,KAAkB43C,aAAAA,OAAAA,EAAzB,UAPFI,GAAc,EACdnT,EAAO7kC,KAAY43C,OAAAA,OAAAA,EAAnB,UASW,YAATxsC,EAAoB,CAEd6sC,OADS,KAAK/X,QAAQzrB,EAAMxW,GAAGhB,OAEhC,IAAA,SACA,IAAA,QACEy5C,KAAAA,mBAAmBjiC,EAAMxW,GAAGhB,KAAM4nC,GACvC,MACG,IAAA,iBACE8R,KAAAA,qBAAqBliC,EAAMxW,GAAGhB,KAAM4nC,QAGxC,CAAA,GAAa,UAATz5B,EAWH,MAAA,IAAI+C,MAAM,aATR8pC,OADS,KAAK/X,QAAQzrB,EAAMxW,GAAGhB,OAEhC,IAAA,iBACEw5C,KAAAA,mBAAmBhiC,EAAMxW,GAAGhB,KAAM4nC,GACvC,MACG,IAAA,UACEiS,KAAAA,iBAAiBriC,EAAMxW,GAAGhB,KAAM4nC,IAMvC,IAACpwB,EAAMxW,GAAGoW,YAA6C,IAA/BI,EAAMxW,GAAGoW,WAAWnW,OAAc,CAC5D25C,GAAiB,EACjBhT,EAAO7kC,KAAK,QACZ,SAEF6kC,EAAO7kC,KAAP,aAlDkB,CACdyU,GAAAA,EAAMvW,OAASD,EAAI,EAAG,CACxB85C,GAAqB,EAChB9U,KAAAA,WAAWxuB,EAAMxW,GAAGoW,WAAYyjC,GACrC,SAEAjT,EAAO7kC,KAAK,aA8CXijC,KAAAA,WAAWxuB,EAAMxW,GAAGoW,WAAYwwB,GACrCA,EAAO7kC,KAAK,OAOP6kC,OALHkT,IACFlT,EAAO7kC,KAAK,WACZ6kC,EAAO7kC,KAAK83C,EAAchkB,KAAK,KAC/B+Q,EAAO7kC,KAAK,MAEP6kC,IAugBX,CAAA,IAAA,oBA9foByE,MAAAA,SAAAA,EAAOzE,GAEhBA,OADPA,EAAO7kC,KAAK,QACL6kC,IA4fX,CAAA,IAAA,sBAnfsB0E,MAAAA,SAAAA,EAAO1E,GAUrB,IAAA,EAAA,KAAKP,2BAA2BiF,GARlCjsB,EAAAA,EAAAA,SACA7a,EAAAA,EAAAA,KACAghC,EAAAA,EAAAA,UACAhC,EAAAA,EAAAA,OACAr2B,EAAAA,EAAAA,KACAm5B,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,UAEMhB,OAAAA,GACD,IAAA,qBACA,IAAA,oBACChhC,GAAS,MAATA,GAAyB,MAATA,GAAyB,MAATA,EAC5B,MAAA,KAAK0/B,eAAe,uFAAwFoH,GAG7G1E,OADPA,EAAO7kC,KAAiByC,YAAAA,OAAAA,IACjBoiC,EACJ,IAAA,oBACC,GAAA,KAAKtK,cACC93B,OAAAA,GACD,IAAA,IACC,KAAK4gC,QAAQ,oBACfwB,EAAO7kC,KAAK,uBAEZ6kC,EAAO7kC,KAAK,gBAEd,MACG,IAAA,IACC,KAAKqjC,QAAQ,oBACfwB,EAAO7kC,KAAK,uBAEZ6kC,EAAO7kC,KAAK,gBAEd,MACG,IAAA,IACC,KAAKqjC,QAAQ,oBACfwB,EAAO7kC,KAAK,uBAEZ6kC,EAAO7kC,KAAK,gBAEd,MACF,QACQ,MAAA,KAAKmiC,eAAe,wBAAyBoH,QAG/C9mC,OAAAA,GACD,IAAA,IACC,KAAK4gC,QAAQ,sBACfwB,EAAO7kC,KAAK,KAAK4vB,OAAO,IAExBiV,EAAO7kC,KAAK,KAAK4vB,OAAO,GAAI,MAE9B,MACG,IAAA,IACC,KAAKyT,QAAQ,sBACfwB,EAAO7kC,KAAK,KAAK4vB,OAAO,IAExBiV,EAAO7kC,KAAK,KAAK4vB,OAAO,GAAI,MAE9B,MACG,IAAA,IACC,KAAKyT,QAAQ,sBACfwB,EAAO7kC,KAAK,KAAK4vB,OAAO,IAExBiV,EAAO7kC,KAAK,KAAK4vB,OAAO,GAAI,MAE9B,MACF,QACQ,MAAA,KAAKuS,eAAe,wBAAyBoH,GAGlD1E,OAAAA,EACJ,IAAA,QACG,MAAA,KAAK1C,eAAe,wBAAyBoH,GAChD,IAAA,UACA,IAAA,YACA,IAAA,cACA,IAAA,gBACA,IAAA,cACC9H,GAAW,SAAXA,EAEKoD,OADPA,EAAO7kC,KAAKxE,KAAKiH,IACVoiC,EAEDvnB,OAAAA,GACD,IAAA,IAEIunB,OADPA,EAAO7kC,KAAcyC,QAAAA,OAAAA,EAArB,OACOoiC,EACJ,IAAA,IAEIA,OADPA,EAAO7kC,KAAcyC,QAAAA,OAAAA,EAArB,OACOoiC,EACJ,IAAA,IAEIA,OADPA,EAAO7kC,KAAcyC,QAAAA,OAAAA,EAArB,OACOoiC,EACJ,IAAA,IAEIA,OADPA,EAAO7kC,KAAcyC,QAAAA,OAAAA,EAArB,OACOoiC,EAEX,MACG,IAAA,uBACC,QAAqB,IAAdN,EACDn5B,OAAAA,GACD,IAAA,WACA,IAAA,WACA,IAAA,WAEIy5B,OADPA,EAAO7kC,KAAmByC,aAAAA,OAAAA,IACnBoiC,EAGR,IAAA,yBACA,IAAA,2BACA,IAAA,6BACA,IAAA,+BACH,MACG,IAAA,SAKIA,OAJF0B,KAAAA,kBAAkBgD,EAAMp0B,OAAQ0vB,GACrCA,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,KAAKk4C,+BAA+B56B,IAChDunB,EAAO7kC,KAAK,KACL6kC,EACJ,IAAA,OAKIA,OAJF2B,KAAAA,mBAAmB+C,EAAMp0B,OAAQ0vB,GACtCA,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,KAAKk4C,+BAA+B56B,IAChDunB,EAAO7kC,KAAK,KACL6kC,EACT,QACQ,MAAA,KAAK1C,eAAe,wBAAyBoH,GAGrDA,IAAmB,IAAnBA,EAAM/xB,SAEApM,OAAAA,GACD,IAAA,SACA,IAAA,UACA,IAAA,QACA,IAAA,UAEIy5B,OADPA,EAAO7kC,KAAQyhC,GAAAA,OAAAA,EAAUh/B,KAAAA,OAAAA,IAClBoiC,EAMT2E,IAAAA,EAAc,KAAKnB,sBAAsB5lC,GAEvCgnC,EAAgBhI,GAAAA,OAAAA,EAAU+H,KAAAA,OAAAA,GAAe/mC,GAEvC2I,OAAAA,GACD,IAAA,WACA,IAAA,WACA,IAAA,WAEE63B,KAAAA,WAAWsG,EAAMp0B,OAAQ0vB,GAC9BA,EAAO7kC,KAAK,KACZ6kC,EAAO7kC,KAAK,KAAKk4C,+BAA+B3T,IAChDM,EAAO7kC,KAAK,KACZ,MACG,IAAA,iBACH6kC,EAAO7kC,KAAoBypC,cAAAA,OAAAA,EAAiBA,MAAAA,OAAAA,EAAqBA,UAAAA,OAAAA,EAAjE,UACK0O,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,KACZ,MACG,IAAA,kBACH6kC,EAAO7kC,KAA+BypC,yBAAAA,OAAAA,EAAiBA,MAAAA,OAAAA,EAAqBA,UAAAA,OAAAA,EAA5E,UACK0O,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,KACZ,MACG,IAAA,aACA,IAAA,aACA,IAAA,aACH6kC,EAAO7kC,KAAgCypC,0BAAAA,OAAAA,EAAiBA,MAAAA,OAAAA,EAAqBA,UAAAA,OAAAA,EAA7E,UACK0O,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,KACZ,MACG,IAAA,kBACH6kC,EAAO7kC,KAA8BypC,wBAAAA,OAAAA,EAAiBA,MAAAA,OAAAA,EAAqBA,UAAAA,OAAAA,EAA3E,UACK0O,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,KACZ,MACG,IAAA,aACA,IAAA,aACA,IAAA,aACH6kC,EAAO7kC,KAAgCypC,0BAAAA,OAAAA,EAAiBA,MAAAA,OAAAA,EAAqBA,UAAAA,OAAAA,EAA7E,UACK0O,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,KACZ,MACG,IAAA,kBACH6kC,EAAO7kC,KAA8BypC,wBAAAA,OAAAA,EAAiBA,MAAAA,OAAAA,EAAqBA,UAAAA,OAAAA,EAA3E,UACK0O,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,KACZ,MACG,IAAA,aACA,IAAA,aACA,IAAA,aACH6kC,EAAO7kC,KAAgCypC,0BAAAA,OAAAA,EAAiBA,MAAAA,OAAAA,EAAqBA,UAAAA,OAAAA,EAA7E,UACK0O,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,KACZ,MACG,IAAA,kBACA,IAAA,YACH6kC,EAAO7kC,KAA8BypC,wBAAAA,OAAAA,EAAiBA,MAAAA,OAAAA,EAAqBA,UAAAA,OAAAA,EAA3E,UACK0O,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,KACZ,MACG,IAAA,gBACA,IAAA,QACA,IAAA,UACA,IAAA,UACA,IAAA,UACA,IAAA,QACA,IAAA,SACA,IAAA,QACA,IAAA,UACC,GAAmB,WAAnB,KAAKC,UAGP4kC,EAAO7kC,KAA6BypC,wBAAAA,OAAAA,EAAeA,MAAAA,OAAAA,EAAmBA,UAAAA,OAAAA,EAAtE,UACK0O,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,SACP,CACCyyB,IAAAA,EAAuB,SAAXgP,EAChB,KAAK5D,+BAA+B,KAAKp7B,KAAMA,GAC/C,KAAK43B,kBAAkB53B,GAEjBgwB,OAAAA,GACD,KAAA,EACHoS,EAAO7kC,KAAaypC,QAAAA,OAAAA,EAAeA,MAAAA,OAAAA,EAAmBA,UAAAA,OAAAA,EAAtD,UACA,MACG,KAAA,EACH5E,EAAO7kC,KAAcypC,SAAAA,OAAAA,EAAeA,MAAAA,OAAAA,EAAmBA,UAAAA,OAAAA,EAAvD,UACA,MACG,KAAA,EACA,KAAA,EACH5E,EAAO7kC,KAAcypC,SAAAA,OAAAA,EAAeA,MAAAA,OAAAA,EAAmBA,UAAAA,OAAAA,EAAvD,UACA,MACF,QACQ,MAAA,IAAIt7B,MAAgCskB,0BAAAA,OAAAA,IAEzC0lB,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,KAEd,MACG,IAAA,+BACH6kC,EAAO7kC,KAA8BypC,wBAAAA,OAAAA,EAAiBA,MAAAA,OAAAA,EAAqBA,UAAAA,OAAAA,EAA3E,UACK0O,KAAAA,oBAAoB5T,EAAWC,EAAWC,EAAWI,GAC1DA,EAAO7kC,KAAK,KACZ,MACF,QACQ,MAAA,IAAImO,MAAuC/C,gCAAAA,OAAAA,EAAjD,MAEGy5B,OAAAA,IAuPX,CAAA,IAAA,oBA9OoBjR,MAAAA,SAAAA,EAAKiR,GACjB,IAACjR,EAAInW,OACD,MAAA,KAAK0kB,eAAe,yBAA0BvO,GAGlD0J,IAAAA,EAAe,KACb8a,EAAiB,KAAKjV,kBAAkBvP,GAa1C,KATF0J,EADE8a,GAAmBxkB,EAAInW,OAAOtI,QAAqC,mBAA3Bye,EAAInW,OAAOtI,OAAO/J,KAC7CwoB,EAAInW,OAAOH,SAAS7a,KAGR,uBAApBmxB,EAAInW,OAAOrS,MAAoE,YAAnCwoB,EAAInW,OAAO1B,YAAY,GAAG3Q,MAAuBqmB,MAAMmC,EAAInW,OAAO1B,YAAY,GAAGjC,KAGrH8Z,EAAInW,OAAOhb,KAFXmxB,EAAInW,OAAO1B,YAAY,GAAGuB,SAAS7a,MAM5C,MAAA,KAAK0/B,eAAyDvO,yCAAAA,GAalE0J,GATiB,UAAjBA,IACFA,EAAe,QAIb,KAAK8B,gBAAgB3e,QAAQ6c,GAAgB,GAC1C8B,KAAAA,gBAAgBp/B,KAAKs9B,GAGP,WAAjBA,GAA6B,KAAK7yB,SAAW,KAAKA,QAAQvM,OAAS,EAChE,IAAA,IAAID,EAAI,EAAGA,EAAI,KAAKwM,QAAQvM,OAAQD,IAAK,CACtCiQ,IAAAA,EAAS,KAAKzD,QAAQxM,GACxBiQ,GAAyB,kBAAzBA,EAAOmqC,eAAqCnqC,EAAOoqC,gBAE9CzT,OADPA,EAAO7kC,KAAKkO,EAAOoqC,iBACZzT,EAiBTuT,GAXA,KAAK9Z,gBACFA,KAAAA,eAAe,KAAK77B,KAAM66B,EAAc1J,EAAIlW,WAInDmnB,EAAO7kC,KAAKs9B,GAGZuH,EAAO7kC,KAAK,KAGRo4C,EACG,IAAA,IAAIn6C,EAAI,EAAGA,EAAI21B,EAAIlW,UAAUxf,SAAUD,EAAG,CACvCsW,IAAAA,EAAWqf,EAAIlW,UAAUzf,GACzB+/B,EAAe,KAAKkC,QAAQ3rB,GAK1BypB,OAJJ//B,EAAI,GACN4mC,EAAO7kC,KAAK,MAGNg+B,GACD,IAAA,UACE8Y,KAAAA,iBAAiBviC,EAAUswB,GAChC,MACF,QACO5B,KAAAA,WAAW1uB,EAAUswB,SAM3B,IADC+E,IAAAA,EAAc,KAAKjM,4BAA4BL,IAAiB,GAC7Dr/B,EAAI,EAAGA,EAAI21B,EAAIlW,UAAUxf,SAAUD,EAAG,CACvCsW,IAAAA,EAAWqf,EAAIlW,UAAUzf,GAC3Bs6C,EAAa3O,EAAY3rC,GACzBA,EAAI,GACN4mC,EAAO7kC,KAAK,MAERg+B,IAAAA,EAAe,KAAKkC,QAAQ3rB,GAK1BypB,OAJHua,IACExa,KAAAA,yBAAyBT,EAAcr/B,EAAG+/B,EAAc,MAC7Dua,EAAava,GAEPA,GACD,IAAA,SACA,IAAA,QACCua,GAAe,YAAfA,EAA0B,CAC5B1T,EAAO7kC,KAAK,QACPijC,KAAAA,WAAW1uB,EAAUswB,GAC1BA,EAAO7kC,KAAK,KACZ,SACK,GAAmB,WAAfu4C,GAA0C,UAAfA,EAAwB,CACvDtV,KAAAA,WAAW1uB,EAAUswB,GAC1B,SACK,GAAmB,mBAAf0T,EAAiC,CACrC9B,KAAAA,mBAAmBliC,EAAUswB,GAClC,SAEF,MACG,IAAA,UACC0T,GAAe,WAAfA,GAA0C,UAAfA,EAAwB,CACrD1T,EAAO7kC,KAAK,UACPijC,KAAAA,WAAW1uB,EAAUswB,GAC1BA,EAAO7kC,KAAK,KACZ,SACK,GAAmB,YAAfu4C,EAA0B,CAC9BtV,KAAAA,WAAW1uB,EAAUswB,GAC1B,SAEF,MACG,IAAA,iBACC0T,GAAe,YAAfA,EAA0B,CACvB5B,KAAAA,qBAAqBpiC,EAAUswB,GACpC,SACK,GAAmB,WAAf0T,GAA0C,UAAfA,EAAwB,CACvD9B,KAAAA,mBAAmBliC,EAAUswB,GAClC,SACK,GAAmB,mBAAf0T,EAAiC,CACrCtV,KAAAA,WAAW1uB,EAAUswB,GAC1B,SAEF,MACG,IAAA,WACA,IAAA,WACA,IAAA,WACC0T,GAAAA,IAAeva,EAAc,CAC1BiF,KAAAA,WAAW1uB,EAAUswB,GAC1B,SAEF,MACG,IAAA,kBACA,IAAA,kBACA,IAAA,kBACA,IAAA,kBACA,IAAA,QACA,IAAA,QACC0T,GAAAA,IAAeva,EAAc,CAC1BC,KAAAA,4BAA4B,KAAKx7B,KAAM8R,EAAS9R,KAAM66B,EAAcr/B,GACpEglC,KAAAA,WAAW1uB,EAAUswB,GAC1B,UAIA,MAAA,KAAK1C,eAAqDnE,qCAAAA,OAAAA,EAAsBua,SAAAA,OAAAA,EAAoChkC,yBAAAA,OAAAA,EAAS9R,KAAUmxB,KAAAA,GAM1IiR,OAFPA,EAAO7kC,KAAK,KAEL6kC,IAuFX,CAAA,IAAA,qBA9EqBiC,MAAAA,SAAAA,EAASjC,GACpBgF,IAAAA,EAAS/C,EAAQ7tB,SAAS/a,OAEhC2mC,EAAO7kC,KAAK,MAAQ6pC,EAAS,KACxB,IAAA,IAAI5rC,EAAI,EAAGA,EAAI4rC,IAAU5rC,EAAG,CAC3BA,EAAI,GACN4mC,EAAO7kC,KAAK,MAER8pC,IAAAA,EAAUhD,EAAQ7tB,SAAShb,GAC5BglC,KAAAA,WAAW6G,EAASjF,GAIpBA,OAFPA,EAAO7kC,KAAK,KAEL6kC,IAiEX,CAAA,IAAA,sBA9DsB/V,MAAAA,SAAAA,EAAGC,EAAGF,EAAGgW,GAYpBA,OAXHhW,EACFgW,EAAO7kC,KAAK,KAAKk4C,+BAA+BrpB,GAAI,MAEpDgW,EAAO7kC,KAAK,OAEV+uB,EACF8V,EAAO7kC,KAAK,KAAKk4C,+BAA+BnpB,GAAI,MAEpD8V,EAAO7kC,KAAK,OAEd6kC,EAAO7kC,KAAK,KAAKk4C,+BAA+BppB,IACzC+V,IAkDX,CAAA,IAAA,iCA/CiCvnB,MAAAA,SAAAA,GACzB,IAACA,EACG,MAAA,IAAInP,MAAM,oBAEZ/C,IACAxL,EAAS,GACPwL,OAFK,KAAK80B,QAAQ5iB,IAGnB,IAAA,SACA,IAAA,QACEo5B,KAAAA,mBAAmBp5B,EAAU1d,GAClC,MACG,IAAA,iBACE+2C,KAAAA,qBAAqBr5B,EAAU1d,GACpC,MACF,QACOqjC,KAAAA,WAAW3lB,EAAU1d,GAEvBA,OAAAA,EAAOk0B,KAAK,QA8BvB,EAAA,GA1BM0T,EAAU,CACL,MAAA,YACG,WAAA,OACA,WAAA,OACA,WAAA,OACD,QAAA,YACA,QAAA,YACA,QAAA,OACF,MAAA,QACA,MAAA,YACE,QAAA,MACD,OAAA,QACQ,eAAA,QACD,cAAA,YACe,6BAAA,YACb,kBAAA,YACA,kBAAA,YACA,kBAAA,YACA,kBAAA,aAGfwP,EAAc,CACX,MAAA,KACA,MAAA,MAGT17C,OAAOC,QAAU,CACfi7C,kBAAAA;;AC7/CF,IAAMhvC,EAAN,uxBA6BM/E,EAAO,uBAEP41C,EAAgB,gBAEhBC,EAAkB,oBAElBE,EAAqB,SAErBC,EAAc,SAAC5oB,GACnBA,EAAO6oB,aAAa,sBAAuBl9C,KAAK6C,WAOlD/C,OAAOC,QAAU,CACfkH,KAAAA,EACAg2C,YAAAA,EACAJ,cAAAA,EACAC,gBAAAA,EACAE,mBAAAA,EACAhxC,OAAAA;;AClDF,IAAMmxC,EAAN,+qVAkZAr9C,OAAOC,QAAU,CACfo9C,eAAAA;;ACpZF,IAAMC,EAAN,kSAeAt9C,OAAOC,QAAU,CACfq9C,aAAAA;;ACVF,SAAA,EAAA,EAAA,EAAA,IACA,MAAA,YACA,EAAA,KAAA,cACA,EAAA,uBACA,EAAA,eACA,EAAA,UACA,EAAA,GAAA,UACA,EAAA,GAAA,aACA,EAAA,6BACA,GACA,EACA,EAAA,IAAA,MAAA,EAAA,CAAA,IAOA,SAAA,EAAA,GACA,OAAA,GACA,IAAA,aAAA,OAAA,EACA,IAAA,kBAAA,OAAA,EACA,IAAA,4BAAA,OAAA,EACA,IAAA,iBAAA,OAAA,EACA,IAAA,QAAA,OAAA,EACA,IAAA,YAAA,OAAA,EACA,IAAA,WAAA,OAAA,EACA,IAAA,yBAAA,OAAA,EAEA,GAAA,mBAAA,EAAA,GACA,OAAA,WACA,OAAA,GACA,IAAA,WAMA,OALA,EACA,EAAA,QAAA,QAAA,oBAAA,qCAEA,EAAA,QAAA,IAAA,iBAEA,EAAA,WACA,IAAA,eAAA,CACA,MAAA,KAAA,aAAA,EAAA,SACA,EAAA,QAAA,UAAA,OAAA,mBAAA,UAAA,SACA,MAAA,EAAA,EAAA,aAAA,UAAA,IACA,GAAA,GAAA,iBAAA,EAAA,CACA,MAAA,EAAA,EAAA,EAAA,CACA,UAAA,EACA,uBAAA,EACA,UAAA,EACA,YAAA,EACA,iBAAA,EACA,UAAA,EACA,OAAA,EACA,6BAAA,IAGA,OADA,EAAA,KAAA,GACA,EAIA,OAFA,EAAA,KAAA,MAEA,EAEA,IAAA,aACA,MAAA,EAAA,EAAA,QAAA,UAAA,IACA,IAAA,EACA,IAAA,IAAA,EAAA,CACA,MAAA,EAyHA,SAAA,GACA,GAAA,EACA,IAAA,MAAA,KAAA,EACA,GAAA,EAAA,KAAA,EACA,OAAA,EAIA,OAAA,KAjIA,CAAA,UAAA,IACA,GACA,EAAA,EACA,EAAA,QAAA,IAAA,OAEA,KAAA,YAAA,EAAA,SACA,EAAA,KAAA,UAAA,IACA,EAAA,QAAA,UAAA,WAAA,UAAA,GAAA,YAAA,QAAA,UAAA,GAAA,kBAGA,KAAA,YAAA,IAEA,EAAA,EACA,MAAA,EAAA,CACA,UAAA,GACA,UAAA,GACA,UAAA,GACA,UAAA,GACA,EAAA,UAAA,IACA,EAAA,UAAA,IACA,GASA,OAPA,EAAA,QAAA,IAAA,gBAAA,EAAA,KAAA,WACA,GAiEA,SAAA,EAAA,GACA,MAAA,KAAA,YAAA,EAAA,SACA,eAAA,IACA,EAAA,QAAA,QAAA,gBAAA,cAAA,WAAA,6BACA,EAAA,QAAA,wBAAA,uBACA,EAAA,QAAA,MAAA,QAAA,gBAAA,oBAAA,mBACA,EAAA,QAAA,MACA,EAAA,QAAA,0CACA,EAAA,QAAA,qCAAA,WAAA,OACA,EAAA,QAAA,MACA,IA1EA,CAAA,UAAA,GAAA,UAAA,IAEA,GACA,EAAA,EAAA,GAEA,EAAA,WAAA,MAAA,EAAA,WACA,IAAA,cAEA,OADA,EAAA,QAAA,IAAA,kBAAA,EAAA,UAAA,GAAA,CAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,6BAAA,UACA,EAAA,YAAA,UAAA,IAEA,IAAA,EAAA,EAAA,GAAA,MAAA,EAAA,WACA,cAAA,GACA,IAAA,YAEA,YADA,EAAA,QAAA,IAAA,EAAA,EAAA,eAEA,IAAA,SACA,IAAA,UACA,GAAA,IAAA,IAAA,EAAA,QAAA,EAAA,IAAA,CACA,EAAA,QAAA,UAAA,YAAA,EAAA,YAAA,EAAA,EAAA,eACA,EAAA,KAAA,EAAA,EAAA,IACA,MAEA,QACA,OAAA,EACA,EAAA,QAAA,EAAA,EAAA,eAEA,EAAA,QAAA,UAAA,YAAA,EAAA,YAAA,EAAA,EAAA,eAGA,EAAA,KAAA,GAEA,OAAA,GAIA,OADA,EAAA,EAAA,IAAA,EACA,EAAA,MAhHA,EAAA,GACA,EAAA,GACA,IAEA,EAFA,EAAA,EACA,EAAA,GAEA,OAAA,EA6GA,SAAA,IACA,OAAA,EAAA,KAAA,MAEA,SAAA,IACA,KAAA,EAAA,OAAA,GACA,EAAA,MAGA,SAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAEA,SAAA,EAAA,GACA,MAAA,EAAA,EAAA,GACA,OAAA,EACA,EAAA,IAAA,EAEA,EAEA,SAAA,EAAA,GACA,EAAA,IAAA,OAAA,GAEA,SAAA,EAAA,EAAA,GACA,MAAA,KAAA,YAAA,EAAA,SAGA,OAFA,EAAA,QAAA,UAAA,OAAA,MACA,EAAA,KAAA,GACA,EAcA,SAAA,EAAA,GACA,EAAA,QAAA,OAAA,KAEA,SAAA,IACA,EAAA,QAAA,cACA,kBAAA,kBACA,kBAAA,cACA,qDACA,gDACA,gCACA,YAAA,yBACA,2BAAA,uBACA,WACA,SACA,OACA,UAEA,SAAA,EAAA,EAAA,GACA,SAAA,KAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,6BAAA,OAcA,SAAA,EAAA,GACA,MAAA,EAAA,EAAA,QAAA,GACA,OAAA,IAAA,KACA,YAAA,IAEA,MAUA,SAAA,EAAA,EAAA,GACA,MAAA,EAAA,IAAA,MAAA,EAAA,CAAA,IAaA,SAAA,EAAA,GACA,GAAA,mBAAA,EAAA,GACA,OAAA,WACA,OAAA,GACA,IAAA,mBAEA,OADA,EAAA,QAAA,IAAA,uBAAA,EAAA,UAAA,GAAA,CAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,6BAAA,UACA,EAAA,iBAAA,UAAA,IAEA,IAAA,EAAA,EAAA,GAAA,MAAA,EAAA,WACA,cAAA,GACA,IAAA,YAEA,YADA,EAAA,QAAA,IAAA,EAAA,EAAA,eAEA,IAAA,SACA,IAAA,UACA,IAAA,IAAA,EAAA,QAAA,EAAA,KACA,EAAA,QAAA,UAAA,YAAA,EAAA,YAAA,EAAA,EAAA,eACA,EAAA,KAAA,EAAA,EAAA,MAEA,EAAA,QAAA,UAAA,YAAA,EAAA,YAAA,EAAA,EAAA,eACA,EAAA,KAAA,IAEA,MACA,QACA,OAAA,EACA,EAAA,QAAA,EAAA,EAAA,eAEA,EAAA,QAAA,UAAA,YAAA,EAAA,YAAA,EAAA,EAAA,eAEA,EAAA,KAAA,GAEA,OAAA,GAIA,OADA,EAAA,EAAA,IAAA,EACA,EAAA,MA/CA,EAAA,IACA,YACA,EAAA,iBACA,EAAA,UACA,EAAA,uBACA,EAAA,UACA,EAAA,UACA,EAAA,OACA,EAAA,6BACA,GACA,EACA,OAAA,EAuCA,SAAA,EAAA,GACA,OAAA,EAAA,eAAA,MACA,KAAA,EAAA,KAEA,EAAA,GAGA,SAAA,EAAA,EAAA,GACA,SAAA,KAAA,KAAA,EAAA,EAAA,CAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,6BAAA,OAGA,SAAA,EAAA,EAAA,GACA,MAAA,KAAA,YAAA,EAAA,SAGA,OAFA,EAAA,KAAA,GACA,EAAA,QAAA,UAAA,OAAA,MACA,GAIA,SAAA,EAAA,EAAA,GACA,MAAA,UAAA,GAAA,EACA,OAAA,MAAA,KAAA,GAAA,IAAA,IACA,MAAA,EAOA,SAAA,GACA,GAAA,EACA,IAAA,MAAA,KAAA,EACA,GAAA,EAAA,KAAA,EACA,OAAA,EAIA,OAAA,KAfA,CAAA,GACA,OAAA,GAGA,EAAA,EAAA,KACA,KAAA,MAcA,SAAA,EAAA,EAAA,GACA,MAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,6BAAA,GAAA,EACA,QAAA,IAAA,EACA,MAAA,YAEA,GAAA,OAAA,EACA,MAAA,OAEA,MAAA,EAAA,EAAA,QAAA,GACA,GAAA,GAAA,EACA,SAAA,YAAA,IAEA,OAAA,EAAA,YAAA,MACA,IAAA,SACA,MAAA,EAAA,KAAA,KAAA,GACA,EAAA,IAAA,KAAA,GACA,EAAA,IAAA,KAAA,GACA,OAAA,EACA,IAAA,EAAA,IACA,IAAA,EACA,IAAA,EAAA,IAEA,IAAA,EAAA,IAIA,IAAA,SACA,IAAA,UAAA,OAAA,EAAA,GACA,IAAA,QACA,OAAA,EAAA,SAAA,EAAA,YAAA,QAAA,MAAA,KAAA,GAAA,KAAA,SACA,IAAA,eACA,IAAA,aACA,IAAA,cACA,IAAA,aACA,OAAA,EAAA,SAAA,EAAA,YAAA,QAAA,KAAA,UAAA,MAAA,KAAA,QACA,QACA,GAAA,EAAA,CACA,MAAA,EAAA,EAAA,GACA,GAAA,EACA,OAAA,EAGA,MAAA,IAAA,oCAAA,EAAA,YAAA,SAIA,SAAA,EAAA,GAEA,OAAA,IAAA,EAAA,YAAA,GAGA,oBAAA,SACA,OAAA,QAAA,CAAA,UAAA,EAAA,mBAAA,IAGA,oBAAA,SACA,EAAA,mBAAA,EACA,OAAA,UAAA;;ACxEA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAxSsB58C,IAAAA,EAAAA,QAAQ,cAAtB68C,EAAAA,EAAAA,UACU78C,EAAAA,QAAQ,eAAlBmzB,EAAAA,EAAAA,MAER,SAAS2pB,EAAqBhoB,GACrBA,OAAAA,EAAG9oB,WACPyD,QAAQ,KAAM,IACdA,QAAQ,aAAc,IACtBA,QAAQ,YAAa,cAY1B,SAASstC,EAAevf,EAAQ+B,EAAMyd,EAAcC,EAAoBC,GAChEC,IAAAA,EAAa,GACbvsC,EAAUisC,EAAUG,EAAapsC,QAAS,CAC9CwsC,wBAAwB,EACxBC,aAAc,SAACC,GACTzpB,GAAAA,EAAO8K,WAAP9K,CACE,GAAC0pB,EAGE,CACCj8B,IAAAA,EAAWuS,EAAO8K,WAAW6e,KAAyBl8B,SAC5D67B,EAAWn5C,KAAkByxB,aAAAA,OAAAA,MAAMnU,GAAY,IAAMA,EAAeA,IAAAA,OAAAA,EAApE,KAAqFm8B,OAAAA,OAAAA,EAAgBH,EAAYzpB,GAAjH,WAJAspB,EAAWn5C,KAAqCy5C,gCAAAA,OAAAA,EAAgBH,EAAYzpB,GAA5E,QACA0pB,GAAgC,EAK9BC,IAA0B3pB,EAAO8K,WAAWz8B,QAC9Ci7C,EAAWn5C,KAAK,2BAIhBs5C,EACFH,EAAWn5C,KAAmBy5C,cAAAA,OAAAA,EAAgBH,EAAYzpB,GAA1D,MAEAspB,EAAWn5C,KAAX,qBAGJ05C,6BAA8B,SAACnlC,GACxB,IAAA,IAAItW,EAAI,EAAGA,EAAI4xB,EAAOmK,gBAAgB97B,OAAQD,IAAK,CAChDtC,IAAAA,EAAQk0B,EAAOmK,gBAAgB/7B,GACjCtC,GAAe,mBAAfA,EAAMyP,KAA2B,CAC7Bu+B,IAAAA,EAAW9Z,EAAOsK,UAAUx+B,EAAM8G,MAClCk3C,EAA0Bh+C,eAAAA,OAAAA,EAAM8G,KAAQknC,KAAAA,OAAAA,EAASlpB,QAAQ9kB,EAAMi+C,aAArE,KAEOD,OADP/sC,EAAQitC,eAAeF,EAAU9pB,EAAOsK,WACjCwf,EACF,GAAIh+C,EAAMi+C,cAAgBrlC,EAAU,CACnColC,IAAAA,EAA0Bh+C,eAAAA,OAAAA,EAAM8G,MAE/Bk3C,OADP/sC,EAAQitC,eAAeF,EAAUh+C,GAC1Bg+C,OAKXJ,GAAgC,EAChCC,EAAwB,EAE1BhyC,EAkBEwxC,EAlBFxxC,OACA+xB,EAiBEyf,EAjBFzf,OACA3J,EAgBEopB,EAhBFppB,OACAkL,EAeEke,EAfFle,SACA/B,EAcEigB,EAdFjgB,UACAmB,EAaE8e,EAbF9e,kBACAC,EAYE6e,EAZF7e,UACAjI,EAWE8mB,EAXF9mB,oBACAjyB,EAUE+4C,EAVF/4C,UACAg7B,EASE+d,EATF/d,2BACAR,EAQEue,EARFve,UACAC,EAOEse,EAPFte,gBACAC,EAMEqe,EANFre,WACAE,EAKEme,EALFne,UACAlG,EAIEqkB,EAJFrkB,cACAyF,EAGE4e,EAHF5e,cAEAJ,GACEgf,EAFFjf,gBAEEif,EADFhf,iBAEInK,EAAS,IAAI2J,EAAOhyB,EAAQ,CAChC+xB,OAAAA,EACA3sB,QAAAA,EACA4tB,cAAc,EACd5K,OAAAA,EACAkL,SAAAA,EACA/B,UAAAA,EACAmB,kBAAAA,EACAC,UAAAA,EACAjI,oBAAAA,EACAjyB,UAAAA,EACAg7B,2BAAAA,EACAR,UAAAA,EACAC,gBAAAA,EACAC,WAAAA,EACAE,UAAAA,EACAlG,cAAAA,EACAyF,cAAAA,IAEEx6B,EAAS,GACbgN,EAAQktC,UAAU,GAClBjqB,EAAOoiB,MAAMzuB,MAAMqM,EAAQ0L,GAC3B37B,EAAOI,KAAK4M,EAAQ5E,YACpB4E,EAAQ8Y,QACFq0B,IAAAA,EAAoBn7C,MAAMs0B,KAAKqI,GAAM3G,IAAI,SAAA6G,GAC9BA,OAAAA,EAAAA,IACR,IAAA,SACA,IAAA,UACI,OAAA,IAAIA,EAAI98B,YAAY88B,GAExBA,OAAAA,IA6EL5L,GA3EJA,EAAOkK,gBAAgBh7B,QAAQ,SAACi7C,EAAgB/7C,GACtC+7C,OAAAA,EAAe5uC,MAEhB,IAAA,UACA,IAAA,UACA,IAAA,SACA,IAAA,QACHwB,EAAQitC,eAA8BG,eAAAA,OAAAA,EAAev3C,MAAQs3C,EAAkB97C,IAC/E,MAGG,IAAA,QACA,IAAA,WACA,IAAA,WACA,IAAA,WAGA,IAAA,YACH2O,EAAQitC,eAA8BG,eAAAA,OAAAA,EAAev3C,MAAQs3C,EAAkB97C,IAC/E,MACG,IAAA,iBACE,IAAA,IAAIg8C,EAAa,EAAGA,EAAa1e,EAAKt9B,GAAGC,OAAQ+7C,IAAc,CAC5Dxe,IAAAA,EAAMF,EAAKt9B,GACjB2O,EAAQitC,eAA8BG,eAAAA,OAAAA,EAAev3C,KAAQw3C,KAAAA,OAAAA,EAAexe,KAAAA,EAAIwe,IAElF,MACG,IAAA,QACHrtC,EAAQitC,eAA8BG,eAAAA,OAAAA,EAAev3C,MAAQu3C,EAAeJ,aAC5E,MACG,IAAA,+BACA,IAAA,gBACA,IAAA,aACA,IAAA,aACA,IAAA,aACA,IAAA,aACA,IAAA,aACA,IAAA,aACA,IAAA,aACA,IAAA,aACA,IAAA,aACA,IAAA,kBACA,IAAA,kBACA,IAAA,kBACA,IAAA,kBACHhtC,EAAQitC,eAA8BG,eAAAA,OAAAA,EAAev3C,MAAQs3C,EAAkB97C,GAAGyxB,SAClF,MACF,QACQ,MAAA,IAAIvhB,MAAsE6rC,gEAAAA,OAAAA,EAAe5uC,UAGrGxL,EAAOI,KAAK,uCACZJ,EAAOI,KAAiB84C,YAAAA,OAAAA,EAAqB3pB,EAAMmE,aACnD1zB,EAAOI,KAAiB84C,YAAAA,OAAAA,EAAqB3pB,EAAMgE,oBACnDvzB,EAAOI,KAAiB84C,YAAAA,OAAAA,EAAqB3pB,EAAMiE,oBACnDxzB,EAAOI,KAAiB84C,YAAAA,OAAAA,EAAqB3pB,EAAM9mB,WAC/CwnB,EAAO0hB,eAAiB1hB,EAAOgjB,eAAiBhjB,EAAOwhB,cACzDzxC,EAAOI,KAC8B84C,mCAAAA,OAAAA,EAAqBjpB,EAAOwhB,cADjE,MAIFzxC,EAAOI,KAAK,qCACZJ,EAAOI,KAAwC6vB,mCAAAA,OAAAA,EAAOkK,gBAAgBnF,IAAI,SAAAolB,GAAkBA,OAAAA,EAAepC,UAAS9jB,KAAK,MAAzH,QACAlnB,EAAQktC,UAAU,GAClBjqB,EAAOyR,IAAI9d,MAAMqM,EAAQkqB,GACrBlqB,EAAOijB,cACTjjB,EAAOijB,gBACEjjB,EAAO0hB,cAChB1hB,EAAO0hB,eAET3xC,EAAOI,KAAK,iDACZ6vB,EAAOkK,gBAAgBh7B,QAAQ,SAAAi7C,GAC7Bp6C,EAAOI,KAAKg6C,EAAeE,2BAE7Bt6C,EAAOI,KAAK,+CACZJ,EAAOI,KAAK4M,EAAQ5E,YAChB6nB,EAAO0hB,eAAiB1hB,EAAOgjB,cAAe,CAChDjmC,EAAQ8Y,QACFlmB,IAAAA,EAAUqwB,EAAOijB,gBACjBqH,EAAcvtC,EAAQwtC,uBAAuBvqB,EAAOylB,eAC1D11C,EAAOI,KAESm6C,mDAAAA,OAAAA,EACF36C,sBAAAA,OAAAA,EAAQI,OAAOwL,KACbivC,yBAAAA,OAAAA,EAAiB76C,EAAQI,OAAQu6C,GAJjD,eAOK,IADGxf,IAAAA,EAAwC9K,EAAxC8K,WAAY4a,EAA4B1lB,EAA5B0lB,wBACXt3C,EAAI,EAAGA,EAAI08B,EAAWz8B,OAAQD,IAAK,CACpCyxB,IAAAA,EAAU6lB,EAAwBt3C,GAClC89B,EAAYpB,EAAW18B,GACvBq8C,EAAkB96C,EAAQu8B,EAAUze,UACpCi9B,EAAuB3tC,EAAQwtC,uBAAuB1qB,GAC5D9vB,EAAOI,KACL+7B,WAAAA,OAAAA,EAAUze,SACEi9B,0BAAAA,OAAAA,EACFD,sBAAAA,OAAAA,EAAgBlvC,KACdivC,yBAAAA,OAAAA,EAAiBC,EAAiBC,GAJhD,eAOF36C,EAAOI,KAAP,UAEFJ,EAAOI,KAAYk5C,OAAAA,OAAAA,EAAuB,KAAOA,EAAuB,OAAQ,KAChFt5C,EAAOI,KAAKm5C,EAAWrlB,KAAK,OAC5Bl0B,EAAOI,KAAK,QACR6vB,EAAOkJ,YACTn5B,EAAOI,KAAKw6C,EAAmB3qB,IAC/BjwB,EAAOI,KAAP,uCAEFJ,EAAOI,KAAK,yBAERy6C,IAAAA,EAAkB,GAMpBA,OALFzgB,EAAgBj7B,QAAQ,SAACq+B,GACvBqd,EAAgBz6C,KAAUo9B,GAAAA,OAAAA,EAAe8c,4BAIzCO,8EAAAA,OAAAA,EAAgB3mB,KAAK,IACrBmlB,QAAAA,OAAAA,GAA0C,GAC5Cr5C,MAAAA,OAAAA,EAAOk0B,KAAK,MAJZ,OAQF,SAAS2lB,EAAgBH,EAAYzpB,GAC7B6qB,IAAAA,EAAqC,WAArB7qB,EAAO5vB,UAAyBq5C,EAAiCA,oBAAAA,OAAAA,EAAvF,YACIzpB,OAAAA,EAAOD,OAAO,GACO8qB,gBAAAA,OAAAA,EAAkB7qB,MAAAA,OAAAA,EAAOD,OAAO,GAAOC,MAAAA,OAAAA,EAAOD,OAAO,GAAOC,MAAAA,OAAAA,EAAOD,OAAO,GAAjG,KAEEC,EAAOD,OAAO,GACO8qB,gBAAAA,OAAAA,EAAkB7qB,MAAAA,OAAAA,EAAOD,OAAO,GAAOC,MAAAA,OAAAA,EAAOD,OAAO,GAA5E,KAGqB8qB,gBAAAA,OAAAA,EAAkB7qB,MAAAA,OAAAA,EAAOD,OAAO,GAAvD,KAGF,SAAS4qB,EAAmB3qB,GACpB8a,IAAAA,EAAY9a,EAAO8a,UAAU3iC,WAC7BqiC,GAAsB,YAAYptC,KAAK0tC,GACtCxb,OAAAA,EAAM6H,wBAA2BqT,GAAAA,OAAAA,EAAqB,YAAc,IAAMM,OAAAA,GAAc,CAC7F1T,eAAgB,SAAC9hB,EAAQ1S,GACnB0S,MAAW,UAAXA,EACc1S,SAAAA,OAAAA,EAAU0sB,OAAAA,OAAAA,EAAM1sB,GAAMuF,WAAtC,KAEK,MAETkvB,WAAY,SAAC5Z,GACPA,GAAa,YAAbA,EACK,OAAA,KAELuS,GAAAA,EAAO9nB,eAAeuV,GACjBgtB,OAAAA,KAAKC,UAAU1a,EAAOvS,IAEzB,MAAA,IAAInP,MAA+BmP,wBAAAA,OAAAA,OAK/C,SAAS+8B,EAAiBM,EAAcR,GAChC3E,IAAAA,EAAUmF,EAAanF,QAAQxtC,WAC/BqiC,GAAsB,YAAYptC,KAAKu4C,GACvCoF,EAAqBzrB,EAAM6H,wBAA2BqT,GAAAA,OAAAA,EAAqB,YAAc,IAAMmL,OAAAA,GAAY,CAC/Gve,eAAgB,SAAC9hB,EAAQ1S,GACnB0S,GAAW,UAAXA,EACc1S,MAAAA,SAAAA,OAAAA,EAAU0sB,OAAAA,OAAAA,EAAM1sB,GAAMuF,WAAtC,KACK,GAAe,SAAXmN,EACCk1B,MAAAA,GAAAA,OAAAA,EAAqB,YAAc,IAAKsQ,OAAAA,EAAal4C,GAAMuF,YAE/D,MAAA,IAAImG,MAAM,yBAGpB+oB,WAAY,SAAC5Z,GACPA,GAAa,YAAbA,EACK68B,OAAAA,EAELQ,GAAAA,EAAa5yC,eAAeuV,GACvBgtB,OAAAA,KAAKC,UAAUoQ,EAAar9B,IAE/B,MAAA,IAAInP,MAA+BmP,wBAAAA,OAAAA,OAI3Cs9B,MAAAA,cAAAA,OAAAA,EADF,8BAKFt/C,OAAOC,QAAU,CACfw9C,eAAAA;;AC5OF,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1DM8B,IAAAA,EA0DN,WArDcl/C,SAAAA,EAAAA,EAAO8zB,GAAU,EAAA,KAAA,GAEzBhtB,IAAAA,EASEgtB,EATFhtB,KACAotB,EAQEJ,EARFI,OACAjjB,EAOE6iB,EAPF7iB,QACA4tB,EAME/K,EANF+K,aACAsgB,EAKErrB,EALFqrB,uBACAC,EAIEtrB,EAJFsrB,sBACAtZ,EAGEhS,EAHFgS,OACA9P,EAEElC,EAFFkC,eACAvmB,EACEqkB,EADFrkB,KAEE,IAAC3I,EACG,MAAA,IAAI0L,MAAM,gBAEd,IAAC/C,EACG,MAAA,IAAI+C,MAAM,gBAEd,IAACszB,EACG,MAAA,IAAItzB,MAAM,kBAEdszB,GAAW,SAAXA,GAAgC,cAAXA,EACjB,MAAA,IAAItzB,MAAyDszB,kDAAAA,OAAAA,EAAnE,MAEE,IAACqZ,EACG,MAAA,IAAI3sC,MAAM,qCAEb1L,KAAAA,KAAOA,EACPg/B,KAAAA,OAASA,EACT7rB,KAAAA,GAAQ,GAAA,OAAA,KAAK6rB,OAAUh/B,KAAAA,OAAAA,GACvBm1C,KAAAA,QAAqB,cAAXnW,EAAsCh/B,aAAAA,OAAAA,GAASA,EACzDotB,KAAAA,OAASA,EACT8B,KAAAA,eAAiBA,EAEjBvmB,KAAAA,KAAOzP,EAAMyP,MAAQA,EACrB1M,KAAAA,KAAO/C,EAAM+C,MAAQ,KACrB6K,KAAAA,MAAQ,KACRqD,KAAAA,QAAUA,EACV4tB,KAAAA,aAAeA,MAAAA,GAAsDA,EACrEwgB,KAAAA,cAAgB,KAChBF,KAAAA,uBAAyBA,EACzBC,KAAAA,sBAAwBA,EAYjC,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,YATc,MAAA,WACJ,MAAA,IAAI5sC,MAAqC,8BAAA,OAAA,KAAKxP,YAAY8D,SAQpE,CAAA,IAAA,cALc9G,MAAAA,SAAAA,GACJ,MAAA,IAAIwS,MAAuC,gCAAA,OAAA,KAAKxP,YAAY8D,WAItE,EAAA,GAAAnH,OAAOC,QAAU,CACfs/C,YAAAA;;AC+DF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA7HkB7+C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACUnzB,EAAAA,QAAQ,kBAAlB2yB,EAAAA,EAAAA,MACgB3yB,EAAAA,QAAQ,sBAAxB6+C,EAAAA,EAAAA,YAEFI,EAyHN,SAAA,GApHct/C,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRyrB,aAAe,KACfC,EAAAA,OAAS,KACTC,EAAAA,wBAA0Bz/C,EAAMgD,YAChC08C,EAAAA,iBAAmB5rB,EAAS4rB,iBAC5BC,EAAAA,eAAiB7rB,EAAS6rB,eAC1B1B,EAAAA,YAAc,KACd2B,EAAAA,YAAc,KACd9oB,EAAAA,SAAW,KATW,EAoH/B,OAAA,EAAA,EAzH+BooB,GAyH/B,EAAA,EAAA,CAAA,CAAA,IAAA,iBAxGmB,MAAA,WACVnrB,KAAAA,QAAU,KAAK2rB,mBACfG,KAAAA,iBAsGT,CAAA,IAAA,eAnGiB,MAAA,WACRR,KAAAA,cAAgB,KAAKF,yBACrBvxC,KAAAA,MAAQ,KAAK+xC,iBACbJ,KAAAA,aAAe,KAAKtlC,GAAK,MACzBulC,KAAAA,OAAS,KAAKvlC,GAAK,SA+F5B,CAAA,IAAA,uBA5FuBja,MAAAA,SAAAA,GACfiD,GAAAA,MAAMyJ,QAAQ1M,EAAM,IACf,OAAA,KAAK8/C,qBAAqB9/C,EAAM,IAEjCA,OAAAA,EAAMgD,aACPC,KAAAA,MACAgwB,KAAAA,WACAuN,KAAAA,WACAF,KAAAA,UACI3M,OAAAA,aACJ8F,KAAAA,kBACA1E,KAAAA,WACAwL,KAAAA,YACAzL,KAAAA,YACAnB,KAAAA,aACAosB,KAAAA,aACI//C,OAAAA,EAAMgD,YAGVhD,OADP44B,QAAQC,KAAK,0GACN74B,EAAMgD,cAyEjB,CAAA,IAAA,sBA9DsBhD,MAAAA,SAAAA,EAAOuC,EAAQy9C,GAC7BxsB,GAAAA,EAAM9mB,QAAQ1M,EAAM,KAAO,KAAKu2B,oBAAqB,CAEjD0pB,IAAAA,EAAa,IAAItsB,aAAapxB,GAE7B09C,OADPzsB,EAAMmE,UAAU33B,EAAOigD,GAChBA,EAECjgD,OAAAA,EAAMgD,aACPy2B,KAAAA,kBACA1E,KAAAA,WACAuL,KAAAA,UACAC,KAAAA,YACAC,KAAAA,WACA7M,KAAAA,aACAV,KAAAA,WACGgtB,IAAAA,EAAa,IAAID,GAAQhgD,EAAMgD,aAAaT,GAE3C09C,OADPzsB,EAAMmE,UAAU33B,EAAOigD,GAChBA,EAET,QACQA,IAAAA,EAAa,IAAItsB,aAAapxB,GAE7B09C,OADPzsB,EAAMmE,UAAU33B,EAAOigD,GAChBA,KAwCjB,CAAA,IAAA,cA7BcjgD,MAAAA,SAAAA,GACNiD,GAAAA,MAAMyJ,QAAQ1M,EAAM,IACf,OAAA,KAAK+/B,YAAY//B,EAAM,IACzB,GAAIA,EAAMgD,cAAgBgwB,EACxB,OAAA,KAAK+M,YAAY//B,EAAMA,OAExBA,OAAAA,EAAMgD,aACPy2B,KAAAA,kBACA1E,KAAAA,WACAuL,KAAAA,UACI,OAAA,EACJC,KAAAA,YACAC,KAAAA,WACI,OAAA,EACJ7M,KAAAA,aACAV,KAAAA,WACL,QACS,OAAA,KAYf,CAAA,IAAA,wBAL0B,MAAA,WAChB,MAAA,IAAIzgB,MAAoD,8CAAA,OAAA,KAAKxP,YAAY8D,WAInF,EAAA,GAAAnH,OAAOC,QAAU,CACf0/C,iBAAAA;;ACrGF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzBkBj/C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFY,EAsBN,SAAA,GArBclgD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRmqB,YAAcj+C,EAFQ,EAqB/B,OAAA,EAAA,EAtBsCs/C,GAsBtC,EAAA,EAAA,CAAA,CAAA,IAAA,YAjBYt/C,MAAAA,SAAAA,GACJ,MAAgB,cAAhB,KAAK8lC,OACc,cAAA,OAAA,KAAK7rB,GAAQja,OAAAA,OAAAA,EAAlC,OAEqB,gBAAA,OAAA,KAAKia,GAA5B,SAaJ,CAAA,IAAA,wBAV0B,MAAA,WACM,MAAA,qBAAA,OAAA,KAAKnT,KAAU,OAAA,OAAA,KAAKm1C,QAAhD,SASJ,CAAA,IAAA,cANcj8C,MAAAA,SAAAA,GACU,cAAhB,KAAK8lC,QACJ5R,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKgkC,YAAcj+C,OAIzD,EAAA,GAAAL,OAAOC,QAAU,CACfsgD,wBAAAA;;ACCF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA3BkB7/C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFc,EAwBN,SAAA,GAvBcpgD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRmqB,YAAcj+C,EAFQ,EAuB/B,OAAA,EAAA,EAxBoCs/C,GAwBpC,EAAA,EAAA,CAAA,CAAA,IAAA,wBAnB0B,MAAA,WACM,MAAA,qBAAA,OAAA,KAAKx4C,KAAU,OAAA,OAAA,KAAKm1C,QAAhD,SAkBJ,CAAA,IAAA,YAhBYj8C,MAAAA,SAAAA,GACJ,MAAgB,cAAhB,KAAK8lC,OACH3P,OAAOC,UAAUp2B,GACG,eAAA,OAAA,KAAKia,GAAQja,OAAAA,OAAAA,EAAnC,SAEoB,eAAA,OAAA,KAAKia,GAAQja,OAAAA,OAAAA,EAAnC,OAEsB,iBAAA,OAAA,KAAKia,GAA7B,SASJ,CAAA,IAAA,cANcja,MAAAA,SAAAA,GACU,cAAhB,KAAK8lC,QACJ5R,KAAAA,OAAO6oB,aAAa,KAAK9iC,GAAI,KAAKgkC,YAAcj+C,OAIzD,EAAA,GAAAL,OAAOC,QAAU,CACfwgD,sBAAAA;;ACJF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAxBkB//C,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFe,EAqBN,SAAA,GApBcrgD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRmqB,YAAcj+C,EAFQ,EAoB/B,OAAA,EAAA,EArBsCs/C,GAqBtC,EAAA,EAAA,CAAA,CAAA,IAAA,wBAhB0B,MAAA,WACM,MAAA,qBAAA,OAAA,KAAKx4C,KAAU,OAAA,OAAA,KAAKm1C,QAAhD,SAeJ,CAAA,IAAA,YAbYj8C,MAAAA,SAAAA,GACJ,MAAgB,cAAhB,KAAK8lC,OACa,aAAA,OAAA,KAAK7rB,GAASmX,OAAAA,OAAAA,SAASpxB,GAA3C,OAEoB,eAAA,OAAA,KAAKia,GAA3B,SASJ,CAAA,IAAA,cANcja,MAAAA,SAAAA,GACU,cAAhB,KAAK8lC,QACJ5R,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKgkC,YAAcj+C,OAIzD,EAAA,GAAAL,OAAOC,QAAU,CACfygD,wBAAAA;;ACkBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA3CkBhgD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFgB,EAwCN,SAAA,GAvCctgD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,EAAA,KAAA,GACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,IACLuF,IAAAA,EAAkBr5B,EAAlBq5B,MAAOC,EAAWt5B,EAAXs5B,OAFY,OAGtBtF,EAAAA,WAAa,CAACqF,EAAOC,EAAQ,GAC7BinB,EAAAA,iBACAX,EAAAA,YAAc,CAACvmB,EAAOC,GACtB2kB,EAAAA,YAAcj+C,EANQ,EAuC/B,OAAA,EAAA,EAxCwCs/C,GAwCxC,EAAA,EAAA,CAAA,CAAA,IAAA,wBA9B0B,MAAA,WACM,MAAA,qBAAA,OAAA,KAAKx4C,KAAU,OAAA,OAAA,KAAKm1C,QAAhD,SA6BJ,CAAA,IAAA,YA1Bc,MAAA,WACHzoB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACjB,SAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,SAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAH/F,SAyBX,CAAA,IAAA,cAlBcwsB,MAAAA,SAAAA,GACNA,GAAAA,EAAWx9C,cAAgB,KAAKy8C,wBAAhCe,CAIa1N,IAAAA,EAAO,KAAhB7hC,QACR6hC,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGoO,YAAYpO,EAAGqO,qBAAqB,GACvCrO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAMnB,EAAGmB,KAAMnB,EAAGsC,cAAe,KAAK6I,YAAcuC,GAClFtsB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACf0gD,0BAAAA;;ACtBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAtBkBjgD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MAC8BnzB,EAAAA,QAAQ,gBAAtCigD,EAAAA,EAAAA,0BAEFe,EAmBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAnB+Cf,GAmB/C,EAAA,EAAA,CAAA,CAAA,IAAA,YAlBc,MAAA,WACH9sB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,kBAc5B,CAAA,IAAA,cAVcv/C,MAAAA,SAAAA,GACFq5B,IAAAA,EAAkBr5B,EAAlBq5B,MAAOC,EAAWt5B,EAAXs5B,OACVtF,KAAAA,WAAa,CAACqF,EAAOC,EAAQ,GAC7BsmB,KAAAA,YAAc,CAACvmB,EAAOC,GACtBpF,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACfyhD,iCAAAA;;ACyBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAhDkBhhD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFkC,EA6CN,SAAA,GA5CcxhD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRysB,iBACAzpB,EAAAA,SAAW,EACA92B,IAAAA,EAAAA,EAAAA,EAAM+C,KAJK,GAItBswB,EAJsB,EAAA,GAInBC,EAJmB,EAAA,GAIhBC,EAJgB,EAAA,GAAA,OAKtBS,EAAAA,WAAa,IAAIf,WAAW,CAACI,GAAK,EAAGC,GAAK,EAAGC,GAAK,IAClDqsB,EAAAA,YAAcpsB,EAAMqD,mCAAmC,EAAK7C,WAAY,EAAK8C,UAC7E2qB,EAAAA,kBAAoB,EAAK7B,YAAY,GAAK,EAAKA,YAAY,GAAK,EAAK9oB,SACrEmnB,EAAAA,YAAc,IAAItqB,aAAa,EAAK8tB,mBARd,EA4C/B,OAAA,EAAA,EA7C0CnC,GA6C1C,EAAA,EAAA,CAAA,CAAA,IAAA,wBAjC0B,MAAA,WACf9rB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAK1xB,KAA2B,wBAAA,OAAA,KAAK26C,kBAC7C,KAAA,aAAA,OAAA,KAAKxF,QAA8B,wBAAA,OAAA,KAAKn1C,KAFhD,SAgCX,CAAA,IAAA,YA1Bc,MAAA,WACH0sB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACjB,SAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,SAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAH/F,SAyBX,CAAA,IAAA,cAlBczmB,MAAAA,SAAAA,GACNA,GAAAA,EAAMvK,cAAgB,KAAKy8C,wBAA3BlyC,CAIaulC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMmE,UAAUpqB,EAAMvN,MAAO,KAAKi+C,aAClCnL,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM,KAAK2L,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGoB,MAAO,KAAK+J,aACzG/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACf4hD,4BAAAA;;ACzBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAxBkBnhD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACgCnzB,EAAAA,QAAQ,kBAAxCmhD,EAAAA,EAAAA,4BAEFE,EAqBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EArBiDF,GAqBjD,EAAA,EAAA,CAAA,CAAA,IAAA,YApBc,MAAA,WACHhuB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,kBAgB5B,CAAA,IAAA,cAZcv/C,MAAAA,SAAAA,GACMA,IAAAA,EAAAA,EAAAA,EAAM+C,KADL,GACZswB,EADY,EAAA,GACTC,EADS,EAAA,GACNC,EADM,EAAA,GAEZS,KAAAA,WAAa,IAAIf,WAAW,CAACI,GAAK,EAAGC,GAAK,EAAGC,GAAK,IAClDqsB,KAAAA,YAAcpsB,EAAMqD,mCAAmC,KAAK7C,WAAY,KAAK8C,UAC7E2qB,KAAAA,kBAAoB,KAAK7B,YAAY,GAAK,KAAKA,YAAY,GAAK,KAAK9oB,SACrEmnB,KAAAA,YAAc,IAAItqB,aAAa,KAAK8tB,mBACpCvtB,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACf8hD,mCAAAA;;AC0BF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAnDkBrhD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFqC,EAgDN,SAAA,GA/Cc3hD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRysB,iBACAzpB,EAAAA,SAAW,EAAKiJ,YAAY//B,GACfA,IAAAA,EAAAA,EAAAA,EAAM+C,KAJG,GAIpBswB,EAJoB,EAAA,GAIjBC,EAJiB,EAAA,GAIdC,EAJc,EAAA,GAAA,OAKtBS,EAAAA,WAAa,IAAIf,WAAW,CAACI,GAAK,EAAGC,GAAK,EAAGC,GAAK,IAClDqsB,EAAAA,YAAcpsB,EAAMyD,oCAAoC,EAAKjD,WAAY,EAAK8C,UAC9E2qB,EAAAA,kBAAoB,EAAK7B,YAAY,GAAK,EAAKA,YAAY,IAAM,EAAI,EAAK9oB,UAC1E8qB,EAAAA,iBAAmB,EAAK9B,qBAAqB9/C,EAAMA,OACnD6hD,EAAAA,eAAiB,IAAI,EAAKD,iBAAiB,EAAKH,mBAChDxD,EAAAA,YAAc,IAAIlpB,WAAW,EAAK8sB,eAAe/pB,QAV3B,EA+C/B,OAAA,EAAA,EAhD4CwnB,GAgD5C,EAAA,EAAA,CAAA,CAAA,IAAA,wBAlC0B,MAAA,WACf9rB,OAAAA,EAAMgF,cAAc,CACD,wBAAA,OAAA,KAAK1xB,KAAc,WAAA,OAAA,KAAK86C,iBAAiB96C,KAAQ,KAAA,OAAA,KAAK26C,kBACzD,KAAA,qBAAA,OAAA,KAAK36C,KAAwC,qCAAA,OAAA,KAAKA,KAC1D,YAAA,aAAA,OAAA,KAAKm1C,QAAiC,2BAAA,OAAA,KAAKn1C,KAHnD,SAiCX,CAAA,IAAA,YA1Bc,MAAA,WACH0sB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACjB,SAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,SAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAH/F,SAyBX,CAAA,IAAA,cAlBczmB,MAAAA,SAAAA,GACNA,GAAAA,EAAMvK,cAAgB,KAAKy8C,wBAA3BlyC,CAIaulC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMmE,UAAUpqB,EAAMvN,MAAO,KAAK6hD,gBAClC/O,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM,KAAK2L,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGsC,cAAe,KAAK6I,aACjH/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACf+hD,8BAAAA;;AC1BF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA1BkBthD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACkCnzB,EAAAA,QAAQ,oBAA1CshD,EAAAA,EAAAA,8BAEFG,EAuBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAvBmDH,GAuBnD,EAAA,EAAA,CAAA,CAAA,IAAA,YAtBc,MAAA,WACHnuB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,kBAkB5B,CAAA,IAAA,cAdcv/C,MAAAA,SAAAA,GACMA,IAAAA,EAAAA,EAAAA,EAAM+C,KADL,GACZswB,EADY,EAAA,GACTC,EADS,EAAA,GACNC,EADM,EAAA,GAEZS,KAAAA,WAAa,IAAIf,WAAW,CAACI,GAAK,EAAGC,GAAK,EAAGC,GAAK,IAClDqsB,KAAAA,YAAcpsB,EAAMyD,oCAAoC,KAAKjD,WAAY,KAAK8C,UAC9E2qB,KAAAA,kBAAoB,KAAK7B,YAAY,GAAK,KAAKA,YAAY,IAAM,EAAI,KAAK9oB,UACzEkpB,IAAAA,EAAO,KAAKF,qBAAqB9/C,EAAMA,OACxC6hD,KAAAA,eAAiB,IAAI7B,EAAK,KAAKyB,mBAC/BxD,KAAAA,YAAc,IAAIlpB,WAAW,KAAK8sB,eAAe/pB,QACjD5D,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACfkiD,qCAAAA;;ACYF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAvCkBzhD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFyC,EAoCN,SAAA,GAnCc/hD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACR+rB,eACA7rB,EAAAA,WAAah0B,EAAMg0B,WACnB4rB,EAAAA,YAAc5/C,EAAM+C,KACpBk7C,EAAAA,YAAcj+C,EAAM+zB,QALE,EAmC/B,OAAA,EAAA,EApC2DurB,GAoC3D,EAAA,EAAA,CAAA,CAAA,IAAA,wBA3B0B,MAAA,WACM,MAAA,qBAAA,OAAA,KAAKx4C,KAAU,OAAA,OAAA,KAAKm1C,QAAhD,iBA0BJ,CAAA,IAAA,YAvBc,MAAA,WACHzoB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACjB,SAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,SAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAH/F,SAsBX,CAAA,IAAA,cAfcguB,MAAAA,SAAAA,GACNA,GAAAA,EAAah/C,cAAgB,KAAKy8C,wBAAlCuC,CAIA,GAAA,KAAKnjB,cAAgBmjB,EAAa/wC,UAAY,KAAKA,QAC/C,MAAA,IAAIuB,MAAe,SAAA,OAAA,KAAK1L,KAAS,MAAA,OAAA,KAAK2I,KAA5C,gCAEeqjC,IAAAA,EAAO,KAAhB7hC,QACR6hC,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKkK,YAAc+D,EAAajuB,SACzDG,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAThCwxC,KAAAA,4BAaX,EAAA,GAAAz/C,OAAOC,QAAU,CACfmiD,6CAAAA;;ACnBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GArBkB1hD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACiDnzB,EAAAA,QAAQ,qCAAzD0hD,EAAAA,EAAAA,6CAEFE,EAkBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAlBkEF,GAkBlE,EAAA,EAAA,CAAA,CAAA,IAAA,YAjBc,MAAA,WACHvuB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,kBAa5B,CAAA,IAAA,cATcyC,MAAAA,SAAAA,GACLhuB,KAAAA,WAAaguB,EAAahuB,WAC1B4rB,KAAAA,YAAcoC,EAAaj/C,KAC3BmxB,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1BoC,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAriD,OAAOC,QAAU,CACfqiD,oDAAAA;;ACmBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzCkB5hD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEF4C,EAsCN,SAAA,GArCcliD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACR+rB,eACSD,IAAAA,EAA4B5/C,EAAlC+C,KAAmBixB,EAAeh0B,EAAfg0B,WAHA,OAItB8C,EAAAA,SAAW,EAAKiJ,YAAY//B,GAC5Bg0B,EAAAA,WAAaA,EACb4rB,EAAAA,YAAcA,EACd3B,EAAAA,YAAcj+C,EAAM+zB,QAPE,EAqC/B,OAAA,EAAA,EAtC4CurB,GAsC5C,EAAA,EAAA,CAAA,CAAA,IAAA,wBA3B0B,MAAA,WACM,MAAA,qBAAA,OAAA,KAAKx4C,KAAU,OAAA,OAAA,KAAKm1C,QAAhD,iBA0BJ,CAAA,IAAA,YAvBc,MAAA,WACHzoB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACjB,SAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,SAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAH/F,SAsBX,CAAA,IAAA,cAfcguB,MAAAA,SAAAA,GACNA,GAAAA,EAAah/C,cAAgB,KAAKy8C,wBAAlCuC,CAIA,GAAA,KAAKnjB,cAAgBmjB,EAAa/wC,UAAY,KAAKA,QAC/C,MAAA,IAAIuB,MAAe,SAAA,OAAA,KAAK1L,KAAS,MAAA,OAAA,KAAK2I,KAA5C,gCAEeqjC,IAAAA,EAAO,KAAhB7hC,QACR6hC,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKkK,YAAc+D,EAAajuB,SACzDG,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAThCwxC,KAAAA,4BAaX,EAAA,GAAAz/C,OAAOC,QAAU,CACfsiD,8BAAAA;;ACrBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GArBkB7hD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACkCnzB,EAAAA,QAAQ,oBAA1C6hD,EAAAA,EAAAA,8BAEFC,EAkBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAlBmDD,GAkBnD,EAAA,EAAA,CAAA,CAAA,IAAA,YAjBc,MAAA,WACH1uB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,kBAa5B,CAAA,IAAA,cATcv/C,MAAAA,SAAAA,GACLg0B,KAAAA,WAAah0B,EAAMg0B,WACnB4rB,KAAAA,YAAc5/C,EAAM+C,KACpBmxB,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACfuiD,qCAAAA;;ACyBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA/CkB9hD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEF8C,EA4CN,SAAA,GA3CcpiD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRysB,iBACAzpB,EAAAA,SAAW,EACX9C,EAAAA,WAAaR,EAAM0D,cAAcl3B,GAAO,GACxC4/C,EAAAA,YAAcpsB,EAAMqD,mCAAmC,EAAK7C,WAAY,EAAK8C,UAC7E2qB,EAAAA,kBAAoB,EAAK7B,YAAY,GAAK,EAAKA,YAAY,GAAK,EAAK9oB,SACrEmnB,EAAAA,YAAc,IAAItqB,aAAa,EAAK8tB,mBAPd,EA2C/B,OAAA,EAAA,EA5C0CnC,GA4C1C,EAAA,EAAA,CAAA,CAAA,IAAA,wBAjC0B,MAAA,WACf9rB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAK1xB,KAA2B,wBAAA,OAAA,KAAK26C,kBAC7C,KAAA,aAAA,OAAA,KAAKxF,QAAwB,kBAAA,OAAA,KAAKn1C,KAF1C,SAgCX,CAAA,IAAA,YA1Bc,MAAA,WACH0sB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACjB,SAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,SAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAH/F,SAyBX,CAAA,IAAA,cAlBch0B,MAAAA,SAAAA,GACNA,GAAAA,EAAMgD,cAAgB,KAAKy8C,wBAA3Bz/C,CAIa8yC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMmE,UAAU33B,EAAO,KAAKi+C,aAC5BnL,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM,KAAK2L,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGoB,MAAO,KAAK+J,aACzG/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACfwiD,4BAAAA;;ACzBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAvBkB/hD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACgCnzB,EAAAA,QAAQ,kBAAxC+hD,EAAAA,EAAAA,4BAEFC,EAoBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EApBiDD,GAoBjD,EAAA,EAAA,CAAA,CAAA,IAAA,YAnBc,MAAA,WACH5uB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,kBAe5B,CAAA,IAAA,cAXcv/C,MAAAA,SAAAA,GACLg0B,KAAAA,WAAaR,EAAM0D,cAAcl3B,GAAO,GACxC4/C,KAAAA,YAAcpsB,EAAMqD,mCAAmC,KAAK7C,WAAY,KAAK8C,UAC7E2qB,KAAAA,kBAAoB,KAAK7B,YAAY,GAAK,KAAKA,YAAY,GAAK,KAAK9oB,SACrEmnB,KAAAA,YAAc,IAAItqB,aAAa,KAAK8tB,mBACpCvtB,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACfyiD,mCAAAA;;AC4BF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GApDkBhiD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFgD,EAiDN,SAAA,GAhDctiD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRysB,iBACAzpB,EAAAA,SAAW,EACXyrB,EAAAA,SAASviD,GAJa,EAgD/B,OAAA,EAAA,EAjD6Cs/C,GAiD7C,EAAA,EAAA,CAAA,CAAA,IAAA,WAzCWt/C,MAAAA,SAAAA,GACDwiD,IAAAA,EAAkBhvB,EAAM0D,cAAcl3B,GAAO,GAC9C4/C,KAAAA,YAAcpsB,EAAMqD,mCAAmC2rB,EAAiB,KAAK1rB,UAC7E9C,KAAAA,WAAa,IAAIf,WAAW,CAACuvB,EAAgB,GAAI,EAAG,IACpDf,KAAAA,kBAAoB,KAAK7B,YAAY,GAAK,KAAKA,YAAY,GAAK,KAAK9oB,SACrEmnB,KAAAA,YAAc,IAAItqB,aAAa,KAAK8tB,qBAoC7C,CAAA,IAAA,wBAjC0B,MAAA,WACfjuB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAK1xB,KAA2B,wBAAA,OAAA,KAAK26C,kBAC7C,KAAA,aAAA,OAAA,KAAKxF,QAAwB,kBAAA,OAAA,KAAKn1C,KAF1C,SAgCX,CAAA,IAAA,YA1Bc,MAAA,WACH0sB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACjB,SAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,SAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAH/F,SAyBX,CAAA,IAAA,cAlBch0B,MAAAA,SAAAA,GACNA,GAAAA,EAAMgD,cAAgB,KAAKy8C,wBAA3Bz/C,CAIa8yC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMgE,iBAAiBx3B,EAAO,KAAKi+C,aACnCnL,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM,KAAK2L,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGoB,MAAO,KAAK+J,aACzG/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACf0iD,+BAAAA;;ACjCF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GApBkBjiD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmCnzB,EAAAA,QAAQ,sBAA3CiiD,EAAAA,EAAAA,+BAEFG,EAiBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAjBoDH,GAiBpD,EAAA,EAAA,CAAA,CAAA,IAAA,YAhBc,MAAA,WACH9uB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,kBAY5B,CAAA,IAAA,cARcv/C,MAAAA,SAAAA,GACLuiD,KAAAA,SAASviD,GACTk0B,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACf6iD,sCAAAA;;AC+BF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GApDkBpiD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFoD,EAiDN,SAAA,GAhDc1iD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRysB,iBACAzpB,EAAAA,SAAW,EACXyrB,EAAAA,SAASviD,GAJa,EAgD/B,OAAA,EAAA,EAjD6Cs/C,GAiD7C,EAAA,EAAA,CAAA,CAAA,IAAA,WAzCWt/C,MAAAA,SAAAA,GACDwiD,IAAAA,EAAkBhvB,EAAM0D,cAAcl3B,GAAO,GAC9C4/C,KAAAA,YAAcpsB,EAAMqD,mCAAmC2rB,EAAiB,KAAK1rB,UAC7E9C,KAAAA,WAAa,IAAIf,WAAW,CAACuvB,EAAgB,GAAIA,EAAgB,GAAI,IACrEf,KAAAA,kBAAoB,KAAK7B,YAAY,GAAK,KAAKA,YAAY,GAAK,KAAK9oB,SACrEmnB,KAAAA,YAAc,IAAItqB,aAAa,KAAK8tB,qBAoC7C,CAAA,IAAA,wBAjC0B,MAAA,WACfjuB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAK1xB,KAA2B,wBAAA,OAAA,KAAK26C,kBAC7C,KAAA,aAAA,OAAA,KAAKxF,QAAwB,kBAAA,OAAA,KAAKn1C,KAF1C,SAgCX,CAAA,IAAA,YA1Bc,MAAA,WACH0sB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACjB,SAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,SAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAH/F,SAyBX,CAAA,IAAA,cAlBch0B,MAAAA,SAAAA,GACNA,GAAAA,EAAMgD,cAAgB,KAAKy8C,wBAA3Bz/C,CAIa8yC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMiE,iBAAiBz3B,EAAO,KAAKi+C,aACnCnL,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM,KAAK2L,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGoB,MAAO,KAAK+J,aACzG/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACf8iD,+BAAAA;;ACjCF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GApBkBriD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmCnzB,EAAAA,QAAQ,sBAA3CqiD,EAAAA,EAAAA,+BAEFC,EAiBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAjBoDD,GAiBpD,EAAA,EAAA,CAAA,CAAA,IAAA,YAhBc,MAAA,WACHlvB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,kBAY5B,CAAA,IAAA,cARcv/C,MAAAA,SAAAA,GACLuiD,KAAAA,SAASviD,GACTk0B,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACf+iD,sCAAAA;;AC+BF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GApDkBtiD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFsD,EAiDN,SAAA,GAhDc5iD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRysB,iBACAzpB,EAAAA,SAAW,EACXyrB,EAAAA,SAASviD,GAJa,EAgD/B,OAAA,EAAA,EAjD6Cs/C,GAiD7C,EAAA,EAAA,CAAA,CAAA,IAAA,WAzCWt/C,MAAAA,SAAAA,GACDwiD,IAAAA,EAAkBhvB,EAAM0D,cAAcl3B,GAAO,GAC9C4/C,KAAAA,YAAcpsB,EAAMqD,mCAAmC2rB,EAAiB,KAAK1rB,UAC7E9C,KAAAA,WAAa,IAAIf,WAAW,CAACuvB,EAAgB,GAAIA,EAAgB,GAAIA,EAAgB,KACrFf,KAAAA,kBAAoB,KAAK7B,YAAY,GAAK,KAAKA,YAAY,GAAK,KAAK9oB,SACrEmnB,KAAAA,YAAc,IAAItqB,aAAa,KAAK8tB,qBAoC7C,CAAA,IAAA,wBAjC0B,MAAA,WACfjuB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAK1xB,KAA2B,wBAAA,OAAA,KAAK26C,kBAC7C,KAAA,aAAA,OAAA,KAAKxF,QAAwB,kBAAA,OAAA,KAAKn1C,KAF1C,SAgCX,CAAA,IAAA,YA1Bc,MAAA,WACH0sB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACjB,SAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,SAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAH/F,SAyBX,CAAA,IAAA,cAlBch0B,MAAAA,SAAAA,GACNA,GAAAA,EAAMgD,cAAgB,KAAKy8C,wBAA3Bz/C,CAIa8yC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMkE,iBAAiB13B,EAAO,KAAKi+C,aACnCnL,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM,KAAK2L,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGoB,MAAO,KAAK+J,aACzG/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACfgjD,+BAAAA;;ACjCF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GApBkBviD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmCnzB,EAAAA,QAAQ,sBAA3CuiD,EAAAA,EAAAA,+BAEFC,EAiBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAjBoDD,GAiBpD,EAAA,EAAA,CAAA,CAAA,IAAA,YAhBc,MAAA,WACHpvB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,kBAY5B,CAAA,IAAA,cARcv/C,MAAAA,SAAAA,GACLuiD,KAAAA,SAASviD,GACTk0B,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACfijD,sCAAAA;;ACIF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzBkBxiD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEFwD,EAsBN,SAAA,GArBc9iD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRmqB,YAAcj+C,EAFQ,EAqB/B,OAAA,EAAA,EAtB2Cs/C,GAsB3C,EAAA,EAAA,CAAA,CAAA,IAAA,YAjBYt/C,MAAAA,SAAAA,GACJ,MAAgB,cAAhB,KAAK8lC,OACc,cAAA,OAAA,KAAK7rB,GAAaja,YAAAA,OAAAA,EAAM,GAAMA,KAAAA,OAAAA,EAAM,GAAzD,QAEqB,gBAAA,OAAA,KAAKia,GAA5B,SAaJ,CAAA,IAAA,wBAV0B,MAAA,WACM,MAAA,qBAAA,OAAA,KAAKnT,KAAU,OAAA,OAAA,KAAKm1C,QAAhD,SASJ,CAAA,IAAA,cANcj8C,MAAAA,SAAAA,GACU,cAAhB,KAAK8lC,QACJ5R,KAAAA,OAAO6uB,cAAc,KAAK9oC,GAAI,KAAKgkC,YAAcj+C,OAI1D,EAAA,GAAAL,OAAOC,QAAU,CACfkjD,6BAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzBkBziD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEF0D,EAsBN,SAAA,GArBchjD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRmqB,YAAcj+C,EAFQ,EAqB/B,OAAA,EAAA,EAtB2Cs/C,GAsB3C,EAAA,EAAA,CAAA,CAAA,IAAA,YAjBYt/C,MAAAA,SAAAA,GACJ,MAAgB,cAAhB,KAAK8lC,OACc,cAAA,OAAA,KAAK7rB,GAAaja,YAAAA,OAAAA,EAAM,GAAMA,KAAAA,OAAAA,EAAM,GAAMA,KAAAA,OAAAA,EAAM,GAArE,QAEqB,gBAAA,OAAA,KAAKia,GAA5B,SAaJ,CAAA,IAAA,wBAV0B,MAAA,WACM,MAAA,qBAAA,OAAA,KAAKnT,KAAU,OAAA,OAAA,KAAKm1C,QAAhD,SASJ,CAAA,IAAA,cANcj8C,MAAAA,SAAAA,GACU,cAAhB,KAAK8lC,QACJ5R,KAAAA,OAAO+uB,cAAc,KAAKhpC,GAAI,KAAKgkC,YAAcj+C,OAI1D,EAAA,GAAAL,OAAOC,QAAU,CACfojD,6BAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzBkB3iD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEF4D,EAsBN,SAAA,GArBcljD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRmqB,YAAcj+C,EAFQ,EAqB/B,OAAA,EAAA,EAtB2Cs/C,GAsB3C,EAAA,EAAA,CAAA,CAAA,IAAA,YAjBYt/C,MAAAA,SAAAA,GACJ,MAAgB,cAAhB,KAAK8lC,OACc,cAAA,OAAA,KAAK7rB,GAAaja,YAAAA,OAAAA,EAAM,GAAMA,KAAAA,OAAAA,EAAM,GAAMA,KAAAA,OAAAA,EAAM,GAAMA,KAAAA,OAAAA,EAAM,GAAjF,QAEqB,gBAAA,OAAA,KAAKia,GAA5B,SAaJ,CAAA,IAAA,wBAV0B,MAAA,WACM,MAAA,qBAAA,OAAA,KAAKnT,KAAU,OAAA,OAAA,KAAKm1C,QAAhD,SASJ,CAAA,IAAA,cANcj8C,MAAAA,SAAAA,GACU,cAAhB,KAAK8lC,QACJ5R,KAAAA,OAAOivB,cAAc,KAAKlpC,GAAI,KAAKgkC,YAAcj+C,OAI1D,EAAA,GAAAL,OAAOC,QAAU,CACfsjD,6BAAAA;;ACwBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAlDkB7iD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,WAA7Bi/C,EAAAA,EAAAA,iBAEF8D,EA+CN,SAAA,GA9CcpjD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRysB,iBACAzpB,EAAAA,SAAW,EAAKiJ,YAAY//B,GAC5Bg0B,EAAAA,WAAaR,EAAM0D,cAAcl3B,GAAO,GACxC4/C,EAAAA,YAAcpsB,EAAMyD,oCAAoC,EAAKjD,WAAY,EAAK8C,UAC9E2qB,EAAAA,kBAAoB,EAAK7B,YAAY,GAAK,EAAKA,YAAY,IAAM,EAAI,EAAK9oB,UAC1E8qB,EAAAA,iBAAmB,EAAK9B,qBAAqB9/C,GAC7C6hD,EAAAA,eAAiB,IAAI,EAAKD,iBAAiB,EAAKH,mBAChDxD,EAAAA,YAAc,IAAIlpB,WAAW,EAAK8sB,eAAe/pB,QAT3B,EA8C/B,OAAA,EAAA,EA/C4CwnB,GA+C5C,EAAA,EAAA,CAAA,CAAA,IAAA,wBAlC0B,MAAA,WACf9rB,OAAAA,EAAMgF,cAAc,CACD,wBAAA,OAAA,KAAK1xB,KAAc,WAAA,OAAA,KAAK86C,iBAAiB96C,KAAQ,KAAA,OAAA,KAAK26C,kBACzD,KAAA,qBAAA,OAAA,KAAK36C,KAAwC,qCAAA,OAAA,KAAKA,KAC1D,YAAA,aAAA,OAAA,KAAKm1C,QAA2B,qBAAA,OAAA,KAAKn1C,KAH7C,SAiCX,CAAA,IAAA,YA1Bc,MAAA,WACH0sB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACjB,SAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,SAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAH/F,SAyBX,CAAA,IAAA,cAlBch0B,MAAAA,SAAAA,GACNA,GAAAA,EAAMgD,cAAgB,KAAKy8C,wBAA3Bz/C,CAIa8yC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMmE,UAAU33B,EAAO,KAAK6hD,gBAC5B/O,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM,KAAK2L,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGsC,cAAe,KAAK6I,aACjH/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACfwjD,8BAAAA;;AC1BF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzBkB/iD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACkCnzB,EAAAA,QAAQ,oBAA1C+iD,EAAAA,EAAAA,8BAEFC,EAsBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAtBmDD,GAsBnD,EAAA,EAAA,CAAA,CAAA,IAAA,YArBc,MAAA,WACH5vB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,kBAiB5B,CAAA,IAAA,cAbcv/C,MAAAA,SAAAA,GACLg0B,KAAAA,WAAaR,EAAM0D,cAAcl3B,GAAO,GACxC4/C,KAAAA,YAAcpsB,EAAMyD,oCAAoC,KAAKjD,WAAY,KAAK8C,UAC9E2qB,KAAAA,kBAAoB,KAAK7B,YAAY,GAAK,KAAKA,YAAY,IAAM,EAAI,KAAK9oB,UACzEkpB,IAAAA,EAAO,KAAKF,qBAAqB9/C,GAClC6hD,KAAAA,eAAiB,IAAI7B,EAAK,KAAKyB,mBAC/BxD,KAAAA,YAAc,IAAIlpB,WAAW,KAAK8sB,eAAe/pB,QACjD5D,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACfyjD,qCAAAA;;ACsJF,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAhLoChjD,IAAAA,EAAAA,QAAQ,0BAApC6/C,EAAAA,EAAAA,wBAC0B7/C,EAAAA,QAAQ,wBAAlC+/C,EAAAA,EAAAA,sBAC4B//C,EAAAA,QAAQ,0BAApCggD,EAAAA,EAAAA,wBAE8BhgD,EAAAA,QAAQ,6BAAtCigD,EAAAA,EAAAA,0BACqCjgD,EAAAA,QAAQ,qCAA7CghD,EAAAA,EAAAA,iCAEgChhD,EAAAA,QAAQ,+BAAxCmhD,EAAAA,EAAAA,4BACuCnhD,EAAAA,QAAQ,uCAA/CqhD,EAAAA,EAAAA,mCAEkCrhD,EAAAA,QAAQ,iCAA1CshD,EAAAA,EAAAA,8BACyCthD,EAAAA,QAAQ,yCAAjDyhD,EAAAA,EAAAA,qCAEiDzhD,EAAAA,QAAQ,kDAAzD0hD,EAAAA,EAAAA,6CACwD1hD,EAAAA,QAAQ,0DAAhE4hD,EAAAA,EAAAA,oDAEkC5hD,EAAAA,QAAQ,iCAA1C6hD,EAAAA,EAAAA,8BACyC7hD,EAAAA,QAAQ,yCAAjD8hD,EAAAA,EAAAA,qCAEgC9hD,EAAAA,QAAQ,+BAAxC+hD,EAAAA,EAAAA,4BACuC/hD,EAAAA,QAAQ,uCAA/CgiD,EAAAA,EAAAA,mCAEmChiD,EAAAA,QAAQ,mCAA3CiiD,EAAAA,EAAAA,+BAC0CjiD,EAAAA,QAAQ,2CAAlDoiD,EAAAA,EAAAA,sCAEmCpiD,EAAAA,QAAQ,mCAA3CqiD,EAAAA,EAAAA,+BAC0CriD,EAAAA,QAAQ,2CAAlDsiD,EAAAA,EAAAA,sCAEmCtiD,EAAAA,QAAQ,mCAA3CuiD,EAAAA,EAAAA,+BAC0CviD,EAAAA,QAAQ,2CAAlDwiD,EAAAA,EAAAA,sCAEiCxiD,EAAAA,QAAQ,gCAAzCyiD,EAAAA,EAAAA,6BACiCziD,EAAAA,QAAQ,gCAAzC2iD,EAAAA,EAAAA,6BACiC3iD,EAAAA,QAAQ,gCAAzC6iD,EAAAA,EAAAA,6BAEkC7iD,EAAAA,QAAQ,iCAA1C+iD,EAAAA,EAAAA,8BACyC/iD,EAAAA,QAAQ,yCAAjDgjD,EAAAA,EAAAA,qCAEFC,GAAkB,CACtBC,SAAU,CACRC,QAAS,CACItD,QAAAA,EACAG,QAAAA,EACFD,MAAAA,EACAiD,MAAAA,EACG,YAAA,EACA,YAAA,EACA,YAAA,EACE,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACLvB,MAAAA,EACQK,cAAAA,EACEA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACaF,6BAAAA,EACnBZ,UAAAA,EACK,gBAAA,GAEpBtlC,OAAQ,CACKmkC,QAAAA,EACFE,MAAAA,EACEC,QAAAA,EACF+C,MAAAA,EACG,YAAA,EACA,YAAA,EACA,YAAA,EACE,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACLzB,MAAAA,EACQO,cAAAA,EACEA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACaD,6BAAAA,EACnB3B,UAAAA,EACK,gBAAA,IAGtBmD,OAAQ,CACND,SAAO,EAAA,CACMtD,QAAAA,EACAG,QAAAA,EACFD,MAAAA,EACAiC,MAAAA,EACGS,WAAAA,EACAE,WAAAA,EACAE,WAAAA,EACET,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACAE,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACAE,aAAAA,EACAA,aAAAA,EACAA,aAAAA,GACLR,EAAAA,EAAAA,QAAAA,GACT,EAAA,EAAA,QAASX,GACT,EAAA,EAAA,gBAAiBS,GACjB,EAAA,EAAA,kBAAmBA,GACnB,EAAA,EAAA,kBAAmBA,GACnB,EAAA,EAAA,kBAAmBA,GACnB,EAAA,EAAA,kBAAmBA,GACnB,EAAA,EAAA,+BAAgCF,GAChC,EAAA,EAAA,YAAaZ,GACb,EAAA,EAAA,kBAAkB,GA3Bd,GA6BNtlC,OAAQ,CACKmkC,QAAAA,EACFE,MAAAA,EACEC,QAAAA,EACF+B,MAAAA,EACGU,WAAAA,EACAE,WAAAA,EACAE,WAAAA,EACEZ,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACAI,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACAE,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACLpB,MAAAA,EACQU,cAAAA,EACEA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACaH,6BAAAA,EACnBzB,UAAAA,EACK,gBAAA,KAKxB,SAASoD,GAAsBj0C,EAAM+zC,EAASl/C,EAAWtE,GACnD,IAACyP,EACG,MAAA,IAAI+C,MAAM,gBAEd,IAACgxC,EACG,MAAA,IAAIhxC,MAAM,mBAEd,IAAClO,EACG,MAAA,IAAIkO,MAAM,qBAEdxS,EAAMyP,OACRA,EAAOzP,EAAMyP,MAETtI,IAAAA,EAAQm8C,GAAgBh/C,GAAWk/C,GACrCr8C,IAAgB,IAAhBA,EAAMsI,GACD,OAAA,KACF,QAAoBk0C,IAAhBx8C,EAAMsI,GACT,MAAA,IAAI+C,MAA2C/C,oCAAAA,OAAAA,IAEhDtI,OAAAA,EAAMsI,GAGf9P,OAAOC,QAAU,CACf8jD,sBAAAA;;ACu0CF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAx/CqBrjD,IAAAA,EAAAA,QAAQ,gBAArBm1C,EAAAA,EAAAA,SACoBn1C,EAAAA,QAAQ,uBAA5BugC,EAAAA,EAAAA,gBACsBvgC,EAAAA,QAAQ,mBAA9Bw6C,EAAAA,EAAAA,kBACUx6C,EAAAA,QAAQ,eAAlBmzB,EAAAA,EAAAA,MACFowB,EAAgBvjD,QAAQ,gCACHA,EAAAA,QAAQ,qBAA3B28C,EAAAA,EAAAA,eACiB38C,EAAAA,QAAQ,mBAAzB48C,EAAAA,EAAAA,aACmB58C,EAAAA,QAAQ,uBAA3B+8C,EAAAA,EAAAA,eAC0B/8C,EAAAA,QAAQ,uBAAlCqjD,EAAAA,EAAAA,sBAEJG,EAAc,KACdxN,EAAa,KACbD,EAAc,KACd0N,EAAiB,KACjBlU,EAAW,KAET9gC,EAAU,CAAC80C,GACXG,EAAW,GACXC,EAAc,GAqBdC,EAi9CN,SAAA,GAv3Ccp4C,SAAAA,EAAAA,EAAQioB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACtBjoB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAQioB,KACTnlB,QAAU,KACVwwB,EAAAA,SAAWrL,EAASqL,SACpB+kB,EAAAA,WAAa1wB,EAAMgB,mBACnB2vB,EAAAA,WAAa,GACbvK,EAAAA,wBAA0B,KAC1Bxb,EAAAA,gBAAkB,KAClBgmB,EAAAA,qBAAuB,EACvBC,EAAAA,qBAAuB,EACvBrO,EAAAA,uBAAyB,KACzBC,EAAAA,qBAAuB,KACvBqO,EAAAA,WAAa,KACbC,EAAAA,WAAa,KACbC,EAAAA,eAAiB,KACjB7K,EAAAA,cAAgB,KAMhBK,EAAAA,WAAa,KACbyK,EAAAA,kBAAmB,EACnBC,EAAAA,sBAAwB,KAExBlV,EAAAA,cAAc3jC,EAAOioB,UAAYA,GAMjC2M,EAAAA,UAAY,KACZgT,EAAAA,YAAc,KACd3b,EAAAA,OAAS,KACT6sB,EAAAA,aAAe,GACfC,EAAAA,4BAA8B,GAC9BC,EAAAA,eAAiB,GACjBC,EAAAA,eAAiB,GACjBC,EAAAA,eAAiB,GACjBC,EAAAA,gBAAkB,GAClBC,EAAAA,gBAAkB,GAClBC,EAAAA,gBAAkB,GAClBC,EAAAA,gBAAkB,GAClBC,EAAAA,gBAAkB,GAClBC,EAAAA,gBAAkB,GA5CK,EAu3ChC,OAAA,EAAA,EAj9C0B7P,GAi9C1B,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,qBAv8C8B,MAAA,WACF,oBAAbxF,SACTqG,EAAarG,SAASC,cAAc,UACA,oBAApBC,kBAChBmG,EAAa,IAAInG,gBAAgB,EAAG,IAEjCmG,IACLD,EAAcC,EAAWlG,WAAW,UAAYkG,EAAWlG,WAAW,wBACjDiG,EAAYpD,eACjC8Q,EAAiB,CACfwB,kBAAmBlP,EAAYpD,aAAa,qBAC5CuS,yBAA0BnP,EAAYpD,aAAa,4BACnDwS,uBAAwBpP,EAAYpD,aAAa,0BACjDyS,mBAAoBrP,EAAYpD,aAAa,uBAE/CpD,EAAW,KAAK8V,iBAw7CpB,CAAA,IAAA,iBAr7CwBz0C,MAAAA,SAAAA,GAChB,MAAiC,oBAA1B00C,uBACF10C,aAAmB00C,wBAm7ChC,CAAA,IAAA,cA96CuB,MAAA,WACbC,IAAAA,EAAgB,KAAKC,mBACpBpkD,OAAAA,OAAOilC,OAAO,CACnBof,YAAa,KAAKC,iBAClBhW,0BAA2B,KAAKiW,+BAChCC,eAAgB,KAAKC,oBACrBN,cAAAA,EACA9V,UAAW8V,EACXO,aAAc,KAAKC,sBAs6CzB,CAAA,IAAA,oBAl6C6B,MAAA,WAClBlwB,OAAAA,QAAQ4tB,EAAewB,qBAi6ClC,CAAA,IAAA,mBA95C4B,MAAA,WACjBpvB,OAAAA,QAAQ4tB,EAAe2B,sBA65ClC,CAAA,IAAA,kBA15C2B,MAAA,WAChB3B,OAAAA,EAAe2B,mBACpBrP,EAAYiQ,aAAavC,EAAe2B,mBAAmBa,wBAC3D,IAu5CN,CAAA,IAAA,wBAp5C+B72C,MAAAA,SAAAA,EAAM+zC,EAASl/C,EAAWtE,GAC9C0jD,OAAAA,EAAsBj0C,EAAM+zC,EAASl/C,EAAWtE,KAm5C3D,CAAA,IAAA,cAh9C2B,IAAA,WACnB6jD,OAAgB,OAAhBA,EACKA,GAEJ0C,KAAAA,qBACL1C,EAAc,KAAK2C,eAAepQ,MA28CtC,CAAA,IAAA,aAh5C0B,IAAA,WACfC,OAAAA,IA+4CX,CAAA,IAAA,cA54C2B,IAAA,WAChBD,OAAAA,IA24CX,CAAA,IAAA,WAx4CwB,IAAA,WACbxG,OAAAA,IAu4CX,CAAA,IAAA,iBAp4C8B,IAAA,WACnBoN,OAAAA,IAm4CX,CAAA,IAAA,eAh4C4B,IAAA,WACjBC,OAAAA,MA+3CX,EAAA,EAAA,CAAA,CAAA,IAAA,aAx0Ce,MAAA,WACP,GAAoB,oBAAbjN,SAA0B,CAC7BpS,IAAAA,EAASoS,SAASC,cAAc,UAI/BrS,OAFPA,EAAOvE,MAAQ,EACfuE,EAAOtE,OAAS,EACTsE,EACF,GAA+B,oBAApBsS,gBACT,OAAA,IAAIA,gBAAgB,EAAG,KAg0CpC,CAAA,IAAA,cA5zCgB,MAAA,WACNpc,IAAAA,EAAW,CACf2yB,OAAO,EACPtsB,OAAO,EACPusB,WAAW,GAEN,OAAA,KAAK9oB,OAAOuS,WAAW,QAASrc,IAAa,KAAK8J,OAAOuS,WAAW,qBAAsBrc,KAszCrG,CAAA,IAAA,cAnzCcA,MAAAA,SAAAA,GAEJ6yB,IAAAA,EAAe,GACb96C,EAAW,KAAXA,OACJ,GAAkB,iBAAXA,EACJ,IAAA,IAAIvJ,EAAI,EAAGA,EAAIwM,EAAQvM,OAAQD,IAAK,CACjCiQ,IAAAA,EAASzD,EAAQxM,GACnBuJ,EAAO6B,MAAM6E,EAAOmqC,gBACtBiK,EAAatiD,KAAKkO,QAGjB,GAAsB,WAAlB,EAAO1G,IAEZioB,EAAS6M,YACN,IAAIr+B,IAAAA,EAAAA,SAAAA,GACDiQ,IAAAA,EAASzD,EAAQxM,GACLwxB,EAAS6M,YAAYimB,KAAK,SAAAC,GAAcA,OAAAA,IAAet0C,EAAOzL,QAE9E6/C,EAAatiD,KAAKkO,IAJbjQ,EAAI,EAAGA,EAAIwM,EAAQvM,OAAQD,IAA3BA,EAAAA,GASNqkD,OAAAA,IA4xCX,CAAA,IAAA,iBAzxCmB,MAAA,WACVxC,KAAAA,WAAa,CAChBmB,kBAAmB,KAAKr0C,QAAQ+hC,aAAa,qBAC7CuS,yBAA0B,KAAKt0C,QAAQ+hC,aAAa,4BACpDwS,uBAAwB,KAAKv0C,QAAQ+hC,aAAa,0BAClDyS,mBAAoB,KAAKx0C,QAAQ+hC,aAAa,sBAC9C8T,yBAA0B,KAAK71C,QAAQ+hC,aAAa,+BAmxC1D,CAAA,IAAA,mBA3wCmBpT,MAAAA,SAAAA,GACX,GAAC,KAAKX,SAAN,CAQI2Q,IAAAA,EAAa,KAAK5sC,YAAlB4sC,SACJ,IAA6B,IAA7B,KAAKrZ,sBAAiCqZ,EAASqW,eAC3C,MAAA,IAAIzzC,MAAM,oCACX,GAAuB,WAAnB,KAAKlO,YAA2BsrC,EAASkW,YAC5C,MAAA,IAAItzC,MAAM,kCAKd,IAJQ,KAAK4qB,WAAgC,OAAnB,KAAK94B,WAAsBsrC,EAASqW,iBAC3D3hD,KAAAA,UAAYsrC,EAASkW,YAAc,SAAW,YAGjD,KAAK9mB,YAAc,KAAKA,WAAWz8B,OAAS,IAAM,KAAK4hD,WAAWsB,mBAC9D,MAAA,IAAIjzC,MAAM,gDAWd,GARoC,OAApC,KAAK8sB,2BACFA,KAAAA,4BAA8BsQ,EAASG,0BACnC,KAAKzQ,4BAA8BsQ,EAASG,4BAChDzQ,KAAAA,4BAA6B,GAG/B8Q,KAAAA,eAEA,KAAKnc,QAAiC,IAAvB,KAAKA,OAAO1xB,OAAc,CACxCq9B,GAAgB,IAAhBA,EAAKr9B,OACD,MAAA,IAAIiQ,MAAM,8DAGZqtB,IAAAA,EAAUrM,EAAMuC,gBAAgB6J,EAAK,GAAI,KAAK5J,gBAChD6J,GAAY,UAAZA,EACG5L,KAAAA,OAAST,EAAM0D,cAAc2I,OAC7B,CAAA,GAAgB,kBAAZA,GAA2C,oBAAZA,EAGlC,MAAA,IAAIrtB,MAAM,6CAA+CqtB,GAF1D5L,KAAAA,OAAS2L,EAAK,GAAG3L,QAMtB,GAAA,KAAKmJ,UAAW,CACd,GAAuB,IAAvB,KAAKnJ,OAAO1xB,OACR,MAAA,IAAIiQ,MAAM,mDASlB,MANuB,cAAnB,KAAKlO,YACFA,KAAAA,UAAY,WACjBs0B,QAAQC,KAAK,yEAGVgd,KAAAA,QAAUriB,EAAMoC,MAAM,KAAK3B,SAEJ,OAAnB,KAAK3vB,WAAsBsrC,EAASqW,iBACxC3hD,KAAAA,UAAY,UAGduxC,KAAAA,QAAUriB,EAAM6C,qBAAqB,CACxCE,oBAAqB,KAAKA,oBAC1BjyB,UAAW,KAAKA,WACf,KAAK2vB,aA9DD4hB,KAAAA,QAAUriB,EAAM6C,qBAAqB,CACxCE,oBAAqB,KAAKA,oBAC1BjyB,UAAW,KAAKA,WACf,KAAK2vB,UAswCd,CAAA,IAAA,mBAxsCqB,MAAA,WACT4hB,IAAAA,EAAoB,KAApBA,QAASjY,EAAW,KAAXA,OACb,GAAoB,OAApB,KAAKoc,WAAqB,CACxB+M,IAAAA,EAAchD,EAASj/B,QAAQ8Y,IACd,IAAjBmpB,IACFA,EAAchD,EAASxhD,OACvBwhD,EAAS1/C,KAAKu5B,GACdomB,EAAY+C,GAAe,CAAClR,EAAQ,GAAIA,EAAQ,KAE7CmE,KAAAA,WAAagK,EAAY+C,GAE5B,KAAK/M,WAAW,GAAKnE,EAAQ,KAC1BmE,KAAAA,WAAW,GAAKnE,EAAQ,IAE3B,KAAKmE,WAAW,GAAKnE,EAAQ,KAC1BmE,KAAAA,WAAW,GAAKnE,EAAQ,MAyrCnC,CAAA,IAAA,sBAprCwB,MAAA,WACdjU,IAAAA,EAAkBhB,EAAgByP,WAAW,KAAMwK,EAAmB,CAC1Evb,2BAA4B,KAAKA,6BAI7BwW,EAAmBlU,EAAgBolB,mBAAmB,UAEvD,KAAK9tB,aACHA,KAAAA,WAAa0I,EAAgB0O,uBAK/B,IAFD2W,IAAAA,EAAmB,EACjBC,EAActlB,EAAgBulB,iBAC3B7kD,EAAI,EAAGA,EAAI4kD,EAAY3kD,OAAQD,IAC9B4kD,OAAAA,EAAY5kD,IACb,IAAA,QACA,IAAA,SACA,IAAA,UACH2kD,IACA,MACG,IAAA,WACHA,GAAoB,EACpB,MACG,IAAA,WACHA,GAAoB,EACpB,MACG,IAAA,WACHA,GAAoB,EAKtBrX,GAAAA,GAAYqX,EAAmBrX,EAASuW,aACpC,MAAA,IAAI3zC,MAAM,sBAGX,OAAA,KAAKsjC,iBAAmBA,IA+oCnC,CAAA,IAAA,iBA5oCiBlW,MAAAA,SAAAA,GAAM,IAAA,EAAA,KACdxB,KAAAA,gBAAkB,GAClBgmB,KAAAA,qBAAuB,EACtBgD,IAAAA,EAA4C,OAAvB,KAAKpuB,cAS5B4G,GAPAwnB,IACGpuB,KAAAA,cAAgB,IAElBkF,KAAAA,cAAgB,GAChBC,KAAAA,kBAAoB,GAGrByB,EAAKr9B,OAAS,KAAK07B,cAAc17B,OAC7B,MAAA,IAAIiQ,MAAM,mCACX,GAAIotB,EAAKr9B,OAAS,KAAK07B,cAAc17B,OACpC,MAAA,IAAIiQ,MAAM,iCAKb,IAFYsgC,IAAAA,EAAO,KAAhB7hC,QACJo2C,EAAiB,EACZz5C,EAAQ,EAAGA,EAAQgyB,EAAKr9B,OAAQqL,IAAS,CAC1C5N,IAAAA,EAAQ4/B,EAAKhyB,GACb9G,EAAO,KAAKm3B,cAAcrwB,GAC5B6B,OAAJ,EACI23C,GACF33C,EAAO+jB,EAAMuC,gBAAgB/1B,EAAO,KAAKg2B,gBACpCgD,KAAAA,cAAc30B,KAAKoL,IAExBA,EAAO,KAAKupB,cAAcprB,GAEtBsxC,IAAAA,EAAc,KAAKl8C,YAAY0gD,sBAAsBj0C,EAAM,KAAKkvB,iBAAmB,UAAY,SAAU,KAAKr6B,UAAWs7B,EAAKhyB,IAChIsxC,GAAgB,OAAhBA,EACK,OAAA,KAAK1H,gBAAgB5X,GAExBye,IAAAA,EAAiB,IAAIa,EAAYl/C,EAAO,CAC5C8G,KAAAA,EACA2I,KAAAA,EACAq2B,OAAQ,OACR70B,QAAS6hC,EACTjU,aAAc,KAAKA,aACnB3K,OAAQ,KACR8B,eAAgB,KAAKA,eACrB0pB,iBAAkB,WACT,OAAA,EAAKzuC,QAAQq2C,iBAEtB3H,eAAgB,WACP0H,OAAAA,KAETjI,sBAAuB,WACrB,EAAKqF,kBAAmB,GAE1BtF,uBAAwB,WACfrM,OAAAA,EAAGyU,SAAW,EAAKlD,qBAAuB,EAAKD,0BAGrDhmB,KAAAA,gBAAgB/5B,KAAKg6C,GACrBngB,KAAAA,cAAc75B,KAAKg6C,EAAeuB,aAClCzhB,KAAAA,kBAAkBvwB,GAASywC,EAAevnB,YAmlCrD,CAAA,IAAA,iBA/kCiB8I,MAAAA,SAAAA,GAAM,IAAA,EAAA,KACFkT,EAAO,KAAhB7hC,QACHotB,KAAAA,gBAAkB,GACnB2B,IAAAA,EAA4C,OAAvB,KAAKvB,cAC1BuB,IACGvB,KAAAA,cAAgB,IAElBC,KAAAA,kBAAoB,GACrB2oB,IAAAA,EAAiB,EAChB,IAAA,IAAMvgD,KAAQ,KAAK03B,UAAW,CAC3Bx+B,IAAAA,EAAQ,KAAKw+B,UAAU13B,GACzB2I,OAAJ,EACIuwB,GACFvwB,EAAO+jB,EAAMuC,gBAAgB/1B,EAAO,KAAKg2B,gBACpCyI,KAAAA,cAAc33B,GAAQ2I,GAE3BA,EAAO,KAAKgvB,cAAc33B,GAEtBo4C,IAAAA,EAAc,KAAKl8C,YAAY0gD,sBAAsBj0C,EAAM,SAAU,KAAKnL,UAAWtE,GACvFk/C,GAAgB,OAAhBA,EACK,OAAA,KAAK1H,gBAAgB5X,GAExB4nB,IAAAA,EAAc,IAAItI,EAAYl/C,EAAO,CACzC8G,KAAAA,EACA2I,KAAAA,EACAq2B,OAAQ,YACR70B,QAAS,KAAKA,QACd4tB,aAAc,KAAKA,aACnB3K,OAAQ,KACR8B,eAAgB,KAAKA,eACrB0pB,iBAAkB,WACT,OAAA,EAAKzuC,QAAQq2C,iBAEtB3H,eAAgB,WACP0H,OAAAA,KAETlI,uBAAwB,WACfrM,OAAAA,EAAGyU,SAAW,EAAKlD,0BAGzB3lB,KAAAA,kBAAkB53B,GAAQ0gD,EAAY1wB,SACtCuH,KAAAA,gBAAgBh6B,KAAKmjD,MAsiChC,CAAA,IAAA,QAliCU,MAAA,WAIF,GAHCC,KAAAA,iBACAhX,KAAAA,iBAAiB1uB,WACjBwuB,KAAAA,eAAexuB,YAChB,KAAKgc,oBACJyS,KAAAA,eAAezuB,YAChB,KAAKgc,mBAAL,CACC+b,KAAAA,mBACApJ,KAAAA,kBACCgX,IAAAA,EAAgB,KAAKC,mBAAmB5lC,WAC1C2lC,GAAAA,EACKA,OAAAA,EAED7R,IAAAA,EAAiC,KAAjCA,QAAkB/C,EAAe,KAAxB7hC,QAAa2sB,EAAW,KAAXA,OAC9BkV,EAAG8U,OAAO9U,EAAG+U,cACT,KAAK1oB,UAAY,KAAK76B,UACxBwuC,EAAGiH,SAAS,EAAG,EAAG,KAAKC,WAAW,GAAI,KAAKA,WAAW,IACtDpc,EAAOvE,MAAQ,KAAK2gB,WAAW,GAC/Bpc,EAAOtE,OAAS,KAAK0gB,WAAW,GAO3BvZ,IADDA,IAAAA,EAAY,KAAKA,UAAYx9B,MAAMs0B,KAAK,KAAKtD,QAC5CwM,EAAUl+B,OAAS,GACxBk+B,EAAUp8B,KAAK,GAGX4xC,IAAAA,EAAuB,KAAK6R,gBAAgB/lC,WAC5CwiC,EAAazR,EAAGiV,aAAajV,EAAGkV,eACtClV,EAAGmV,aAAa1D,EAAYtO,GAC5BnD,EAAGoV,cAAc3D,GACZA,KAAAA,WAAaA,EAEZvO,IAAAA,EAAyB,KAAKmS,kBAAkBpmC,WAChDuiC,EAAaxR,EAAGiV,aAAajV,EAAGsV,iBAUlC,GATJtV,EAAGmV,aAAa3D,EAAYtO,GAC5BlD,EAAGoV,cAAc5D,GACZA,KAAAA,WAAaA,EAEd,KAAKhmB,QACP1F,QAAQkY,IAAI,uBACZlY,QAAQkY,IAAIkF,KAGTlD,EAAGuV,mBAAmB9D,EAAYzR,EAAGwV,gBAClC,MAAA,IAAI91C,MAAM,kCAAoCsgC,EAAGyV,iBAAiBhE,IAEtE,IAACzR,EAAGuV,mBAAmB/D,EAAYxR,EAAGwV,gBAClC,MAAA,IAAI91C,MAAM,oCAAsCsgC,EAAGyV,iBAAiBjE,IAGtE31C,IAAAA,EAAU,KAAKA,QAAUmkC,EAAG0V,gBAClC1V,EAAG2V,aAAa95C,EAAS41C,GACzBzR,EAAG2V,aAAa95C,EAAS21C,GACzBxR,EAAG4V,YAAY/5C,GACV8kC,KAAAA,YAAcX,EAAGY,oBACjBD,KAAAA,YAAYpa,MAAQwc,EAAQ,GAC5BpC,KAAAA,YAAYna,OAASuc,EAAQ,GAE5B8S,IAAAA,EAAW,IAAIh1B,aAAa,EAAE,GAAI,EACtC,GAAI,GAAI,EAAG,EACX,EAAG,IAECi1B,EAAY,IAAIj1B,aAAa,CACjC,EAAG,EACH,EAAG,EACH,EAAG,EACH,EAAG,IAGCk1B,EAAiBF,EAASG,WAE5BhxB,EAAS,KAAKA,OACbA,EAKHgb,EAAGiW,WAAWjW,EAAGkW,aAAclxB,IAJ/BA,EAAS,KAAKA,OAASgb,EAAGmW,eAC1BnW,EAAGiW,WAAWjW,EAAGkW,aAAclxB,GAC/Bgb,EAAGoW,WAAWpW,EAAGkW,aAAcL,EAASG,WAAaF,EAAUE,WAAYhW,EAAGqW,cAKhFrW,EAAGsW,cAActW,EAAGkW,aAAc,EAAGL,GACrC7V,EAAGsW,cAActW,EAAGkW,aAAcH,EAAgBD,GAE5CS,IAAAA,EAAUvW,EAAGwW,kBAAkB,KAAK36C,QAAS,QACnDmkC,EAAGyW,wBAAwBF,GAC3BvW,EAAG0W,oBAAoBH,EAAS,EAAGvW,EAAGoB,OAAO,EAAO,EAAG,GACjDuV,IAAAA,EAAe3W,EAAGwW,kBAAkB,KAAK36C,QAAS,aACxDmkC,EAAGyW,wBAAwBE,GAC3B3W,EAAG0W,oBAAoBC,EAAc,EAAG3W,EAAGoB,OAAO,EAAO,EAAG2U,GAC5D/V,EAAGa,gBAAgBb,EAAGc,YAAa,KAAKH,aAEpCnxC,IAAAA,EAAI,EAEH,IAAA,IAAI4K,KADT4lC,EAAG4W,WAAW,KAAK/6C,SACL,KAAK6vB,UACZH,KAAAA,gBAAgB/7B,KAAKqnD,YAAY,KAAKnrB,UAAUtxB,IAGlD,KAAKgyB,YACH+a,KAAAA,sBAEiB,OAApB,KAAKjb,YACL,KAAKA,WAAWz8B,OAAS,GAEpB23C,KAAAA,8BAw7Bb,CAAA,IAAA,kBAn7BoB,MAAA,WACVtY,IAAAA,EAAkBhB,EAAgByP,WAAW,KAAMwK,EAAmB,CAC1Evb,2BAA4B,KAAKA,6BAO/B,GALCwW,KAAAA,iBAAmBlU,EAAgBolB,mBAAmB,UACtD,KAAK5pB,WAAc,KAAKlE,aACtBA,KAAAA,WAAa0I,EAAgB0O,uBAGhC,KAAKtR,YAAc,KAAKA,WAAWz8B,OAAS,EACzC,IAAA,IAAID,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAAK,CACzC89B,IAAAA,EAAY,KAAKpB,WAAW18B,GAC7B89B,EAAUlH,aACbkH,EAAUlH,WAAa0I,EAAgBgoB,uBAAuBtnD,OAs6BxE,CAAA,IAAA,MAh6BQ,MAAA,WACI87B,IAAAA,EAAoB,KAApBA,gBACFyX,EAAU,KAAKA,QACf/C,EAAK,KAAK7hC,QAEhB6hC,EAAG4W,WAAW,KAAK/6C,SACnBmkC,EAAG+W,QAAQ,EAAG,EAAGhU,EAAQ,GAAIA,EAAQ,IAEjC,KAAKjX,gBACF0iB,KAAAA,cAAc,aAAc,KAAK7gB,WACjC8gB,KAAAA,cAAc,WAAY1L,IAG5BiU,KAAAA,aAAa,QAASjU,EAAQ,GAAK,KAAKmE,WAAW,GAAInE,EAAQ,GAAK,KAAKmE,WAAW,IAEpFyK,KAAAA,kBAAmB,EACnB,IAAA,IAAIniD,EAAI,EAAGA,EAAI87B,EAAgB77B,OAAQD,IAEtC,GADJ87B,EAAgB97B,GAAGqnD,YAAY5nC,UAAUzf,IACrC,KAAKmiD,iBAAkB,OAGzB,GAAA,KAAK31C,QACF,IAAA,IAAIxM,EAAI,EAAGA,EAAI,KAAKwM,QAAQvM,OAAQD,IAAK,CACtCiQ,IAAAA,EAAS,KAAKzD,QAAQxM,GACxBiQ,EAAOuqC,aACTvqC,EAAOuqC,YAAY,MAKrB,GAAA,KAAK1f,UACH,OAAA,KAAK+B,UACP2T,EAAGiX,iBAAiBjX,EAAGkX,aAAc,MACrClX,EAAGa,gBAAgBb,EAAGc,YAAa,KAAKH,aACnC,KAAKkG,gBAAiB,KAAKza,WACzB+a,KAAAA,sBAEPnH,EAAGmX,WAAWnX,EAAGoX,eAAgB,EAAG,GAC7B,IAAI,KAAKvU,mBAAmB,CACjC5hB,QAAS,KAAK4lB,cACd52C,KAAM8yC,EACN7hB,WAAY,KAAKyM,UACjBxM,OAAQ,KAAKA,OACbhjB,QAAS,KAAKA,YAGlB6hC,EAAGiX,iBAAiBjX,EAAGkX,aAAc,MACrClX,EAAGa,gBAAgBb,EAAGc,YAAa,WACnCd,EAAGmX,WAAWnX,EAAGoX,eAAgB,EAAG,IAItCpX,EAAGa,gBAAgBb,EAAGc,YAAa,KAAKH,aACpC,KAAKvU,WACF+a,KAAAA,sBAGiB,OAApB,KAAKjb,aACH,KAAKE,WACFgb,KAAAA,0BAEFiK,KAAAA,WAAWsB,mBAAmB0E,iBAAiB,KAAK3F,iBAG3D1R,EAAGmX,WAAWnX,EAAGoX,eAAgB,EAAG,KAg2BxC,CAAA,IAAA,mBAz1BqB,MAAA,WACV,OAAA,KAAKvQ,gBAw1BhB,CAAA,IAAA,sBAl1BwB,MAAA,WACd7G,IAAAA,EAAK,KAAK7hC,QACV4kC,EAAU,KAAKA,QACf9hB,EAAU,KAAK4lB,cAAgB,KAAK1oC,QAAQq2C,gBAY9C,GAXJxU,EAAG2N,cAAc3N,EAAGyU,SAAW,KAAKlD,qBAAuB,KAAKD,sBAChEtR,EAAG4N,YAAY5N,EAAGiB,WAAYhgB,GAC9B+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAMnC,WAAnB,KAAK18C,UACH,GAAA,KAAK66B,SAEC,OAAA,KAAKjG,YACN,IAAA,SACA,IAAA,QACA,IAAA,UACC,KAAK3C,oBACPuc,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM4B,EAAQ,GAAIA,EAAQ,GAAI,EAAG/C,EAAGmB,KAAMnB,EAAGoB,MAAO,MAIzF,MACG,IAAA,WAGA,IAAA,WAGA,IAAA,WACHpB,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM4B,EAAQ,GAAIA,EAAQ,GAAI,EAAG/C,EAAGmB,KAAMnB,EAAGoB,MAAO,MACvF,MACF,QACM,IAAC,KAAK9W,UACF,MAAA,IAAI5qB,MAAM,8BAItBsgC,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM4B,EAAQ,GAAIA,EAAQ,GAAI,EAAG/C,EAAGmB,KAAMnB,EAAGoB,MAAO,WAGzFpB,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM4B,EAAQ,GAAIA,EAAQ,GAAI,EAAG/C,EAAGmB,KAAMnB,EAAGsC,cAAe,MAEjGtC,EAAGe,qBAAqBf,EAAGc,YAAad,EAAGgB,kBAAmBhB,EAAGiB,WAAYhgB,EAAS,KAkyB1F,CAAA,IAAA,0BA5xB4B,MAAA,WAClB+e,IAAAA,EAAK,KAAK7hC,QACV4kC,EAAU,KAAKA,QAChB2O,KAAAA,eAAiB,CAAC1R,EAAGgB,mBACrB8F,KAAAA,wBAA0B,GAC1B,IAAA,IAAIt3C,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAAK,CACzCyxB,IAAAA,EAAU,KAAK9iB,QAAQq2C,gBACxB1N,KAAAA,wBAAwBv1C,KAAK0vB,GAC7BywB,KAAAA,eAAengD,KAAKyuC,EAAGgB,kBAAoBxxC,EAAI,GACpDwwC,EAAG2N,cAAc3N,EAAGyU,SAAW,KAAKlD,qBAAuB,KAAKD,qBAAuB9hD,GACvFwwC,EAAG4N,YAAY5N,EAAGiB,WAAYhgB,GAC9B+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SACnC,WAAnB,KAAK18C,UACPwuC,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM4B,EAAQ,GAAIA,EAAQ,GAAI,EAAG/C,EAAGmB,KAAMnB,EAAGoB,MAAO,MAEvFpB,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM4B,EAAQ,GAAIA,EAAQ,GAAI,EAAG/C,EAAGmB,KAAMnB,EAAGsC,cAAe,MAEjGtC,EAAGe,qBAAqBf,EAAGc,YAAad,EAAGgB,kBAAoBxxC,EAAI,EAAGwwC,EAAGiB,WAAYhgB,EAAS,MAwwBpG,CAAA,IAAA,qBAhwBqBjtB,MAAAA,SAAAA,GACV,OAAA,KAAKsjD,gBAA4BtjD,YAAAA,OAAAA,MA+vB5C,CAAA,IAAA,kBAvvBkBA,MAAAA,SAAAA,GACV,OAAA,KAAK69C,aAAav4C,eAAetF,GAC5B,KAAK69C,aAAa79C,GAEpB,KAAK69C,aAAa79C,GAAQ,KAAKmK,QAAQq2C,kBAmvBlD,CAAA,IAAA,qBA5uBqBxgD,MAAAA,SAAAA,UACV,KAAK69C,aAAa79C,KA2uB7B,CAAA,IAAA,eAxuBeA,MAAAA,SAAAA,EAAM9G,GACb,GAAA,KAAK6kD,eAAez4C,eAAetF,IAEjC9G,IADU,KAAK6kD,eAAe/9C,GAEhC,OAGC+9C,KAAAA,eAAe/9C,GAAQ9G,EACtB0P,IAAAA,EAAM,KAAK26C,mBAAmBvjD,GAC/BmK,KAAAA,QAAQq5C,UAAU56C,EAAK1P,KA+tBhC,CAAA,IAAA,eA5tBe8G,MAAAA,SAAAA,EAAM9G,GACb,GAAA,KAAK8kD,eAAe14C,eAAetF,IAEjC9G,IADU,KAAK8kD,eAAeh+C,GAEhC,OAGCg+C,KAAAA,eAAeh+C,GAAQ9G,EACtB0P,IAAAA,EAAM,KAAK26C,mBAAmBvjD,GAC/BmK,KAAAA,QAAQs5C,UAAU76C,EAAK1P,KAmtBhC,CAAA,IAAA,eAhtBe8G,MAAAA,SAAAA,EAAM0jD,EAAQC,GACrB,GAAA,KAAK1F,eAAe34C,eAAetF,GAAO,CACtC4jD,IAAAA,EAAQ,KAAK3F,eAAej+C,GAEhC0jD,GAAAA,IAAWE,EAAM,IACjBD,IAAWC,EAAM,GAEjB,OAGC3F,KAAAA,eAAej+C,GAAQ,CAAC0jD,EAAQC,GAC/B/6C,IAAAA,EAAM,KAAK26C,mBAAmBvjD,GAC/BmK,KAAAA,QAAQ05C,UAAUj7C,EAAK86C,EAAQC,KAosBxC,CAAA,IAAA,gBAjsBgB3jD,MAAAA,SAAAA,EAAM9G,GACd,GAAA,KAAKglD,gBAAgB54C,eAAetF,GAAO,CACvC4jD,IAAAA,EAAQ,KAAK1F,gBAAgBl+C,GAEjC9G,GAAAA,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,GAEnB,OAGC1F,KAAAA,gBAAgBl+C,GAAQ9G,EACvB0P,IAAAA,EAAM,KAAK26C,mBAAmBvjD,GAC/BmK,KAAAA,QAAQ25C,WAAWl7C,EAAK1P,KAqrBjC,CAAA,IAAA,gBAlrBgB8G,MAAAA,SAAAA,EAAM9G,GACd,GAAA,KAAKilD,gBAAgB74C,eAAetF,GAAO,CACvC4jD,IAAAA,EAAQ,KAAKzF,gBAAgBn+C,GAEjC9G,GAAAA,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,GAEnB,OAGCzF,KAAAA,gBAAgBn+C,GAAQ9G,EACvB0P,IAAAA,EAAM,KAAK26C,mBAAmBvjD,GAC/BmK,KAAAA,QAAQ45C,WAAWn7C,EAAK1P,KAsqBjC,CAAA,IAAA,gBAnqBgB8G,MAAAA,SAAAA,EAAM9G,GACd,GAAA,KAAKklD,gBAAgB94C,eAAetF,GAAO,CACvC4jD,IAAAA,EAAQ,KAAKxF,gBAAgBp+C,GAEjC9G,GAAAA,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,GAEnB,OAGCxF,KAAAA,gBAAgBp+C,GAAQ9G,EACvB0P,IAAAA,EAAM,KAAK26C,mBAAmBvjD,GAC/BmK,KAAAA,QAAQ65C,WAAWp7C,EAAK1P,KAspBjC,CAAA,IAAA,gBAnpBgB8G,MAAAA,SAAAA,EAAM9G,GACd,GAAA,KAAKmlD,gBAAgB/4C,eAAetF,GAAO,CACvC4jD,IAAAA,EAAQ,KAAKvF,gBAAgBr+C,GAEjC9G,GAAAA,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,GAEnB,OAGCvF,KAAAA,gBAAgBr+C,GAAQ9G,EACvB0P,IAAAA,EAAM,KAAK26C,mBAAmBvjD,GAC/BmK,KAAAA,QAAQ85C,WAAWr7C,EAAK1P,KAsoBjC,CAAA,IAAA,gBAnoBgB8G,MAAAA,SAAAA,EAAM9G,GACd,GAAA,KAAKklD,gBAAgB94C,eAAetF,GAAO,CACvC4jD,IAAAA,EAAQ,KAAKxF,gBAAgBp+C,GAEjC9G,GAAAA,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,GAEnB,OAGCxF,KAAAA,gBAAgBp+C,GAAQ9G,EACvB0P,IAAAA,EAAM,KAAK26C,mBAAmBvjD,GAC/BmK,KAAAA,QAAQ65C,WAAWp7C,EAAK1P,KAsnBjC,CAAA,IAAA,gBAnnBgB8G,MAAAA,SAAAA,EAAM9G,GACd,GAAA,KAAKqlD,gBAAgBj5C,eAAetF,GAAO,CACvC4jD,IAAAA,EAAQ,KAAKrF,gBAAgBv+C,GAEjC9G,GAAAA,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,GAEnB,OAGCrF,KAAAA,gBAAgBv+C,GAAQ9G,EACvB0P,IAAAA,EAAM,KAAK26C,mBAAmBvjD,GAC/BmK,KAAAA,QAAQ+5C,WAAWt7C,EAAK1P,KAqmBjC,CAAA,IAAA,gBAlmBgB8G,MAAAA,SAAAA,EAAM9G,GACd,GAAA,KAAKolD,gBAAgBh5C,eAAetF,GAAO,CACvC4jD,IAAAA,EAAQ,KAAKtF,gBAAgBt+C,GAEjC9G,GAAAA,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,IACnB1qD,EAAM,KAAO0qD,EAAM,GAEnB,OAGCtF,KAAAA,gBAAgBt+C,GAAQ9G,EACvB0P,IAAAA,EAAM,KAAK26C,mBAAmBvjD,GAC/BmK,KAAAA,QAAQg6C,WAAWv7C,EAAK1P,KAolBjC,CAAA,IAAA,qBA5kBqB8G,MAAAA,SAAAA,GACb,OAAA,KAAK89C,4BAA4Bx4C,eAAetF,GAC3C,KAAK89C,4BAA4B99C,GAEnC,KAAK89C,4BAA4B99C,GAAQ,KAAKmK,QAAQo5C,mBAAmB,KAAK17C,QAAS7H,KAwkBlG,CAAA,IAAA,4BA9jB4B84B,MAAAA,SAAAA,GACjB,MAAA,CACLsrB,OAAQ,KAAKC,mBACbC,SAAU,KAAKja,oBACfka,QAAS,KAAKC,oBACdC,UAAW,KAAKC,sBAChBC,oBAAqB,KAAKC,+BAC1BC,oBAAqB,KAAKC,+BAC1BC,0BAA2B,KAAKC,mCAChCC,eAAgB,KAAKC,0BACrBC,eAAgB,KAAKC,wBAAwBtsB,GAC7CusB,OAAQ,KAAKtb,kBACbub,YAAa,KAAKC,yBAkjBxB,CAAA,IAAA,mBAxiBqB,MAAA,WAEf,OAAoB,OAApB,KAAKrtB,WACL,6CACA,KAoiBN,CAAA,IAAA,oBA5hBsB,MAAA,WAEhB,OAAA,KAAKT,kBACDnN,IAAAA,OAAAA,SAAS,KAAKmN,mBAClB,OAAA,aAwhBN,CAAA,IAAA,oBAphBsB,MAAA,WAAA,IAAA,EAAA,KACd,OAAC,KAAKzvB,QACH,KAAKA,QAAQmqB,IAAI,SAAA1mB,GAAUA,OAAAA,EAAO1G,QAAU,EAAKA,OAAO6B,MAAM6E,EAAOmqC,eAAiBnqC,EAAO1G,OAAS,KAAIssB,KAAK,MAD5F,OAmhB9B,CAAA,IAAA,sBA3gBwB,MAAA,WACdl0B,IAAAA,EAAS,GACPw8B,EAAuB,KAAvBA,UAAWoV,EAAY,KAAZA,QAYZriB,OAXH,KAAKoL,cACP36B,EAAOI,KACL,2BACA,0BAGFJ,EAAOI,KACuBo8B,4BAAAA,OAAAA,EAAU,GAAOA,MAAAA,OAAAA,EAAU,GAAOA,MAAAA,OAAAA,EAAU,GAC9CoV,KAAAA,0BAAAA,OAAAA,EAAQ,GAAOA,MAAAA,OAAAA,EAAQ,GAFnD,MAKKriB,EAAMgF,cAAcv0B,KA6f/B,CAAA,IAAA,wBAtf0B,MAAA,WAChB+6B,IAAAA,EAAa,KAAKA,WACpBA,OAAe,OAAfA,GAAuBA,EAAWz8B,OAAS,EACtC,4BAEA,0BAifb,CAAA,IAAA,+BAzeiC,MAAA,WAE3B,MAAoB,OAApB,KAAK2hD,WACL,GACA,iCAqeN,CAAA,IAAA,+BA7diC,MAAA,WAE3B,MAAoB,OAApB,KAAKA,WACL,GACA,iCAydN,CAAA,IAAA,mCAjdqC,MAAA,WAC1B,OAAA,KAAK5kB,2BAOV,8KAAA,KAycN,CAAA,IAAA,0BAjc0BM,MAAAA,SAAAA,GAGjB,IAFC/7B,IAAAA,EAAU,GACRo6B,EAAkB,KAAlBA,cACC37B,EAAI,EAAGA,EAAI27B,EAAc17B,OAAQD,IACxCuB,EAAQQ,KAAK,KAAK+5B,gBAAgB97B,GAAGgqD,UAAU1sB,EAAKt9B,KAE/CuB,OAAAA,EAAQs0B,KAAK,MA2bxB,CAAA,IAAA,0BAxb4B,MAAA,WAClBl0B,IAAAA,EAAS,GACPu6B,EAAc,KAAdA,UACJA,GAAAA,EAAW,CACTl8B,IAAAA,EAAI,EACH,IAAA,IAAMwE,KAAQ03B,EACjBv6B,EAAOI,KAAK,KAAKg6B,gBAAgB/7B,KAAKgqD,UAAU,KAAK9tB,UAAU13B,KAG5D7C,OAAAA,EAAOk0B,KAAK,MA+avB,CAAA,IAAA,kBAxaoB,MAAA,WACZo0B,IAAAA,EACI,OAAA,KAAKrzB,YACN,IAAA,WACHqzB,EAA0B,oBAC1B,MACG,IAAA,WACHA,EAA0B,oBAC1B,MACG,IAAA,WACHA,EAA0B,oBAC1B,MACG,IAAA,iBACA,IAAA,QACA,IAAA,SACA,IAAA,UACHA,EAA0B,qBAC1B,MACF,QACM,IAAA,KAAKnvB,UAGD,MAAA,IAAI5qB,MAAoC,6BAAA,OAAA,KAAK0mB,WAAnD,MAFAqzB,EAA0B,qBAM1BtoD,IAAAA,EAAS,GACT+6B,EAAa,KAAKA,WACpBA,GAAe,OAAfA,EAIM,OAHR/6B,EAAOI,KACLkoD,GAEM,KAAKrzB,YACN,IAAA,SACA,IAAA,QACA,IAAA,UACE,IAAA,IAAI52B,EAAI,EAAGA,EAAI08B,EAAWz8B,OAAQD,IAAK,CACpC89B,IAAAA,EAAYpB,EAAW18B,GAC7B2B,EAAOI,KACoB,YAAzB+7B,EAAUlH,WACckH,uBAAAA,OAAAA,EAAUt5B,KACRs5B,QAAAA,yBAAAA,OAAAA,EAAUt5B,KAHtC,WAMF,MACG,IAAA,WACE,IAAA,IAAIxE,EAAI,EAAGA,EAAI08B,EAAWz8B,OAAQD,IACrC2B,EAAOI,KACoB26B,wBAAAA,OAAAA,EAAW18B,GAAGwE,OAG3C,MACG,IAAA,WACE,IAAA,IAAIxE,EAAI,EAAGA,EAAI08B,EAAWz8B,OAAQD,IACrC2B,EAAOI,KACoB26B,wBAAAA,OAAAA,EAAW18B,GAAGwE,OAG3C,MACG,IAAA,WACE,IAAA,IAAIxE,EAAI,EAAGA,EAAI08B,EAAWz8B,OAAQD,IACrC2B,EAAOI,KACoB26B,wBAAAA,OAAAA,EAAW18B,GAAGwE,YAM/C7C,EAAOI,KACLkoD,GAIG/4B,OAAAA,EAAMgF,cAAcv0B,GAAU,KAAK6xC,mBA+V9C,CAAA,IAAA,yBA5V2B,MAAA,WAChBtiB,OAAAA,EAAMgF,cAAc,CACzB,4CACA,aACA,mCAwVN,CAAA,IAAA,4BApV8B,MAAA,WAClB,OAAA,KAAKU,YACN,IAAA,iBACA,IAAA,SACA,IAAA,UACA,IAAA,QACI,OAAA,KAAKszB,kCACV,KAAKC,qCACT,QACQ,MAAA,IAAIj6C,MAAkD,4CAAA,OAAA,KAAK0mB,WAAjE,mBA2UR,CAAA,IAAA,kCApUoC,MAAA,WACzB1F,OAAAA,EAAMgF,cAAc,CACzB,4CACA,aACsB,sBAAA,OAAA,KAAKsF,iBAAmB,iBAAmB,WAH5D,sBAmUX,CAAA,IAAA,qCAzTuC,MAAA,WAC7B75B,IAAAA,EAAS,GACX,IAAC,KAAK+6B,WAAY,MAAO,GACxB,IAAA,IAAI18B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAAK,CAElB,YADX,KAAK08B,WAAW18B,GACpB42B,WACZj1B,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAAQ,QAAA,OAAA,KAAKw7B,iBAAmB,iBAAmB,WAAoC,2BAAA,OAAA,KAAKkB,WAAW18B,GAAGwE,KADjI,OAIA7C,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAAQ,QAAA,OAAA,KAAKw7B,iBAAmB,iBAAmB,WAA8B,qBAAA,OAAA,KAAKkB,WAAW18B,GAAGwE,KAD3H,MAKG0sB,OAAAA,EAAMgF,cAAcv0B,KA0S/B,CAAA,IAAA,qCAvSuC,MAAA,WAC7BA,IAAAA,EAAS,CACb,gBAGM,OAAA,KAAKi1B,YACN,IAAA,SACA,IAAA,UACA,IAAA,QAEE,IADCwzB,IAAAA,EAAW,CAAC,IAAK,IAAK,IAAK,KACxBpqD,EAAI,EAAGA,EAAIoqD,EAASnqD,OAAQD,IAAK,CAClCqqD,IAAAA,EAAUD,EAASpqD,GACpBsqD,KAAAA,yCAAyC3oD,EAAQ0oD,GACjDE,KAAAA,4CAA4C5oD,EAAQ0oD,GACrDrqD,EAAI,EAAIoqD,EAASnqD,QACnB0B,EAAOI,KAAK,gBAGhB,MACF,QACQ,MAAA,IAAImO,MAAoD,8CAAA,OAAA,KAAK0mB,WAAnE,eAGG1F,OAAAA,EAAMgF,cAAcv0B,KAgR/B,CAAA,IAAA,2CA7Q2CA,MAAAA,SAAAA,EAAQ0oD,GAC/C1oD,EAAOI,KACL,4CACA,aACoBsoD,oBAAAA,OAAAA,EAHtB,sBA4QJ,CAAA,IAAA,8CArQ8C1oD,MAAAA,SAAAA,EAAQ0oD,GAC9C,IAAC,KAAK3tB,WAAY,OAAO/6B,EACxB,IAAA,IAAI3B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAAK,CAElB,YADX,KAAK08B,WAAW18B,GACpB42B,WACZj1B,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAAMqqD,MAAAA,OAAAA,EAAmC,6BAAA,OAAA,KAAK3tB,WAAW18B,GAAGwE,KADnF,MAIA7C,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAAMqqD,MAAAA,OAAAA,EAA6B,uBAAA,OAAA,KAAK3tB,WAAW18B,GAAGwE,UA2PrF,CAAA,IAAA,mCArPqC,MAAA,WAC1B,MAAA,CACL,4CACA,aACA,wCAiPN,CAAA,IAAA,sCA7OwC,MAAA,WAC9B7C,IAAAA,EAAS,GACX,IAAC,KAAK+6B,WAAY,OAAO/6B,EACxB,IAAA,IAAI3B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAAG,CACzC89B,IAAAA,EAAY,KAAKpB,WAAW18B,GACL,YAAzB89B,EAAUlH,WACZj1B,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAAiC89B,iCAAAA,OAAAA,EAAUt5B,KADlE,MAIA7C,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAA2B89B,2BAAAA,OAAAA,EAAUt5B,OAIzD7C,OAAAA,IA8NX,CAAA,IAAA,mCA3NqC,MAAA,WAC1B,MAAA,CACL,4CACA,aACA,wCACA,2CAsNN,CAAA,IAAA,sCAlNwC,MAAA,WAC9BA,IAAAA,EAAS,GACX,IAAC,KAAK+6B,WAAY,OAAO/6B,EACxB,IAAA,IAAI3B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAC5C2B,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAClDxE,OAAAA,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAFrE,QAKK7C,OAAAA,IAyMX,CAAA,IAAA,mCAtMqC,MAAA,WAC1B,MAAA,CACL,4CACA,aACA,wCACA,wCACA,2CAgMN,CAAA,IAAA,sCA5LwC,MAAA,WAC9BA,IAAAA,EAAS,GACX,IAAC,KAAK+6B,WAAY,OAAO/6B,EACxB,IAAA,IAAI3B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAC5C2B,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAClDxE,OAAAA,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAClDxE,OAAAA,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAHrE,QAMK7C,OAAAA,IAkLX,CAAA,IAAA,mCA/KqC,MAAA,WAC1B,MAAA,CACL,4CACA,aACA,qCA2KN,CAAA,IAAA,sCAvKwC,MAAA,WAC9BA,IAAAA,EAAS,GACX,IAAC,KAAK+6B,WAAY,OAAO/6B,EACrB,OAAA,KAAKi1B,YACN,IAAA,SACA,IAAA,QACA,IAAA,UACE,IAAA,IAAI52B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAAG,CAElB,YADX,KAAK08B,WAAW18B,GACpB42B,WACZj1B,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAA8B,8BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KADxE,MAIA7C,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAAwB,wBAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,OAItE,MACG,IAAA,WACE,IAAA,IAAIxE,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAC5C2B,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAClDxE,OAAAA,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAFrE,QAKF,MACG,IAAA,WACE,IAAA,IAAIxE,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAC5C2B,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAClDxE,OAAAA,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAClDxE,OAAAA,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAHrE,QAMF,MACG,IAAA,WACE,IAAA,IAAIxE,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAC5C2B,EAAOI,KACY/B,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAClDxE,OAAAA,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAClDxE,OAAAA,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAClDxE,OAAAA,iBAAAA,OAAAA,EAAI,EAA2B,2BAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,KAJrE,QAUC7C,OAAAA,IAsHX,CAAA,IAAA,mBA/GmB6oD,MAAAA,SAAAA,EAAK7zB,GACb6zB,OAAAA,EAAIh9C,QAAQ,yCAA0C,SAACpC,EAAOq/C,GAC/D9zB,GAAAA,EAAI7sB,eAAe2gD,GACd9zB,OAAAA,EAAI8zB,GAEeA,KAAAA,sBAAAA,OAAAA,OA0GlC,CAAA,IAAA,oBA9FoBntB,MAAAA,SAAAA,GACZ,OAAgC,OAAhC,KAAKoW,uBACA,KAAKA,uBAEP,KAAKA,uBAAyB,KAAKgX,iBAAiB,KAAKhqD,YAAYg6C,eAAgB,KAAKiQ,0BAA0BrtB,MA0F/H,CAAA,IAAA,kBAlFkBA,MAAAA,SAAAA,GACV,OAA8B,OAA9B,KAAKqW,qBACA,KAAKA,qBAEP,KAAKA,qBAAuB,KAAKjzC,YAAYi6C,eA8ExD,CAAA,IAAA,WAxEa,MAAA,WACHK,IAAAA,EAAqB9pB,EAAMgF,cAAc,CAApB,uBAGpB4kB,OAAAA,EAAe,KAAKp6C,YAAa+e,UAAW,KAAMu7B,KAoE7D,CAAA,IAAA,UAjEUjd,MAAAA,SAAAA,GACF,KAAKsZ,eACF1oC,KAAAA,QAAQkjB,cAAc,KAAKwlB,eAE9B,KAAK7hB,QACF7mB,KAAAA,QAAQi8C,aAAa,KAAKp1B,QAE7B,KAAK2b,aACFxiC,KAAAA,QAAQk8C,kBAAkB,KAAK1Z,aAElC,KAAK8Q,YACFtzC,KAAAA,QAAQm8C,aAAa,KAAK7I,YAE7B,KAAKD,YACFrzC,KAAAA,QAAQm8C,aAAa,KAAK9I,YAE7B,KAAK31C,SACFsC,KAAAA,QAAQo8C,cAAc,KAAK1+C,SAK7B,IAFCxL,IAAAA,EAAO1B,OAAO0B,KAAK,KAAKwhD,cAErBriD,EAAI,EAAGA,EAAIa,EAAKZ,OAAQD,IAAK,CAC9BwE,IAAAA,EAAO3D,EAAKb,GACb2O,KAAAA,QAAQkjB,cAAc,KAAKwwB,aAAa79C,IAG3C,GAAA,KAAK8yC,wBACF,IAAA,IAAIt3C,EAAI,EAAGA,EAAI,KAAKs3C,wBAAwBr3C,OAAQD,IAClD2O,KAAAA,QAAQkjB,cAAc,KAAKylB,wBAAwBt3C,IAGxD+9B,GAAAA,EAAwB,CACpBitB,IAAAA,EAAMvJ,EAASj/B,QAAQ,KAAK8Y,QAC9B0vB,GAAO,IACTvJ,EAASuJ,GAAO,KAChBtJ,EAAYsJ,GAAO,MAGlBC,KAAAA,2BACE,KAAKt8C,eACL,KAAK2sB,SAwBhB,CAAA,IAAA,oBArBsB,MAAA,WACbumB,KAAAA,WAAWmB,kBAAoB,KAC/BnB,KAAAA,WAAWoB,yBAA2B,KACtCpB,KAAAA,WAAWqB,uBAAyB,KACpCrB,KAAAA,WAAWsB,mBAAqB,OAiBzC,CAAA,IAAA,SAPW,MAAA,WACD7S,IAAAA,EAAN,EAAA,EAAA,EAAA,WAAA,SAAA,MAAA,KAAA,MAEOA,OADPA,EAAK9R,cAAgBF,EAAgByP,WAAW,KAAMwK,GAAmB14C,SAClEywC,KAIX,CAAA,CAAA,IAAA,iBAdwB3hC,MAAAA,SAAAA,GACdu8C,IAAAA,EAAYv8C,EAAQ+hC,aAAa,sBACnCwa,GACFA,EAAUta,kBAWhB,EAAA,GAAAvzC,OAAOC,QAAU,CACfqkD,YAAAA;;ACp2CF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GArJA,IAAM9T,EAAa9vC,QAAQ,MACHA,EAAAA,QAAQ,oBAAxB4jD,EAAAA,EAAAA,YACmB5jD,EAAAA,QAAQ,uBAA3B+8C,EAAAA,EAAAA,eAEJyG,EAAc,KACdxN,EAAa,KACbD,EAAc,KACd0N,EAAiB,KACjBlU,EAAW,KAET6d,EA2IN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EA3I+BxJ,GA2I/B,EAAA,EAAA,CAAA,CAAA,IAAA,aA9De,MAAA,WACJ,MAAA,KA6DX,CAAA,IAAA,cA1DgB,MAAA,WAILhzC,OAHSk/B,EAAW,EAAG,EAAG,CAC/Bud,uBAAuB,MAwD7B,CAAA,IAAA,iBAnDmB,MAAA,WACVvJ,KAAAA,WAAa,CAChBwJ,6BAA8B,KAAK18C,QAAQ+hC,aAAa,gCACxD4a,wBAAyB,KAAK38C,QAAQ+hC,aAAa,2BACnDsS,kBAAmB,KAAKr0C,QAAQ+hC,aAAa,qBAC7CuS,yBAA0B,KAAKt0C,QAAQ+hC,aAAa,4BACpDwS,uBAAwB,KAAKv0C,QAAQ+hC,aAAa,0BAClDyS,mBAAoB,KAAKx0C,QAAQ+hC,aAAa,yBA4CpD,CAAA,IAAA,QAxCU,MAAA,WACMnrB,EAAAA,EAAAA,EAAAA,WAAAA,QAAAA,MAAAA,MAAM,KAAM9F,WACnB,KAAKgc,mBACHomB,KAAAA,WAAWwJ,6BAA6Bva,OAAO,KAAK4G,WAAW,GAAI,KAAKA,WAAW,MAqC9F,CAAA,IAAA,oBAjCsB,MAAA,WACbmK,KAAAA,WAAWwJ,6BAA+B,KAC1CxJ,KAAAA,WAAWyJ,wBAA0B,KACrCzJ,KAAAA,WAAWmB,kBAAoB,KAC/BnB,KAAAA,WAAWoB,yBAA2B,KACtCpB,KAAAA,WAAWqB,uBAAyB,KACpCrB,KAAAA,WAAWsB,mBAAqB,OA2BzC,CAAA,IAAA,WAda,MAAA,WAGFrI,OAAAA,EAAe,KAAKp6C,YAAa+e,UAAW,KAFnD,+CACA,+EAYJ,CAAA,IAAA,YARYkS,MAAAA,SAAAA,GACQA,EAAAA,EAAAA,EAAAA,WAAAA,YAAAA,MAAAA,KAAAA,KAAAA,GACZ,KAAKmJ,WAAa,KAAK+mB,WAAWwJ,8BAC/BxJ,KAAAA,WAAWwJ,6BAA6Bva,OAAO,KAAK4G,WAAW,GAAI,KAAKA,WAAW,OAK9F,CAAA,CAAA,IAAA,qBAnI8B,MAAA,WAGtB,GAFJ3D,EAAa,KACbyN,EAAiB,KACS,mBAAf3T,EACP,IAIE,KAHJiG,EAAcjG,EAAW,EAAG,EAAG,CAC7Bud,uBAAuB,OAEJtX,EAAYpD,aAAc,OAC/C8Q,EAAiB,CACf6J,6BAA8BvX,EAAYpD,aAAa,gCACvD4a,wBAAyBxX,EAAYpD,aAAa,2BAClDsS,kBAAmBlP,EAAYpD,aAAa,qBAC5CuS,yBAA0BnP,EAAYpD,aAAa,4BACnDwS,uBAAwBpP,EAAYpD,aAAa,0BACjDyS,mBAAoBrP,EAAYpD,aAAa,uBAE/CpD,EAAW,KAAK8V,cAChB,MAAO50B,GACP8H,QAAQC,KAAK/H,MAgHnB,CAAA,IAAA,iBA5GwB7f,MAAAA,SAAAA,GAChB,IACKA,MAA2C,UAA3CA,EAAQo1C,aAAap1C,EAAQ48C,UACpC,MAAO/8B,GACA,OAAA,KAwGb,CAAA,IAAA,cApGuB,MAAA,WACb80B,IAAAA,EAAgB,KAAKC,mBACpBpkD,OAAAA,OAAOilC,OAAO,CACnBof,YAAa,KAAKC,iBAClBhW,0BAA2B,KAAKiW,+BAChCC,eAAgB,KAAKC,oBACrBN,cAAAA,EACA9V,UAAW8V,EACXO,aAAc,KAAKC,sBA4FzB,CAAA,IAAA,oBAxF6B,MAAA,WAClBlwB,OAAAA,QAAQ4tB,EAAewB,qBAuFlC,CAAA,IAAA,mBApF4B,MAAA,WACjBpvB,OAAAA,QAAQ4tB,EAAe2B,sBAmFlC,CAAA,IAAA,kBAhF2B,MAAA,WAChB3B,OAAAA,EAAe2B,mBACpBrP,EAAYiQ,aAAavC,EAAe2B,mBAAmBa,wBAC3D,IA6EN,CAAA,IAAA,iBAxBwBr1C,MAAAA,SAAAA,GACdu8C,IAAAA,EAAYv8C,EAAQ+hC,aAAa,2BACnCwa,GAAaA,EAAU7vB,SACzB6vB,EAAU7vB,YAqBhB,CAAA,IAAA,cA1I2B,IAAA,WACnBkmB,OAAgB,OAAhBA,EAA6BA,GAC5B0C,KAAAA,qBACL1C,EAA8B,OAAhBzN,KAuIlB,CAAA,IAAA,aA1E0B,IAAA,WACfC,OAAAA,IAyEX,CAAA,IAAA,cAtE2B,IAAA,WAChBD,OAAAA,IAqEX,CAAA,IAAA,WAlEwB,IAAA,WACbxG,OAAAA,MAiEX,EAAA,GAAAjwC,OAAOC,QAAU,CACf6tD,iBAAAA;;ACvGF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA/C8BptD,IAAAA,EAAAA,QAAQ,2BAA9Bw6C,EAAAA,EAAAA,kBAQFiT,EAuCN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAvCiCjT,GAuCjC,EAAA,EAAA,CAAA,CAAA,IAAA,0BA/B0BpO,MAAAA,SAAAA,EAASvD,GAC3BuD,GAAiB,eAAjBA,EAAQh9B,KACJ,MAAA,KAAK+2B,eACT,2CACAiG,GAIEh9B,IAAAA,EAAO,KAAK80B,QAAQkI,GAEtBA,GAAiB,aAAjBA,EAAQ3lC,KACVoiC,EAAO7kC,KAAK,mCACP,GAAa,YAAToL,EACL,KAAKwuB,cAAcnZ,QAAQ2nB,EAAQ3lC,OAAS,EAC9CoiC,EAAO7kC,KAAkBooC,aAAAA,OAAAA,EAAQ3lC,KAAjC,MAEAoiC,EAAO7kC,KAAaooC,QAAAA,OAAAA,EAAQ3lC,WAEzB,CACC80C,IAAAA,EAAmB,KAAKlP,sBAAsBD,EAAQ3lC,MACxD80C,EACF1S,EAAO7kC,KAAau3C,QAAAA,OAAAA,IAEpB1S,EAAO7kC,KAAaooC,QAAAA,OAAAA,EAAQ3lC,OAIzBoiC,OAAAA,MAIX,EAAA,GAAAvpC,OAAOC,QAAU,CACfkuD,mBAAAA;;AC/CF,IAAM9Q,EAAN,m9UAsYAr9C,OAAOC,QAAU,CACfo9C,eAAAA;;ACxYF,IAAMC,EAAN,iSAgBAt9C,OAAOC,QAAU,CACfq9C,aAAAA;;ACbF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAJoC58C,IAAAA,EAAAA,QAAQ,qCAApC6/C,EAAAA,EAAAA,wBAEF6N,EAEN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAFuC7N,GAEvC,EAAA,GAAAvgD,OAAOC,QAAU,CACfmuD,yBAAAA;;ACAF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GALkB1tD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MAC0BnzB,EAAAA,QAAQ,mCAAlC+/C,EAAAA,EAAAA,sBAEF4N,EAEN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAFqC5N,GAErC,EAAA,GAAAzgD,OAAOC,QAAU,CACfouD,uBAAAA;;ACWF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAjBkB3tD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MAC4BnzB,EAAAA,QAAQ,qCAApCggD,EAAAA,EAAAA,wBAEF4N,EAcN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAduC5N,GAcvC,EAAA,EAAA,CAAA,CAAA,IAAA,YAbYrgD,MAAAA,SAAAA,GACJ,MAAgB,cAAhB,KAAK8lC,OACmB,mBAAA,OAAA,KAAK7rB,GAASmX,OAAAA,OAAAA,SAASpxB,GAAjD,OAE0B,qBAAA,OAAA,KAAKia,GAAjC,SASJ,CAAA,IAAA,cANcja,MAAAA,SAAAA,GACU,cAAhB,KAAK8lC,QACJ5R,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKgkC,YAAcj+C,OAIzD,EAAA,GAAAL,OAAOC,QAAU,CACfquD,yBAAAA;;ACJF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAdkB5tD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MAC8BnzB,EAAAA,QAAQ,wCAAtCigD,EAAAA,EAAAA,0BAEF4N,EAWN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAXyC5N,GAWzC,EAAA,EAAA,CAAA,CAAA,IAAA,YAVc,MAAA,WAEH9sB,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACjB,eAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,eAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAHrG,WAQX,EAAA,GAAAr0B,OAAOC,QAAU,CACfsuD,2BAAAA;;ACFF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkB7tD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqCnzB,EAAAA,QAAQ,gDAA7CghD,EAAAA,EAAAA,iCAEF8M,EAUN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAVgD9M,GAUhD,EAAA,EAAA,CAAA,CAAA,IAAA,YATc,MAAA,WACH7tB,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACT,uBAAA,OAAA,KAAKulC,QACL,uBAAA,OAAA,KAAKD,oBAKlC,EAAA,GAAA5/C,OAAOC,QAAU,CACfuuD,kCAAAA;;ACiDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA/DkB9tD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACqBnzB,EAAAA,QAAQ,mCAA7Bi/C,EAAAA,EAAAA,iBAEF8O,EA4DN,SAAA,GA3DcpuD,SAAAA,EAAAA,EAAO8zB,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrB9zB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAO8zB,KACRysB,iBACAvsB,EAAAA,WAAa,CAACh0B,EAAM,GAAGq5B,MAAOr5B,EAAM,GAAGs5B,OAAQt5B,EAAMuC,QACrDq9C,EAAAA,YAAc,CAAC5/C,EAAM,GAAGq5B,MAAOr5B,EAAM,GAAGs5B,QAJlB,EA2D/B,OAAA,EAAA,EA5D8CgmB,GA4D9C,EAAA,EAAA,CAAA,CAAA,IAAA,wBArD0B,MAAA,WACM,MAAA,qBAAA,OAAA,KAAKx4C,KAAU,OAAA,OAAA,KAAKm1C,QAAhD,SAoDJ,CAAA,IAAA,YAlDc,MAAA,WACHzoB,OAAAA,EAAMgF,cAAc,CACO,gCAAA,OAAA,KAAKve,IACtB,eAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,eAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAHrG,SAiDX,CAAA,IAAA,cA1Ccge,MAAAA,SAAAA,GACOc,IAAAA,EAAO,KAAhB7hC,QACR6hC,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGub,iBAAkB,KAAKt6B,SACzC+e,EAAG6N,cAAc7N,EAAGub,iBAAkBvb,EAAGmO,mBAAoBnO,EAAGkO,SAChElO,EAAG6N,cAAc7N,EAAGub,iBAAkBvb,EAAGiO,mBAAoBjO,EAAGkO,SAChElO,EAAGoO,YAAYpO,EAAGqO,qBAAqB,GAEvCrO,EAAGwb,WACDxb,EAAGub,iBACH,EACAvb,EAAGmB,KACHjC,EAAO,GAAG3Y,MACV2Y,EAAO,GAAG1Y,OACV0Y,EAAOzvC,OACP,EACAuwC,EAAGmB,KACHnB,EAAGsC,cACH,MAEG,IAAA,IAAI9yC,EAAI,EAAGA,EAAI0vC,EAAOzvC,OAAQD,IAAK,CAItCwwC,EAAGyb,cACDzb,EAAGub,iBACH,EALc,EACA,EAOd/rD,EACA0vC,EAAO1vC,GAAG+2B,MACV2Y,EAAO1vC,GAAGg3B,OARO,EAUjBwZ,EAAGmB,KACHnB,EAAGsC,cACH,KAAK6I,YAAcjM,EAAO1vC,IAGzB4xB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,WAI3C,EAAA,GAAAjO,OAAOC,QAAU,CACfwuD,gCAAAA;;AC5CF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GApB4C/tD,IAAAA,EAAAA,QAAQ,sBAA5C+tD,EAAAA,EAAAA,gCAEFI,EAkBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAlBqDJ,GAkBrD,EAAA,EAAA,CAAA,CAAA,IAAA,YAjBc,MAAA,WACH56B,OAAAA,MAAMgF,cAAc,CACO,gCAAA,OAAA,KAAKve,IACd,uBAAA,OAAA,KAAKulC,QACL,uBAAA,OAAA,KAAKD,kBAalC,CAAA,IAAA,cATcvN,MAAAA,SAAAA,GACLhe,KAAAA,WAAa,CAACge,EAAO,GAAG3Y,MAAO2Y,EAAO,GAAG1Y,OAAQ0Y,EAAOzvC,QACxDq9C,KAAAA,YAAc,CAAC5N,EAAO,GAAG3Y,MAAO2Y,EAAO,GAAG1Y,QAC1CpF,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5N,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAryC,OAAOC,QAAU,CACf4uD,uCAAAA;;ACKF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA1BkBnuD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACgCnzB,EAAAA,QAAQ,0CAAxCmhD,EAAAA,EAAAA,4BAEFiN,EAuBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAvB2CjN,GAuB3C,EAAA,EAAA,CAAA,CAAA,IAAA,YAtBc,MAAA,WACHhuB,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACjB,eAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,eAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAHrG,SAqBX,CAAA,IAAA,cAdczmB,MAAAA,SAAAA,GACOulC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMmE,UAAUpqB,EAAMvN,MAAO,KAAKi+C,aAClCnL,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAG4b,QAAS,KAAK9O,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGoB,MAAO,KAAK+J,aAC5G/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,WAI3C,EAAA,GAAAjO,OAAOC,QAAU,CACf6uD,6BAAAA;;ACHF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAxBkBpuD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACiCnzB,EAAAA,QAAQ,2CAAzCouD,EAAAA,EAAAA,6BAEFE,EAqBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EArBkDF,GAqBlD,EAAA,EAAA,CAAA,CAAA,IAAA,YApBc,MAAA,WACHj7B,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACT,uBAAA,OAAA,KAAKulC,QACL,uBAAA,OAAA,KAAKD,kBAgBlC,CAAA,IAAA,cAZcv/C,MAAAA,SAAAA,GACMA,IAAAA,EAAAA,EAAAA,EAAM+C,KADL,GACZswB,EADY,EAAA,GACTC,EADS,EAAA,GACNC,EADM,EAAA,GAEZS,KAAAA,WAAa,IAAIf,WAAW,CAACI,GAAK,EAAGC,GAAK,EAAGC,GAAK,IAClDqsB,KAAAA,YAAcpsB,EAAMqD,mCAAmC,KAAK7C,WAAY,KAAK8C,UAC7E2qB,KAAAA,kBAAoB,KAAK7B,YAAY,GAAK,KAAKA,YAAY,GAAK,KAAK9oB,SACrEmnB,KAAAA,YAAc,IAAItqB,aAAa,KAAK8tB,mBACpCvtB,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACf+uD,oCAAAA;;ACZF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBtuD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACkCnzB,EAAAA,QAAQ,4CAA1CshD,EAAAA,EAAAA,8BAEFiN,EAUN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAV6CjN,GAU7C,EAAA,EAAA,CAAA,CAAA,IAAA,YATc,MAAA,WACHnuB,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACjB,eAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,eAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAHrG,WAQX,EAAA,GAAAr0B,OAAOC,QAAU,CACfgvD,+BAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBvuD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACyCnzB,EAAAA,QAAQ,oDAAjDyhD,EAAAA,EAAAA,qCAEF+M,EAUN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAVoD/M,GAUpD,EAAA,EAAA,CAAA,CAAA,IAAA,YATc,MAAA,WACHtuB,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACT,uBAAA,OAAA,KAAKulC,QACL,uBAAA,OAAA,KAAKD,oBAKlC,EAAA,GAAA5/C,OAAOC,QAAU,CACfivD,sCAAAA;;ACAF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAdkBxuD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACiDnzB,EAAAA,QAAQ,6DAAzD0hD,EAAAA,EAAAA,6CAEF+M,EAWN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAX4D/M,GAW5D,EAAA,EAAA,CAAA,CAAA,IAAA,YAVc,MAAA,WAEHvuB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACX,eAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,eAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAHrG,WAQX,EAAA,GAAAr0B,OAAOC,QAAU,CACfkvD,8CAAAA;;ACFF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBzuD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACwDnzB,EAAAA,QAAQ,qEAAhE4hD,EAAAA,EAAAA,oDAEF8M,EAUN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAVmE9M,GAUnE,EAAA,EAAA,CAAA,CAAA,IAAA,YATc,MAAA,WACHzuB,OAAAA,EAAMgF,cAAc,CACJ,qBAAA,OAAA,KAAKve,IACT,iBAAA,OAAA,KAAKulC,QACL,iBAAA,OAAA,KAAKD,oBAK5B,EAAA,GAAA5/C,OAAOC,QAAU,CACfmvD,qDAAAA;;ACAF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAdkB1uD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACkCnzB,EAAAA,QAAQ,4CAA1C6hD,EAAAA,EAAAA,8BAEF8M,EAWN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAX6C9M,GAW7C,EAAA,EAAA,CAAA,CAAA,IAAA,YAVc,MAAA,WAEH1uB,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACjB,eAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,eAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAHrG,WAQX,EAAA,GAAAr0B,OAAOC,QAAU,CACfovD,+BAAAA;;ACFF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkB3uD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACyCnzB,EAAAA,QAAQ,oDAAjD8hD,EAAAA,EAAAA,qCAEF8M,EAUN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAVoD9M,GAUpD,EAAA,EAAA,CAAA,CAAA,IAAA,YATc,MAAA,WACH3uB,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACT,uBAAA,OAAA,KAAKulC,QACL,uBAAA,OAAA,KAAKD,oBAKlC,EAAA,GAAA5/C,OAAOC,QAAU,CACfqvD,sCAAAA;;ACgBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA9BkB5uD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACgCnzB,EAAAA,QAAQ,0CAAxC+hD,EAAAA,EAAAA,4BAEF8M,EA2BN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EA3B2C9M,GA2B3C,EAAA,EAAA,CAAA,CAAA,IAAA,YA1Bc,MAAA,WACH5uB,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACjB,eAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,eAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAHrG,SAyBX,CAAA,IAAA,cAlBch0B,MAAAA,SAAAA,GACNA,GAAAA,EAAMgD,cAAgB,KAAKy8C,wBAA3Bz/C,CAIa8yC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMmE,UAAU33B,EAAO,KAAKi+C,aAC5BnL,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAG4b,QAAS,KAAK9O,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGoB,MAAO,KAAK+J,aAC5G/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACfsvD,6BAAAA;;ACRF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAvBkB7uD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACiCnzB,EAAAA,QAAQ,2CAAzC6uD,EAAAA,EAAAA,6BAEFC,EAoBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EApBkDD,GAoBlD,EAAA,EAAA,CAAA,CAAA,IAAA,YAnBc,MAAA,WACH17B,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACT,uBAAA,OAAA,KAAKulC,QACL,uBAAA,OAAA,KAAKD,kBAelC,CAAA,IAAA,cAXcv/C,MAAAA,SAAAA,GACLg0B,KAAAA,WAAaR,EAAM0D,cAAcl3B,GAAO,GACxC4/C,KAAAA,YAAcpsB,EAAMqD,mCAAmC,KAAK7C,WAAY,KAAK8C,UAC7E2qB,KAAAA,kBAAoB,KAAK7B,YAAY,GAAK,KAAKA,YAAY,GAAK,KAAK9oB,SACrEmnB,KAAAA,YAAc,IAAItqB,aAAa,KAAK8tB,mBACpCvtB,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACfuvD,oCAAAA;;ACFF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAtBkB9uD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmCnzB,EAAAA,QAAQ,8CAA3CiiD,EAAAA,EAAAA,+BAEF8M,EAmBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAnB8C9M,GAmB9C,EAAA,EAAA,CAAA,CAAA,IAAA,cAlBctiD,MAAAA,SAAAA,GACNA,GAAAA,EAAMgD,cAAgB,KAAKy8C,wBAA3Bz/C,CAIa8yC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMmE,UAAU33B,EAAO,KAAKi+C,aAC5BnL,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAG4b,QAAS,KAAK9O,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGoB,MAAO,KAAK+J,aAC5G/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACfwvD,gCAAAA;;ACHF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GApBkB/uD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACoCnzB,EAAAA,QAAQ,+CAA5C+uD,EAAAA,EAAAA,gCAEFC,EAiBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAjBqDD,GAiBrD,EAAA,EAAA,CAAA,CAAA,IAAA,YAhBc,MAAA,WACH57B,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACT,uBAAA,OAAA,KAAKulC,QACL,uBAAA,OAAA,KAAKD,kBAYlC,CAAA,IAAA,cARcv/C,MAAAA,SAAAA,GACLuiD,KAAAA,SAASviD,GACTk0B,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACfyvD,uCAAAA;;ACCF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAtBkBhvD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmCnzB,EAAAA,QAAQ,8CAA3CqiD,EAAAA,EAAAA,+BAEF4M,EAmBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAnB8C5M,GAmB9C,EAAA,EAAA,CAAA,CAAA,IAAA,cAlBc1iD,MAAAA,SAAAA,GACNA,GAAAA,EAAMgD,cAAgB,KAAKy8C,wBAA3Bz/C,CAIa8yC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMmE,UAAU33B,EAAO,KAAKi+C,aAC5BnL,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAG4b,QAAS,KAAK9O,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGoB,MAAO,KAAK+J,aAC5G/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACf0vD,gCAAAA;;ACHF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GApBkBjvD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACoCnzB,EAAAA,QAAQ,+CAA5CivD,EAAAA,EAAAA,gCAEFC,EAiBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAjBqDD,GAiBrD,EAAA,EAAA,CAAA,CAAA,IAAA,YAhBc,MAAA,WACH97B,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACT,uBAAA,OAAA,KAAKulC,QACL,uBAAA,OAAA,KAAKD,kBAYlC,CAAA,IAAA,cARcv/C,MAAAA,SAAAA,GACLuiD,KAAAA,SAASviD,GACTk0B,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACf2vD,uCAAAA;;ACCF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAtBkBlvD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACmCnzB,EAAAA,QAAQ,8CAA3CuiD,EAAAA,EAAAA,+BAEF4M,EAmBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAnB8C5M,GAmB9C,EAAA,EAAA,CAAA,CAAA,IAAA,cAlBc5iD,MAAAA,SAAAA,GACNA,GAAAA,EAAMgD,cAAgB,KAAKy8C,wBAA3Bz/C,CAIa8yC,IAAAA,EAAO,KAAhB7hC,QACRuiB,EAAMmE,UAAU33B,EAAO,KAAKi+C,aAC5BnL,EAAG2N,cAAc,KAAKpB,eACtBvM,EAAG4N,YAAY5N,EAAGiB,WAAY,KAAKhgB,SACnC+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAC1DlO,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAG4b,QAAS,KAAK9O,YAAY,GAAI,KAAKA,YAAY,GAAI,EAAG9M,EAAGmB,KAAMnB,EAAGoB,MAAO,KAAK+J,aAC5G/pB,KAAAA,OAAOisB,aAAa,KAAKlmC,GAAI,KAAKrM,YAZhCwxC,KAAAA,4BAgBX,EAAA,GAAAz/C,OAAOC,QAAU,CACf4vD,gCAAAA;;ACHF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GApBkBnvD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACoCnzB,EAAAA,QAAQ,+CAA5CmvD,EAAAA,EAAAA,gCAEFC,EAiBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAjBqDD,GAiBrD,EAAA,EAAA,CAAA,CAAA,IAAA,YAhBc,MAAA,WACHh8B,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACT,uBAAA,OAAA,KAAKulC,QACL,uBAAA,OAAA,KAAKD,kBAYlC,CAAA,IAAA,cARcv/C,MAAAA,SAAAA,GACLuiD,KAAAA,SAASviD,GACTk0B,KAAAA,OAAOotB,cAAc,KAAK/B,aAAc,KAAKvrB,YAC7CE,KAAAA,OAAOqtB,cAAc,KAAK/B,OAAQ,KAAKI,aAC1B5/C,EAAAA,EAAAA,EAAAA,WAAAA,cAAAA,MAAAA,KAAAA,KAAAA,OAItB,EAAA,GAAAL,OAAOC,QAAU,CACf6vD,uCAAAA;;ACjBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAJyCpvD,IAAAA,EAAAA,QAAQ,2CAAzCyiD,EAAAA,EAAAA,6BAEF4M,EAEN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAF4C5M,GAE5C,EAAA,GAAAnjD,OAAOC,QAAU,CACf8vD,8BAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAJyCrvD,IAAAA,EAAAA,QAAQ,2CAAzC2iD,EAAAA,EAAAA,6BAEF2M,EAEN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAF4C3M,GAE5C,EAAA,GAAArjD,OAAOC,QAAU,CACf+vD,8BAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAJyCtvD,IAAAA,EAAAA,QAAQ,2CAAzC6iD,EAAAA,EAAAA,6BAEF0M,EAEN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAF4C1M,GAE5C,EAAA,GAAAvjD,OAAOC,QAAU,CACfgwD,8BAAAA;;ACQF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBvvD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACkCnzB,EAAAA,QAAQ,4CAA1C+iD,EAAAA,EAAAA,8BAEFyM,EAUN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAV6CzM,GAU7C,EAAA,EAAA,CAAA,CAAA,IAAA,YATc,MAAA,WACH5vB,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACjB,eAAA,OAAA,KAAKulC,OAAkB,aAAA,OAAA,KAAKI,YAAY,GAAO,MAAA,OAAA,KAAKA,YAAY,GAChE,KAAA,eAAA,OAAA,KAAKL,aAAwB,aAAA,OAAA,KAAKvrB,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAAO,MAAA,OAAA,KAAKA,WAAW,GAHrG,WAQX,EAAA,GAAAr0B,OAAOC,QAAU,CACfiwD,+BAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAbkBxvD,IAAAA,EAAAA,QAAQ,kBAAlBmzB,EAAAA,EAAAA,MACyCnzB,EAAAA,QAAQ,oDAAjDgjD,EAAAA,EAAAA,qCAEFyM,EAUN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAVoDzM,GAUpD,EAAA,EAAA,CAAA,CAAA,IAAA,YATc,MAAA,WACH7vB,OAAAA,EAAMgF,cAAc,CACE,2BAAA,OAAA,KAAKve,IACT,uBAAA,OAAA,KAAKulC,QACL,uBAAA,OAAA,KAAKD,oBAKlC,EAAA,GAAA5/C,OAAOC,QAAU,CACfkwD,sCAAAA;;ACdmCzvD,IAAAA,EAAAA,QAAQ,0BAArC0tD,EAAAA,EAAAA,yBAC2B1tD,EAAAA,QAAQ,wBAAnC2tD,EAAAA,EAAAA,uBAC6B3tD,EAAAA,QAAQ,0BAArC4tD,EAAAA,EAAAA,yBAE+B5tD,EAAAA,QAAQ,6BAAvC6tD,EAAAA,EAAAA,2BACsC7tD,EAAAA,QAAQ,qCAA9C8tD,EAAAA,EAAAA,kCAEoC9tD,EAAAA,QAAQ,mCAA5C+tD,EAAAA,EAAAA,gCAC2C/tD,EAAAA,QAAQ,2CAAnDmuD,EAAAA,EAAAA,uCAEiCnuD,EAAAA,QAAQ,+BAAzCouD,EAAAA,EAAAA,6BACwCpuD,EAAAA,QAAQ,uCAAhDsuD,EAAAA,EAAAA,oCAEmCtuD,EAAAA,QAAQ,iCAA3CuuD,EAAAA,EAAAA,+BAC0CvuD,EAAAA,QAAQ,yCAAlDwuD,EAAAA,EAAAA,sCAEkDxuD,EAAAA,QAAQ,kDAA1DyuD,EAAAA,EAAAA,8CACyDzuD,EAAAA,QAAQ,0DAAjE0uD,EAAAA,EAAAA,qDAEmC1uD,EAAAA,QAAQ,iCAA3C2uD,EAAAA,EAAAA,+BAC0C3uD,EAAAA,QAAQ,yCAAlD4uD,EAAAA,EAAAA,sCAEiC5uD,EAAAA,QAAQ,+BAAzC6uD,EAAAA,EAAAA,6BACwC7uD,EAAAA,QAAQ,uCAAhD8uD,EAAAA,EAAAA,oCAEoC9uD,EAAAA,QAAQ,mCAA5C+uD,EAAAA,EAAAA,gCAC2C/uD,EAAAA,QAAQ,2CAAnDgvD,EAAAA,EAAAA,uCAEoChvD,EAAAA,QAAQ,mCAA5CivD,EAAAA,EAAAA,gCAC2CjvD,EAAAA,QAAQ,2CAAnDkvD,EAAAA,EAAAA,uCAEoClvD,EAAAA,QAAQ,mCAA5CmvD,EAAAA,EAAAA,gCAC2CnvD,EAAAA,QAAQ,2CAAnDovD,EAAAA,EAAAA,uCAEkCpvD,EAAAA,QAAQ,gCAA1CqvD,EAAAA,EAAAA,8BACkCrvD,EAAAA,QAAQ,gCAA1CsvD,EAAAA,EAAAA,8BACkCtvD,EAAAA,QAAQ,gCAA1CuvD,EAAAA,EAAAA,8BAEmCvvD,EAAAA,QAAQ,iCAA3CwvD,EAAAA,EAAAA,+BAC0CxvD,GAAAA,QAAQ,yCAAlDyvD,GAAAA,GAAAA,sCAEFxM,GAAkB,CACtBC,SAAU,CACRC,QAAS,CACIuK,QAAAA,EACAE,QAAAA,EACFD,MAAAA,EACA8B,MAAAA,GACG,YAAA,EACA,YAAA,EACA,YAAA,EACE,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACLjB,MAAAA,EACQI,cAAAA,EACEA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACaF,6BAAAA,EACnBZ,UAAAA,EACKK,eAAAA,GAEpBzyC,OAAQ,CACKgyC,QAAAA,EACFC,MAAAA,EACEC,QAAAA,EACF4B,MAAAA,EACG,YAAA,EACA,YAAA,EACA,YAAA,EACE,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACA,cAAA,EACLjB,MAAAA,EACQI,cAAAA,EACEA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACaD,6BAAAA,EACnBb,UAAAA,EACKE,eAAAA,IAGtB3K,OAAQ,CACND,QAAS,CACIuK,QAAAA,EACAE,QAAAA,EACFD,MAAAA,EACAmB,MAAAA,EACGO,WAAAA,EACAC,WAAAA,EACAC,WAAAA,EACEP,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACAE,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACAE,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACLd,MAAAA,EACQM,cAAAA,EACEA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACaF,6BAAAA,EACnBZ,UAAAA,EACKK,eAAAA,GAEpBzyC,OAAQ,CACKgyC,QAAAA,EACFC,MAAAA,EACEC,QAAAA,EACFiB,MAAAA,EACGQ,WAAAA,EACAC,WAAAA,EACAC,WAAAA,EACER,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACAE,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACAE,aAAAA,EACAA,aAAAA,EACAA,aAAAA,EACLf,MAAAA,EACQO,cAAAA,EACEA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACAA,kBAAAA,EACaF,6BAAAA,EACnBZ,UAAAA,EACKE,eAAAA,KAKxB,SAAS1K,GAAsBj0C,EAAM+zC,EAASl/C,EAAWtE,GACnD,IAACyP,EACG,MAAA,IAAI+C,MAAM,gBAEd,IAACgxC,EACG,MAAA,IAAIhxC,MAAM,mBAEd,IAAClO,EACG,MAAA,IAAIkO,MAAM,qBAEdxS,EAAMyP,OACRA,EAAOzP,EAAMyP,MAETtI,IAAAA,EAAQm8C,GAAgBh/C,GAAWk/C,GACrCr8C,IAAgB,IAAhBA,EAAMsI,GACD,OAAA,KACF,QAAoBk0C,IAAhBx8C,EAAMsI,GACT,MAAA,IAAI+C,MAA2C/C,oCAAAA,OAAAA,IAEhDtI,OAAAA,EAAMsI,GAGf9P,OAAOC,QAAU,CACf8jD,sBAAAA;;ACsfF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzqBwBrjD,IAAAA,EAAAA,QAAQ,oBAAxB4jD,EAAAA,EAAAA,YACuB5jD,EAAAA,QAAQ,mBAA/BytD,EAAAA,EAAAA,mBACoBztD,EAAAA,QAAQ,uBAA5BugC,EAAAA,EAAAA,gBACUvgC,EAAAA,QAAQ,eAAlBmzB,EAAAA,EAAAA,MACmBnzB,EAAAA,QAAQ,qBAA3B28C,EAAAA,EAAAA,eACiB38C,EAAAA,QAAQ,mBAAzB48C,EAAAA,EAAAA,aAC0B58C,EAAAA,QAAQ,uBAAlCqjD,EAAAA,EAAAA,sBAEJG,EAAc,KACdxN,EAAa,KACbD,EAAc,KACd0N,EAAiB,KAMjBlU,EAAW,KAKTmgB,EAmpBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAnpB2B9L,GAmpB3B,EAAA,EAAA,CAAA,CAAA,IAAA,cAhkBgB,MAAA,WAOLhzC,OADS,KAAK2sB,OAAOuS,WAAW,SALtB,CACfsW,OAAO,EACPtsB,OAAO,EACPusB,WAAW,MA4jBjB,CAAA,IAAA,iBAtjBmB,MAAA,WACVvC,KAAAA,WAAa,CAChB6L,uBAAwB,KAAK/+C,QAAQ+hC,aAAa,0BAClDuS,yBAA0B,KAAKt0C,QAAQ+hC,aAAa,+BAmjB1D,CAAA,IAAA,mBA3iBmBpT,MAAAA,SAAAA,GACX,GAAC,KAAKX,SAAN,CAQE2Q,IAAAA,EAAW,KAAK5sC,YAAY4sC,SAC9B,GAAmB,WAAnB,KAAKtrC,YAA2BsrC,EAASkW,YACrC,MAAA,IAAItzC,MAAM,2CAad,GAZQ,KAAK4qB,WAAgC,OAAnB,KAAK94B,YAC5BA,KAAAA,UAAYsrC,EAASkW,YAAc,SAAW,YAGb,OAApC,KAAKxmB,2BACFA,KAAAA,4BAA8BsQ,EAASG,0BACnC,KAAKzQ,4BAA8BsQ,EAASG,4BAChDzQ,KAAAA,4BAA6B,GAG/B8Q,KAAAA,eAEA,KAAKnc,QAAiC,IAAvB,KAAKA,OAAO1xB,OAAc,CACxCq9B,GAAgB,IAAhBA,EAAKr9B,OACD,MAAA,IAAIiQ,MAAM,8DAGZqtB,IAAAA,EAAUrM,EAAMuC,gBAAgB6J,EAAK,GAAI,KAAK5J,gBAC5C6J,OAAAA,GACD,IAAA,QACE5L,KAAAA,OAAST,EAAM0D,cAAc2I,GAClC,MACG,IAAA,gBACA,IAAA,+BACA,IAAA,kBACA,IAAA,kBACA,IAAA,kBACA,IAAA,kBACE5L,KAAAA,OAAS2L,EAAK,GAAG3L,OACtB,MACF,QACQ,MAAA,IAAIzhB,MAAM,6CAA+CqtB,IAIjE,GAAA,KAAKzC,UAAW,CACd,GAAuB,IAAvB,KAAKnJ,OAAO1xB,OACR,MAAA,IAAIiQ,MAAM,mDASlB,MANuB,WAAnB,KAAKlO,YACPs0B,QAAQC,KAAK,mEACRv0B,KAAAA,UAAY,iBAGduxC,KAAAA,QAAUriB,EAAMoC,MAAM,KAAK3B,UAEtB,KAAKmJ,WAAgC,OAAnB,KAAK94B,WAAsBsrC,EAASqW,iBAC3D3hD,KAAAA,UAAY,UAGduxC,KAAAA,QAAUriB,EAAM6C,qBAAqB,CACxCE,oBAAqB,KAAKA,oBAC1BjyB,UAAW,KAAKA,WACf,KAAK2vB,aAhED4hB,KAAAA,QAAUriB,EAAM6C,qBAAqB,CACxCE,oBAAqB,KAAKA,oBAC1BjyB,UAAW,KAAKA,WACf,KAAK2vB,UAsiBd,CAAA,IAAA,kBAteoB,MAAA,WACV2N,IAAAA,EAAkBhB,EAAgByP,WAAW,KAAMyd,EAAoB,CAC3ExuB,2BAA4B,KAAKA,6BAO/B,GALCwW,KAAAA,iBAAmBlU,EAAgBolB,mBAAmB,UACtD,KAAK5pB,WAAc,KAAKlE,aACtBA,KAAAA,WAAa0I,EAAgB0O,uBAGhC,KAAKtR,YAAc,KAAKA,WAAWz8B,OAAS,EACzC,IAAA,IAAID,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAAK,CACzC89B,IAAAA,EAAY,KAAKpB,WAAW18B,GAC7B89B,EAAUlH,aACbkH,EAAUlH,WAAa0I,EAAgBgoB,uBAAuBtnD,OAydxE,CAAA,IAAA,MAndQ,MAAA,WACI87B,IAAAA,EAA6B,KAA7BA,gBAAiByX,EAAY,KAAZA,QACnB/C,EAAK,KAAK7hC,QAEhB6hC,EAAG4W,WAAW,KAAK/6C,SACnBmkC,EAAG+W,QAAQ,EAAG,EAAGhU,EAAQ,GAAIA,EAAQ,IAEjC,KAAKjX,gBACF0iB,KAAAA,cAAc,aAAc,IAAIruB,WAAW,KAAKwN,YAChD8gB,KAAAA,cAAc,WAAY1L,IAG5BiU,KAAAA,aAAa,QAASjU,EAAQ,GAAK,KAAKmE,WAAW,GAAInE,EAAQ,GAAK,KAAKmE,WAAW,IAEpF,IAAA,IAAI13C,EAAI,EAAGA,EAAI87B,EAAgB77B,OAAQD,IAEtC,GADJ87B,EAAgB97B,GAAGqnD,YAAY5nC,UAAUzf,IACrC,KAAKmiD,iBAAkB,OAGzB,GAAA,KAAK31C,QACF,IAAA,IAAIxM,EAAI,EAAGA,EAAI,KAAKwM,QAAQvM,OAAQD,IAAK,CACtCiQ,IAAAA,EAAS,KAAKzD,QAAQxM,GACxBiQ,EAAOuqC,aACTvqC,EAAOuqC,YAAY,MAKrB,GAAA,KAAK1f,UACH,OAAA,KAAK+B,UACP2T,EAAGiX,iBAAiBjX,EAAGkX,aAAc,MACrClX,EAAGa,gBAAgBb,EAAGc,YAAa,KAAKH,aACnC,KAAKkG,gBAAiB,KAAKza,WACzB+a,KAAAA,sBAEPnH,EAAGmX,WAAWnX,EAAGoX,eAAgB,EAAG,GAC7B,IAAI,KAAKvU,mBAAmB,CACjC5hB,QAAS,KAAK4lB,cACd52C,KAAM8yC,EACN7hB,WAAY,KAAKyM,UACjBxM,OAAQ,KAAKA,OACbhjB,QAAS,KAAKA,YAGlB6hC,EAAGiX,iBAAiBjX,EAAGkX,aAAc,MACrClX,EAAGa,gBAAgBb,EAAGc,YAAa,WACnCd,EAAGmX,WAAWnX,EAAGoX,eAAgB,EAAG,IAItCpX,EAAGa,gBAAgBb,EAAGc,YAAa,KAAKH,aACpC,KAAKvU,WACF+a,KAAAA,sBAGiB,OAApB,KAAKjb,aACH,KAAKE,WACFgb,KAAAA,0BAEPpH,EAAGmd,YAAY,KAAKzL,iBAGtB1R,EAAGmX,WAAWnX,EAAGoX,eAAgB,EAAG,KAqZxC,CAAA,IAAA,cAlZgB,MAAA,WACPj5C,KAAAA,QAAQg/C,YAAY,KAAKzL,kBAiZlC,CAAA,IAAA,mBA9YqB,MAAA,WACV,OAAA,KAAK7K,gBA6YhB,CAAA,IAAA,sBA1YwB,MAAA,WACZ9D,IAAAA,EAAY,KAAZA,QACF/C,EAAK,KAAK7hC,QACV8iB,EAAU,KAAK4lB,cAAgB7G,EAAGwU,gBAOpC,GANJxU,EAAG2N,cAAc3N,EAAGyU,SAAW,KAAKlD,qBAAuB,KAAKD,sBAChEtR,EAAG4N,YAAY5N,EAAGiB,WAAYhgB,GAC9B+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SACnC,WAAnB,KAAK18C,UACH,GAAA,KAAK66B,SACC,OAAA,KAAKjG,YACN,IAAA,SACA,IAAA,QACA,IAAA,UACC,KAAK3C,oBACPuc,EAAGod,aAAapd,EAAGiB,WAAY,EAAGjB,EAAG4b,QAAS7Y,EAAQ,GAAIA,EAAQ,IAElE/C,EAAGod,aAAapd,EAAGiB,WAAY,EAAGjB,EAAGqd,KAAMta,EAAQ,GAAIA,EAAQ,IAEjE,MACG,IAAA,WACH/C,EAAGod,aAAapd,EAAGiB,WAAY,EAAGjB,EAAGsd,MAAOva,EAAQ,GAAIA,EAAQ,IAChE,MACG,IAAA,WACA,IAAA,WACH/C,EAAGod,aAAapd,EAAGiB,WAAY,EAAGjB,EAAG4b,QAAS7Y,EAAQ,GAAIA,EAAQ,IAClE,MACF,QACQ,MAAA,IAAIrjC,MAAM,8BAGpBsgC,EAAGod,aAAapd,EAAGiB,WAAY,EAAGjB,EAAG4b,QAAS7Y,EAAQ,GAAIA,EAAQ,SAGpE/C,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM4B,EAAQ,GAAIA,EAAQ,GAAI,EAAG/C,EAAGmB,KAAMnB,EAAGsC,cAAe,MAEjGtC,EAAGe,qBAAqBf,EAAGc,YAAad,EAAGgB,kBAAmBhB,EAAGiB,WAAYhgB,EAAS,KAoW1F,CAAA,IAAA,0BAjW4B,MAAA,WAChB8hB,IAAAA,EAAY,KAAZA,QACF/C,EAAK,KAAK7hC,QACXuzC,KAAAA,eAAiB,CAAC1R,EAAGgB,mBACrB8F,KAAAA,wBAA0B,GAC1B,IAAA,IAAIt3C,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAAK,CACzCyxB,IAAAA,EAAU,KAAK9iB,QAAQq2C,gBACxB1N,KAAAA,wBAAwBv1C,KAAK0vB,GAC7BywB,KAAAA,eAAengD,KAAKyuC,EAAGgB,kBAAoBxxC,EAAI,GACpDwwC,EAAG2N,cAAc3N,EAAGyU,SAAW,KAAKlD,qBAAuB,KAAKD,qBAAuB9hD,GACvFwwC,EAAG4N,YAAY5N,EAAGiB,WAAYhgB,GAC9B+e,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAG8N,eAAgB9N,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGgO,eAAgBhO,EAAG+N,eACtD/N,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGiO,mBAAoBjO,EAAGkO,SAC1DlO,EAAG6N,cAAc7N,EAAGiB,WAAYjB,EAAGmO,mBAAoBnO,EAAGkO,SAEnC,WAAnB,KAAK18C,UACPwuC,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAG4b,QAAS7Y,EAAQ,GAAIA,EAAQ,GAAI,EAAG/C,EAAGmB,KAAMnB,EAAGoB,MAAO,MAE1FpB,EAAGsO,WAAWtO,EAAGiB,WAAY,EAAGjB,EAAGmB,KAAM4B,EAAQ,GAAIA,EAAQ,GAAI,EAAG/C,EAAGmB,KAAMnB,EAAGsC,cAAe,MAEjGtC,EAAGe,qBAAqBf,EAAGc,YAAad,EAAGgB,kBAAoBxxC,EAAI,EAAGwwC,EAAGiB,WAAYhgB,EAAS,MA4UpG,CAAA,IAAA,mBAjUqB,MAAA,WACV,MAAA,KAgUX,CAAA,IAAA,wBAzT0B,MAAA,WAChBiL,IAAAA,EAAa,KAAKA,WACpBA,OAAe,OAAfA,GAAuBA,EAAWz8B,OAAS,EACtC,6BAEA,gCAoTb,CAAA,IAAA,0BA3S0Bq9B,MAAAA,SAAAA,GAGjB,IAFC37B,IAAAA,EAAS,GACTg6B,EAAgB,KAAKA,cAClB37B,EAAI,EAAGA,EAAI27B,EAAc17B,OAAQD,IACxC2B,EAAOI,KAAK,KAAK+5B,gBAAgB97B,GAAGgqD,UAAU1sB,EAAKt9B,KAE9C2B,OAAAA,EAAOk0B,KAAK,MAqSvB,CAAA,IAAA,kBA9RoB,MAAA,WACZo0B,IAAAA,EACI,OAAA,KAAKrzB,YACN,IAAA,WACHqzB,EAA0B,oBAC1B,MACG,IAAA,WACHA,EAA0B,oBAC1B,MACG,IAAA,WACHA,EAA0B,oBAC1B,MACG,IAAA,iBACA,IAAA,QACA,IAAA,SACA,IAAA,UACHA,EAA0B,qBAC1B,MACF,QACM,IAAA,KAAKnvB,UAGD,MAAA,IAAI5qB,MAAoC,6BAAA,OAAA,KAAK0mB,WAAnD,MAFAqzB,EAA0B,qBAM1BtoD,IAAAA,EAAS,GACT+6B,EAAa,KAAKA,WACpBA,GAAe,OAAfA,EAAqB,CACvB/6B,EAAOI,KACLkoD,EACA,uCAEG,IAAA,IAAIjqD,EAAI,EAAGA,EAAI08B,EAAWz8B,OAAQD,IAAK,CACpC89B,IAAAA,EAAYpB,EAAW18B,GAC7B2B,EAAOI,KACoB,YAAzB+7B,EAAUlH,WACckH,uBAAAA,OAAAA,EAAUt5B,KACRs5B,QAAAA,yBAAAA,OAAAA,EAAUt5B,KAHtC,UAIwBxE,qBAAAA,OAAAA,EAAI,EAAqBA,mBAAAA,OAAAA,EAAI,UAIvD2B,EAAOI,KACL,iBACAkoD,GAIG/4B,OAAAA,EAAMgF,cAAcv0B,GAAU,KAAK6xC,mBA6O9C,CAAA,IAAA,yBA1O2B,MAAA,WAChBtiB,OAAAA,EAAMgF,cAAc,CACzB,4CACA,aACA,4BAsON,CAAA,IAAA,4BAlO8B,MAAA,WAClB,OAAA,KAAKU,YACN,IAAA,iBACA,IAAA,SACA,IAAA,UACA,IAAA,QACI,OAAA,KAAKszB,kCACV,KAAKC,qCACT,QACQ,MAAA,IAAIj6C,MAAkD,4CAAA,OAAA,KAAK0mB,WAAjE,mBAyNR,CAAA,IAAA,kCAlNoC,MAAA,WACzB1F,OAAAA,EAAMgF,cAAc,CACzB,4CACA,aACa,aAAA,OAAA,KAAKsF,iBAAmB,iBAAmB,WAHnD,sBAiNX,CAAA,IAAA,qCAvMuC,MAAA,WAC7B75B,IAAAA,EAAS,GACX,IAAC,KAAK+6B,WAAY,MAAO,GACxB,IAAA,IAAI18B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAAK,CAElB,YADX,KAAK08B,WAAW18B,GACpB42B,WACZj1B,EAAOI,KACI/B,SAAAA,OAAAA,EAAI,EAAO,OAAA,OAAA,KAAKw7B,iBAAmB,iBAAmB,WAAoC,2BAAA,OAAA,KAAKkB,WAAW18B,GAAGwE,KADxH,OAIA7C,EAAOI,KACI/B,SAAAA,OAAAA,EAAI,EAAO,OAAA,OAAA,KAAKw7B,iBAAmB,iBAAmB,WAA8B,qBAAA,OAAA,KAAKkB,WAAW18B,GAAGwE,KADlH,MAKG0sB,OAAAA,EAAMgF,cAAcv0B,KAwL/B,CAAA,IAAA,qCArLuC,MAAA,WAC7BA,IAAAA,EAAS,CACb,gBAGM,OAAA,KAAKi1B,YACN,IAAA,SACA,IAAA,UACA,IAAA,QAEE,IADCwzB,IAAAA,EAAW,CAAC,IAAK,IAAK,IAAK,KACxBpqD,EAAI,EAAGA,EAAIoqD,EAASnqD,OAAQD,IAAK,CAClCqqD,IAAAA,EAAUD,EAASpqD,GACpBsqD,KAAAA,yCAAyC3oD,EAAQ0oD,GACjDE,KAAAA,4CAA4C5oD,EAAQ0oD,GACrDrqD,EAAI,EAAIoqD,EAASnqD,QACnB0B,EAAOI,KAAK,gBAGhB,MACF,QACQ,MAAA,IAAImO,MAAoD,8CAAA,OAAA,KAAK0mB,WAAnE,eAGG1F,OAAAA,EAAMgF,cAAcv0B,KA8J/B,CAAA,IAAA,2CA3J2CA,MAAAA,SAAAA,EAAQ0oD,GAC/C1oD,EAAOI,KACL,4CACA,aACWsoD,WAAAA,OAAAA,EAHb,sBA0JJ,CAAA,IAAA,8CAnJ8C1oD,MAAAA,SAAAA,EAAQ0oD,GAC9C,IAAC,KAAK3tB,WAAY,OAAO/6B,EACxB,IAAA,IAAI3B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,OAAQD,IAAK,CACzC89B,IAAAA,EAAY,KAAKpB,WAAW18B,GACL,YAAzB89B,EAAUlH,WACZj1B,EAAOI,KACI/B,SAAAA,OAAAA,EAAI,EAAKqqD,KAAAA,OAAAA,EAAmCvsB,6BAAAA,OAAAA,EAAUt5B,KADjE,MAIA7C,EAAOI,KACI/B,SAAAA,OAAAA,EAAI,EAAKqqD,KAAAA,OAAAA,EAA6BvsB,uBAAAA,OAAAA,EAAUt5B,UAyInE,CAAA,IAAA,mCAnIqC,MAAA,WAC1B,MAAA,CACL,4CACA,aACA,+BA+HN,CAAA,IAAA,sCA3HwC,MAAA,WAC9B7C,IAAAA,EAAS,GACX,IAAC,KAAK+6B,WAAY,OAAO/6B,EACxB,IAAA,IAAI3B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAAG,CACzC89B,IAAAA,EAAY,KAAKpB,WAAW18B,GACL,YAAzB89B,EAAUlH,WACZj1B,EAAOI,KACI/B,SAAAA,OAAAA,EAAI,EAAgC89B,gCAAAA,OAAAA,EAAUt5B,KADzD,MAIA7C,EAAOI,KACI/B,SAAAA,OAAAA,EAAI,EAA0B89B,0BAAAA,OAAAA,EAAUt5B,OAIhD7C,OAAAA,IA4GX,CAAA,IAAA,mCAzGqC,MAAA,WAC1B,MAAA,CACL,4CACA,aACA,+BACA,kCAoGN,CAAA,IAAA,sCAhGwC,MAAA,WAC9BA,IAAAA,EAAS,GACX,IAAC,KAAK+6B,WAAY,OAAO/6B,EACxB,IAAA,IAAI3B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAAG,CACzC89B,IAAAA,EAAY,KAAKpB,WAAW18B,GAClC2B,EAAOI,KACI/B,SAAAA,OAAAA,EAAI,EAA0B89B,0BAAAA,OAAAA,EAAUt5B,KACxCxE,OAAAA,SAAAA,OAAAA,EAAI,EAA0B89B,0BAAAA,OAAAA,EAAUt5B,KAFnD,QAKK7C,OAAAA,IAsFX,CAAA,IAAA,mCAnFqC,MAAA,WAC1B,MAAA,CACL,4CACA,aACA,+BACA,+BACA,kCA6EN,CAAA,IAAA,sCAzEwC,MAAA,WAC9BA,IAAAA,EAAS,GACX,IAAC,KAAK+6B,WAAY,OAAO/6B,EACxB,IAAA,IAAI3B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAAG,CACzC89B,IAAAA,EAAY,KAAKpB,WAAW18B,GAClC2B,EAAOI,KACI/B,SAAAA,OAAAA,EAAI,EAA0B89B,0BAAAA,OAAAA,EAAUt5B,KACxCxE,OAAAA,SAAAA,OAAAA,EAAI,EAA0B89B,0BAAAA,OAAAA,EAAUt5B,KACxCxE,OAAAA,SAAAA,OAAAA,EAAI,EAA0B89B,0BAAAA,OAAAA,EAAUt5B,KAHnD,QAMK7C,OAAAA,IA8DX,CAAA,IAAA,mCA3DqC,MAAA,WAC1B,MAAA,CACL,4CACA,aACA,4BAuDN,CAAA,IAAA,sCAnDwC,MAAA,WAC9BA,IAAAA,EAAS,GACX,IAAC,KAAK+6B,WAAY,OAAO/6B,EACxB,IAAA,IAAI3B,EAAI,EAAGA,EAAI,KAAK08B,WAAWz8B,SAAUD,EAC5C2B,EAAOI,KACI/B,SAAAA,OAAAA,EAAI,EAAuB,uBAAA,OAAA,KAAK08B,WAAW18B,GAAGwE,OAGpD7C,OAAAA,IA2CX,CAAA,IAAA,oBAhCoB27B,MAAAA,SAAAA,GACZ,OAAgC,OAAhC,KAAKoW,uBACA,KAAKA,uBAEP,KAAKA,uBAAyB,KAAKgX,iBAAiB,KAAKhqD,YAAYg6C,eAAgB,KAAKiQ,0BAA0BrtB,MA4B/H,CAAA,IAAA,kBAnBkBA,MAAAA,SAAAA,GACV,OAA8B,OAA9B,KAAKqW,qBACA,KAAKA,qBAEP,KAAKA,qBAAuB,KAAKjzC,YAAYi6C,eAexD,CAAA,IAAA,oBAZsB,MAAA,WACbkH,KAAAA,WAAW6L,uBAAyB,KACpC7L,KAAAA,WAAWoB,yBAA2B,OAU/C,CAAA,IAAA,SAPW,MAAA,WACD3S,IAAAA,EAAN,EAAA,EAAA,EAAA,WAAA,SAAA,MAAA,KAAA,MAEOA,OADPA,EAAK9R,cAAgBF,EAAgByP,WAAW,KAAMyd,GAAoB3rD,SACnEywC,KAIX,CAAA,CAAA,IAAA,qBAzoB8B,MAAA,WACF,oBAAb5C,SACTqG,EAAarG,SAASC,cAAc,UACA,oBAApBC,kBAChBmG,EAAa,IAAInG,gBAAgB,EAAG,IAEjCmG,IACLD,EAAcC,EAAWlG,WAAW,YACfiG,EAAYpD,eACjC8Q,EAAiB,CACfkM,uBAAwB5Z,EAAYpD,aAAa,0BACjDuS,yBAA0BnP,EAAYpD,aAAa,6BAErDpD,EAAW,KAAK8V,iBA4nBpB,CAAA,IAAA,iBAznBwBz0C,MAAAA,SAAAA,GAEhB,MAAkC,oBAA3Bo/C,wBACFp/C,aAAmBo/C,yBAsnBhC,CAAA,IAAA,cAjnBuB,MAAA,WACZ5uD,OAAAA,OAAOilC,OAAO,CACnBof,YAAa,KAAKC,iBAClBhW,0BAA2B,KAAKiW,+BAChClW,WAAW,EACXmW,gBAAgB,EAChBE,aAAc,KAAKC,sBA2mBzB,CAAA,IAAA,oBAvmB6B,MAAA,WAClB,OAAA,IAsmBX,CAAA,IAAA,+BAnmBwC,MAAA,WACpC,OAAA,EAAA,EAAA,GAAA,+BAAA,MAAA,KAAA,QAkmBJ,CAAA,IAAA,kBA/lB2B,MAAA,WAChBhQ,OAAAA,EAAYiQ,aAAajQ,EAAYka,oBA8lBhD,CAAA,IAAA,wBA3lB+B7gD,MAAAA,SAAAA,EAAM+zC,EAASl/C,EAAWtE,GAC9C0jD,OAAAA,EAAsBj0C,EAAM+zC,EAASl/C,EAAWtE,KA0lB3D,CAAA,IAAA,cAlpB2B,IAAA,WACnB6jD,OAAgB,OAAhBA,EACKA,GAEJ0C,KAAAA,qBACL1C,EAAc,KAAK2C,eAAepQ,MA6oBtC,CAAA,IAAA,aAvlB0B,IAAA,WACfC,OAAAA,IAslBX,CAAA,IAAA,cAnlB2B,IAAA,WAChBD,OAAAA,IAklBX,CAAA,IAAA,WA3kBwB,IAAA,WACbxG,OAAAA,IA0kBX,CAAA,IAAA,iBAvkB8B,IAAA,WACnBoN,OAAAA,IAskBX,CAAA,IAAA,eApkB4B,IAAA,WACjBC,OAAAA,MAmkBX,EAAA,GAAAt9C,OAAOC,QAAU,CACfmwD,aAAAA;;AC1qBgB1vD,IAAAA,EAAAA,QAAQ,WAAlBmzB,EAAAA,EAAAA,MAOR,SAAS+8B,EAAkBr8B,GACrByR,IAAAA,EAAM,WAyBDA,OAxBPzR,EAAOoiB,MAAMzuB,MAAMqM,EAAQnS,YAEzB4jB,EADEzR,EAAOijB,cACH,WAEAjjB,OADJA,EAAOyR,IAAI9d,MAAMqM,EAAQnS,WACrBmS,EAAOuwB,kBACTvwB,EAAOuwB,kBAAmB,EACnBvwB,EAAOwwB,sBAAsB3iC,UAAWmS,IAE1CA,EAAOijB,iBAEPjjB,EAAO0hB,aACV,WAEA1hB,OADJA,EAAOyR,IAAI9d,MAAMqM,EAAQnS,WACrBmS,EAAOuwB,kBACTvwB,EAAOuwB,kBAAmB,EACnBvwB,EAAOwwB,sBAAsB3iC,UAAWmS,IAE1CA,EAAO0hB,gBAGV,WACG1hB,OAAAA,EAAOyR,IAAI9d,MAAMqM,EAAQnS,aAGzB8F,MAAMqM,EAAQnS,YAErByuC,EAAW,WACR7qB,OAAAA,EAAI9d,MAAMqM,EAAQnS,YAuBpByuC,OAjBPA,EAAS7iD,KAAO,WAAW,IAAA,EAAA,KAAA,EAAA,UAClB,OAAA,IAAI8iD,QAAQ,SAACC,EAAQC,GACtB,IACFD,EAAO/qB,EAAI9d,MAAM,EAAM9F,IACvB,MAAO+O,GACP6/B,EAAO7/B,OAIb0/B,EAASI,cAAgB,SAASC,GAEhCC,EADA58B,EAAS28B,EACoBL,GAC7BA,EAASt8B,OAASA,GAGpB48B,EAAqB58B,EAAQs8B,GAC7BA,EAASt8B,OAASA,EACXs8B,EAGT,SAASM,EAAqB58B,EAAQs8B,GAE/B,IADCrzC,IAAAA,EAAaqW,EAAM4E,gBAAgBlE,GAChC5xB,EAAAA,SAAAA,GACDqf,IAAAA,EAAWxE,EAAW7a,GACxBqf,GAAgB,MAAhBA,EAAS,IAA8B,MAAhBA,EAAS,GAAY,MAAA,WAChB,mBAArBuS,EAAOvS,GACiB,QAA7BA,EAAS8T,UAAU,EAAG,IAA6C,QAA7B9T,EAAS8T,UAAU,EAAG,GAC9D+6B,EAAS7uC,GAAY,WAEZ6uC,OADPt8B,EAAOvS,GAAUkG,MAAMqM,EAAQnS,WACxByuC,GAGQ,aAAb7uC,EACF6uC,EAASnkD,SAAW,WACX6nB,OAAAA,EAAO7nB,SAASwb,MAAMqM,EAAQnS,YAGvCyuC,EAAS7uC,GAAYuS,EAAOvS,GAAUqvB,KAAK9c,IAI/Cs8B,EAASO,iBAAiBpvC,EAAU,WAC3BuS,OAAAA,EAAOvS,KAEhB6uC,EAASQ,iBAAiBrvC,EAAU,SAAC3hB,GACnCk0B,EAAOvS,GAAY3hB,MAvBhBsC,EAAI,EAAGA,EAAI6a,EAAW5a,OAAQD,IAA9BA,EAAAA,GA4BX3C,OAAOC,QAAU,CACf2wD,kBAAAA;;ACmdF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAhjBoBlwD,IAAAA,EAAAA,QAAQ,eAApB4wD,EAAAA,EAAAA,QACU5wD,EAAAA,QAAQ,WAAlBmzB,EAAAA,EAAAA,MACcnzB,EAAAA,QAAQ,wBAAtBkvC,EAAAA,EAAAA,UACqBlvC,EAAAA,QAAQ,gCAA7BotD,EAAAA,EAAAA,iBACiBptD,EAAAA,QAAQ,4BAAzB0vD,EAAAA,EAAAA,aACgB1vD,EAAAA,QAAQ,2BAAxB4jD,EAAAA,EAAAA,YACsB5jD,EAAAA,QAAQ,yBAA9BkwD,EAAAA,EAAAA,kBAOFW,EAAc,CAACzD,EAAkBsC,EAAc9L,GAM/CkN,EAAc,CAAC,MAAO,OAEtBC,EAAkB,CACR3D,WAAAA,EACJsC,OAAAA,EACD9L,MAAAA,GAGPhlB,GAAW,EAKT5C,EAghBN,WApccvI,SAAAA,EAAAA,GASN,GATgB,EAAA,KAAA,GACpBA,EAAWA,GAAY,GAClB8J,KAAAA,OAAS9J,EAAS8J,QAAU,KAC5B3sB,KAAAA,QAAU6iB,EAAS7iB,SAAW,KAC9BkrB,KAAAA,KAAOrI,EAASqI,KAChB0B,KAAAA,OAAS,KACTwzB,KAAAA,QAAU,GACVvyB,KAAAA,UAAY,GACZC,KAAAA,gBAAkB,GACL,QAAd,KAAK5C,KAAL,CAGArI,GAFCw9B,KAAAA,eAEDx9B,EAASgL,UACN,IAAA,IAAIx8B,EAAI,EAAGA,EAAIwxB,EAASgL,UAAUv8B,OAAQD,IACxCivD,KAAAA,YAAYz9B,EAASgL,UAAUx8B,IAKpCwxB,GAAAA,EAASiL,gBACN,IAAA,IAAM7xB,KAAK4mB,EAASiL,gBAClByyB,KAAAA,kBAAkBtkD,EAAG4mB,EAASiL,gBAAgB7xB,KA+a3D,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,oBA/gB6B,MAAA,WACzB+xB,GAAW,IA8gBf,CAAA,IAAA,mBA3gB4B,MAAA,WACxBA,GAAW,IA0gBf,CAAA,IAAA,iBAvgB8B,IAAA,WACnBiyB,OAAAA,EAAYtK,KAAK,SAAA/oB,GAAUA,OAAAA,EAAOgmB,gBAsgB7C,CAAA,IAAA,uBA/foC,IAAA,WACzBqN,OAAAA,EAAYtK,KAAK,SAAA/oB,GAAUA,OAAAA,EAAOgmB,aAAehmB,EAAO+R,SAASE,cA8f5E,CAAA,IAAA,6BAxf0C,IAAA,WAC9B,MAAkB,oBAAX2hB,QAAqD,oBAApBvhB,iBAA6D,oBAAlBwhB,gBAuf/F,CAAA,IAAA,mBAjfgC,IAAA,WACrBzN,OAAAA,EAAYJ,cAgfvB,CAAA,IAAA,oBA1eiC,IAAA,WACtBkM,OAAAA,EAAalM,cAyexB,CAAA,IAAA,wBAneqC,IAAA,WAC1B4J,OAAAA,EAAiB5J,cAke5B,CAAA,IAAA,oBA3diC,IAAA,WACtB,MAA6B,oBAAtB8N,oBA0dlB,CAAA,IAAA,+BApd4C,IAAA,WACjC5B,OAAAA,EAAalM,cAmdxB,CAAA,IAAA,6BA5c0C,IAAA,WAC/BqN,OAAAA,EAAYtK,KAAK,SAAA/oB,GAAUA,OAAAA,EAAOgmB,aAAehmB,EAAO+R,SAASkW,aAAejoB,EAAO+R,SAASqW,qBA2c3G,EAAA,EAAA,CAAA,CAAA,IAAA,eAvaiB,MAAA,WACT,IAAA,KAAKpoB,OAAL,CAEAA,IAAAA,EAAS,KAET,GAAA,KAAK5sB,QAAS,CACX,IAAA,IAAI3O,EAAI,EAAGA,EAAI4uD,EAAY3uD,OAAQD,IAAK,CACrCsvD,IAAAA,EAAiBV,EAAY5uD,GAC/BsvD,GAAAA,EAAepL,eAAe,KAAKv1C,SAAU,CAC3C,IAAC2gD,EAAe/N,YACZ,MAAA,IAAIrxC,MAAqBo/C,eAAAA,OAAAA,EAAe9qD,KAA9C,mBAEF+2B,EAAS+zB,EACT,OAGA/zB,GAAW,OAAXA,EACI,MAAA,IAAIrrB,MAAM,wBAEb,GAAI,KAAK2pB,KAAM,CAChB,GAAA,KAAKA,QAAQi1B,EACVnyB,IAAYmyB,EAAgB,KAAKj1B,MAAM0nB,cAC1ChmB,EAASuzB,EAAgB,KAAKj1B,YAE3B,GAAkB,QAAd,KAAKA,MACT,IAAA,IAAI75B,EAAI,EAAGA,EAAI4uD,EAAY3uD,OAAQD,IAClC4uD,GAAAA,EAAY5uD,GAAGuhD,YAAa,CAC9BhmB,EAASqzB,EAAY5uD,GACrB,WAGmB,QAAd,KAAK65B,OACd0B,EAAS0R,GAEP,IAAC1R,EACG,MAAA,IAAIrrB,MAA8B,wBAAA,OAAA,KAAK2pB,KAA7C,+BAEG,CACA,IAAA,IAAI75B,EAAI,EAAGA,EAAI4uD,EAAY3uD,OAAQD,IAClC4uD,GAAAA,EAAY5uD,GAAGuhD,YAAa,CAC9BhmB,EAASqzB,EAAY5uD,GACrB,MAGCu7B,IACHA,EAAS0R,GAIR,KAAKpT,OACHA,KAAAA,KAAO0B,EAAO1B,MAEhB0B,KAAAA,OAASA,KAmXlB,CAAA,IAAA,eA1WehyB,MAAAA,SAAAA,EAAQioB,GACf,QAAkB,IAAXjoB,EACH,MAAA,IAAI2G,MAAM,4BAEd,GAAkB,WAAlB,EAAO3G,KAAwB2nB,EAAMwB,WAAWnpB,IAA6B,iBAAXA,EAC9D,MAAA,IAAI2G,MAAM,mCAGd,GAAc,QAAd,KAAK2pB,KAAgB,CACjB01B,IAAAA,EAAYZ,EAAQplD,EAAQimD,EAAsCh+B,IAEjE+9B,OADFR,KAAAA,QAAQhtD,KAAKwtD,GACXA,EAGThmD,EAA2B,mBAAXA,EAAwBA,EAAOQ,WAAaR,EACtDkmD,IAAAA,EAAoB,GACpBC,EAAeF,EAAsCh+B,IAAa,GAM/DkK,SAAAA,EAAkB4B,GACnBqyB,IAAAA,EAAiB,IAAI1iB,EAAU1jC,EAAQ,CAC3CmtB,cAAek5B,EAAUl5B,cACzByF,cAAeyzB,EAAUzzB,cACzBrB,UAAW80B,EAAU90B,UACrBmB,kBAAmB2zB,EAAU3zB,kBAC7BC,UAAW0zB,EAAU1zB,UACrBI,cAAeszB,EAAUtzB,cACzBuzB,gBAAiBD,EAAUvzB,iBAC3B1K,OAAQi+B,EAAUj+B,OAClB3vB,UAAW4tD,EAAU5tD,UACrB66B,SAAU+yB,EAAU/yB,SACpBD,UAAWgzB,EAAUhzB,UACrB3I,oBAAqB27B,EAAU37B,oBAC/B+I,2BAA4B4yB,EAAU5yB,2BACtCR,UAAWozB,EAAUpzB,UACrBC,gBAAiBmzB,EAAUnzB,gBAC3BC,WAAYkzB,EAAUlzB,WACtBhJ,eAAgBk8B,EAAUl8B,eAC1BsI,MAAO4zB,EAAU5zB,MACjBiB,aAAc2yB,EAAU3yB,eAE1B0yB,EAAe3b,MAAMzuB,MAAMoqC,EAAgBryB,GACrC37B,IAAAA,EAASguD,EAAetsB,IAAI9d,MAAMoqC,EAAgBryB,GAEjD37B,OADPiuD,EAAUtB,cAAcqB,GACjBhuD,EA7BL6vB,GAA8C,WAAlC,EAAOA,EAASkF,iBAC9Bg5B,EAAah5B,cAAgBv3B,OAAO0B,KAAK2wB,EAASkF,eAAeC,IAAI,SAAAkJ,GAAgBrO,OAAAA,EAASkF,cAAcmJ,MAmGxGiwB,IAAAA,EAAiB3wD,OAAOC,OAAO,CACnCuP,QAAS,KAAKA,QACd2sB,OAAQ,KAAKA,OACbkB,UAAW,KAAKA,UAChBC,gBAAiB,KAAKA,gBACtB3C,IAAK,KACL6C,SAAAA,EACAjB,kBAAAA,EACA0mB,sBA5EOA,SAAAA,EAAsB9kB,EAAM1L,GAE9B,IADC8E,IAAAA,EAAgB,IAAI/1B,MAAM28B,EAAKr9B,QAC5BD,EAAI,EAAGA,EAAIs9B,EAAKr9B,OAAQD,IAAK,CAC9Bw9B,IAAAA,EAAMF,EAAKt9B,GACXmN,EAAOykB,EAAO8E,cAAc12B,GAC9Bw9B,GAAAA,EAAIrwB,KACNupB,EAAc12B,GAAKw9B,EAAIrwB,UAEfA,OAAAA,GACD,IAAA,SACA,IAAA,UACA,IAAA,QACA,IAAA,kBACHupB,EAAc12B,GAAKkxB,EAAMuC,gBAAgB+J,GACzC,MACF,QACE9G,EAAc12B,GAAKmN,GAIrBq4B,IAAAA,EAAY9O,EAAcb,KAAK,KAC/Bk6B,EAAiBN,EAAkBjqB,GACrCuqB,GAAAA,EAEEA,OADJA,EAAe1sB,IAAI9d,MAAMwqC,EAAgBzyB,GACrCyyB,EAAelb,cACVkb,EAAelb,gBAEfkb,EAAezc,eAIpB0c,IAAAA,EAAYP,EAAkBjqB,GAAa,IAAI5T,EAAOlxB,YAAY6I,EAAQ,CAC9EmtB,cAAAA,EACAyF,cAAevK,EAAOuK,cACtBrB,UAAWlJ,EAAOkJ,UAClBmB,kBAAmBrK,EAAOqK,kBAC1BC,UAAWtK,EAAOsK,UAClBI,cAAe1K,EAAO0K,cACtBuzB,gBAAiBj+B,EAAOyK,iBACxB1tB,QAASijB,EAAOjjB,QAChB2sB,OAAQ1J,EAAO0J,OACf3J,OAAQC,EAAOD,OACf3vB,UAAW4vB,EAAO5vB,UAClB66B,SAAUjL,EAAOiL,SACjBD,UAAWhL,EAAOgL,UAClB3I,oBAAqBrC,EAAOqC,oBAC5B+I,2BAA4BpL,EAAOoL,2BACnCR,UAAW5K,EAAO4K,UAClBC,gBAAiB7K,EAAO6K,gBACxBC,WAAY9K,EAAO8K,WACnBhJ,eAAgB9B,EAAO8B,eACvBsI,MAAOpK,EAAOoK,MACdlC,IAAKlI,EAAOkI,IACZ6C,SAAAA,EACAM,aAAcrL,EAAOqL,aACrBrG,WAAYhF,EAAOgF,WACnB8E,kBAAAA,EACA0mB,sBAAAA,IAKE4N,OAHJA,EAAUhc,MAAMzuB,MAAMyqC,EAAW1yB,GACjC0yB,EAAU3sB,IAAI9d,MAAMyqC,EAAW1yB,GAC/BsyB,EAAUtB,cAAc0B,GACpBA,EAAUnb,cACLmb,EAAUnb,gBAEVmb,EAAU1c,iBAYlBoc,GAEGE,EAAY3B,EAAkB,IAAI,KAAK1yB,OAAOhyB,EAAQumD,IAcrDF,OAXF,KAAKt0B,SACHA,KAAAA,OAASs0B,EAAUt0B,QAIrB,KAAK3sB,UACHA,KAAAA,QAAUihD,EAAUjhD,SAGtBogD,KAAAA,QAAQhtD,KAAK6tD,GAEXA,IA2NX,CAAA,IAAA,kBA1LoB,MAAA,WACZ/8B,IAAAA,EACArB,EAQA,GAP2C,mBAApC/R,UAAUA,UAAUxf,OAAS,IACtC4yB,EAAKpT,UAAUA,UAAUxf,OAAS,GAClCuxB,EAAW/R,UAAUA,UAAUxf,OAAS,IAExC4yB,EAAKpT,UAAUA,UAAUxf,OAAS,GAGlB,QAAd,KAAK45B,QACF,KAAK0B,OAAOgmB,cAAgB,KAAKhmB,OAAO+R,SAASE,YAChD,KAAK3T,MAAQg1B,EAAYrsC,QAAQ,KAAKqX,MAAQ,EAC1C,MAAA,IAAI3pB,MAAoC,8BAAA,OAAA,KAAKqrB,OAAO/2B,OAK1DkrD,IAAAA,EAAeF,EAAsCh+B,GAMvD7wB,GAJA6wB,GAA8C,WAAlC,EAAOA,EAASkF,iBAC9Bg5B,EAAah5B,cAAgBv3B,OAAO0B,KAAK2wB,EAASkF,eAAeC,IAAI,SAAAkJ,GAAgBrO,OAAAA,EAASkF,cAAcmJ,MAG1Gl/B,MAAMyJ,QAAQqV,UAAU,IAAK,CAC/BiwC,EAAahzB,WAAa,GAErB,IADCF,IAAAA,EAAY/c,UAAU,GACnBzf,EAAI,EAAGA,EAAIw8B,EAAUv8B,OAAQD,IAAK,CACnCuJ,IAAAA,EAASizB,EAAUx8B,GAAG+J,WACtBvF,EAAO0sB,EAAM6B,0BAA0BxpB,GAC7CmmD,EAAahzB,WAAW36B,KAAK,CAC3ByC,KAAAA,EACA+E,OAAAA,EACA8V,SAAUrf,SAGT,CACL0vD,EAAahzB,WAAa,GACpBF,IAAAA,EAAY/c,UAAU,GACvB,IAAA,IAAI7U,KAAK4xB,EACR,GAACA,EAAU1yB,eAAec,GAA1B,CACErB,IAAAA,EAASizB,EAAU5xB,GAAGb,WACtBvF,EAAO0sB,EAAM6B,0BAA0BxpB,GAC7CmmD,EAAahzB,WAAW36B,KAAK,CAC3ByC,KAAMA,GAAQoG,EACdrB,OAAAA,EACA8V,SAAUzU,KAMTgnB,OAFQ,KAAKqI,aAAapH,EAAI68B,KAwIzC,CAAA,IAAA,iBA9GmB,MAAA,WACTO,IAAAA,EAAcxwC,UAAU,GACxB8tB,EAAiB9tB,UAAUA,UAAUxf,OAAS,GAChDgwD,GAAwC,QAAxCA,EAAYr+B,OAAOlxB,YAAYm5B,KAAgB,OAAO0T,EAIrD,IAHCjS,IAAAA,EAAS7b,UAAU,GAAG6b,OACtB3sB,EAAU8Q,UAAU,GAAG9Q,QACvBnR,EAAMiiB,UAAUxf,OAAS,EACtBD,EAAI,EAAGA,EAAIxC,EAAKwC,IACvByf,UAAUzf,GACPkwD,UAAU50B,GACV60B,WAAWxhD,GACXyhD,aAAY,GAGV,OAAA,WACC3+B,IAAAA,EAAU8b,EAAehoB,MAAM,KAAM9F,WACvCgS,OAAAA,EAAQ8lB,QACH9lB,EAAQ8lB,UAEV9lB,KA2Fb,CAAA,IAAA,cAjFcloB,MAAAA,SAAAA,EAAQioB,GAEX,OADFgL,KAAAA,UAAUz6B,KAAKmvB,EAAMsF,oBAAoBjtB,EAAQioB,IAC/C,OA+EX,CAAA,IAAA,oBArEoBhtB,MAAAA,SAAAA,EAAM+E,EAAQioB,GAC1B,GAAA,KAAKu9B,QAAQ9uD,OAAS,EAClB,MAAA,IAAIiQ,MAAM,0EAElBshB,EAAWA,GAAY,GACkB,IAAA,EAAA,KAAK+J,OAAO80B,wBAAwB9mD,IAAW,GAAhFmtB,EAAAA,EAAAA,cAAeiF,EAAAA,EAAAA,cAShB,OARFc,KAAAA,gBAAgB16B,KAAK,CACxByC,KAAAA,EACA+E,OAAAA,EACAioB,SAAAA,EACAkF,cAAAA,EACAiF,cAAAA,EACA/E,WAAYpF,EAASoF,YAAc,KAAK2E,OAAO+0B,yBAAyB/mD,KAEnE,OAuDX,CAAA,IAAA,UAjDY,MAAA,WAAA,IAAA,EAAA,KACH,KAAKwlD,SAGVwB,WAAW,WACJ,IAAA,IAAIvwD,EAAI,EAAGA,EAAI,EAAK+uD,QAAQ9uD,OAAQD,IACvC,EAAK+uD,QAAQ/uD,GAAGq7B,SAAQ,GAGtB40B,IAAAA,EAAc,EAAKlB,QAAQ,GAC3BkB,IAEEA,EAAYr+B,SACdq+B,EAAcA,EAAYr+B,QAExBq+B,EAAYvvD,YAAY8vD,gBAC1BP,EAAYvvD,YAAY8vD,eAAe,EAAK7hD,WAG/C,OA8BP,EAAA,GAzBA,SAAS6gD,EAAsCh+B,GACzC,IAACA,EACI,MAAA,GAEHi/B,IAAAA,EAAmBtxD,OAAOC,OAAO,GAAIoyB,GAkBpCi/B,OAhBHj/B,EAAS1nB,eAAe,iBAC1BonB,EAAMiF,eAAe,UAAW,cAAe,aAC/Cs6B,EAAiBzuD,UAAYwvB,EAASk/B,YAAc,SAAW,YAE7Dl/B,EAAS1nB,eAAe,qBAC1BonB,EAAMiF,eAAe,UAAW,kBAAmB,YACnDs6B,EAAiB5zB,SAAWjJ,QAAQpC,EAASm/B,kBAE3Cn/B,EAAS1nB,eAAe,qBAC1BonB,EAAMiF,eAAe,UAAW,kBAAmB,aACnDs6B,EAAiB7zB,UAAYhJ,QAAQpC,EAASo/B,kBAE5Cp/B,EAAS1nB,eAAe,mBAC1BonB,EAAMiF,eAAe,UAAW,gBAAiB,uBACjDs6B,EAAiBx8B,oBAAsBL,QAAQpC,EAASqiB,gBAEnD4c,EAGTpzD,OAAOC,QAAU,CACfy8B,IAAAA,EACA60B,YAAAA,EACAC,YAAAA;;ACnjBgB9wD,IAAAA,EAAAA,QAAQ,WAAlBmzB,EAAAA,EAAAA,MAQR,SAAS2/B,EAAMrsD,EAAM+E,GACbunD,IAAAA,EAAWvnD,EAAOQ,WACjB,OAAA,IAAI0kC,SAA6BjqC,mBAAAA,OAAAA,EAAW0sB,MAAAA,OAAAA,EAAMkC,2BAA2B09B,GAAUj7B,KAAK,MAChG3E,WAAAA,OAAAA,EAAMgC,0BAA0B49B,GADnC,OAAO,GAKTzzD,OAAOC,QAAU,CACfuzD,MAAAA;;AChBc9yD,IAAAA,EAAAA,QAAQ,SAAhBg8B,EAAAA,EAAAA,IACUh8B,EAAAA,QAAQ,WAAlB8yD,EAAAA,EAAAA,MACU9yD,EAAAA,QAAQ,WAAlBmzB,EAAAA,EAAAA,MACiBnzB,EAAAA,QAAQ,WAAzB2yB,EAAAA,EAAAA,MAAOzlB,EAAAA,EAAAA,MACKlN,EAAAA,QAAQ,aAApBwzB,EAAAA,EAAAA,QACoBxzB,EAAAA,QAAQ,8BAA5BugC,EAAAA,EAAAA,gBACiBvgC,EAAAA,QAAQ,2BAAzBkhC,EAAAA,EAAAA,aACoBlhC,EAAAA,QAAQ,+BAA5BmsC,EAAAA,EAAAA,gBACcnsC,EAAAA,QAAQ,wBAAtBkvC,EAAAA,EAAAA,UAEqBlvC,EAAAA,QAAQ,gCAA7BotD,EAAAA,EAAAA,iBAEsBptD,EAAAA,QAAQ,kCAA9Bw6C,EAAAA,EAAAA,kBACgBx6C,EAAAA,QAAQ,2BAAxB4jD,EAAAA,EAAAA,YAEuB5jD,EAAAA,QAAQ,mCAA/BytD,EAAAA,EAAAA,mBACiBztD,EAAAA,QAAQ,4BAAzB0vD,EAAAA,EAAAA,aAEa1vD,EAAAA,QAAQ,uBAArBm1C,EAAAA,EAAAA,SAEWn1C,EAAAA,QAAQ,oBAAnBw9B,EAAAA,EAAAA,OAERl+B,OAAOC,QAAU,CACfuzD,MAAAA,EACA3mB,gBAAAA,EACA+C,UAAAA,EACAlT,IAAAA,EACAuE,gBAAAA,EACAW,aAAAA,EACAksB,iBAAAA,EACAz6B,MAAAA,EACAzlB,MAAAA,EACAsmB,QAAAA,EACAL,MAAAA,EACAs6B,mBAAAA,EACAiC,aAAAA,EACAlV,kBAAAA,EACAoJ,YAAAA,EACAzO,SAAAA,EACA3X,OAAAA;;ACvCcx9B,IAAAA,EAAAA,QAAQ,UAAhBg8B,EAAAA,EAAAA,IAEJg3B,EAAc,KAElB,SAASC,EAAMtzD,GACbqzD,EAAcrzD,EAGhB,SAASuzD,IACHF,GACFA,EAAY11B,UAEd01B,EAAc,KAGhB,SAASG,EAAWr+B,EAAIrB,GAIlBA,OAHgB,OAAhBu/B,GACFC,EAAM,IAAIj3B,EAAI,CAAEF,KAAM,SAEpBrI,EAAS1nB,eAAe,OACnBinD,EACJI,gBAAgB3/B,EAASmF,IAAK9D,EAAIrB,GAClC4+B,aAAY,GAEVW,EACJ92B,aAAapH,EAAIrB,GACjB4+B,aAAY,GAGjB,SAASgB,EAAcv+B,EAAIrB,GACrBA,GAAAA,GAAYA,EAASmF,IACjB,MAAA,IAAIzmB,MAAM,gDAGX4pB,OADK,IAAIC,EAAI,CAAEF,KAAM,QACjBI,aAAapH,EAAIrB,GAG9B,SAAS6/B,EAAYpmD,EAAOxK,GACnBs5B,OAAAA,EAAI9uB,MAAMA,EAAOxK,GAG1BpD,OAAOC,QAAU,CAAE0zD,MAAAA,EAAOC,SAAAA,EAAUC,WAAAA,EAAYE,cAAAA,EAAeC,YAAAA;;ACzC/Dh0D,OAAOC,QAAU,SAAemD,GACvB,OAAA,IAAI4wB,aAAa5wB;;ACD1B,IAAM6wD,EAAQvzD,QAAQ,WAEtBV,OAAOC,QAAU,SAAiBy5B,EAAOC,GAElC,IADCr1B,IAAAA,EAAS,IAAIhB,MAAMq2B,GAChBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAC1BnvB,EAAOmvB,GAAKwgC,EAAMv6B,GAEbp1B,OAAAA;;ACPT,IAAM4vD,EAAUxzD,QAAQ,cAExBV,OAAOC,QAAU,SAAiBy5B,EAAOC,EAAQa,GAE1C,IADCl2B,IAAAA,EAAS,IAAIhB,MAAMk3B,GAChBjH,EAAI,EAAGA,EAAIiH,EAAOjH,IACzBjvB,EAAOivB,GAAK2gC,EAAQx6B,EAAOC,GAEtBr1B,OAAAA;;AC+JT,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAtKA,IAAM4vD,EAAUxzD,QAAQ,yBAClByzD,EAAUzzD,QAAQ,yBAElB0zD,EAmKN,WAtJcjgC,SAAAA,EAAAA,GAAU,EAAA,KAAA,GAEfuF,KAAAA,MAAQ,KACRC,KAAAA,OAAS,KAGT06B,KAAAA,OAAS,KACTC,KAAAA,QAAU,KAEVC,KAAAA,OAAS,KACTC,KAAAA,WAAa,KAEd,KAAKnxD,cAAgB+wD,GACvBtyD,OAAOC,OAAO,KAAMqyD,EAAKK,SAAUtgC,GAErCryB,OAAOC,OAAO,KAAM,KAAKsB,YAAYoxD,SAAUtgC,GAG1CugC,KAAAA,YAAYvgC,GAoIrB,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WAlKwB,IAAA,WACb,MAAA,CACLuF,MAAO,EACPC,OAAQ,EACRa,MAAO,EACP85B,QAAS,KACTD,OAAQ,KACRltD,KAAM,KACNqtD,WAAY,UA0JlB,EAAA,EAAA,CAAA,CAAA,IAAA,cAjIcrgC,MAAAA,SAAAA,GACLA,GACDA,EAAS1nB,eAAe,YACK,mBAApB0nB,EAASogC,OACbA,KAAAA,OAASpgC,EAASogC,OAAO,KAAMpgC,EAASqgC,YAExCD,KAAAA,OAASpgC,EAASogC,UA2H/B,CAAA,IAAA,WArFa,MAAA,WACL/9B,GAAAA,OAAOL,MAAM,KAAKwD,QACd,MAAA,IAAI9mB,MAAS,GAAA,OAAA,KAAKxP,YAAY8D,KAApC,kCAEEqvB,GAAAA,OAAOL,MAAM,KAAKuD,OACd,MAAA,IAAI7mB,MAAS,GAAA,OAAA,KAAKxP,YAAY8D,KAApC,iCAEE,GAAA,KAAKwyB,OAAS,EACV,MAAA,IAAI9mB,MAAS,GAAA,OAAA,KAAKxP,YAAY8D,KAApC,iCAEE,GAAA,KAAKuyB,MAAQ,EACT,MAAA,IAAI7mB,MAAS,GAAA,OAAA,KAAKxP,YAAY8D,KAApC,kCA0EN,CAAA,IAAA,eAtEiB,MAAA,cAsEjB,CAAA,IAAA,eAlEewtD,MAAAA,SAAAA,GACPA,GAAAA,EAAMj7B,QAAU,KAAKA,MACjB,MAAA,IAAI7mB,MACL,GAAA,OAAA,KAAKxP,YAAY8D,KAA8BwtD,2BAAAA,OAAAA,EAAMj7B,MACtD,YAAA,OAAA,KAAKA,QAIPi7B,GAAAA,EAAMh7B,SAAW,KAAKA,OAClB,MAAA,IAAI9mB,MACL,GAAA,OAAA,KAAKxP,YAAY8D,KAClBwtD,2BAAAA,OAAAA,EAAMh7B,OACG,YAAA,OAAA,KAAKA,SAGhBg7B,EAAMloD,eAAe,mBAClBmoD,KAAAA,cAAgBD,EAAMC,eAEzBD,EAAMloD,eAAe,mBAClBooD,KAAAA,cAAgBF,EAAME,eAExBN,KAAAA,OAASI,EAAMJ,SA6CxB,CAAA,IAAA,UA1CY,MAAA,cA0CZ,CAAA,IAAA,UArCY,MAAA,cAqCZ,CAAA,IAAA,QAjCQO,MAAAA,SAAAA,EAAeC,EAAW3yD,GACzBkyD,KAAAA,QAAU,KAAKC,OAAOvuB,IAAI,KAAM8uB,EAAeC,EAAW3yD,GAG3D,KAAKo4B,MAAQ,EACV65B,KAAAA,OAASF,EAAQ,KAAKz6B,MAAO,KAAKC,OAAQ,KAAKa,OAE/C65B,KAAAA,OAASH,EAAQ,KAAKx6B,MAAO,KAAKC,UA0B7C,CAAA,IAAA,UAtBY,MAAA,WACD,OAAA,KAAK26B,QAAQpa,YAqBxB,CAAA,IAAA,SAlBW,MAAA,WACD8a,IAAAA,EAAY,GACS,EAAA,KAAK3xD,YAAxBoxD,EAAAA,EAAAA,SAAUttD,EAAAA,EAAAA,KACd,KAAK9D,cAAgB+wD,GACvBtyD,OAAOC,OAAO0yD,EAAUL,EAAKK,SAAUA,GAGpC,IADCjxD,IAAAA,EAAO1B,OAAO0B,KAAKixD,GAChB9xD,EAAI,EAAGA,EAAIa,EAAKZ,OAAQD,IAAK,CAC9Be,IAAAA,EAAMF,EAAKb,GACL,WAARe,IACQ,SAARA,GAAgC,OAAd,KAAKA,KAC3BsxD,EAAUtxD,GAAO,KAAKA,KAGjBsxD,OADPA,EAAUllD,KAAO3I,EACV6tD,MAIX,EAAA,GAAAh1D,OAAOC,QAAU,CACfm0D,KAAAA;;AC9JF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GATiB1zD,IAAAA,EAAAA,QAAQ,UAAjB0zD,EAAAA,EAAAA,KAEFa,EAON,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAPyBb,GAOzB,EAAA,GANMc,EAAAA,SAAAA,IAMN,EAAA,KAAA,IALMC,EAKN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EALqBf,GAKrB,EAAA,GAJMgB,EAIN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAJoBhB,GAIpB,EAAA,GAHMiB,EAGN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAHuBjB,GAGvB,EAAA,GAFMkB,EAEN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAFuBlB,GAEvB,EAAA,GAAAp0D,OAAOC,QAAU,CAAEg1D,WAAAA,EAAYC,SAAAA,EAAUC,OAAAA,EAAQC,MAAAA,EAAOC,SAAAA,EAAUC,SAAAA;;ACuDlE,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAhEuB50D,IAAAA,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACFK,EAAUxzD,QAAQ,yBACHA,EAAAA,QAAQ,WAArB40D,EAAAA,EAAAA,SAER,SAASC,EAAQC,EAAeC,GACvBD,OAAAA,EAAc,KAAK14B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAKiiC,EAAc,KAAK34B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAG1FkiC,IAAAA,EAwDN,SAAA,GAvDcC,SAAAA,EAAAA,EAAaC,EAAazhC,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IAC9C,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACKwhC,YAAcA,EACdC,EAAAA,YAAcA,EACdl8B,EAAAA,MAAQ,EAAKi8B,YAAYj8B,MACzBC,EAAAA,OAAS,EAAKg8B,YAAYh8B,OAC1B2F,EAAAA,WACAg1B,EAAAA,QAAUJ,EAAQ,EAAKx6B,MAAO,EAAKC,QACnC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,QAClC+6B,EAAAA,YAAYvgC,GAT6B,EAuDlD,OAAA,EAAA,EAxDkBmhC,GAwDlB,EAAA,EAAA,CAAA,CAAA,IAAA,WA3Ca,MAAA,WAEL,GADJ,EAAA,EAAA,EAAA,WAAA,WAAA,MAAA,KAAA,MACI,KAAKK,YAAYj8B,QAAU,KAAKk8B,YAAYl8B,MACxC,MAAA,IAAI7mB,MACmB,2BAAA,OAAA,KAAK8iD,YAAYj8B,MAC1C,SAAA,OAAA,KAAKk8B,YAAYl8B,QAKnB,GAAA,KAAKi8B,YAAYh8B,SAAW,KAAKi8B,YAAYj8B,OACzC,MAAA,IAAI9mB,MACoB,4BAAA,OAAA,KAAK8iD,YAAYh8B,OAC3C,SAAA,OAAA,KAAKi8B,YAAYj8B,WA8B3B,CAAA,IAAA,eAxBiB,MAAA,WACRi7B,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,YAsBhC,CAAA,IAAA,UAlBY,MAAA,WACH26B,KAAAA,QAAU,KAAKM,cAClB,KAAKe,YAAYrB,QACjB,KAAKsB,YAAYtB,WAevB,CAAA,IAAA,UAVY,MAAA,WACHqB,KAAAA,YAAYtB,OAAS,KAAKA,OAC1BuB,KAAAA,YAAYvB,OAAS,KAAKA,WAQnC,EAAA,GAJA,SAAShvB,EAAIswB,EAAaC,EAAazhC,GAC9B,OAAA,IAAIuhC,EAAIC,EAAaC,EAAazhC,GAG3Cn0B,OAAOC,QAAU,CAAEy1D,IAAAA,EAAKrwB,IAAAA,EAAKkwB,QAAAA;;AC9C7B,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlBMnB,IAAAA,EAkBN,WAbcO,SAAAA,EAAAA,GAAOxgC,IAAAA,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,EAAA,KAAA,GAC3BwgC,KAAAA,MAAQA,EACRj7B,KAAAA,MAAQi7B,EAAMj7B,OAAS,KACvBC,KAAAA,OAASg7B,EAAMh7B,QAAU,KACzBa,KAAAA,MAAQm6B,EAAMn6B,OAAS,KAC5B14B,OAAOC,OAAO,KAAM,KAAKsB,YAAYoxD,SAAUtgC,GAQnD,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WAjBwB,IAAA,WACb,MAAA,OAgBX,EAAA,EAAA,CAAA,CAAA,IAAA,eALiB,MAAA,cAKjB,CAAA,IAAA,MAHQ,MAAA,gBAGR,EAAA,GAAAn0B,OAAOC,QAAU,CACfm0D,KAAAA;;AC2DF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA9EuB1zD,IAAAA,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACFK,EAAUxzD,QAAQ,yBACPA,EAAAA,QAAQ,UAAjB0zD,EAAAA,EAAAA,KAER,SAASyB,EAAax1D,GACbA,OAAAA,EAGT,SAASga,EAAOy7C,EAASxB,EAASyB,EAAiBC,GAC3CC,IAAAA,EAAaH,EAAQ,KAAKh5B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAChD0iC,EAAaF,EAAY,KAAKl5B,OAAOrJ,GAAG,GACxC5zB,EAASy0D,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAC5C2iC,EAAWJ,EAAgB,KAAKj5B,OAAOtJ,GAAG,GAE1C4iC,EAAS,KAAKv3B,UAAUz8B,aAAe8zD,EAAaC,EAAW,KAAKt3B,UAAUw3B,SAAWJ,EAExFp2D,OADPg2D,EAAaO,GACNv2D,EAASu2D,EAGZE,IAAAA,EA2DN,SAAA,GAnDc3B,SAAAA,EAAAA,EAAOxgC,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrBwgC,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAOxgC,KACRoiC,aAAe,KACfC,EAAAA,cAAgB,KAChBC,EAAAA,WAAa,KAEdtiC,IACEA,EAASoiC,eACNA,EAAAA,aAAepiC,EAASoiC,cAE3BpiC,EAASqiC,gBACNA,EAAAA,cAAgBriC,EAASqiC,eAE5BriC,EAASsiC,aACNA,EAAAA,WAAatiC,EAASsiC,aAI1BX,EAAAA,QAAU5B,EAAQS,EAAMj7B,MAAOi7B,EAAMh7B,QACrC+8B,EAAAA,eAnBsB,EAmD/B,OAAA,EAAA,EA3DqCtC,GA2DrC,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WA1DwB,IAAA,WACb,MAAA,CACLhyD,aAAc,GACdi0D,SAAU,QAuDhB,EAAA,EAAA,CAAA,CAAA,IAAA,MA7BM1B,MAAAA,SAAAA,EAAOG,EAAeC,EAAW3yD,GAC7BkyB,IAAAA,EAAS,KAAKC,OAClB,KAAKuhC,QACL,KAAKS,aAAajC,QAClB,KAAKkC,cAAclC,QACnB,KAAKmC,WAAWpC,QAGX//B,OADFwhC,KAAAA,QAAUxhC,EAAOwhC,QACfxhC,EAAOhwB,SAqBlB,CAAA,IAAA,eAlBiB,MAAA,WACRiwB,KAAAA,OAASs/B,EAAWx5C,EAAQ,CAC/Bif,IAAK,CACHw8B,QAASD,GAEXvhC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,QAC1BkF,UAAW,CACTz8B,aAAc,KAAKA,aACnBi0D,SAAU,KAAKA,gBAUvB,EAAA,GAJA,SAASM,EAAuBhC,EAAOxgC,GAC9B,OAAA,IAAImiC,EAAuB3B,EAAOxgC,GAG3Cn0B,OAAOC,QAAU,CACfq2D,uBAAAA,EACAK,uBAAAA;;AC1CF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAtCuBj2D,IAAAA,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACSnzD,EAAAA,QAAQ,UAAjB0zD,EAAAA,EAAAA,KAER,SAAS/5C,EAAOi6C,EAASD,GAChBC,OAAAA,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAK,KAAKqL,UAAUz8B,aAAeiyD,EAAO,KAAKv3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAG3GojC,IAAAA,EA+BN,SAAA,GAxBcjC,SAAAA,EAAAA,EAAOxgC,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACrBwgC,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAOxgC,KACRuiC,eAFsB,EAwB/B,OAAA,EAAA,EA/BoCtC,GA+BpC,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WA9BwB,IAAA,WACb,MAAA,CACLhyD,aAAc,QA4BpB,EAAA,EAAA,CAAA,CAAA,IAAA,MAnBMuyD,MAAAA,SAAAA,EAAOG,EAAeC,EAAW3yD,GAE5BkyB,OADQ,KAAKC,OAAOogC,EAAML,QAASK,EAAMN,UAkBpD,CAAA,IAAA,eAdiB,MAAA,WACR9/B,KAAAA,OAASs/B,EAAWx5C,EAAQ,CAC/Bia,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,QAC1BkF,UAAW,CACTz8B,aAAc,KAAKA,oBAU3B,EAAA,GAJA,SAASy0D,EAAsBlC,EAAOxgC,GAC7B,OAAA,IAAIyiC,EAAsBjC,EAAOxgC,GAG1Cn0B,OAAOC,QAAU,CACf22D,sBAAAA,EACAC,sBAAAA;;ACxCF72D,OAAOC,QAAU,WACRC,MAAgB,GAAhBA,KAAK6C,SAAiB;;ACD/B,IAAM+zD,EAAep2D,QAAQ,mBAE7BV,OAAOC,QAAU,SAAgBmD,GAE1B,IADCV,IAAAA,EAAQ,IAAIsxB,aAAa5wB,GACtBT,EAAI,EAAGA,EAAIS,EAAMT,IACxBD,EAAMC,GAAKm0D,IAENp0D,OAAAA;;ACPT,IAAMq0D,EAASr2D,QAAQ,YAEvBV,OAAOC,QAAU,SAAkBy5B,EAAOC,GAEnC,IADCr1B,IAAAA,EAAS,IAAIhB,MAAMq2B,GAChBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAC1BnvB,EAAOmvB,GAAKsjC,EAAOr9B,GAEdp1B,OAAAA;;ACkBT,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzBkB5D,IAAAA,EAAAA,QAAQ,WAAlB00D,EAAAA,EAAAA,MACF4B,EAAWt2D,QAAQ,0BACnBwzD,EAAUxzD,QAAQ,yBAElBu2D,EAqBN,SAAA,GApBc9iC,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDmL,WACAg1B,EAAAA,QAAU0C,EAAS,EAAKt9B,MAAO,EAAKC,QACpC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,QAJnB,EAoBxB,OAAA,EAAA,EArBqBy7B,GAqBrB,EAAA,EAAA,CAAA,CAAA,IAAA,UAbY,MAAA,cAaZ,CAAA,IAAA,UATY,MAAA,gBASZ,EAAA,GAJA,SAASryD,EAAOoxB,GACP,OAAA,IAAI8iC,EAAO9iC,GAGpBn0B,OAAOC,QAAU,CACfg3D,OAAAA,EACAl0D,OAAAA;;ACmFF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA9GuBrC,IAAAA,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACFK,EAAUxzD,QAAQ,yBACHA,EAAAA,QAAQ,WAArB40D,EAAAA,EAAAA,SAER,SAASC,EAAQ2B,EAAUC,GAEpB,IADDC,IAAAA,EAAM,EACDz0D,EAAI,EAAGA,EAAI,KAAKk8B,UAAUz7B,KAAMT,IACvCy0D,GAAOF,EAAS,KAAKp6B,OAAOrJ,GAAG9wB,GAAKw0D,EAASx0D,GAAG,KAAKm6B,OAAOtJ,GAEvD4jC,OAAAA,EAGT,SAASC,EAAahD,EAAQ2B,EAAasB,GAEpC,IADDF,IAAAA,EAAMpB,EAAY,KAAKl5B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACxC7wB,EAAI,EAAGA,EAAI,KAAKk8B,UAAUz7B,KAAMT,IACvCy0D,GAAO/C,EAAO,KAAKv3B,OAAOrJ,GAAG9wB,GAAK20D,EAAa,KAAKx6B,OAAOtJ,GAAG7wB,GAEzDy0D,OAAAA,EAGT,SAASG,EAAalD,EAAQ2B,EAAasB,GAEpC,IADDF,IAAAA,EAAMpB,EAAY,KAAKl5B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACxC7wB,EAAI,EAAGA,EAAI,KAAKk8B,UAAUz7B,KAAMT,IACvCy0D,GAAO/C,EAAO1xD,GAAG,KAAKm6B,OAAOtJ,GAAK8jC,EAAa30D,GAAG,KAAKm6B,OAAOrJ,GAEzD2jC,OAAAA,EAGHI,IAAAA,EAkFN,SAAA,GAjFc7B,SAAAA,EAAAA,EAAaC,GAA4B,IAAA,EAAfzhC,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,OAAA,EAAA,KAAA,IACnD,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACKwhC,YAAcA,EACdC,EAAAA,YAAcA,EACd6B,EAAAA,eAAiB,KACjBC,EAAAA,eAAiB,KAEjBh+B,EAAAA,MAAQk8B,EAAYl8B,MACpBC,EAAAA,OAASg8B,EAAYh8B,OACrB2F,EAAAA,WACAg1B,EAAAA,QAAUJ,EAAQ,EAAKx6B,MAAO,EAAKC,QACnC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,QAElC+6B,EAAAA,YAAYvgC,GAbkC,EAiFvD,OAAA,EAAA,EAlFuBmhC,GAkFvB,EAAA,EAAA,CAAA,CAAA,IAAA,WAjEa,MAAA,WAEL,GADJ,EAAA,EAAA,EAAA,WAAA,WAAA,MAAA,KAAA,MACI,KAAKK,YAAYj8B,QAAU,KAAKk8B,YAAYj8B,OACxC,MAAA,IAAI9mB,MACmB,2BAAA,OAAA,KAAK8iD,YAAYj8B,MAC1C,SAAA,OAAA,KAAKk8B,YAAYj8B,WA4D3B,CAAA,IAAA,eAtDiB,MAAA,WACRi7B,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,QAC1BkF,UAAW,CACTz7B,KAAM,KAAKwyD,YAAYj8B,UAGtB89B,KAAAA,eAAiB5D,EAAWwD,EAAc,CAC7C/iC,OAAQ,CAAC,KAAKqhC,YAAYj8B,MAAO,KAAKi8B,YAAYh8B,QAClDkF,UAAW,CACTz7B,KAAM,KAAKwyD,YAAYl8B,SAGtBg+B,KAAAA,eAAiB7D,EAAW0D,EAAc,CAC7CjjC,OAAQ,CAAC,KAAKshC,YAAYl8B,MAAO,KAAKk8B,YAAYj8B,QAClDkF,UAAW,CACTz7B,KAAM,KAAKuyD,YAAYh8B,YAsC/B,CAAA,IAAA,eAjCeg7B,MAAAA,SAAAA,GACQA,EAAAA,EAAAA,EAAAA,WAAAA,eAAAA,MAAAA,KAAAA,KAAAA,GACd8C,KAAAA,eAAiB9C,EAAM8C,eACvBC,KAAAA,eAAiB/C,EAAM+C,iBA8BhC,CAAA,IAAA,UA3BY,MAAA,WACHpD,KAAAA,QAAU,KAAKM,cAClB,KAAKe,YAAYrB,QACjB,KAAKsB,YAAYtB,WAwBvB,CAAA,IAAA,UApBY,MAAA,WACFqD,IAAAA,EAAa,KAAKF,eACtB,KAAKpD,OACL,KAAKsB,YAAYtB,OACjB,KAAKuB,YAAYtB,SAEbsD,EAAa,KAAKF,eACtB,KAAKrD,OACL,KAAKuB,YAAYvB,OACjB,KAAKsB,YAAYrB,SAEdsB,KAAAA,YAAYvB,OAASuD,EACrBjC,KAAAA,YAAYtB,OAASsD,MAQ9B,EAAA,GAJA,SAASE,EAASlC,EAAaC,EAAazhC,GACnC,OAAA,IAAIqjC,EAAS7B,EAAaC,EAAazhC,GAGhDn0B,OAAOC,QAAU,CAAEu3D,SAAAA,EAAUK,SAAAA,EAAUtC,QAAAA,EAAS8B,aAAAA,EAAcE,aAAAA;;ACxD9D,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAtDuB72D,IAAAA,EAAAA,QAAQ,WAAvBu0D,EAAAA,EAAAA,WAC8Bv0D,EAAAA,QAAQ,uBAAtCmzD,EAAAA,EAAAA,WAAYE,EAAAA,EAAAA,cACUrzD,EAAAA,QAAQ,yBAA9Bd,EAAAA,EAAAA,SAAUE,EAAAA,EAAAA,QACZo0D,EAAUxzD,QAAQ,yBAExB,SAAS60D,EAAQuC,GACR,OAAA,GAAK,EAAI53D,KAAKI,KAAKw3D,EAAO,KAAKh7B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,KAG9D,SAASukC,EAAQzD,EAASD,GAClBx0D,IAAAA,EAASy0D,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAE3C3zB,OAAAA,GAAU,EAAIA,GADPw0D,EAAO,KAAKv3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAI5CwkC,IAAAA,EAuCN,SAAA,GAtCcC,SAAAA,EAAAA,EAAY9jC,GAAU,IAAA,EAAA,EAAA,KAAA,IAChC,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACK8jC,WAAaA,EAEVv+B,IAAAA,EAAkBu+B,EAAlBv+B,MAAOC,EAAWs+B,EAAXt+B,OAJiB,OAK3BD,EAAAA,MAAQA,EACRC,EAAAA,OAASA,EACT2F,EAAAA,WACAg1B,EAAAA,QAAUJ,EAAQ,EAAKx6B,MAAO,EAAKC,QACnC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,QAClC+6B,EAAAA,YAAYvgC,GAVe,EAsCpC,OAAA,EAAA,EAvCsB8gC,GAuCtB,EAAA,EAAA,CAAA,CAAA,IAAA,eAzBiB,MAAA,WACRL,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,QAC1BwF,UAAW,CAACv/B,KAGTi1D,KAAAA,cAAgBhB,EAAWkE,EAAS,CACvCzjC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,QAC1BwF,UAAW,CAACr/B,OAiBlB,CAAA,IAAA,UAbY,MAAA,WACHw0D,KAAAA,QAAU,KAAKM,cAAc,KAAKqD,WAAW3D,WAYtD,CAAA,IAAA,UATY,MAAA,WACH2D,KAAAA,WAAW5D,OAAS,KAAKQ,cAAc,KAAKP,QAAS,KAAKD,YAQnE,EAAA,GAJA,SAASzzD,EAAQq3D,EAAY9jC,GACpB,OAAA,IAAI6jC,EAAQC,EAAY9jC,GAGjCn0B,OAAOC,QAAU,CAAE+3D,QAAAA,EAASp3D,QAAAA,EAAS20D,QAAAA,EAASwC,QAAAA;;ACtDXr3D,IAAAA,EAAAA,QAAQ,sCAAnCi2D,EAAAA,EAAAA,uBAC0Bj2D,EAAAA,QAAQ,qCAAlCm2D,EAAAA,EAAAA,sBACQn2D,EAAAA,QAAQ,SAAhB2kC,EAAAA,EAAAA,IACW3kC,EAAAA,QAAQ,YAAnBqC,EAAAA,EAAAA,OACarC,EAAAA,QAAQ,cAArBm3D,EAAAA,EAAAA,SACYn3D,EAAAA,QAAQ,aAApBE,EAAAA,EAAAA,QAER,SAASs3D,IACA,MAAA,CAAElyB,IAAK,SAAC2uB,GAAUA,OAAAA,EAAML,UAGjC,SAAS6D,EAAkBhkC,EAAU8jC,GAC3Bt+B,IAAAA,EAAWxF,EAAXwF,OAOF48B,IAAAA,EAAexzD,EAAO,CAC1BoE,KAAM,UACNwyB,OAAAA,EACAD,MAAOu+B,EAAWt+B,OAClB46B,OAVO6D,SAAczD,EAAOxgC,GACrBwiC,OAAAA,EAAuBhC,EAAOxgC,MAYjCkkC,EAAct1D,EAAO,CACzBoE,KAAM,SACNwyB,OAAAA,EACA46B,OAbO+D,SAAa3D,EAAOxgC,GACpB0iC,OAAAA,EAAsBlC,EAAOxgC,MAehCokC,EAAgBV,EAAStB,EAAc0B,EAAY,CAAE1D,OAAQ2D,IAC7DM,EAAWnzB,EAAIkzB,EAAeF,EAAa,CAAE9D,OAAQ2D,IACrDO,EAAe73D,EAAQ43D,EAAU,CAAEjE,OAAQ2D,IAK1CO,OAHPlC,EAAahC,OAAOgC,aAAeA,EACnCA,EAAahC,OAAOiC,cAAgByB,EACpC1B,EAAahC,OAAOkC,WAAagC,EAC1BA,EAGTz4D,OAAOC,QAAU,CACfk4D,kBAAAA;;AC3CF,SAASO,EAAU/D,EAAOxgC,GAChBsgC,IAAAA,EAAaE,EAAMtxD,YAAnBoxD,SAEJtgC,EAAS1nB,eAAe,WAC1BkoD,EAAMgE,QAAUxkC,EAASykC,OACzBjE,EAAMkE,QAAU1kC,EAASykC,SAErBzkC,EAAS1nB,eAAe,WAC1BkoD,EAAMgE,QAAUxkC,EAASwkC,QAEzBhE,EAAMgE,QAAUlE,EAASmE,OAGvBzkC,EAAS1nB,eAAe,WAC1BkoD,EAAMkE,QAAU1kC,EAAS0kC,QAEzBlE,EAAMkE,QAAUpE,EAASmE,QAK/B,SAASE,EAAWnE,EAAOxgC,GACjBsgC,IAAAA,EAAaE,EAAMtxD,YAAnBoxD,SAEJtgC,EAAS1nB,eAAe,YAC1BkoD,EAAMoE,SAAW5kC,EAAS6kC,QAC1BrE,EAAMsE,SAAW9kC,EAAS6kC,UAEtB7kC,EAAS1nB,eAAe,YAC1BkoD,EAAMoE,SAAW5kC,EAAS4kC,SAE1BpE,EAAMoE,SAAWtE,EAASuE,QAGxB7kC,EAAS1nB,eAAe,YAC1BkoD,EAAMsE,SAAW9kC,EAAS8kC,SAE1BtE,EAAMsE,SAAWxE,EAASuE,SAKhCh5D,OAAOC,QAAU,CAAEy4D,UAAAA,EAAWI,WAAAA;;AC1C9B,IAAMI,EAAWx4D,QAAQ,eAEzBV,OAAOC,QAAU,SAAkBy5B,EAAOC,EAAQa,GAE3C,IADCl2B,IAAAA,EAAS,IAAIhB,MAAMk3B,GAChBjH,EAAI,EAAGA,EAAIiH,EAAOjH,IACzBjvB,EAAOivB,GAAK2lC,EAASx/B,EAAOC,GAEvBr1B,OAAAA;;ACPTtE,OAAOC,QAAU,SAAgBmD,EAAM/C,GAC9B,OAAA,IAAI2zB,aAAa5wB,GAAM+1D,KAAK94D;;ACuNrC,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAxNuBK,IAAAA,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WAC0BnzD,EAAAA,QAAQ,4BAAlCg4D,EAAAA,EAAAA,UAAWI,EAAAA,EAAAA,WACAp4D,EAAAA,QAAQ,WAAnBy0D,EAAAA,EAAAA,OACF4B,EAASr2D,QAAQ,uBACjB04D,EAAW14D,QAAQ,0BACnByzD,EAAUzzD,QAAQ,yBAClB24D,EAAS34D,QAAQ,uBAEvB,SAAS60D,EAAQuC,EAAQwB,EAASC,GAU3B,IATCC,IAAAA,EAAe,KAAK36B,UAAUk6B,SAAY,KAAKj8B,OAAOtJ,EAAI,KAAKqL,UAAU85B,QACzEc,EAAe,KAAK38B,OAAOtJ,EAAI,KAAKqL,UAAU85B,QAAW,KAAK95B,UAAUk6B,SACxEW,EAAax5D,KAAK4rB,IAAI,KAAK+S,UAAU86B,YAAaH,EAAe,KAAK36B,UAAU+6B,YAEhFC,EAAe,KAAKh7B,UAAUo6B,SAAY,KAAKn8B,OAAOrJ,EAAI,KAAKoL,UAAUg6B,QACzEiB,EAAe,KAAKh9B,OAAOrJ,EAAI,KAAKoL,UAAUg6B,QAAW,KAAKh6B,UAAUo6B,SACxEc,EAAa75D,KAAK4rB,IAAI,KAAK+S,UAAUm7B,aAAcH,EAAe,KAAKh7B,UAAUo7B,aAEnF7C,EAAM,EACD7jC,EAAI,EAAGA,EAAI,KAAKsL,UAAUq7B,WAAY3mC,IACxC,IAAA,IAAI4mC,EAAUj6D,KAAKC,IAAI,EAAG05D,GAAeO,EAASl6D,KAAKC,IAAI,EAAG25D,GAAcK,EAAUJ,EAAYI,IAAWC,IAC3G,IAAA,IAAIC,EAAUn6D,KAAKC,IAAI,EAAGq5D,GAAec,EAASp6D,KAAKC,IAAI,EAAGs5D,GAAcY,EAAUX,EAAYW,IAAWC,IAChHlD,GAAOkC,EAAQ/lC,GAAG4mC,GAASE,GAAWvC,EAAOvkC,GAAG6mC,GAAQE,GAIvDlD,OAAAA,EAAMmC,EAAO,KAAKz8B,OAAOvJ,GAGlC,SAASgnC,EAAoBC,EAAc1C,EAAQzD,GAU5C,IATCoG,IAAAA,EAAcv6D,KAAKC,IAAI,EAAGD,KAAK22B,MAAM,KAAKgI,UAAUk6B,SAAW,KAAKj8B,OAAOtJ,GAAK,KAAKqL,UAAU85B,UAC/Fc,EAAcgB,EAAc,KAAK57B,UAAU85B,QAAU,KAAK77B,OAAOtJ,EAAI,KAAKqL,UAAUk6B,SACpF2B,EAAYx6D,KAAK4rB,IAAI,KAAK+S,UAAU87B,WAAYz6D,KAAK4C,OAAQ,KAAK+7B,UAAU+6B,WAAa,EAAK,KAAK98B,OAAOtJ,EAAI,KAAKqL,UAAUk6B,UAAY,KAAKl6B,UAAU85B,SAAW,GAEnKiC,EAAc16D,KAAKC,IAAI,EAAGD,KAAK22B,MAAM,KAAKgI,UAAUo6B,SAAW,KAAKn8B,OAAOrJ,GAAK,KAAKoL,UAAUg6B,UAC/FiB,EAAcc,EAAc,KAAK/7B,UAAUg6B,QAAU,KAAK/7B,OAAOrJ,EAAI,KAAKoL,UAAUo6B,SACpF4B,EAAY36D,KAAK4rB,IAAI,KAAK+S,UAAUi8B,YAAa56D,KAAK4C,OAAQ,KAAK+7B,UAAUo7B,YAAc,EAAK,KAAKn9B,OAAOrJ,EAAI,KAAKoL,UAAUo6B,UAAY,KAAKp6B,UAAUg6B,SAAW,GAEvKzB,EAAMoD,EAAa,KAAK19B,OAAOvJ,GAAG,KAAKuJ,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACxDunC,EAASH,EAAaR,EAASN,EAAaiB,EAASF,EAAWE,IAAUX,GAAU,KAAKv7B,UAAUg6B,QACrG,IAAA,IAAImC,EAASP,EAAaH,EAASb,EAAauB,EAASN,EAAWM,IAAUV,GAAU,KAAKz7B,UAAU85B,QAC1GvB,GAAOU,EAAO,KAAKh7B,OAAOvJ,GAAG6mC,GAAQE,GAAUjG,EAAO,KAAKx1B,UAAUo8B,QAAQF,GAAQC,GAGlF5D,OAAAA,EAGT,SAAS8D,EAAmBlF,EAAasD,EAASjF,GAa3C,IAZC7gC,IAAAA,EAAI,KAAKsJ,OAAOtJ,EAAI,KAAKqL,UAAUk6B,SACnC0B,EAAcjnC,EAAI,KAAKqL,UAAU86B,YAAc,EAAIz5D,KAAK4C,OAAO0wB,EAAI,KAAKqL,UAAU86B,YAAc,KAAK96B,UAAU85B,SAAW,KAAK95B,UAAU85B,SACzIa,EAAehmC,EAAIinC,EAAc,KAAK57B,UAAU85B,QAChD+B,EAAYx6D,KAAK4rB,IAAI2uC,EAAcv6D,KAAK4C,MAAM02D,EAAe,KAAK36B,UAAU85B,SAAW,EAAG,KAAK95B,UAAU87B,YAEzGlnC,EAAI,KAAKqJ,OAAOrJ,EAAI,KAAKoL,UAAUo6B,SACnC2B,EAAcnnC,EAAI,KAAKoL,UAAUm7B,aAAe,EAAI95D,KAAK4C,OAAO2wB,EAAI,KAAKoL,UAAUm7B,aAAe,KAAKn7B,UAAUg6B,SAAW,KAAKh6B,UAAUg6B,SAC3IgB,EAAepmC,EAAImnC,EAAc,KAAK/7B,UAAUg6B,QAChDgC,EAAY36D,KAAK4rB,IAAI8uC,EAAc16D,KAAK4C,MAAM+2D,EAAe,KAAKh7B,UAAUg6B,SAAW,EAAG,KAAKh6B,UAAUi8B,aAE3G1D,EAAMpB,EAAY,KAAKl5B,OAAOvJ,GAAG,KAAKuJ,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAC5DunC,EAASH,EACJT,EAAUN,EAAckB,EAASF,EAAWV,GAAW,KAAKt7B,UAAUg6B,QAASkC,IAEjF,IADDC,IAAAA,EAASP,EACJJ,EAAUb,EAAcwB,EAASN,EAAWL,GAAW,KAAKx7B,UAAU85B,QAASqC,IACtF5D,GAAOkC,EAAQ,KAAKx8B,OAAOvJ,GAAG4mC,GAASE,GAAWhG,EAAO,KAAKx1B,UAAUo8B,QAAQF,GAAQC,GAGrF5D,OAAAA,EAGT,SAAS+D,EAAcC,EAAY/G,GAE5B,IADD+C,IAAAA,EAAM,EACD3jC,EAAI,EAAGA,EAAI,KAAKoL,UAAUi8B,YAAarnC,IACzC,IAAA,IAAID,EAAI,EAAGA,EAAI,KAAKqL,UAAU87B,WAAYnnC,IAC7C4jC,GAAO/C,EAAO,KAAKv3B,OAAOvJ,GAAGE,GAAGD,GAG7B4nC,OAAAA,EAAW,KAAKt+B,OAAOvJ,GAAG,KAAKuJ,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAK4jC,EAG7DiE,IAAAA,EA0IN,SAAA,GA9HclnC,SAAAA,EAAAA,EAAU8jC,GAAY,IAAA,EAAA,OAAA,EAAA,KAAA,IAC1B9jC,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KAEDykC,OAAS,KACTD,EAAAA,QAAU,KACVE,EAAAA,QAAU,KACfH,EAAgBvkC,EAAAA,GAAAA,GAEX6kC,EAAAA,QAAU,KACVD,EAAAA,SAAW,KACXE,EAAAA,SAAW,KAChBH,EAAiB3kC,EAAAA,GAAAA,GAEZmnC,EAAAA,YAAcnnC,EAASmnC,YACvB3B,EAAAA,YAAcxlC,EAASwlC,YACvBK,EAAAA,aAAe7lC,EAAS6lC,aAExBtgC,EAAAA,MAAQx5B,KAAK4C,OACfm1D,EAAWv+B,MAAwB,EAAhB,EAAKq/B,SAAe,EAAKY,aAAe,EAAKhB,QAC/D,GAECh/B,EAAAA,OAASz5B,KAAK4C,OAChBm1D,EAAWt+B,OAAyB,EAAhB,EAAKs/B,SAAe,EAAKe,cAC5C,EAAKnB,QACL,GAECr+B,EAAAA,MAAQ,EAAK8gC,YACbhH,EAAAA,QAAU8E,EAAS,EAAK1/B,MAAO,EAAKC,OAAQ,EAAKa,OACjD65B,EAAAA,OAASF,EAAQ,EAAKz6B,MAAO,EAAKC,OAAQ,EAAKa,OAE/C++B,EAAAA,OAASF,EAAO,EAAK7+B,MAAO,EAAK+gC,MACjCH,EAAAA,WAAarE,EAAO,EAAKv8B,OAEzB8+B,EAAAA,QAAUF,EAAS,EAAKO,YAAa,EAAKK,aAAc,EAAKsB,aAC7Dd,EAAAA,aAAerG,EAAQ,EAAKwF,YAAa,EAAKK,aAAc,EAAKsB,aAEjEE,EAAAA,aAAe,KACfC,EAAAA,YAAc,KACdxD,EAAAA,WAAaA,EACb34B,EAAAA,WAvC2B,EA8HpC,OAAA,EAAA,EA1I0B61B,GA0I1B,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WAzIwB,IAAA,WACb,MAAA,CACLyD,OAAQ,EACRI,QAAS,EACTuC,KAAM,GACND,YAAa,EACb3B,YAAa,EACbK,aAAc,OAkIpB,EAAA,EAAA,CAAA,CAAA,IAAA,eApFiB,MAAA,WACRpF,KAAAA,cAAgBf,EAAW0B,EAAS,CACvC12B,UAAW,CACT+6B,WAAY,KAAK3B,WAAWv+B,MAC5BugC,YAAa,KAAKhC,WAAWt+B,OAC7BugC,WAAY,KAAKjC,WAAWz9B,MAC5Bm+B,QAAS,KAAKA,QACdE,QAAS,KAAKA,QACdE,SAAU,KAAKA,SACfE,SAAU,KAAKA,SACfU,YAAa,KAAKA,YAClBK,aAAc,KAAKA,cAErB1lC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,OAAQ,KAAKa,SAGpCkhC,KAAAA,0BAA4B7H,EAAW0G,EAAqB,CAC/D17B,UAAW,CACT88B,YAAa,KAAKjiC,MAClBkiC,aAAc,KAAKjiC,OACnBkiC,YAAa,KAAKrhC,MAClBo/B,WAAY,KAAK3B,WAAWv+B,MAC5BugC,YAAa,KAAKhC,WAAWt+B,OAC7BugC,WAAY,KAAKjC,WAAWz9B,MAC5Bm+B,QAAS,KAAKA,QACdE,QAAS,KAAKA,QACdE,SAAU,KAAKA,SACfE,SAAU,KAAKA,SACfU,YAAa,KAAKA,YAClBK,aAAc,KAAKA,cAErB1lC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,OAAQ,KAAKa,SAGpCshC,KAAAA,yBAA2BjI,EAAWqH,EAAoB,CAC7Dr8B,UAAW,CACTy8B,YAAa,KAAKA,aAEpBhnC,OAAQ,CACN,KAAK2jC,WAAWv+B,MAChB,KAAKu+B,WAAWt+B,OAChB,KAAKs+B,WAAWz9B,SAIfuhC,KAAAA,oBAAsBlI,EAAWsH,EAAe,CACnD7mC,OAAQ,CAAC,EAAG,EAAG,KAAKkG,OACpBqE,UAAW,CACT87B,WAAY,KAAKjhC,MACjBohC,YAAa,KAAKnhC,YAmC1B,CAAA,IAAA,UA9BY,MAAA,WACH26B,KAAAA,QAAU,KAAKM,cAClB,KAAKqD,WAAW3D,QAChB,KAAKgF,QACL,KAAKC,UA0BX,CAAA,IAAA,UAtBY,MAAA,WACHiB,KAAAA,aAAe,KAAKkB,0BACvB,KAAKlB,aACL,KAAKvC,WAAW3D,QAChB,KAAKD,QAEF+G,KAAAA,WAAa,KAAKW,oBAAoB,KAAKX,WAAY,KAAK/G,QAC5DA,KAAAA,OAAS,KAAKyH,yBAAyB,KAAKxC,QAAS,KAAKrB,WAAW5D,QACrE4D,KAAAA,WAAW5D,OAAS,KAAKA,SAclC,CAAA,IAAA,QAXQS,MAAAA,SAAAA,EAAeC,EAAW3yD,GAEzBkyD,KAAAA,QAAU,KAAKC,OAAOvuB,IAAI,KAAM8uB,EAAeC,EAAW3yD,GAC1DiyD,KAAAA,OAASF,EAAQ,KAAKz6B,MAAO,KAAKC,OAAQ,KAAKa,WAQxD,EAAA,GAJA,SAASwhC,EAAY7nC,EAAU8jC,GACtB,OAAA,IAAIoD,EAAYlnC,EAAU8jC,GAGnCj4D,OAAOC,QAAU,CACfo7D,YAAAA,EACAW,YAAAA,EACAzG,QAAAA,EACAgF,oBAAAA,EACAW,mBAAAA,EACAC,cAAAA;;ACrKF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzDmBz6D,IAAAA,EAAAA,QAAQ,WAAnBy0D,EAAAA,EAAAA,OACez0D,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WAGR,SAASoI,EAAgBnE,GACnB53D,OAAAA,KAAK6C,SAAW,KAAK87B,UAAUq9B,YAC1B,EAEFpE,EAAO,KAAKh7B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAG3C,SAAS+hC,EAAQuC,GACRA,OAAAA,EAAO,KAAKh7B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAK,KAAKqL,UAAUq9B,YAGzDC,IAAAA,EA0CN,SAAA,GA/BchoC,SAAAA,EAAAA,EAAU8jC,GAAY,IAAA,EAAA,OAAA,EAAA,KAAA,IAC1B9jC,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACD8jC,WAAaA,EACb34B,EAAAA,WAH2B,EA+BpC,OAAA,EAAA,EA1CsB61B,GA0CtB,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WAzCwB,IAAA,WACb,MAAA,CACLz7B,MAAO,EACPC,OAAQ,EACRa,MAAO,EACP0hC,YAAa,GACbE,YAAY,OAmClB,EAAA,EAAA,CAAA,CAAA,IAAA,eAzBiB,MAAA,WACT,KAAKA,WACFxH,KAAAA,cAAgBf,EAAWoI,EAAiB,CAC/C3nC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,OAAQ,KAAKa,SAGpCo6B,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,OAAQ,KAAKa,WAkB/C,CAAA,IAAA,UAbY,MAAA,WACH85B,KAAAA,QAAU,KAAKM,cAAc,KAAKqD,WAAW3D,WAYtD,CAAA,IAAA,UATY,MAAA,WACHD,KAAAA,OAAS,KAAKgI,YAAY,KAAKhI,YAQxC,EAAA,GAJA,SAASiI,EAAQnoC,EAAU8jC,GAClB,OAAA,IAAIkE,EAAQhoC,EAAU8jC,GAG/Bj4D,OAAOC,QAAU,CAAEk8D,QAAAA,EAASG,QAAAA,EAASL,gBAAAA,EAAiB1G,QAAAA;;ACzDnC70D,IAAAA,EAAAA,QAAQ,YAAnBqC,EAAAA,EAAAA,OACQrC,EAAAA,QAAQ,SAAhB2kC,EAAAA,EAAAA,IACa3kC,EAAAA,QAAQ,cAArBm3D,EAAAA,EAAAA,SACYn3D,EAAAA,QAAQ,aAApBE,EAAAA,EAAAA,QAER,SAAS27D,EAAYpoC,EAAUvmB,GACrB+rB,IAAAA,EAAWxF,EAAXwF,OACF26B,EAAUvxD,EAAO,CAAEoE,KAAM,UAAWwyB,OAAAA,EAAQD,MAAO9rB,EAAM+rB,SACzD4/B,EAASx2D,EAAO,CAAEoE,KAAM,SAAUwyB,OAAAA,IACjC/4B,OAAAA,EAAQykC,EAAIwyB,EAASvD,EAAS1mD,GAAQ2rD,IAG/Cv5D,OAAOC,QAAU,CACfs8D,YAAAA;;ACmLF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAhMmB77D,IAAAA,EAAAA,QAAQ,WAAnBy0D,EAAAA,EAAAA,OACez0D,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACFwF,EAAS34D,QAAQ,uBACjBs2D,EAAWt2D,QAAQ,0BACnB04D,EAAW14D,QAAQ,0BACnBuzD,EAAQvzD,QAAQ,sBAChBwzD,EAAUxzD,QAAQ,yBAClByzD,EAAUzzD,QAAQ,yBAExB,SAAS60D,EAAQuC,EAAQwB,EAASC,GAG3B,IAFDjlC,IAAAA,EAAS,EACT3xB,EAAI,EACC8wB,EAAI,EAAGA,EAAI,KAAKoL,UAAUo7B,YAAaxmC,IACzC,IAAA,IAAID,EAAI,EAAGA,EAAI,KAAKqL,UAAU+6B,WAAYpmC,IAC7Cc,GAAUwjC,EAAOrkC,GAAGD,GAAK8lC,EAAQ,KAAKx8B,OAAOtJ,GAAG7wB,GAChDA,IAGG2xB,OAAAA,EAASilC,EAAO,KAAKz8B,OAAOtJ,GAGrC,SAASgpC,EAAU1E,EAAQwB,EAASC,GAG7B,IAFDjlC,IAAAA,EAAS,EACT3xB,EAAI,EACC4wB,EAAI,EAAGA,EAAI,KAAKsL,UAAUq7B,WAAY3mC,IACxC,IAAA,IAAIE,EAAI,EAAGA,EAAI,KAAKoL,UAAUo7B,YAAaxmC,IACzC,IAAA,IAAID,EAAI,EAAGA,EAAI,KAAKqL,UAAU+6B,WAAYpmC,IAC7Cc,GAAUwjC,EAAOvkC,GAAGE,GAAGD,GAAK8lC,EAAQ,KAAKx8B,OAAOtJ,GAAG7wB,GACnDA,IAIC2xB,OAAAA,EAASilC,EAAO,KAAKz8B,OAAOtJ,GAGrC,SAAS0nC,EAAmBlF,EAAa3B,EAAQiF,GAG1C,IAFDlC,IAAAA,EAAM,EACJiD,EAAU,KAAKv9B,OAAOtJ,EAAK,KAAKsJ,OAAOrJ,EAAI,KAAKa,OAAOd,EACpD2mC,EAAU,EAAGA,EAAU,KAAKt7B,UAAUy8B,YAAanB,IAC1D/C,GAAOkC,EAAQa,GAASE,GAAWhG,EAAO,GAAG8F,GAExC/C,OAAAA,EAAMpB,EAAY,KAAKl5B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAGtD,SAASipC,EAAqBzG,EAAa3B,EAAQiF,GAG5C,IAFDlC,IAAAA,EAAM,EACJiD,EAAU,KAAKv9B,OAAOtJ,EAAK,KAAKsJ,OAAOrJ,EAAI,KAAKa,OAAOd,EACpD2mC,EAAU,EAAGA,EAAU,KAAKt7B,UAAUy8B,YAAanB,IAC1D/C,GAAOkC,EAAQa,GAASE,GAAWhG,EAAO,GAAG8F,GAExC/C,OAAAA,EAAMpB,EAAY,KAAKl5B,OAAOvJ,GAAG,KAAKuJ,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAGrE,SAAS2nC,EAAc5B,EAAQlF,GACtBkF,OAAAA,EAAO,KAAKz8B,OAAOtJ,GAAK6gC,EAAO,KAAKv3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAGnE,SAAS+mC,EAAoBC,EAAclD,EAAcjD,GAChDmG,OAAAA,EAAa,KAAK19B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAM8jC,EAAa,KAAKx6B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAK6gC,EAAO,KAAKx1B,UAAUk8B,QAAQ,KAAKl8B,UAAUm8B,QAGjJ,SAAS0B,EAAsBlC,EAAclD,EAAcjD,GACnDsI,IAAAA,EAASz8D,KAAK4C,MAAM,KAAKg6B,OAAOtJ,GAAK,KAAKqL,UAAU+6B,WAAa,KAAK/6B,UAAUo7B,cAChFG,EAASl6D,KAAK4C,OAAO,KAAKg6B,OAAOtJ,EAAImpC,EAAS,KAAK99B,UAAU+6B,WAAa,KAAK/6B,UAAUo7B,aAAe,KAAKp7B,UAAU+6B,YACvHU,EAAS,KAAKx9B,OAAOtJ,EAAI,KAAKqL,UAAU+6B,YAAcQ,EAAS,KAAKv7B,UAAUo7B,YAAc0C,GAC3FnC,OAAAA,EAAa,KAAK19B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAM8jC,EAAaqF,GAAQvC,GAAQE,GAAUjG,EAAO,GAAG,KAAKv3B,OAAOrJ,GAG9GmpC,IAAAA,EA4HN,SAAA,GArHczoC,SAAAA,EAAAA,EAAU8jC,GAAY,IAAA,EAAA,EAAA,KAAA,IAC1B9jC,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACD8jC,WAAaA,EACb34B,EAAAA,WACAo8B,EAAAA,0BAA4B,KAC5BI,EAAAA,yBAA2B,KAC3BC,EAAAA,oBAAsB,KAErBc,IAAAA,EAAkB5E,EAAWv+B,MAAQu+B,EAAWt+B,OAASs+B,EAAWz9B,MAR1C,OAU3B++B,EAAAA,OAASF,EAAO,EAAK1/B,OAAQ,EAAK4hC,MAClCH,EAAAA,WAAanH,EAAM,EAAKt6B,QAExB2/B,EAAAA,QAAUtC,EAAS6F,EAAiB,EAAKljC,QACzC6gC,EAAAA,aAAetG,EAAQ2I,EAAiB,EAAKljC,QAE9C,EAAKa,MAAQ,GACV85B,EAAAA,QAAU8E,EAAS,EAAK1/B,MAAO,EAAKC,QACpC06B,EAAAA,OAASF,EAAQ,EAAKz6B,MAAO,EAAKC,SAC9B,EAAKA,OAAS,IAClB26B,EAAAA,QAAU0C,EAAS,EAAKt9B,MAAO,EAAKC,QACpC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,SArBT,EAqHpC,OAAA,EAAA,EA5H6Bw7B,GA4H7B,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WA3HwB,IAAA,WACb,MAAA,CACLoG,KAAM,QAyHZ,EAAA,EAAA,CAAA,CAAA,IAAA,WA5Fa,MAAA,WAEL,GADJ,EAAA,EAAA,EAAA,WAAA,WAAA,MAAA,KAAA,MACI,KAAK/gC,MAAQ,EAAG,MAAM,IAAI3nB,MAAM,yBA0FxC,CAAA,IAAA,eAvFiB,MAAA,WACLolD,IAAAA,EAAe,KAAfA,WACF4E,EAAkB5E,EAAWv+B,MAAQu+B,EAAWt+B,OAASs+B,EAAWz9B,MACtEy9B,EAAWz9B,MAAQ,GAChBo6B,KAAAA,cAAgBf,EAAW2I,EAAW,CACzCloC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,QAC1BkF,UAAW,CACTo7B,YAAahC,EAAWt+B,OACxBigC,WAAY3B,EAAWv+B,MACvBwgC,WAAYjC,EAAWz9B,SAItBkhC,KAAAA,0BAA4B7H,EAAW6I,EAAuB,CACjEpoC,OAAQ,CAACuoC,EAAiB,KAAKljC,QAC/BkF,UAAW,CACT+6B,WAAY3B,EAAWv+B,MACvBugC,YAAahC,EAAWt+B,UAIvBmiC,KAAAA,yBAA2BjI,EAAW4I,EAAsB,CAC/DnoC,OAAQ,CAAC2jC,EAAWv+B,MAAOu+B,EAAWt+B,OAAQs+B,EAAWz9B,OACzDqE,UAAW,CACTy8B,YAAa,KAAK3hC,YAIjBi7B,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,QAC1BkF,UAAW,CACTo7B,YAAahC,EAAWt+B,OACxBigC,WAAY3B,EAAWv+B,SAItBgiC,KAAAA,0BAA4B7H,EAAW0G,EAAqB,CAC/DjmC,OAAQ,CAACuoC,EAAiB,KAAKljC,QAC/BkF,UAAW,CACT+6B,WAAY3B,EAAWv+B,SAItBoiC,KAAAA,yBAA2BjI,EAAWqH,EAAoB,CAC7D5mC,OAAQ,CAAC2jC,EAAWv+B,MAAOu+B,EAAWt+B,QACtCkF,UAAW,CACTy8B,YAAa,KAAK3hC,WAKnBoiC,KAAAA,oBAAsBlI,EAAWsH,EAAe,CACnD7mC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,YAmChC,CAAA,IAAA,UA/BY,MAAA,WACH26B,KAAAA,QAAU,KAAKM,cAClB,KAAKqD,WAAW3D,QAChB,KAAKgF,QACL,KAAKC,UA2BX,CAAA,IAAA,UAvBY,MAAA,WACHtB,KAAAA,WAAW5D,OAAS,KAAKyH,yBAC5B,KAAK7D,WAAW5D,OAChB,KAAKA,OACL,KAAKiF,SAIF8B,KAAAA,WAAa,KAAKW,oBAAoB,KAAKxC,OAAQ,KAAKlF,QAGxDmG,KAAAA,aAAe,KAAKkB,0BACvB,KAAKlB,aACL,KAAKvC,WAAW3D,QAChB,KAAKD,YASX,EAAA,GAJA,SAASyI,EAAe3oC,EAAU8jC,GACzB,OAAA,IAAI2E,EAAezoC,EAAU8jC,GAGtCj4D,OAAOC,QAAU,CAAE28D,eAAAA,EAAgBE,eAAAA,EAAgBvH,QAAAA,EAASiH,UAAAA,EAAWtB,mBAAAA,EAAoBuB,qBAAAA,EAAsBtB,cAAAA,EAAeZ,oBAAAA,EAAqBmC,sBAAAA;;ACnKrJ,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA7BuBh8D,IAAAA,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACanzD,EAAAA,QAAQ,WAArB20D,EAAAA,EAAAA,SAER,SAASE,EAAQjB,GACR,OAACA,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAGvCupC,IAAAA,EAsBN,SAAA,GArBc5oC,SAAAA,EAAAA,EAAU8jC,GAAY,IAAA,EAAA,OAAA,EAAA,KAAA,IAC1B9jC,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACD8jC,WAAaA,EACb34B,EAAAA,WAH2B,EAqBpC,OAAA,EAAA,EAtBuB+1B,GAsBvB,EAAA,EAAA,CAAA,CAAA,IAAA,eAfiB,MAAA,WACRT,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,YAahC,CAAA,IAAA,UATY,MAAA,WACH26B,KAAAA,QAAU,KAAKM,cAAc,KAAKqD,WAAW3D,aAQtD,EAAA,GAJA,SAAS0I,EAAS7oC,EAAU8jC,GACnB,OAAA,IAAI8E,EAAS5oC,EAAU8jC,GAGhCj4D,OAAOC,QAAU,CAAE88D,SAAAA,EAAUC,SAAAA,EAAUzH,QAAAA;;AC2CvC,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAxEuB70D,IAAAA,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACanzD,EAAAA,QAAQ,WAArB40D,EAAAA,EAAAA,SACFpB,EAAUxzD,QAAQ,yBAExB,SAAS60D,EAAQjB,EAAS2I,GAEtB3I,OAAAA,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACnCypC,EAAkB,KAAKngC,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAIjD,SAASukC,EAAQzD,EAASD,GAEtBC,OAAAA,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAK6gC,EAAO,KAAKv3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAIxE0pC,IAAAA,EAuDN,SAAA,GAtDcvH,SAAAA,EAAAA,EAAaC,GAAa,IAAA,EAAA,OAAA,EAAA,KAAA,IACpC,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACKD,YAAcA,EACdC,EAAAA,YAAcA,EAEdl8B,EAAAA,MAAQi8B,EAAYj8B,MACpBC,EAAAA,OAASg8B,EAAYh8B,OACrB2F,EAAAA,WACAg1B,EAAAA,QAAUJ,EAAQ,EAAKx6B,MAAO,EAAKC,QACnC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,QATH,EAsDxC,OAAA,EAAA,EAvD8B27B,GAuD9B,EAAA,EAAA,CAAA,CAAA,IAAA,WA1Ca,MAAA,WAEL,GADJ,EAAA,EAAA,EAAA,WAAA,WAAA,MAAA,KAAA,MACI,KAAKK,YAAYj8B,QAAU,KAAKk8B,YAAYl8B,MACxC,MAAA,IAAI7mB,MACmB,2BAAA,OAAA,KAAK8iD,YAAYj8B,MAC1C,SAAA,OAAA,KAAKk8B,YAAYl8B,QAKnB,GAAA,KAAKi8B,YAAYh8B,SAAW,KAAKi8B,YAAYj8B,OACzC,MAAA,IAAI9mB,MACoB,4BAAA,OAAA,KAAK8iD,YAAYh8B,OAC3C,SAAA,OAAA,KAAKi8B,YAAYj8B,WA6B3B,CAAA,IAAA,eAvBiB,MAAA,WACRi7B,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,UAGvBk7B,KAAAA,cAAgBhB,EAAWkE,EAAS,CACvCzjC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,YAiBhC,CAAA,IAAA,UAbY,MAAA,WACH26B,KAAAA,QAAU,KAAKM,cAAc,KAAKN,QAAS,KAAK2D,WAAW3D,WAYpE,CAAA,IAAA,UATY,MAAA,WACHD,KAAAA,OAAS,KAAKQ,cAAc,KAAKP,QAAS,KAAKD,YAQxD,EAAA,GAJA,SAAS8I,EAAgBxH,EAAaC,GAC7B,OAAA,IAAIsH,EAAgBvH,EAAaC,GAG1C51D,OAAOC,QAAU,CAAEi9D,gBAAAA,EAAiBC,gBAAAA;;ACxEpCn9D,OAAOC,QAAU,SAAcmD,GACtB,OAAA,IAAI4wB,aAAa5wB,GAAM+1D,KAAK;;ACDrC,IAAMiE,EAAO18D,QAAQ,UAErBV,OAAOC,QAAU,SAAgBy5B,EAAOC,GAEjC,IADCr1B,IAAAA,EAAS,IAAIhB,MAAMq2B,GAChBlG,EAAI,EAAGA,EAAIkG,EAAQlG,IAC1BnvB,EAAOmvB,GAAK2pC,EAAK1jC,GAEZp1B,OAAAA;;ACUT,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAjBA,IAAM+4D,EAAS38D,QAAQ,wBACjBwzD,EAAUxzD,QAAQ,yBACNA,EAAAA,QAAQ,WAAlB00D,EAAAA,EAAAA,MAEFkI,EAaN,SAAA,GAZcnpC,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDmL,WACAg1B,EAAAA,QAAU+I,EAAO,EAAK3jC,MAAO,EAAKC,QAClC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,QAJnB,EAYxB,OAAA,EAAA,EAbmBy7B,GAanB,EAAA,GAJA,SAASgI,EAAKjpC,GACL,OAAA,IAAImpC,EAAKnpC,GAGlBn0B,OAAOC,QAAU,CACfq9D,KAAAA,EACAF,KAAAA;;ACmCF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAtDuB18D,IAAAA,EAAAA,QAAQ,WAAvBu0D,EAAAA,EAAAA,WACev0D,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACmBnzD,EAAAA,QAAQ,sBAA3BF,EAAAA,EAAAA,eACF0zD,EAAUxzD,QAAQ,yBAExB,SAAS60D,EAAQuC,GACR53D,OAAAA,KAAKK,KAAKu3D,EAAO,KAAKh7B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAGrD,SAASukC,EAAQzD,EAASiJ,GACjB/8D,OAAAA,EACL8zD,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACnC+pC,EAAO,KAAKzgC,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAIhCgqC,IAAAA,EAsCN,SAAA,GArCcvF,SAAAA,EAAAA,GAAY,IAAA,EAAA,EAAA,KAAA,IACtB,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACKA,WAAaA,EAEe,IAAA,EAAA,EAAKA,WAA9Bv+B,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,OAAQa,EAAAA,EAAAA,MAJD,OAKjBd,EAAAA,MAAQA,EACRC,EAAAA,OAASA,EACTa,EAAAA,MAAQA,EACR8E,EAAAA,WACAg1B,EAAAA,QAAUJ,EAAQ,EAAKx6B,MAAO,EAAKC,QACnC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,QAVjB,EAqC1B,OAAA,EAAA,EAtCmBs7B,GAsCnB,EAAA,EAAA,CAAA,CAAA,IAAA,eAxBiB,MAAA,WACRL,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,UAGvBk7B,KAAAA,cAAgBhB,EAAWkE,EAAS,CACvCzjC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,QAC1BwF,UAAW,CAAC3+B,OAiBlB,CAAA,IAAA,UAbY,MAAA,WACH8zD,KAAAA,QAAU,KAAKM,cAAc,KAAKqD,WAAW3D,WAYtD,CAAA,IAAA,UATY,MAAA,WACHD,KAAAA,OAAS,KAAKQ,cAAc,KAAKP,QAAS,KAAKD,YAQxD,EAAA,GAJA,SAAS9zD,EAAK03D,GACL,OAAA,IAAIuF,EAAKvF,GAGlBj4D,OAAOC,QAAU,CAAEu9D,KAAAA,EAAMj9D,KAAAA,EAAMg1D,QAAAA,EAASwC,QAAAA;;AC9BxC,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAxBA,IAAM7D,EAAUxzD,QAAQ,yBACNA,EAAAA,QAAQ,WAAlB00D,EAAAA,EAAAA,MAEFqI,EAqBN,SAAA,GApBctpC,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDmL,WACAg1B,EAAAA,QAAUJ,EAAQ,EAAKx6B,MAAO,EAAKC,QACnC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,QAJnB,EAoBxB,OAAA,EAAA,EArBoBy7B,GAqBpB,EAAA,EAAA,CAAA,CAAA,IAAA,UAbY,MAAA,cAaZ,CAAA,IAAA,UATY,MAAA,gBASZ,EAAA,GAJA,SAASnB,EAAM9/B,GACN,OAAA,IAAIspC,EAAMtpC,GAGnBn0B,OAAOC,QAAU,CACfw9D,MAAAA,EACAxJ,MAAAA;;AC1BcvzD,IAAAA,EAAAA,QAAQ,SAAhB2kC,EAAAA,EAAAA,IACa3kC,EAAAA,QAAQ,cAArBs8D,EAAAA,EAAAA,SACat8D,EAAAA,QAAQ,cAArBm3D,EAAAA,EAAAA,SACoBn3D,EAAAA,QAAQ,sBAA5By8D,EAAAA,EAAAA,gBACSz8D,EAAAA,QAAQ,UAAjB08D,EAAAA,EAAAA,KACY18D,EAAAA,QAAQ,aAApBE,EAAAA,EAAAA,QACWF,EAAAA,QAAQ,YAAnBqC,EAAAA,EAAAA,OACSrC,EAAAA,QAAQ,UAAjBH,EAAAA,EAAAA,KACUG,EAAAA,QAAQ,WAAlBuzD,EAAAA,EAAAA,MAER,SAASyJ,EAAIvpC,EAAUwpC,EAAgB/vD,GAC7B+rB,IAAAA,EAAWxF,EAAXwF,OACFikC,EAAoB76D,EAAO,CAAE42B,OAAAA,EAAQD,MAAO9rB,EAAM+rB,SAClDkkC,EAAsB96D,EAAO,CAAE22B,MAAOC,EAAQA,OAAAA,IAC9CmkC,EAAiB7J,EAAM,CAAEt6B,OAAAA,IACzBokC,EAAan9D,EACjBykC,EACEA,EACEwyB,EAAS+F,EAAmBhwD,GAC5BiqD,EAASgG,EAAqBF,IAEhCG,IAIEE,EAAmBj7D,EAAO,CAAE42B,OAAAA,EAAQD,MAAO9rB,EAAM+rB,SACjDskC,EAAqBl7D,EAAO,CAAE22B,MAAOC,EAAQA,OAAAA,IAC7CukC,EAAgBjK,EAAM,CAAEt6B,OAAAA,IACxBwkC,EAAYv9D,EAChBykC,EACEA,EACEwyB,EAASmG,EAAkBpwD,GAC3BiqD,EAASoG,EAAoBN,IAE/BO,IAIEE,EAAcr7D,EAAO,CAAE42B,OAAAA,EAAQD,MAAO9rB,EAAM+rB,SAC5C0kC,EAAgBt7D,EAAO,CAAE22B,MAAOC,EAAQA,OAAAA,IACxC2kC,EAAWrK,EAAM,CAAEt6B,OAAAA,IACnB4kC,EAAOh+D,EACX8kC,EACEA,EACEwyB,EAASuG,EAAaxwD,GACtBiqD,EAASwG,EAAelB,EAAgBgB,EAAWR,KAErDW,IAMGj5B,OAAAA,EACL83B,EACE93B,EAAI+3B,EAAKW,EAAWS,KAAMT,EAAWU,SAAUzB,EAASe,IACxDQ,GAEFpB,EAAgBQ,EAAgBI,IAIpC/9D,OAAOC,QAAU,CACfy9D,IAAAA;;ACQF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAvEkBh9D,IAAAA,EAAAA,QAAQ,WAAlB00D,EAAAA,EAAAA,MACFlB,EAAUxzD,QAAQ,yBACAA,EAAAA,QAAQ,uBAAxBszD,EAAAA,EAAAA,YACetzD,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WAEFxgC,EAkEN,SAAA,GAjEcc,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDmL,WACAg1B,EAAAA,QAAU,KACVoK,EAAAA,aAAe,KACfrK,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,QALnB,EAiExB,OAAA,EAAA,EAlEoBy7B,GAkEpB,EAAA,EAAA,CAAA,CAAA,IAAA,eAzDiB,MAAA,WACM,IAAf,KAAK17B,OACF67B,KAAAA,QAAU,KAAKoJ,UACfD,KAAAA,aAAe7K,EAAW,SAASxzD,GAC/BA,OAAAA,EAAM,KAAKy8B,OAAOrJ,IACxB,CACDa,OAAQ,CAAC,EAAG,KAAKqF,WAGd+kC,KAAAA,aAAe,SAAC5G,GAAWA,OAAAA,KAgDtC,CAAA,IAAA,UA5CUA,MAAAA,SAAAA,GACFA,GAAAA,EAAOl1D,SAAW,KAAK+2B,OAAS,KAAKD,MAClC46B,KAAAA,QAAUN,EAAY8D,EAAQ,CAAC,KAAKp+B,MAAO,KAAKC,aAChD,CAAA,GACLm+B,EAAOl1D,SAAW,KAAK+2B,QACvBm+B,EAAO,GAAGl1D,SAAW,KAAK82B,MAIpB,MAAA,IAAI7mB,MAAM,qCAFXyhD,KAAAA,QAAUwD,KAqCrB,CAAA,IAAA,YA/BYA,MAAAA,SAAAA,GACHxD,KAAAA,QAAU,KAAKoK,aAAa5G,KA8BrC,CAAA,IAAA,UA3BY,MAAA,cA2BZ,CAAA,IAAA,QAvBU,MAAA,WACDzD,KAAAA,OAASH,EAAQ,KAAKx6B,MAAO,KAAKC,UAsB3C,CAAA,IAAA,SAnBW,MAAA,WAIF,IAHCq7B,IAAAA,EAAY,GACS,EAAA,KAAK3xD,YAAxBoxD,EAAAA,EAAAA,SAAUttD,EAAAA,EAAAA,KACZ3D,EAAO1B,OAAO0B,KAAKixD,GAChB9xD,EAAI,EAAGA,EAAIa,EAAKZ,OAAQD,IAAK,CAC9Be,IAAAA,EAAMF,EAAKb,GAEL,WAARe,GAA4B,YAARA,IACxBsxD,EAAUtxD,GAAO,KAAKA,IAGjBsxD,OADPA,EAAUllD,KAAO3I,EACV6tD,MAQX,EAAA,GAJA,SAASpnD,EAAMumB,GACN,OAAA,IAAId,EAAMc,GAGnBn0B,OAAOC,QAAU,CACfozB,MAAAA,EACAzlB,MAAAA;;ACtBF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAnDuBlN,IAAAA,EAAAA,QAAQ,WAAvBu0D,EAAAA,EAAAA,WACev0D,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACF+K,EAAMl+D,QAAQ,4BACdd,EAAWg/D,EAAIh/D,SACfE,EAAU8+D,EAAI9+D,QAEpB,SAASy1D,EAAQuC,GACRl4D,OAAAA,EAASk4D,EAAO,KAAKh7B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAGpD,SAASukC,EAAQzD,EAASD,GACjBv0D,OAAAA,EACLw0D,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACnC6gC,EAAO,KAAKv3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAIhCqrC,IAAAA,EAkCN,SAAA,GAjCc5G,SAAAA,EAAAA,GAAY,IAAA,EAAA,EAAA,KAAA,IACtB,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACKA,WAAaA,EACVv+B,IAAAA,EAAyBu+B,EAAzBv+B,MAAOC,EAAkBs+B,EAAlBt+B,OAAQa,EAAUy9B,EAAVz9B,MAHD,OAIjBd,EAAAA,MAAQA,EACRC,EAAAA,OAASA,EACTa,EAAAA,MAAQA,EACR8E,EAAAA,WAPiB,EAiC1B,OAAA,EAAA,EAlCwB21B,GAkCxB,EAAA,EAAA,CAAA,CAAA,IAAA,eAvBiB,MAAA,WACRL,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCp2B,UAAW,CAACv/B,KAGTi1D,KAAAA,cAAgBhB,EAAWkE,EAAS,CACvC54B,UAAW,CAACr/B,OAiBlB,CAAA,IAAA,UAbY,MAAA,WACHw0D,KAAAA,QAAU,KAAKM,cAAc,KAAKqD,WAAW3D,WAYtD,CAAA,IAAA,UATY,MAAA,WACHD,KAAAA,OAAS,KAAKQ,cAAc,KAAKP,QAAS,KAAKD,YAQxD,EAAA,GAJA,SAAS5zD,EAAUw3D,GACV,OAAA,IAAI4G,EAAU5G,GAGvBj4D,OAAOC,QAAU,CAAE4+D,UAAAA,EAAWp+D,UAAAA,EAAW80D,QAAAA,EAASwC,QAAAA;;ACnDlCr3D,IAAAA,EAAAA,QAAQ,SAAhB2kC,EAAAA,EAAAA,IACa3kC,EAAAA,QAAQ,cAArBm3D,EAAAA,EAAAA,SACoBn3D,EAAAA,QAAQ,sBAA5By8D,EAAAA,EAAAA,gBACWz8D,EAAAA,QAAQ,YAAnBqC,EAAAA,EAAAA,OACYrC,EAAAA,QAAQ,aAApBE,EAAAA,EAAAA,QACSF,EAAAA,QAAQ,UAAjBH,EAAAA,EAAAA,KACUG,EAAAA,QAAQ,WAAlBuzD,EAAAA,EAAAA,MAER,SAAS6K,EAAK3qC,EAAUwpC,EAAgB/vD,GAC9B+rB,IAAAA,EAAWxF,EAAXwF,OACFolC,EAAmBh8D,EAAO,CAAE42B,OAAAA,EAAQD,MAAO9rB,EAAM+rB,SACjDqlC,EAAqBj8D,EAAO,CAAE22B,MAAOC,EAAQA,OAAAA,IAC7CslC,EAAgBhL,EAAM,CAAEt6B,OAAAA,IACxBulC,EAAYt+D,EAChBykC,EACEA,EACEwyB,EAASkH,EAAkBnxD,GAC3BiqD,EAASmH,EAAoBrB,IAE/BsB,IAIEE,EAAoBp8D,EAAO,CAAE42B,OAAAA,EAAQD,MAAO9rB,EAAM+rB,SAClDylC,EAAsBr8D,EAAO,CAAE22B,MAAOC,EAAQA,OAAAA,IAC9C0lC,EAAiBpL,EAAM,CAAEt6B,OAAAA,IACzB2lC,EAAa1+D,EACjBykC,EACEA,EACEwyB,EAASsH,EAAmBvxD,GAC5BiqD,EAASuH,EAAqBzB,IAEhC0B,IAIEE,EAAoBx8D,EAAO,CAAE42B,OAAAA,EAAQD,MAAO9rB,EAAM+rB,SAClD6lC,EAAsBz8D,EAAO,CAAE22B,MAAOC,EAAQA,OAAAA,IAC9C8lC,EAAiBxL,EAAM,CAAEt6B,OAAAA,IACzB+lC,EAAa9+D,EACjBykC,EACEA,EACEwyB,EAAS0H,EAAmB3xD,GAC5BiqD,EAAS2H,EAAqB7B,IAEhC8B,IAIEE,EAAgB58D,EAAO,CAAE42B,OAAAA,EAAQD,MAAO9rB,EAAM+rB,SAC9CimC,EAAkB78D,EAAO,CAAE22B,MAAOC,EAAQA,OAAAA,IAC1CkmC,EAAa5L,EAAM,CAAEt6B,OAAAA,IACrBmmC,EAASv/D,EACb8kC,EACEA,EACEwyB,EAAS8H,EAAe/xD,GACxBiqD,EAAS+H,EAAiBjC,IAE5BkC,IAKEE,EAAa5C,EAAgBmC,EAAY1xD,GACzCoyD,EAAY7C,EAAgB+B,EAAWY,GACvCvB,EAAOl5B,EAAI06B,EAAYC,GAGtB7C,OAAAA,EAAgBuC,EAAYn/D,EAAKg+D,IAG1Cv+D,OAAOC,QAAU,CACf6+D,KAAAA;;ACRF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAhEuBp+D,IAAAA,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACFI,EAAQvzD,QAAQ,sBAChBwzD,EAAUxzD,QAAQ,yBAClByzD,EAAUzzD,QAAQ,yBACLA,EAAAA,QAAQ,WAAnBy0D,EAAAA,EAAAA,OAER,SAAS8K,EAAU3L,EAAS4L,GAEnB5L,OAAAA,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAK0sC,EAAa,KAAKpjC,OAAOtJ,GAG1E,SAAS2sC,EAAU7L,EAAS4L,GAEnB5L,OAAAA,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAK0sC,EAAa,KAAKpjC,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAGnF4sC,IAAAA,EAgDN,SAAA,GA/CcjsC,SAAAA,EAAAA,EAAU8jC,GAAY,IAAA,EAAA,OAAA,EAAA,KAAA,IAC1B9jC,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACD8jC,WAAaA,EACbv+B,EAAAA,MAAQu+B,EAAWv+B,MACnBC,EAAAA,OAASs+B,EAAWt+B,OACpBa,EAAAA,MAAQy9B,EAAWz9B,MACnB8E,EAAAA,WACD,EAAK9E,MAAQ,GACV85B,EAAAA,QAAUH,EAAQ,EAAKz6B,MAAO,EAAKC,OAAQ,EAAKa,OAChD65B,EAAAA,OAASF,EAAQ,EAAKz6B,MAAO,EAAKC,OAAQ,EAAKa,OAC/C+iC,EAAAA,OAASpJ,EAAQ,EAAKz6B,MAAO,EAAKC,OAAQ,EAAKa,QAC3C,EAAKb,OAAS,GAClB26B,EAAAA,QAAUJ,EAAQ,EAAKx6B,MAAO,EAAKC,QACnC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,QAClC4jC,EAAAA,OAASrJ,EAAQ,EAAKx6B,MAAO,EAAKC,UAElC26B,EAAAA,QAAUL,EAAM,EAAKv6B,OACrB26B,EAAAA,OAASJ,EAAM,EAAKv6B,OACpB6jC,EAAAA,OAAStJ,EAAM,EAAKv6B,QAlBK,EA+CpC,OAAA,EAAA,EAhDqBy7B,GAgDrB,EAAA,EAAA,CAAA,CAAA,IAAA,eAzBiB,MAAA,WACPkL,IAAAA,EAA2B,IAAf,KAAK3mC,MAAcumC,EAAYE,EAC5CtL,KAAAA,cAAgBhB,EAAWwM,EAAW,CACzC/rC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,YAsBhC,CAAA,IAAA,UAlBY,MAAA,WAEH26B,KAAAA,QAAU,KAAK2D,WAAW3D,UAgBnC,CAAA,IAAA,UAbU4L,MAAAA,SAAAA,GAGD3C,KAAAA,OAAS,KAAK1I,cAAc,KAAKP,QAAS4L,GAC1C7L,KAAAA,OAAS,KAAKkJ,OACdtF,KAAAA,WAAW5D,OAAS,KAAKA,WAQlC,EAAA,GAJA,SAASzuC,EAAOuO,EAAU8jC,GACjB,OAAA,IAAImI,EAAOjsC,EAAU8jC,GAG9Bj4D,OAAOC,QAAU,CACfmgE,OAAAA,EACAx6C,OAAAA;;AClEcllB,IAAAA,EAAAA,QAAQ,SAAhB2kC,EAAAA,EAAAA,IACa3kC,EAAAA,QAAQ,cAArBm3D,EAAAA,EAAAA,SACWn3D,EAAAA,QAAQ,YAAnBqC,EAAAA,EAAAA,OACWrC,EAAAA,QAAQ,YAAnBklB,EAAAA,EAAAA,OACUllB,EAAAA,QAAQ,WAAlBuzD,EAAAA,EAAAA,MAER,SAAS3/B,EAAOH,EAAU8jC,GAChBt+B,IAAAA,EAAWxF,EAAXwF,OACF+lC,EAAa38D,EAAO,CAAE42B,OAAAA,EAAQD,MAAOu+B,EAAWt+B,SAChDrF,EAAS2/B,EAAM,CAAEt6B,OAAAA,IACjB2mC,EAAsBzI,EAAS6H,EAAYzH,GAC1CryC,OAAAA,EAAOuO,EAAUkR,EAAIi7B,EAAqBhsC,IAGnDt0B,OAAOC,QAAU,CACfq0B,OAAAA;;ACoMF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAnNmB5zB,IAAAA,EAAAA,QAAQ,WAAnBy0D,EAAAA,EAAAA,OACez0D,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WAC0BnzD,EAAAA,QAAQ,4BAAlCo4D,EAAAA,EAAAA,WAAYJ,EAAAA,EAAAA,UACdvE,EAAUzzD,QAAQ,yBAClB04D,EAAW14D,QAAQ,0BAEzB,SAAS6/D,EAAWlgE,GACXA,OAAAA,EAGT,SAASmgE,EAAWngE,GACXA,OAAAA,EAGT,SAASk1D,EAAQuC,GAcV,IAbCtkC,IAAAA,EAAItzB,KAAK4C,MACZ,KAAKg6B,OAAOtJ,EAAI,KAAKc,OAAOd,EAAK,KAAKqL,UAAU+6B,WAC/C,KAAK/6B,UAAUk6B,UAEbtlC,EAAIvzB,KAAK4C,MACZ,KAAKg6B,OAAOrJ,EAAI,KAAKa,OAAOb,EAAK,KAAKoL,UAAUo7B,YAC/C,KAAKp7B,UAAUo6B,UAEfwH,GAAgBnvC,EAAAA,EAChBovC,GAAY,EACZC,GAAY,EAGPxG,EAAU,EAAGA,EAAU,KAAKt7B,UAAUm7B,aAAcG,IAGtD,IADCC,IAAAA,EAASD,EAAU1mC,EAChB4mC,EAAU,EAAGA,EAAU,KAAKx7B,UAAU86B,YAAaU,IAAW,CAC/DC,IAAAA,EAASD,EAAU7mC,EAEvB4mC,GAAAA,GAAU,GACVA,EAAS,KAAKv7B,UAAUo7B,aACxBK,GAAU,GACVA,EAAS,KAAKz7B,UAAU+6B,WACxB,CACMhsD,IAAAA,EAAQkqD,EAAO,KAAKh7B,OAAOvJ,GAAG6mC,GAAQE,GACxC1sD,EAAQ6yD,IACVA,EAAe7yD,EACf+yD,EAAWvG,EACXsG,EAAWpG,IAOZmG,OAFPF,EAAWI,GACXH,EAAWE,GACJD,EAGT,SAAS1I,EAAQ1D,EAAQuM,EAASC,GAU3B,IATCrtC,IAAAA,EAAItzB,KAAK4C,MACZ,KAAKg6B,OAAOtJ,EAAI,KAAKc,OAAOd,EAAK,KAAKqL,UAAUiiC,aAE7CrtC,EAAIvzB,KAAK4C,MACZ,KAAKg6B,OAAOrJ,EAAI,KAAKa,OAAOb,EAAK,KAAKoL,UAAUkiC,cAG/C1gE,EAAQ,EAEH2gE,EAAU,EAAGA,EAAU,KAAKniC,UAAUo7B,YAAa+G,IACrD,IAAA,IAAIC,EAAU,EAAGA,EAAU,KAAKpiC,UAAU+6B,WAAYqH,IAAW,CAC9DC,IAAAA,EAAeL,EAAQG,GAASC,GAChCE,EAAeP,EAAQI,GAASC,GAClCC,IAAiB1tC,GAAK2tC,IAAiB1tC,IACzCpzB,GAASg0D,EAAO2M,GAASC,IAKxB5gE,OAAAA,EAGT,SAAS+gE,EAAU/M,EAAQuM,EAASC,GAU7B,IATCrtC,IAAAA,EAAItzB,KAAK4C,MACZ,KAAKg6B,OAAOtJ,EAAI,KAAKc,OAAOd,EAAK,KAAKqL,UAAUiiC,aAE7CrtC,EAAIvzB,KAAK4C,MACZ,KAAKg6B,OAAOrJ,EAAI,KAAKa,OAAOb,EAAK,KAAKoL,UAAUkiC,cAG/C1gE,EAAQ,EAEH2gE,EAAU,EAAGA,EAAU,KAAKniC,UAAUo7B,YAAa+G,IACrD,IAAA,IAAIC,EAAU,EAAGA,EAAU,KAAKpiC,UAAU+6B,WAAYqH,IAAW,CAC9DC,IAAAA,EAAeL,EAAQ,KAAK/jC,OAAOvJ,GAAGytC,GAASC,GAC/CE,EAAeP,EAAQ,KAAK9jC,OAAOvJ,GAAGytC,GAASC,GACjDC,IAAiB1tC,GAAK2tC,IAAiB1tC,IACzCpzB,GAASg0D,EAAO,KAAKv3B,OAAOvJ,GAAGytC,GAASC,IAKvC5gE,OAAAA,EAGHghE,IAAAA,EAgHN,SAAA,GArGcltC,SAAAA,EAAAA,EAAU8jC,GAAY,IAAA,EAAA,OAAA,EAAA,KAAA,IAC1B9jC,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KAEDykC,OAAS,KACTD,EAAAA,QAAU,KACVE,EAAAA,QAAU,KACfH,EAAgBvkC,EAAAA,GAAAA,GAEX6kC,EAAAA,QAAU,KACVD,EAAAA,SAAW,KACXE,EAAAA,SAAW,KAChBH,EAAiB3kC,EAAAA,GAAAA,GAEZmnC,EAAAA,YAAcnnC,EAASmnC,YACvB3B,EAAAA,YAAcxlC,EAASwlC,YACvBK,EAAAA,aAAe7lC,EAAS6lC,aAExBtgC,EAAAA,MAAQx5B,KAAK4C,OACfm1D,EAAWv+B,MAAwB,EAAhB,EAAKq/B,SAAe,EAAKY,aAAe,EAAKhB,QAC/D,GAECh/B,EAAAA,OAASz5B,KAAK4C,OAChBm1D,EAAWt+B,OAAyB,EAAhB,EAAKs/B,SAAe,EAAKe,cAC5C,EAAKnB,QACL,GAGCr+B,EAAAA,MAAQ,EAAK8gC,YAEbhH,EAAAA,QAAU8E,EAAS,EAAK1/B,MAAO,EAAKC,OAAQ,EAAKa,OACjD65B,EAAAA,OAASF,EAAQ,EAAKz6B,MAAO,EAAKC,OAAQ,EAAKa,OAE/C8+B,EAAAA,QAAUF,EAAS,EAAKO,YAAa,EAAKK,aAAc,EAAKsB,aAC7Dd,EAAAA,aAAerG,EAAQ,EAAKwF,YAAa,EAAKK,aAAc,EAAKsB,aAEjEE,EAAAA,aAAe,KACfC,EAAAA,YAAc,KACdxD,EAAAA,WAAaA,EACb34B,EAAAA,WAtC2B,EAqGpC,OAAA,EAAA,EAhHmB61B,GAgHnB,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WA/GwB,IAAA,WACb,MAAA,CACL6D,QAAS,EACTuC,KAAM,EACN5B,YAAa,EACbK,aAAc,EACdsB,YAAa,OAyGnB,EAAA,EAAA,CAAA,CAAA,IAAA,eA5DiB,MAAA,WACR1G,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,OAAQ,KAAKa,OACvClB,IAAK,CACHunC,QAASL,EACTI,QAASL,GAEX1hC,UAAW,CACT+6B,WAAY,KAAK3B,WAAWv+B,MAC5BugC,YAAa,KAAKhC,WAAWt+B,OAC7Bo/B,SAAU,KAAKA,SACfE,SAAU,KAAKA,SACfe,aAAc,KAAKA,aACnBL,YAAa,KAAKA,eAIjB9E,KAAAA,cAAgBhB,EAAWkE,EAAS,CACvCzjC,OAAQ,CAAC,KAAK2jC,WAAWv+B,MAAO,KAAKu+B,WAAWt+B,OAAQ,KAAKs+B,WAAWz9B,OACxEqE,UAAW,CACTiiC,YAAa,KAAKpnC,MAClBqnC,aAAc,KAAKpnC,OACnB2nC,YAAa,KAAK9mC,MAClBu+B,SAAU,KAAKA,SACfE,SAAU,KAAKA,cAoCvB,CAAA,IAAA,UA/BY,MAAA,WACF3E,IAAAA,EAAU,KAAKM,cAAc,KAAKqD,WAAW3D,SAI5C,OAHFuM,KAAAA,QAAUvM,EAAQuM,QAClBD,KAAAA,QAAUtM,EAAQsM,QAClBtM,KAAAA,QAAUA,EAAQhwD,OAChB,KAAKgwD,UA0BhB,CAAA,IAAA,UAvBY,MAAA,WAEM,KAAK2D,WAAW5D,OAAOzxD,OACtB,KAAKq1D,WAAW5D,OAAO,GAAGzxD,OAC3B,KAAKq1D,WAAW5D,OAAO,GAAG,GAAGzxD,OACvB,EAAA,KAAKq1D,WAAW5D,OAAO,GAAG,GAAG,IAC5C4D,KAAAA,WAAW5D,OAAS,KAAKQ,cAC5B,KAAKR,OACL,KAAKwM,QACL,KAAKD,SAGO,KAAK3I,WAAW5D,OAAOzxD,OACtB,KAAKq1D,WAAW5D,OAAO,GAAGzxD,OAC3B,KAAKq1D,WAAW5D,OAAO,GAAG,GAAGzxD,OACvB,EAAA,KAAKq1D,WAAW5D,OAAO,GAAG,GAAG,QAQrD,EAAA,GAJA,SAASkN,EAAKptC,EAAU8jC,GACf,OAAA,IAAIoJ,EAAKltC,EAAU8jC,GAG5Bj4D,OAAOC,QAAU,CAAEohE,KAAAA,EAAME,KAAAA,EAAMhM,QAAAA,EAASwC,QAAAA,EAASqJ,UAAAA;;AC7HjD,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAtFuB1gE,IAAAA,EAAAA,QAAQ,WAAvBu0D,EAAAA,EAAAA,WACev0D,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACsBnzD,EAAAA,QAAQ,sBAA9Bd,EAAAA,EAAAA,SAAUE,EAAAA,EAAAA,QACZo0D,EAAUxzD,QAAQ,yBAClByzD,EAAUzzD,QAAQ,yBAExB,SAAS60D,EAAQuC,GACRl4D,OAAAA,EAASk4D,EAAO,KAAKh7B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAGpD,SAASukC,EAAQzD,EAASD,GACjBv0D,OAAAA,EACLw0D,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACnC6gC,EAAO,KAAKv3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAItC,SAASgpC,EAAU1E,GACVl4D,OAAAA,EAASk4D,EAAO,KAAKh7B,OAAOvJ,GAAG,KAAKuJ,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAGnE,SAAS4tC,EAAU9M,EAASD,GACnBv0D,OAAAA,EACLw0D,EAAQ,KAAKx3B,OAAOvJ,GAAG,KAAKuJ,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAClD6gC,EAAO,KAAKv3B,OAAOvJ,GAAG,KAAKuJ,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAI/CguC,IAAAA,EA0DN,SAAA,GAzDcvJ,SAAAA,EAAAA,GAAY,IAAA,EAAA,EAAA,KAAA,IACtB,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACKA,WAAaA,EAEVv+B,IAAAA,EAAyBu+B,EAAzBv+B,MAAOC,EAAkBs+B,EAAlBt+B,OAAQa,EAAUy9B,EAAVz9B,MAJD,OAKjBd,EAAAA,MAAQA,EACRC,EAAAA,OAASA,EACT2F,EAAAA,WACD9E,EAAQ,GACLA,EAAAA,MAAQA,EACR85B,EAAAA,QAAUH,EAAQz6B,EAAOC,EAAQa,GACjC65B,EAAAA,OAASF,EAAQz6B,EAAOC,EAAQa,KAEhCA,EAAAA,MAAQ,EACR85B,EAAAA,QAAUJ,EAAQx6B,EAAOC,GACzB06B,EAAAA,OAASH,EAAQx6B,EAAOC,IAfT,EAyD1B,OAAA,EAAA,EA1DmBs7B,GA0DnB,EAAA,EAAA,CAAA,CAAA,IAAA,eAtCiB,MAAA,WACoB,IAAA,EAAA,KAAKgD,WAA9Bv+B,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,OAAQa,EAAAA,EAAAA,MACnB,KAAKA,MAAQ,GACVo6B,KAAAA,cAAgBf,EAAW2I,EAAW,CACzCloC,OAAQ,CAACoF,EAAOC,EAAQa,GACxB2E,UAAW,CAACv/B,KAGTi1D,KAAAA,cAAgBhB,EAAWuN,EAAW,CACzC9sC,OAAQ,CAACoF,EAAOC,EAAQa,GACxB2E,UAAW,CAACr/B,OAGT80D,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAACoF,EAAOC,GAChBwF,UAAW,CAACv/B,KAGTi1D,KAAAA,cAAgBhB,EAAWkE,EAAS,CACvCzjC,OAAQ,CAACoF,EAAOC,GAChBwF,UAAW,CAACr/B,QAkBpB,CAAA,IAAA,UAbY,MAAA,WACHw0D,KAAAA,QAAU,KAAKM,cAAc,KAAKqD,WAAW3D,WAYtD,CAAA,IAAA,UATY,MAAA,WACH2D,KAAAA,WAAW5D,OAAS,KAAKQ,cAAc,KAAKP,QAAS,KAAKD,YAQnE,EAAA,GAJA,SAAS1zD,EAAKs3D,GACL,OAAA,IAAIuJ,EAAKvJ,GAGlBj4D,OAAOC,QAAU,CAAEuhE,KAAAA,EAAM7gE,KAAAA,EAAM40D,QAAAA,EAASwC,QAAAA,EAASyE,UAAAA,EAAW4E,UAAAA;;ACtF3C1gE,IAAAA,EAAAA,QAAQ,UAAjBC,EAAAA,EAAAA,KACQD,EAAAA,QAAQ,SAAhB2kC,EAAAA,EAAAA,IACa3kC,EAAAA,QAAQ,cAArBm3D,EAAAA,EAAAA,SACWn3D,EAAAA,QAAQ,YAAnBqC,EAAAA,EAAAA,OACUrC,EAAAA,QAAQ,WAAlBuzD,EAAAA,EAAAA,MAER,SAASwN,EAAUttC,EAAUvmB,EAAO+vD,GAC1BhkC,IAAAA,EAAWxF,EAAXwF,OAERgkC,EAAe+D,cAAc,EAAG/nC,GAG1B95B,IAAAA,EAASkD,EAAO,CAAEoE,KAAM,SAAUwyB,OAAAA,EAAQD,MAAO9rB,EAAM+rB,SAEvDgoC,EAAa5+D,EAAO,CAAEoE,KAAM,aAAcwyB,OAAAA,EAAQD,MAAOC,IAEzD4hC,EAAOtH,EAAM,CAAE9sD,KAAM,OAAQwyB,OAAAA,IAE5Bh5B,OAAAA,EACL0kC,EACEA,EAAIwyB,EAASh4D,EAAQ+N,GAAQiqD,EAAS8J,EAAYhE,IAClDpC,IAKNv7D,OAAOC,QAAU,CACfwhE,UAAAA;;ACDF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA1BiB/gE,IAAAA,EAAAA,QAAQ,UAAjB0zD,EAAAA,EAAAA,KAEFwN,EAwBN,SAAA,GAvBcztC,SAAAA,EAAAA,GAAU,IAAA,EAAA,OAAA,EAAA,KAAA,IACdA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDmL,WAFe,EAuBxB,OAAA,EAAA,EAxByB80B,GAwBzB,EAAA,EAAA,CAAA,CAAA,IAAA,UAlBY,MAAA,WACHE,KAAAA,QAAU,KAAKwD,SAiBxB,CAAA,IAAA,QAdU,MAAA,gBAcV,EAAA,GATA,SAAS+J,EAAM/J,EAAQgK,GACdhK,OAAAA,EAAO,KAAKh7B,OAAOtJ,GAAKsuC,EAAQ,KAAKhlC,OAAOtJ,GAIrD,SAASuuC,EAAW5tC,EAAU8jC,GACrB,OAAA,IAAI2J,EAAWztC,EAAU8jC,GAGlCj4D,OAAOC,QAAU,CACf2hE,WAAAA,EACAG,WAAAA,EACAF,MAAAA;;AC8NF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA3PuBnhE,IAAAA,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WACWnzD,EAAAA,QAAQ,WAAnBy0D,EAAAA,EAAAA,OACF4B,EAASr2D,QAAQ,uBACjBs2D,EAAWt2D,QAAQ,0BACnB04D,EAAW14D,QAAQ,0BACnBuzD,EAAQvzD,QAAQ,sBAChBwzD,EAAUxzD,QAAQ,yBAClByzD,EAAUzzD,QAAQ,yBAExB,SAASshE,EAAYlK,GAEd,IADDmK,IAAAA,GAAY3wC,EAAAA,EACPkC,EAAI,EAAGA,EAAI,KAAKqL,UAAU+6B,WAAYpmC,IAAK,CAC5C5lB,IAAAA,EAAQkqD,EAAOtkC,GACjB5lB,EAAQq0D,IACVA,EAAWr0D,GAGRq0D,OAAAA,EAGT,SAASC,EAAcpK,GAEhB,IADDmK,IAAAA,GAAY3wC,EAAAA,EACPmC,EAAI,EAAGA,EAAI,KAAKoL,UAAUo7B,YAAaxmC,IACzC,IAAA,IAAID,EAAI,EAAGA,EAAI,KAAKqL,UAAU+6B,WAAYpmC,IAAK,CAC5C5lB,IAAAA,EAAQkqD,EAAOrkC,GAAGD,GACpB5lB,EAAQq0D,IACVA,EAAWr0D,GAIVq0D,OAAAA,EAGT,SAASE,EAAcrK,GAEhB,IADDmK,IAAAA,GAAY3wC,EAAAA,EACPiC,EAAI,EAAGA,EAAI,KAAKsL,UAAUq7B,WAAY3mC,IACxC,IAAA,IAAIE,EAAI,EAAGA,EAAI,KAAKoL,UAAUo7B,YAAaxmC,IACzC,IAAA,IAAID,EAAI,EAAGA,EAAI,KAAKqL,UAAU+6B,WAAYpmC,IAAK,CAC5C5lB,IAAAA,EAAQkqD,EAAOvkC,GAAGE,GAAGD,GACvB5lB,EAAQq0D,IACVA,EAAWr0D,GAKZq0D,OAAAA,EAGT,SAASG,EAAOtK,GAET,IADDV,IAAAA,EAAM,EACD5jC,EAAI,EAAGA,EAAI,KAAKqL,UAAU+6B,WAAYpmC,IAC7C4jC,GAAOU,EAAOtkC,GAET4jC,OAAAA,EAGT,SAASiL,EAASvK,GAEX,IADDV,IAAAA,EAAM,EACD3jC,EAAI,EAAGA,EAAI,KAAKoL,UAAUo7B,YAAaxmC,IACzC,IAAA,IAAID,EAAI,EAAGA,EAAI,KAAKqL,UAAU+6B,WAAYpmC,IAC7C4jC,GAAOU,EAAOrkC,GAAGD,GAGd4jC,OAAAA,EAGT,SAASkL,EAASxK,GAEX,IADDV,IAAAA,EAAM,EACD7jC,EAAI,EAAGA,EAAI,KAAKsL,UAAUq7B,WAAY3mC,IACxC,IAAA,IAAIE,EAAI,EAAGA,EAAI,KAAKoL,UAAUo7B,YAAaxmC,IACzC,IAAA,IAAID,EAAI,EAAGA,EAAI,KAAKqL,UAAU+6B,WAAYpmC,IAC7C4jC,GAAOU,EAAOvkC,GAAGE,GAAGD,GAInB4jC,OAAAA,EAGT,SAASmL,EAAgBzK,EAAQmK,GACxB/hE,OAAAA,KAAKI,IACVw3D,EAAO,KAAKh7B,OAAOtJ,GAAKyuC,EAAS,IAIrC,SAASO,EAAkB1K,EAAQmK,GAC1B/hE,OAAAA,KAAKI,IACVw3D,EAAO,KAAKh7B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAKyuC,EAAS,IAIpD,SAASQ,EAAkB3K,EAAQmK,GAC1B/hE,OAAAA,KAAKI,IACVw3D,EAAO,KAAKh7B,OAAOvJ,GAAG,KAAKuJ,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAAKyuC,EAAS,IAInE,SAAS1M,EAAQmN,EAAcC,GAE3BD,OAAAA,EAAa,KAAK5lC,OAAOtJ,GAAKmvC,EAAgB,GAIlD,SAASC,EAAUF,EAAcC,GAE7BD,OAAAA,EAAa,KAAK5lC,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACxCmvC,EAAgB,GAIpB,SAASnG,EAAUkG,EAAcC,GAE7BD,OAAAA,EAAa,KAAK5lC,OAAOvJ,GAAG,KAAKuJ,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GACvDmvC,EAAgB,GAIpB,SAAS5K,EAAQnyC,EAAQ88C,GACnBG,IAAAA,EAAY,EAIT,OAHH,KAAK/lC,OAAOtJ,IAAM5N,IACpBi9C,EAAY,KAELA,EAAYH,EAAa,KAAK5lC,OAAOtJ,IAGhD,SAAS2sC,EAAUv6C,EAAQ88C,GACrBG,IAAAA,EAAY,EAKT,OAJO,KAAK/lC,OAAOtJ,EAAK,KAAKsJ,OAAOrJ,EAAI,KAAKa,OAAOd,IAC7C5N,IACZi9C,EAAY,KAELA,EAAYH,EAAa,KAAK5lC,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAG/D,SAAS4tC,EAAUx7C,EAAQ88C,GACrBG,IAAAA,EAAY,EAOT,OANO,KAAK/lC,OAAOtJ,EACrB,KAAKsJ,OAAOrJ,EAAI,KAAKa,OAAOd,EAC5B,KAAKsJ,OAAOvJ,EAAI,KAAKe,OAAOd,EAAI,KAAKc,OAAOb,IACnC7N,IACZi9C,EAAY,KAELA,EAAYH,EAAa,KAAK5lC,OAAOvJ,GAAG,KAAKuJ,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAG9E,SAASsvC,EAAKJ,GACL,OAACxiE,KAAKixC,MAKT4xB,IAAAA,EAqGN,SAAA,GApGc9K,SAAAA,EAAAA,GAAY,IAAA,EAAA,OAAA,EAAA,KAAA,IACtB,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACKv+B,MAAQu+B,EAAWv+B,MACnBC,EAAAA,OAASs+B,EAAWt+B,OACpBa,EAAAA,MAAQy9B,EAAWz9B,MACnBwoC,EAAAA,sBAAwB,KACxBC,EAAAA,kBAAoB,KACpBC,EAAAA,aAAe,KACfjL,EAAAA,WAAaA,EACb34B,EAAAA,WACD,EAAK3F,OAAS,EACZ,EAAKa,MAAQ,GACV85B,EAAAA,QAAU8E,EAAS,EAAK1/B,MAAO,EAAKC,OAAQ,EAAKa,OACjD65B,EAAAA,OAASF,EAAQ,EAAKz6B,MAAO,EAAKC,OAAQ,EAAKa,SAE/C85B,EAAAA,QAAU0C,EAAS,EAAKt9B,MAAO,EAAKC,QACpC06B,EAAAA,OAASH,EAAQ,EAAKx6B,MAAO,EAAKC,UAGpC26B,EAAAA,QAAUyC,EAAO,EAAKr9B,OACtB26B,EAAAA,OAASJ,EAAM,EAAKv6B,QApBL,EAoG1B,OAAA,EAAA,EArGsBy7B,GAqGtB,EAAA,EAAA,CAAA,CAAA,IAAA,eA5EiB,MAAA,WACLz7B,IAAAA,EAAyB,KAAzBA,MAAOC,EAAkB,KAAlBA,OAAQa,EAAU,KAAVA,MACnBA,EAAQ,GACLwoC,KAAAA,sBAAwBnP,EAAW4O,EAAmB,CACzDnuC,OAAQ,CAACoF,EAAOC,EAAQa,KAErByoC,KAAAA,kBAAoBpP,EAAWsO,EAAe,CACjD7tC,OAAQ,CAAC,EAAG,EAAG,GACfuK,UAAW,CACT+6B,WAAYlgC,EACZugC,YAAatgC,EACbugC,WAAY1/B,KAGX0oC,KAAAA,aAAerP,EAAWyO,EAAU,CACvChuC,OAAQ,CAAC,EAAG,EAAG,GACfuK,UAAW,CACT+6B,WAAYlgC,EACZugC,YAAatgC,EACbugC,WAAY1/B,KAGXo6B,KAAAA,cAAgBf,EAAW2I,EAAW,CACzCloC,OAAQ,CAACoF,EAAOC,EAAQa,KAErBq6B,KAAAA,cAAgBhB,EAAWuN,EAAW,CACzC9sC,OAAQ,CAACoF,EAAOC,EAAQa,OAGrBwoC,KAAAA,sBAAwBnP,EAAW0O,EAAiB,CACvDjuC,OAAQ,CAACoF,EAAOC,KAEbspC,KAAAA,kBAAoBpP,EAAWqO,EAAe,CACjD5tC,OAAQ,CAAC,EAAG,GACZuK,UAAW,CACT+6B,WAAYlgC,EACZugC,YAAatgC,KAGZupC,KAAAA,aAAerP,EAAWwO,EAAU,CACvC/tC,OAAQ,CAAC,EAAG,GACZuK,UAAW,CACT+6B,WAAYlgC,EACZugC,YAAatgC,KAGZi7B,KAAAA,cAAgBf,EAAW+O,EAAW,CACzCtuC,OAAQ,CAACoF,EAAOC,KAEbk7B,KAAAA,cAAgBhB,EAAWsM,EAAW,CACzC7rC,OAAQ,CAACoF,EAAOC,QA0BxB,CAAA,IAAA,UArBY,MAAA,WACFwpC,IAAAA,EAAW,KAAKF,kBAAkB,KAAKhL,WAAW3D,SAClDoO,EAAe,KAAKM,sBACxB,KAAK/K,WAAW3D,QAChB6O,GAEIR,EAAkB,KAAKO,aAAaR,GACrCpO,KAAAA,QAAU,KAAKM,cAAc8N,EAAcC,KAcpD,CAAA,IAAA,UAXUzC,MAAAA,SAAAA,GACD3C,KAAAA,OAAS,KAAK1I,cAAcqL,EAAa,GAAI,KAAK7L,QAClDA,KAAAA,OAAS,KAAKkJ,OACdtF,KAAAA,WAAW5D,OAAS,KAAKA,WAQlC,EAAA,GAJA,SAAS+O,EAAQjvC,EAAU8jC,GAClB,OAAA,IAAI8K,EAAQ5uC,EAAU8jC,GAG/Bj4D,OAAOC,QAAU,CACf8iE,QAAAA,EAASK,QAAAA,EACTpB,YAAAA,EAAaE,cAAAA,EAAeC,cAAAA,EAC5BC,OAAAA,EAAQC,SAAAA,EAAUC,SAAAA,EAClBC,gBAAAA,EAAiBC,kBAAAA,EAAmBC,kBAAAA,EACpClN,QAAAA,EAASqN,UAAAA,EAAWpG,UAAAA,EACpBzE,QAAAA,EAASoI,UAAAA,EAAWiB,UAAAA,EACpB0B,KAAAA;;ACtOF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA5BiBpiE,IAAAA,EAAAA,QAAQ,UAAjB0zD,EAAAA,EAAAA,KAEFiP,EA0BN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EA1BkBjP,GA0BlB,EAAA,EAAA,CAAA,CAAA,IAAA,UAzBY,MAAA,WACHE,KAAAA,QAAU,KAAKwD,OACfx4B,KAAAA,aAuBT,CAAA,IAAA,QApBU,MAAA,gBAoBV,EAAA,GAfA,SAASuiC,EAAMj8C,IAWf,SAAS09C,EAAInvC,EAAU8jC,GACd,OAAA,IAAIoL,EAAIlvC,EAAU8jC,GAG3Bj4D,OAAOC,QAAU,CACfojE,IAAAA,EACAC,IAAAA;;ACWF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzCqB5iE,IAAAA,EAAAA,QAAQ,WAArB20D,EAAAA,EAAAA,SACe30D,EAAAA,QAAQ,uBAAvBmzD,EAAAA,EAAAA,WAER,SAAS0B,EAAQ7yD,GACRA,OAAAA,EAAM,KAAKo6B,OAAOtJ,GAAG,KAAKsJ,OAAOrJ,GAG1C,IAAMskC,EAAUxC,EAEVgO,EAgCN,SAAA,GA/BctL,SAAAA,EAAAA,GAAY,IAAA,EAAA,OAAA,EAAA,KAAA,IACtB,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,QACKA,WAAaA,EACbv+B,EAAAA,MAAQ,EAAKu+B,WAAWt+B,OACxBA,EAAAA,OAAS,EAAKs+B,WAAWv+B,MACzB4F,EAAAA,WALiB,EA+B1B,OAAA,EAAA,EAhCwB+1B,GAgCxB,EAAA,EAAA,CAAA,CAAA,IAAA,eAvBiB,MAAA,WACRT,KAAAA,cAAgBf,EAAW0B,EAAS,CACvCjhC,OAAQ,CAAC,KAAKqF,OAAQ,KAAKD,SAExBm7B,KAAAA,cAAgBhB,EAAWkE,EAAS,CACvCzjC,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,YAkBhC,CAAA,IAAA,UAdY,MAAA,WACH26B,KAAAA,QAAU,KAAKM,cAAc,KAAKqD,WAAW3D,WAatD,CAAA,IAAA,UAVY,MAAA,WAEH2D,KAAAA,WAAW5D,OAAS,KAAKO,cAAc,KAAKP,YAQrD,EAAA,GAJA,SAASmP,EAAUvL,GACV,OAAA,IAAIsL,EAAUtL,GAGvBj4D,OAAOC,QAAU,CACfsjE,UAAAA,EACAC,UAAAA;;AC3CmB9iE,IAAAA,EAAAA,QAAQ,SAArBg1D,EAAAA,EAAAA,IAAKrwB,EAAAA,EAAAA,IACiB3kC,EAAAA,QAAQ,yBAA9By3D,EAAAA,EAAAA,kBACSz3D,EAAAA,QAAQ,UAAjB0zD,EAAAA,EAAAA,KAC6B1zD,EAAAA,QAAQ,iBAArC26D,EAAAA,EAAAA,YAAaW,EAAAA,EAAAA,YACQt7D,EAAAA,QAAQ,aAA7By7D,EAAAA,EAAAA,QAASG,EAAAA,EAAAA,QACO57D,EAAAA,QAAQ,kBAAxB67D,EAAAA,EAAAA,YACmC77D,EAAAA,QAAQ,qBAA3Ck8D,EAAAA,EAAAA,eAAgBE,EAAAA,EAAAA,eACRp8D,EAAAA,QAAQ,SAAhBg9D,EAAAA,EAAAA,IACiBh9D,EAAAA,QAAQ,WAAzB2yB,EAAAA,EAAAA,MAAOzlB,EAAAA,EAAAA,MACkBlN,EAAAA,QAAQ,gBAAjCm+D,EAAAA,EAAAA,UAAWp+D,EAAAA,EAAAA,UACFC,EAAAA,QAAQ,UAAjBo+D,EAAAA,EAAAA,KACuBp+D,EAAAA,QAAQ,cAA/B82D,EAAAA,EAAAA,SAAUK,EAAAA,EAAAA,SAC2Bn3D,EAAAA,QAAQ,sBAA7Cw8D,EAAAA,EAAAA,gBAAiBC,EAAAA,EAAAA,gBACMz8D,EAAAA,QAAQ,cAA/Bq8D,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,SACKt8D,EAAAA,QAAQ,UAAvB48D,EAAAA,EAAAA,KAAMF,EAAAA,EAAAA,KACK18D,EAAAA,QAAQ,YAAnB4zB,EAAAA,EAAAA,OACe5zB,EAAAA,QAAQ,UAAvB2gE,EAAAA,EAAAA,KAAME,EAAAA,EAAAA,KACa7gE,EAAAA,QAAQ,YAA3Bu2D,EAAAA,EAAAA,OAAQl0D,EAAAA,EAAAA,OACMrC,EAAAA,QAAQ,eAAtB+gE,EAAAA,EAAAA,UAC2B/gE,EAAAA,QAAQ,gBAAnCkhE,EAAAA,EAAAA,WAAYG,EAAAA,EAAAA,WACGrhE,EAAAA,QAAQ,UAAvB8gE,GAAAA,EAAAA,KAAM7gE,GAAAA,EAAAA,KACeD,GAAAA,QAAQ,aAA7Bs3D,GAAAA,GAAAA,QAASp3D,GAAAA,GAAAA,QACYF,GAAAA,QAAQ,cAA7BqiE,GAAAA,GAAAA,QAASK,GAAAA,GAAAA,QACI1iE,GAAAA,QAAQ,SAArB2iE,GAAAA,GAAAA,IAAKC,GAAAA,GAAAA,IACU5iE,GAAAA,QAAQ,UAAvB88D,GAAAA,GAAAA,KAAMj9D,GAAAA,GAAAA,KACaG,GAAAA,QAAQ,YAA3B0/D,GAAAA,GAAAA,OAAQx6C,GAAAA,GAAAA,OACiBllB,GAAAA,QAAQ,eAAjC6iE,GAAAA,GAAAA,UAAWC,GAAAA,GAAAA,UACM9iE,GAAAA,QAAQ,WAAzB+8D,GAAAA,GAAAA,MAAOxJ,GAAAA,GAAAA,MAKfj0D,OAAOC,QAAU,CACfy1D,IAAAA,EACArwB,IAAAA,EACA8yB,kBAAAA,EACA/D,KAAAA,EACAiH,YAAAA,EACAW,YAAAA,EACAG,QAAAA,EACAG,QAAAA,EACAC,YAAAA,EACAK,eAAAA,EACAE,eAAAA,EACAY,IAAAA,EACArqC,MAAAA,EACAzlB,MAAAA,EACAixD,UAAAA,EACAp+D,UAAAA,EACAq+D,KAAAA,EACAtH,SAAAA,EACAK,SAAAA,EACAqF,gBAAAA,EACAC,gBAAAA,EACAJ,SAAAA,EACAC,SAAAA,EACAM,KAAAA,EACAF,KAAAA,EACA9oC,OAAAA,EACA+sC,KAAAA,EACAE,KAAAA,EACAtK,OAAAA,EACAl0D,OAAAA,EACA0+D,UAAAA,EACAG,WAAAA,EACAG,WAAAA,EACAP,KAAAA,GACA7gE,KAAAA,GACAq3D,QAAAA,GACAp3D,QAAAA,GACAmiE,QAAAA,GACAK,QAAAA,GACAC,IAAAA,GACAC,IAAAA,GACA9F,KAAAA,GACAj9D,KAAAA,GACA6/D,OAAAA,GACAx6C,OAAAA,GACA29C,UAAAA,GACAC,UAAAA,GACA/F,MAAAA,GACAxJ,MAAAA;;AC3EFj0D,OAAOC,QAAU,SAAgB2N,EAAO61D,GAChCnvC,IAAAA,EAASmvC,EAAIz9B,IAAIp4B,GACnB81D,EAAU,KACVP,GAAY,EAUTO,OARP5hE,OAAO0B,KAAK8wB,GAAQ7wB,QAAQ,SAAAC,GACpBrD,IAAAA,EAAQi0B,EAAO5wB,GACjBrD,EAAQ8iE,IACVO,EAAUhgE,EACVy/D,EAAW9iE,KAIRqjE;;AC+DT,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAjFMxnC,IAAAA,EAiFN,WAAA,SAAA,IAAA,EAAA,KAAA,GAAA,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,cA3EqBynC,MAAAA,SAAAA,GACXC,IAAAA,EAAcD,EAAOE,OACzB,SAACC,EAAMC,GAASjiE,OAAAA,OAAOC,OAAO+hE,EAAMC,IACpC,IAGK7nC,OAAAA,EAAO8nC,eAAeJ,KAqEjC,CAAA,IAAA,iBA7DwBG,MAAAA,SAAAA,GACdE,IAAAA,EAAa,GACfh2D,EAAQ,EAOLg2D,OALPniE,OAAO0B,KAAKugE,GAAMtgE,QAAQ,SAAAd,GACxBshE,EAAWthE,GAAKsL,EAChBA,GAAS,IAGJg2D,IAoDX,CAAA,IAAA,UA3CiBA,MAAAA,SAAAA,EAAYF,GACnBvgE,IAAAA,EAAO1B,OAAO0B,KAAKygE,GACnBvhE,EAAQ,IAAIsxB,aAAaxwB,EAAKZ,QAI7BF,OAHPc,EAAKC,QAAQ,SAAAd,GACXD,EAAMuhE,EAAWthE,IAAMohE,EAAKphE,IAAM,IAE7BD,IAqCX,CAAA,IAAA,SA5BgBuhE,MAAAA,SAAAA,EAAYvhE,GAClBqhE,IAAAA,EAAO,GAMNA,OAJPjiE,OAAO0B,KAAKygE,GAAYxgE,QAAQ,SAAAd,GAC9BohE,EAAKphE,GAAKD,EAAMuhE,EAAWthE,MAGtBohE,IAqBX,CAAA,IAAA,kBAbyBrhE,MAAAA,SAAAA,GAKdC,IAJDshE,IAAAA,EAAa,GACf1wC,EAAI,EACJ5wB,EAAID,EAAME,OAEPD,KAAM,GACXshE,EAAWvhE,EAAMC,IAAM4wB,IAGlB0wC,OAAAA,MAIX,EAAA,GAAAjkE,OAAOC,QAAUi8B;;AC1DjB,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAvBMgoC,IAAAA,EAAAA,SAAAA,IAuBN,EAAA,KAAA,IArBA,SAASC,KAqBTnkE,OAAOC,QAAU,CACfikE,KAAAA,EAAMC,KAAAA;;ACsFR,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA/GsCzjE,IAAAA,EAAAA,QAAQ,uBAAtCmzD,EAAAA,EAAAA,WAAYE,EAAAA,EAAAA,cACdG,EAAUxzD,QAAQ,yBAEPA,EAAAA,QAAQ,UAAjB0zD,EAAAA,EAAAA,KAER,SAASgQ,EAAYhkE,EAAOikE,EAAOC,GAC1BA,OAAAA,EAAmBD,GAAS,EAAIA,GAASjkE,EAAQA,EAG1D,SAASmkE,EAAYlkE,EAAOF,EAAK2rB,GAC3BzrB,OAAAA,EAAQF,EACHA,EAELE,EAAQyrB,EACHA,EAEFzrB,EAOT,SAASga,EACPi6C,EACAD,EACAmQ,GAEMpkE,IAAAA,EAAQi0D,EAAO,KAAKv3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAC1CixC,EAAeF,EACnBnkE,EACA,KAAKy+B,UAAU6lC,WACd,KAAK7lC,UAAU6lC,WAEZ7kE,EAASy0D,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAC5C8wC,EAAmBE,EAAkB,KAAK1nC,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAChE6iC,EAAW+N,EACfhkE,EACA,KAAKy+B,UAAU8lC,UACfL,GAGAzkE,OAAAA,GACE,KAAKg/B,UAAUz8B,aAAeqiE,EAC9BvkE,KAAK82B,KAAKq/B,EAAW,KAAKx3B,UAAU+lC,WACtC,KAAK/lC,UAAUgmC,uBAAyBhlE,EAI5C,SAASilE,EAAiBzkE,EAAOF,EAAK2rB,GAChCzrB,OAAAA,EAAQF,EACH,EAELE,EAAQyrB,EACH,EAEF,EAGHi5C,IAAAA,EAoDN,SAAA,GAzCcpQ,SAAAA,EAAAA,GAAsB,IAAA,EAAfxgC,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,OAAA,EAAA,KAAA,IAC1BwgC,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAOxgC,KACR6wC,UAAY9Q,EAAQS,EAAMj7B,MAAOi7B,EAAMh7B,QACvC+8B,EAAAA,eAH2B,EAyCpC,OAAA,EAAA,EApDiDtC,GAoDjD,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WAnDwB,IAAA,WACb,MAAA,CACLuQ,UAAW,KACXE,uBAAwB,KACxBziE,aAAc,IACdwiE,UAAW,KACXF,UAAW,OA6CjB,EAAA,EAAA,CAAA,CAAA,IAAA,MAnCM/P,MAAAA,SAAAA,EAAOG,EAAeC,EAAW3yD,GAC7BkyB,IAAAA,EAAS,KAAKC,OAAOogC,EAAML,QAASK,EAAMN,OAAQ,KAAK2Q,WAEtD1wC,OADF0wC,KAAAA,UAAY1wC,EAAO0wC,UACjB1wC,EAAOhwB,SAgClB,CAAA,IAAA,eA7BiB,MAAA,WACRiwB,KAAAA,OAASs/B,EAAWx5C,EAAQ,CAC/Bia,OAAQ,CAAC,KAAKoF,MAAO,KAAKC,QAC1BkF,UAAW,CACT6lC,UAAW,KAAKA,UAChBC,UAAW,KAAKA,UAChBviE,aAAc,KAAKA,aACnByiE,uBAAwB,KAAKA,uBAC7BD,UAAW,KAAKA,WAElBzlC,UAAW,CAAColC,GACZjrC,IAAK,CACH0rC,UAAWZ,SAiBnB,EAAA,GAXA,SAASa,EAAmCtQ,EAAOxgC,GAC1C,OAAA,IAAI4wC,EAAmCpQ,EAAOxgC,GAOvD,IAAM+wC,EAAWH,EACXI,EAAWF,EAEjBjlE,OAAOC,QAAU,CACf8kE,mCAAAA,EAAoCE,mCAAAA,EACpCC,SAAAA,EAAUC,SAAAA,EACVf,YAAAA,EAAaG,YAAAA,EAAaO,iBAAAA;;AClHLpkE,IAAAA,EAAAA,QAAQ,UAAvBwjE,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC2CzjE,EAAAA,QAAQ,6BAAzDk2D,EAAAA,EAAAA,sBAAuBC,EAAAA,EAAAA,sBAC4Bn2D,EAAAA,QAAQ,8BAA3D41D,EAAAA,EAAAA,uBAAwBK,EAAAA,EAAAA,uBAI5Bj2D,EAAAA,QAAQ,4CAFVqkE,EAAAA,EAAAA,mCAAoCE,EAAAA,EAAAA,mCACpCC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,SAGZnlE,OAAOC,QAAU,CACfikE,KAAAA,EAAMC,KAAAA,EACNvN,sBAAAA,EAAuBC,sBAAAA,EACvBP,uBAAAA,EAAwBK,uBAAAA,EACxBoO,mCAAAA,EAAoCE,mCAAAA,EACpCC,SAAAA,EAAUC,SAAAA;;ACbZnlE,OAAOC,QAAU,SAAes9D,GAIzB,IAFDnG,IAAAA,EAAM,EACJx0D,EAAS26D,EAAO36D,OAAS26D,EAAO,GAAG36D,OAChC6wB,EAAI,EAAGA,EAAI8pC,EAAO36D,OAAQ6wB,IAC5B,IAAA,IAAID,EAAI,EAAGA,EAAI+pC,EAAO9pC,GAAG7wB,OAAQ4wB,IACpC4jC,GAAOmG,KAAAA,IAAAA,EAAO9pC,GAAGD,GAAM,GAGpB4jC,OAAAA,EAAMx0D;;ACTf,IAAM+xD,EAAQj0D,QAAQ,YAEtBV,OAAOC,QAAU,SAAuB+0D,GAClC,IAACL,EAAMloD,eAAeuoD,EAAUllD,MAAO,OAAO,KAC5Cs1D,IAAAA,EAAQzQ,EAAMK,EAAUllD,MAGxBu1D,EAAYC,QAAQC,UAAUH,EAAOhjD,WAQpCijD,OANPvjE,OAAO0B,KAAKwxD,GAAWvxD,QAAQ,SAAA8J,GACnB,SAANA,IACF83D,EAAU93D,GAAKynD,EAAUznD,MAItB83D;;ACfTrlE,OAAOC,QAAU,SAASulE,EAAmB7Q,EAAO8Q,GAC9C9Q,EAAMloD,eAAe,cACvB+4D,EAAmB7Q,EAAMsD,WAAYwN,IAEjC9Q,EAAMloD,eAAe,gBACvB+4D,EAAmB7Q,EAAMgB,YAAa8P,GAEpC9Q,EAAMloD,eAAe,gBACvB+4D,EAAmB7Q,EAAMiB,YAAa6P,IAG1CA,EAAG9Q;;ACXL,IAAM6Q,EAAqB9kE,QAAQ,0BAEnCV,OAAOC,QAAU,SAAuBylE,GAEjC,IADCphE,IAAAA,EAASohE,EAAOthE,MAAM,GACnBzB,EAAAA,SAAAA,GACHyK,IAAAA,EAAS,EACbo4D,EAAmBlhE,EAAO3B,GAAI,SAAAgyD,IACG,IAA3BrwD,EAAO6gB,QAAQwvC,KACjBrwD,EAAOD,OAAO1B,EAAIyK,EAAQ,EAAGunD,GAC7BvnD,QALGzK,EAAI,EAAGA,EAAI2B,EAAO1B,OAAQD,IAA1BA,EAAAA,GASF2B,OAAAA;;ACqfT,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlgBA,IAAM43B,EAASx7B,QAAQ,YAEjBilE,EAAQjlE,QAAQ,sBAChBklE,EAAgBllE,QAAQ,+BACxB6zD,EAAS7zD,QAAQ,YACjBmlE,EAAgBnlE,QAAQ,8BACPA,EAAAA,QAAQ,sBAAvBmzD,EAAAA,EAAAA,WAEFiS,EA0fN,WApZ4B,SAAA,IAAdv+D,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,EAAA,KAAA,GACnB0wD,KAAAA,WAAa,KACb8N,KAAAA,aAAe,KACfC,KAAAA,YAAc,KACdxR,KAAAA,WAAa,KACbD,KAAAA,OAAS,KACdzyD,OAAOC,OAAO,KAAM,KAAKsB,YAAYoxD,SAAUltD,GAC1CvG,KAAAA,UAAY,GACZilE,KAAAA,uBACHnkE,OAAOC,OAAO,GAAI,KAAKsB,YAAY6iE,cAAe3+D,IAEpDzF,OAAOC,OAAO,KAAM,KAAKsB,YAAY8iE,WAyYzC,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,gBA7bgBh1B,MAAAA,SAAAA,GAELnwC,KAAAA,UAAUmwC,IADE,mBAARA,EACYA,IACZA,GAEYlY,QAAQkY,MAwbnC,CAAA,IAAA,yBA3ayBpwC,MAAAA,SAAAA,GAAM,IAAA,EAAA,KAC3Be,OAAO0B,KAAK,KAAKH,YAAY6iE,eAAeziE,QAAQ,SAAA4L,GAClD,EAAKrO,UAAUqO,GAAOtO,EAAK0L,eAAe4C,GACtCtO,EAAKsO,GACL,EAAKrO,UAAUqO,KAEhBhM,KAAAA,YAAY+iE,yBAAyB,KAAKplE,WAC1CqlE,KAAAA,cAActlE,EAAKowC,KAAO,KAAKnwC,UAAUmwC,QAoalD,CAAA,CAAA,IAAA,2BA1dkC5pC,MAAAA,SAAAA,GACxB++D,IAAAA,EAAc,CAClBpkE,WAAY,SAAA8gB,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GACpDujD,YAAa,SAAAvjD,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GAAKA,EAAM,GAChEmuB,IAAK,SAAAnuB,GAAO,MAAe,mBAARA,GAAqC,kBAARA,GAChDwjD,UAAW,SAAAxjD,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GACnD5gB,aAAc,SAAA4gB,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GAAKA,EAAM,GACjEyjD,SAAU,SAAAzjD,GAAO,MAAe,mBAARA,GAA8B,OAARA,GAC9C0jD,eAAgB,SAAA1jD,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GACxD2jD,QAAS,SAAA3jD,GAAO,MAAe,iBAARA,GAAoBA,EAAM,IAEnDlhB,OAAO0B,KAAKsiE,EAAYI,eAAeziE,QAAQ,SAAAC,GACzC4iE,GAAAA,EAAY75D,eAAe/I,KAAS4iE,EAAY5iE,GAAK6D,EAAQ7D,IACzD,MAAA,IAAImP,MACJnP,IAAAA,OAAAA,EACF6D,MAAAA,OAAAA,EAAQ7D,GAFZ,iFA6cR,CAAA,IAAA,gBAzf6B,IAAA,WAClB,MAAA,CACLxB,WAAY,IACZqkE,YAAa,KACbp1B,KAAK,EACLq1B,UAAW,GACXpkE,aAAc,GACdqkE,SAAU,KACVC,eAAgB,GAChBE,mBAAoB,IACpBC,WAAW,KA+ejB,CAAA,IAAA,WA3ewB,IAAA,WACb,MAAA,CACLzkE,aAAc,GACd0kE,aAAc,GACdf,aAAc,KACd9N,WAAY,KACZ+N,YAAa,KACbxR,WAAY,KACZD,OAAQ,SAACI,EAAOxgC,GAAaogC,OAAAA,EAAO0Q,mCAAmCtQ,EAAOxgC,OAmepF,CAAA,IAAA,YAjayB,IAAA,WACd,MAAA,CACLuxC,OAAQ,KACRqB,YAAa,KACbC,aAAc,UA6ZpB,EAAA,EAAA,CAAA,CAAA,IAAA,iBAtYmB,MAAA,WACTtB,IAAAA,EAAS,GACVqB,KAAAA,YAAc,KAAK9O,aAClB8N,IAAAA,EAAe,KAAKkB,qBAAqB,KAAKF,aAC/CC,KAAAA,aAAe,KAAKhB,YACvBD,EAAaA,EAAanjE,OAAS,GACnCmjE,EAAanjE,QAEf8iE,EAAOhhE,KAAK,KAAKqiE,aACjBrB,EAAOhhE,KAAPghE,MAAAA,EAAeK,EAAAA,IACfL,EAAOhhE,KAAK,KAAKsiE,cACZtB,KAAAA,OAASG,EAAcH,KA2XhC,CAAA,IAAA,uBAxXuB5Q,MAAAA,SAAAA,GAEd,IADCiR,IAAAA,EAAe,GACZpjE,EAAI,EAAGA,EAAI,KAAKojE,aAAanjE,OAAQD,IAAK,CAC3CukE,IAAAA,EAAc,KAAKnB,aAAapjE,GAAGmyD,EAAenyD,GACxDojE,EAAarhE,KAAKwiE,GAClBpS,EAAgBoS,EAEXnB,OAAAA,IAiXX,CAAA,IAAA,aA9We,MAAA,WACNoB,KAAAA,iBACAC,KAAAA,iBAAiB,KAAK1B,UA4W/B,CAAA,IAAA,mBAzWmBA,MAAAA,SAAAA,GACV,IAAA,IAAI/iE,EAAI,EAAGA,EAAI+iE,EAAO9iE,OAAQD,IAAK,CAChCgyD,IAAAA,EAAQ+Q,EAAO/iE,GACrBgyD,EAAM+B,eACF/B,EAAMloD,eAAe,WAA8B,OAAjBkoD,EAAMJ,SAC1CI,EAAMJ,OAAS,KAAKA,OAAOI,EAAO,KAAKH,gBAoW/C,CAAA,IAAA,MA1VM5mD,MAAAA,SAAAA,GACE,KAAKy5D,cACPz5D,EAAQsuB,EAAOge,QAAQ,KAAKmtB,YAAaz5D,IAGvC0mB,IAAAA,EAAS,KAAKgzC,SAAS15D,GASpB0mB,OAPHA,EAAO4lB,UACT5lB,EAASA,EAAO4lB,WAGd,KAAKqtB,eACPjzC,EAAS4H,EAAOsrC,OAAO,KAAKD,aAAcjzC,IAErCA,IA4UX,CAAA,IAAA,WAzUW1mB,MAAAA,SAAAA,GACF83D,KAAAA,OAAO,GAAGnQ,QAAQ3nD,GAClB,IAAA,IAAIjL,EAAI,EAAGA,EAAI,KAAK+iE,OAAO9iE,OAAQD,IACjC+iE,KAAAA,OAAO/iE,GAAG4yD,UAEV,OAAA,KAAKmQ,OAAO,KAAKA,OAAO9iE,OAAS,GAAG0xD,UAoU/C,CAAA,IAAA,QA3TQpxD,MAAAA,SAAAA,GAAMqE,IACNkgE,EACAC,EAFMngE,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAGS,EAAA,KAAKogE,cAAczkE,EAAMqE,GAE/C,IAFJrE,EAAAA,EAAAA,KAAMukE,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,QAEV,KAAKE,cAAc1kE,EAAMukE,EAAQC,KACjCD,OAAAA,IAqTX,CAAA,IAAA,gBA5SgBvkE,MAAAA,SAAAA,EAAMukE,EAAQC,GAExBD,QAAAA,EAAOvlE,YAAc,KAAKlB,UAAUkB,YACpCulE,EAAO1nE,OAAS,KAAKiB,UAAUulE,aAC/BllE,KAAKC,OAASomE,KAKhBD,EAAOvlE,aAGL,KAAKlB,UAAUmwC,KACfs2B,EAAOvlE,WAAa,KAAKlB,UAAUwlE,WAAc,GAEjDiB,EAAO1nE,MAAQ,KAAK8nE,wBAAwB3kE,GACvClC,KAAAA,UAAUmwC,IACEs2B,eAAAA,OAAAA,EAAOvlE,WAA+BulE,sBAAAA,OAAAA,EAAO1nE,SAErD0nE,EAAOvlE,WAAa,KAAKlB,UAAU4lE,oBAAuB,EACnEa,EAAO1nE,MAAQ,KAAK8nE,wBAAwB3kE,GAEvC4kE,KAAAA,eAAe5kE,GAIpB,KAAKlC,UAAUylE,UACfgB,EAAOvlE,WAAa,KAAKlB,UAAU0lE,gBAAmB,GAEjD1lE,KAAAA,UAAUylE,SAAS3kE,OAAOC,OAAO0lE,KAEjC,KA6QX,CAAA,IAAA,gBAnQgBvkE,MAAAA,SAAAA,EAAMqE,GACb0+D,KAAAA,uBAAuB1+D,GACxB,KAAKvG,UAAUylE,UAAY,KAAKzlE,UAAU0lE,iBAAmB,KAAK1lE,UAAU4lE,oBAC9E3tC,QAAQC,KAA8C,wCAAA,OAAA,KAAKl4B,UAAU0lE,eAA4E,6DAAA,OAAA,KAAK1lE,UAAU4lE,mBAAhK,wEAEImB,IAAAA,EAAgB,KAAKC,YAAY9kE,GACjCwkE,EAAUrmE,KAAKC,MAAQ,KAAKN,UAAU2lE,QAOvCp/D,EAAQs/D,WACNoB,KAAAA,aAiBF,IAdCC,IAAAA,EAAkB,IAAI5kE,MAAMykE,EAAcnlE,QAC1CulE,EAAgBtU,EAAW,SAASxzD,GACjCA,OAAAA,EAAM,KAAKy8B,OAAOtJ,IACxB,CACD+L,WAAW,EACXjL,OAAQ,CAACyzC,EAAc,GAAGn6D,MAAMhL,UAE5BwlE,EAAiBvU,EAAW,SAASxzD,GAClCA,OAAAA,EAAM,KAAKy8B,OAAOtJ,IACxB,CACD+L,WAAW,EACXjL,OAAQ,CAACyzC,EAAc,GAAGzzC,OAAO1xB,UAG1BD,EAAI,EAAGA,EAAIolE,EAAcnlE,OAAQD,IAAK,CACvC0lE,IAAAA,EAAiBN,EAAcplE,GACrCulE,EAAgBvlE,GAAK,CACnBiL,MAAOu6D,EAAcE,EAAez6D,OACpC0mB,OAAQ8zC,EAAeC,EAAe/zC,SAInC,MAAA,CACLpxB,KAAMglE,EACNT,OAjCa,CACb1nE,MAAO,EACPmC,WAAY,GAgCZwlE,QAAAA,KAyNN,CAAA,IAAA,0BAhN0BxkE,MAAAA,SAAAA,GAEjB,IADDk0D,IAAAA,EAAM,EACDz0D,EAAI,EAAGA,EAAIO,EAAKN,SAAUD,EACjCy0D,GAAO,KAAKkR,cAAcplE,EAAKP,GAAGiL,MAAO1K,EAAKP,GAAG2xB,QAAQ,GAEpD8iC,OAAAA,EAAMl0D,EAAKN,SA2MtB,CAAA,IAAA,iBApMiBM,MAAAA,SAAAA,GACR,IAAA,IAAIP,EAAI,EAAGA,EAAIO,EAAKN,SAAUD,EAC5B2lE,KAAAA,cAAcplE,EAAKP,GAAGiL,MAAO1K,EAAKP,GAAG2xB,QAAQ,KAkMxD,CAAA,IAAA,gBAxLgB1mB,MAAAA,SAAAA,EAAOgY,EAAQ2iD,GAQvBA,OANCjB,KAAAA,SAAS15D,GAGT46D,KAAAA,iBAAiB5iD,GACjB6iD,KAAAA,iBAEDF,EACK5C,EACL,KAAKqB,aAAazJ,OAAOrjB,QACrB,KAAK8sB,aAAazJ,OAAOrjB,UACzB,KAAK8sB,aAAazJ,QAGnB,OAyKX,CAAA,IAAA,mBAtKmB33C,MAAAA,SAAAA,GACV,IAAA,IAAIjjB,EAAI,KAAK+iE,OAAO9iE,OAAS,EAAGD,GAAK,EAAGA,IACtC+iE,KAAAA,OAAO/iE,GAAGo1D,QAAQnyC,KAoK7B,CAAA,IAAA,iBA7JmB,MAAA,WACV,IAAA,IAAIjjB,EAAI,EAAGA,EAAI,KAAK+iE,OAAO9iE,OAAQD,IACjC+iE,KAAAA,OAAO/iE,GAAGk/D,MACb,KAAK6D,OAAO/iE,EAAI,GAChB,KAAK+iE,OAAO/iE,EAAI,GAChB,KAAK3B,UAAUoB,gBAwJvB,CAAA,IAAA,cA9Icc,MAAAA,SAAAA,GAAM,IAAA,EAAA,KACZ,IAACI,MAAMyJ,QAAQ7J,GAAO,CAElBwlE,IAAAA,EAAM,GACZA,EAAIhkE,KAAKxB,GACTA,EAAOwlE,EAIHC,IAAAA,EAAkBzlE,EAAK,GAAG0K,MAC3BtK,MAAMyJ,QAAQ47D,IAAsBA,aAA2B30C,eAC7D,KAAKqzC,cACHA,KAAAA,YAAcnrC,EAAO0sC,YAAY1lE,EAAKo2B,IAAI,SAAAj5B,GAASA,OAAAA,EAAMuN,UAEhE1K,EAAOA,EAAKo2B,IAAI,SAAAuvC,GACRnmE,IAAAA,EAAQw5B,EAAOge,QAAQ,EAAKmtB,YAAawB,EAAWj7D,OACnD9L,OAAAA,OAAOC,OAAO,GAAI8mE,EAAY,CAAEj7D,MAAOlL,KAC7C,OAGComE,IAAAA,EAAmB5lE,EAAK,GAAGoxB,OAU1BpxB,OATFI,MAAMyJ,QAAQ+7D,IAAuBA,aAA4B90C,eAC/D,KAAKuzC,eACHA,KAAAA,aAAerrC,EAAO0sC,YAAY1lE,EAAKo2B,IAAI,SAAAj5B,GAASA,OAAAA,EAAMi0B,WAEjEpxB,EAAOA,EAAKo2B,IAAI,SAAAuvC,GACRnmE,IAAAA,EAAQw5B,EAAOge,QAAQ,EAAKqtB,aAAcsB,EAAWv0C,QACpDxyB,OAAAA,OAAOC,OAAO,GAAI8mE,EAAY,CAAEv0C,OAAQ5xB,KAC9C,OAEEQ,IAgHX,CAAA,IAAA,OAnGS,MAAA,WACC,MAAA,IAAI2P,MAAS,GAAA,OAAA,KAAKxP,YAAY8D,KAApC,mCAkGJ,CAAA,IAAA,SA5FW,MAAA,WAEF,IADC4hE,IAAAA,EAAa,GACVpmE,EAAI,EAAGA,EAAI,KAAK+iE,OAAO9iE,OAAQD,IAAK,CACrCgyD,IAAAA,EAAQ,KAAK+Q,OAAO/iE,GACpBqyD,EAAYL,EAAMnyD,SACpBmyD,EAAMloD,eAAe,cACvBuoD,EAAUgU,gBAAkB,KAAKtD,OAAOvgD,QAAQwvC,EAAMsD,YAEtDtD,EAAMloD,eAAe,gBACrBkoD,EAAMloD,eAAe,iBAErBuoD,EAAUiU,iBAAmB,KAAKvD,OAAOvgD,QAAQwvC,EAAMgB,aACvDX,EAAUkU,iBAAmB,KAAKxD,OAAOvgD,QAAQwvC,EAAMiB,cAEzDmT,EAAWrkE,KAAKswD,GAEX,MAAA,CACL0Q,OAAQqD,KA2Ed,CAAA,IAAA,aAlBe,MAAA,WACL,MAAA,IAAIl2D,MACL,GAAA,OAAA,KAAKxP,YAAY8D,KADtB,yCAiBJ,CAAA,IAAA,oBAPsB,MAAA,WACZ,MAAA,IAAI0L,MACL,GAAA,OAAA,KAAKxP,YAAY8D,KADtB,iDAMJ,CAAA,CAAA,IAAA,WAjEkB8rC,MAAAA,SAAAA,EAAMk2B,GACdJ,IAAAA,EAAa91B,EAAKyyB,OAClBA,EAAS,GACTzN,EAAa2N,EAAcmD,EAAW,KAAOI,EAASJ,EAAW,IACvErD,EAAOhhE,KAAKuzD,GAEP,IAAA,IAAIt1D,EAAI,EAAGA,EAAIomE,EAAWnmE,OAAQD,IAAK,CACpCqyD,IAAAA,EAAY+T,EAAWpmE,GACzBqyD,GAAAA,EAAUvoD,eAAe,mBAAoB,CACzCkpD,IAAAA,EAAc+P,EAAO1Q,EAAUgU,iBACrCtD,EAAOhhE,KACLkhE,EAAc5Q,EAAWW,IACvBwT,EAASnU,EAAWW,QAEnB,CACD,IAACX,EAAUvoD,eAAe,oBAC5B,MAAM,IAAIoG,MAAM,gCACd,IAACmiD,EAAUvoD,eAAe,oBAC5B,MAAM,IAAIoG,MAAM,gCACZ8iD,IAAAA,EAAc+P,EAAO1Q,EAAUiU,kBAC/BrT,EAAc8P,EAAO1Q,EAAUkU,kBAEjCvT,QAAgB3R,IAAhB2R,EACF,MAAM,IAAI9iD,MACUmiD,kBAAAA,OAAAA,EAAUiU,iBAD9B,eAGErT,QAAgB5R,IAAhB4R,EACF,MAAM,IAAI/iD,MACUmiD,kBAAAA,OAAAA,EAAUkU,iBAD9B,eAIFxD,EAAOhhE,KACLkhE,EAAc5Q,EAAWiD,IACvBkR,EAASnU,EAAWW,EAAaC,KAKnC6N,IAAAA,EAAM,IAAIqC,EAAY7yB,GAErBwwB,OADPA,EAAIiC,OAASA,EACNjC,MAyBX,EAAA,GAAAzjE,OAAOC,QAAU,CACf6lE,YAAAA;;ukBChVcsD,KAAAA,EAlLhB,IAAIC,GAAU,EACVC,EAAQ,GAQSC,aA6BnB,SAAA,EAAYC,GAAqB,IAAA,EAAA,KAAdjiE,EAAc,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAJ,GAAI,EAAA,KAAA,GAAA,IAAA,EAAA,EAAA,GACJ,KAAKlE,YAAYomE,gBAAoBliE,GAAxDmiE,EADuB,EACvBA,KAAMr6C,EADiB,EACjBA,KACd,KAAKm6C,MAAQA,EACb,KAAK7mE,EAAI,EACT,KAAK4E,QAAUA,EACf,IAAMoiE,EAAO,KAAKA,KAAO,WACvB,KAAI,EAAKhnE,EAAI,IAEb,EAAKgkE,QAAUzT,WAAWyW,EAAM,GAE5BN,IAAJ,CACA,IAAM1lD,EAAO6lD,EAAM,EAAK7mE,GACxB,GAAI,EAAKA,GAAK6mE,EAAM5mE,OASlB,OARa,OAATysB,IACFg6C,GAAU,EACVh6C,EAAK1L,EAAM,EAAKhhB,GAChB0mE,GAAU,GAGZ,EAAK1mE,GAAK,OACVinE,aAAa,EAAKjD,SAGP,OAAT+C,GACFL,GAAU,EACVK,EAAK/lD,EAAM,EAAKhhB,GAChB0mE,GAAU,QACQrlB,IAATrgC,GACTA,IAEF,EAAKhhB,MAGP2mE,EAAM5kE,KAAK,MACN6C,EAAQsiE,OACXF,qDAxCF,IAAI,IAAIhnE,EAAI,EAAEA,EAAG2mE,EAAM1mE,OAAQD,IAC7B2mE,EAAM3mE,GAAGmnE,+CAnBX,MAAO,CACLJ,KAAM,KACNr6C,KAAM,wCASR,OAAOg6C,6CAwDP,OAAI,KAAK1mE,EAAI,IACX,KAAKA,EAAI,KAAK6mE,MAAM5mE,QACb,+BAUP+gB,GACF,IAAMomD,EAAS,KAAKC,YAOpB,OALA,KAAKR,MAAM9kE,KAAKif,GAEZomD,GACF,KAAKJ,OAEA,oCAQFhmD,GACL,IAAMomD,EAAS,KAAKC,YAQpB,OANA,KAAKR,MAAMnlE,OAAO,KAAK1B,EAAG,EAAGghB,GAEzBomD,GACF,KAAKJ,OAGA,sCAQAH,GACP,IAAMO,EAAS,KAAKC,YAQpB,OANA,KAAKR,MAAQ,KAAKA,MAAM/kE,OAAO+kE,GAE3BO,GACF,KAAKJ,OAGA,yCAQGH,GACV,IAAMO,EAAS,KAAKC,YACdzvD,EAAO,KAAKivD,MACZS,EAAST,EACThvD,EAAQ,KAAKgvD,MAAMnlE,OAAO,KAAK1B,EAAI,KAAK6mE,MAAM5mE,OAAS,KAAKD,EAAK,GAOvE,OALA,KAAK6mE,MAAQjvD,EAAK9V,OAAOwlE,EAAQzvD,GAE7BuvD,GACF,KAAKJ,OAEA,oCAaP,OALA,KAAKhnE,GAAK,EACVinE,aAAa,KAAKjD,SACd,KAAKp/D,QAAQ8nB,MACf,KAAK9nB,QAAQ8nB,OAER,cAUJ,SAAS+5C,EAAKI,GAAqB,IAAdjiE,EAAc,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAJ,GACpC,OAAO,IAAIgiE,EAAKC,EAAOjiE,mBA1KJgiE;;6TCVrB,EAAA,QAAA,kKAQqBW,aACnB,SAAA,EAAY3iE,EAAS4iE,GAAO,EAAA,KAAA,GAC1B,KAAKl8D,MAAQ,EACb,KAAKq7D,MAAQ,GACb,KAAKa,MAAQA,GAAS,IACtB,KAAK5iE,QAAUA,wCAQboc,GAIF,OAHa,KAAKymD,QACb/kC,IAAI1hB,GAEF,sCAQA6lD,GAIP,OAHa,KAAKY,QACbC,SAASb,GAEP,oCAQF7lD,GAIL,OAHa,KAAKymD,QACbE,OAAO3mD,GAEL,yCAQG6lD,GAIV,OAHa,KAAKY,QACbG,YAAYf,GAEV,oCAQP,IAAK,IAAI7mE,EAAI,EAAEA,EAAI,KAAK2mE,MAAM1mE,OAAOD,IACnC,KAAK2mE,MAAM3mE,GAAGmnE,OAEhB,OAAO,qCASP,IAAIV,EAAO,KACLE,EAAQ,KAAKA,MAYnB,OAVIA,EAAM1mE,OAAS,KAAKunE,MACtBb,EAAM5kE,KAAK0kE,EAAO,IAAA,EAAA,QAAS,GAAI,KAAK7hE,UAEpC6hE,EAAOE,EAAM,KAAKr7D,OAEpB,KAAKA,QACD,KAAKA,OAAS,KAAKk8D,QACrB,KAAKl8D,MAAQ,GAGRm7D,2BAtFUc;;yFCRrB,IAAA,EAAA,QAAA,iBACA,EAAA,QAAA,uGAIEA,gBAGoB,oBAAXM,SACTA,OAAOjB,KAAP,EAAA,QACAiB,OAAOjB,KAAKW,MAAZ,EAAA;;ACWF,aAEA,IAOIO,EAPAC,EAAuB,iBAAZpF,QAAuBA,QAAU,KAC5CqF,EAAeD,GAAwB,mBAAZA,EAAExiD,MAC7BwiD,EAAExiD,MACF,SAAsBtC,EAAQglD,EAAU3qC,GACjCmR,OAAAA,SAAS5kC,UAAU0b,MAAMpb,KAAK8Y,EAAQglD,EAAU3qC,IAiB3D,SAAS4qC,EAAmBC,GACtB7xC,SAAWA,QAAQC,MAAMD,QAAQC,KAAK4xC,GAb1CL,EADEC,GAA0B,mBAAdA,EAAEK,QACCL,EAAEK,QACVjpE,OAAOkpE,sBACC,SAAwBplD,GAChC9jB,OAAAA,OAAO62B,oBAAoB/S,GAC/BnhB,OAAO3C,OAAOkpE,sBAAsBplD,KAGxB,SAAwBA,GAChC9jB,OAAAA,OAAO62B,oBAAoB/S,IAQtC,IAAIqlD,EAAcz0C,OAAOL,OAAS,SAAqB91B,GAC9CA,OAAAA,GAAUA,GAGnB,SAAS6qE,IACPA,EAAa1yD,KAAK1L,KAAK,MAEzB9M,OAAOC,QAAUirE,EAGjBA,EAAaA,aAAeA,EAE5BA,EAAa1+D,UAAU2+D,aAAUnnB,EACjCknB,EAAa1+D,UAAU4+D,aAAe,EACtCF,EAAa1+D,UAAU6+D,mBAAgBrnB,EAIvC,IAAIsnB,EAAsB,GAoC1B,SAASC,EAAiBC,GACpBA,YAAuBxnB,IAAvBwnB,EAAKH,cACAH,EAAaI,oBACfE,EAAKH,cAmDd,SAASI,EAAa7lD,EAAQ9V,EAAM47D,EAAUC,GACxCC,IAAAA,EACAC,EACAC,EAEA,GAAoB,mBAAbJ,EACH,MAAA,IAAIK,UAAU,0EAA4EL,GAqB9FI,QAjBW9nB,KADf6nB,EAASjmD,EAAOulD,UAEdU,EAASjmD,EAAOulD,QAAUrpE,OAAOkqE,OAAO,MACxCpmD,EAAOwlD,aAAe,SAIKpnB,IAAvB6nB,EAAOI,cACTrmD,EAAOsmD,KAAK,cAAep8D,EACf47D,EAASA,SAAWA,EAASA,SAAWA,GAIpDG,EAASjmD,EAAOulD,SAElBW,EAAWD,EAAO/7D,SAGHk0C,IAAb8nB,EAEFA,EAAWD,EAAO/7D,GAAQ47D,IACxB9lD,EAAOwlD,kBAeLQ,GAboB,mBAAbE,EAETA,EAAWD,EAAO/7D,GAChB67D,EAAU,CAACD,EAAUI,GAAY,CAACA,EAAUJ,GAErCC,EACTG,EAAS1iC,QAAQsiC,GAEjBI,EAASpnE,KAAKgnE,IAIhBE,EAAIL,EAAiB3lD,IACb,GAAKkmD,EAASlpE,OAASgpE,IAAME,EAASK,OAAQ,CACpDL,EAASK,QAAS,EAGdz4C,IAAAA,EAAI,IAAI7gB,MAAM,+CACEi5D,EAASlpE,OAAS,IAAMwD,OAAO0J,GAAQ,qEAG3D4jB,EAAEvsB,KAAO,8BACTusB,EAAE04C,QAAUxmD,EACZ8N,EAAE5jB,KAAOA,EACT4jB,EAAEy2C,MAAQ2B,EAASlpE,OACnBioE,EAAmBn3C,GAIhB9N,OAAAA,EAcT,SAASymD,IAEF,IADDpsC,IAAAA,EAAO,GACFt9B,EAAI,EAAGA,EAAIyf,UAAUxf,OAAQD,IAAKs9B,EAAKv7B,KAAK0d,UAAUzf,IAC1D,KAAK2pE,QACH1mD,KAAAA,OAAO2mD,eAAe,KAAKz8D,KAAM,KAAK08D,QACtCF,KAAAA,OAAQ,EACb3B,EAAa,KAAKe,SAAU,KAAK9lD,OAAQqa,IAI7C,SAASwsC,EAAU7mD,EAAQ9V,EAAM47D,GAC3B3gD,IAAAA,EAAQ,CAAEuhD,OAAO,EAAOE,YAAQxoB,EAAWp+B,OAAQA,EAAQ9V,KAAMA,EAAM47D,SAAUA,GACjFgB,EAAUL,EAAYh7B,KAAKtmB,GAGxB2hD,OAFPA,EAAQhB,SAAWA,EACnB3gD,EAAMyhD,OAASE,EACRA,EAgIT,SAASC,EAAW/mD,EAAQ9V,EAAM88D,GAC5Bf,IAAAA,EAASjmD,EAAOulD,QAEhBU,QAAW7nB,IAAX6nB,EACF,MAAO,GAELgB,IAAAA,EAAahB,EAAO/7D,GACpB+8D,YAAe7oB,IAAf6oB,EACK,GAEiB,mBAAfA,EACFD,EAAS,CAACC,EAAWnB,UAAYmB,GAAc,CAACA,GAElDD,EACLE,EAAgBD,GAAcE,EAAWF,EAAYA,EAAWjqE,QAoBpE,SAASoqE,EAAcl9D,GACjB+7D,IAAAA,EAAS,KAAKV,QAEdU,QAAW7nB,IAAX6nB,EAAsB,CACpBgB,IAAAA,EAAahB,EAAO/7D,GAEpB,GAAsB,mBAAf+8D,EACF,OAAA,EACF,QAAmB7oB,IAAf6oB,EACFA,OAAAA,EAAWjqE,OAIf,OAAA,EAOT,SAASmqE,EAAWE,EAAK5/D,GAElB,IADD6/D,IAAAA,EAAO,IAAI5pE,MAAM+J,GACZ1K,EAAI,EAAGA,EAAI0K,IAAK1K,EACvBuqE,EAAKvqE,GAAKsqE,EAAItqE,GACTuqE,OAAAA,EAGT,SAASC,EAAUpzD,EAAM9L,GAChBA,KAAAA,EAAQ,EAAI8L,EAAKnX,OAAQqL,IAC9B8L,EAAK9L,GAAS8L,EAAK9L,EAAQ,GAC7B8L,EAAK/B,MAGP,SAAS80D,EAAgBG,GAElB,IADDx1C,IAAAA,EAAM,IAAIn0B,MAAM2pE,EAAIrqE,QACfD,EAAI,EAAGA,EAAI80B,EAAI70B,SAAUD,EAChC80B,EAAI90B,GAAKsqE,EAAItqE,GAAG+oE,UAAYuB,EAAItqE,GAE3B80B,OAAAA,EA1XT31B,OAAOsrE,eAAelC,EAAc,sBAAuB,CACzDmC,YAAY,EACZ9sD,IAAK,WACI+qD,OAAAA,GAETtlE,IAAK,SAASm6B,GACR,GAAe,iBAARA,GAAoBA,EAAM,GAAK8qC,EAAY9qC,GAC9C,MAAA,IAAImtC,WAAW,kGAAoGntC,EAAM,KAEjImrC,EAAsBnrC,KAI1B+qC,EAAa1yD,KAAO,gBAEGwrC,IAAjB,KAAKmnB,SACL,KAAKA,UAAYrpE,OAAO82B,eAAe,MAAMuyC,UAC1CA,KAAAA,QAAUrpE,OAAOkqE,OAAO,MACxBZ,KAAAA,aAAe,GAGjBC,KAAAA,cAAgB,KAAKA,oBAAiBrnB,GAK7CknB,EAAa1+D,UAAU+gE,gBAAkB,SAAyBlgE,GAC5D,GAAa,iBAANA,GAAkBA,EAAI,GAAK49D,EAAY59D,GAC1C,MAAA,IAAIigE,WAAW,gFAAkFjgE,EAAI,KAGtG,OADFg+D,KAAAA,cAAgBh+D,EACd,MAST69D,EAAa1+D,UAAUghE,gBAAkB,WAChCjC,OAAAA,EAAiB,OAG1BL,EAAa1+D,UAAU0/D,KAAO,SAAcp8D,GAErC,IADDmwB,IAAAA,EAAO,GACFt9B,EAAI,EAAGA,EAAIyf,UAAUxf,OAAQD,IAAKs9B,EAAKv7B,KAAK0d,UAAUzf,IAC3D8qE,IAAAA,EAAoB,UAAT39D,EAEX+7D,EAAS,KAAKV,QACdU,QAAW7nB,IAAX6nB,EACF4B,EAAWA,QAA4BzpB,IAAjB6nB,EAAO9rE,WAC1B,IAAK0tE,EACR,OAAO,EAGLA,GAAAA,EAAS,CACPC,IAAAA,EAGAA,GAFAztC,EAAKr9B,OAAS,IAChB8qE,EAAKztC,EAAK,IACRytC,aAAc76D,MAGV66D,MAAAA,EAGJloD,IAAAA,EAAM,IAAI3S,MAAM,oBAAsB66D,EAAK,KAAOA,EAAGnoD,QAAU,IAAM,KAEnEC,MADNA,EAAIlU,QAAUo8D,EACRloD,EAGJhM,IAAAA,EAAUqyD,EAAO/7D,GAEjB0J,QAAYwqC,IAAZxqC,EACF,OAAO,EAEL,GAAmB,mBAAZA,EACTmxD,EAAanxD,EAAS,KAAMymB,OAExBpa,CAAAA,IAAAA,EAAMrM,EAAQ5W,OACd+qE,EAAYZ,EAAWvzD,EAASqM,GAC/B,IAAIljB,EAAI,EAAGA,EAAIkjB,IAAOljB,EACzBgoE,EAAagD,EAAUhrE,GAAI,KAAMs9B,GAG9B,OAAA,GAmETirC,EAAa1+D,UAAUohE,YAAc,SAAqB99D,EAAM47D,GACvDD,OAAAA,EAAa,KAAM37D,EAAM47D,GAAU,IAG5CR,EAAa1+D,UAAUqhE,GAAK3C,EAAa1+D,UAAUohE,YAEnD1C,EAAa1+D,UAAUshE,gBACnB,SAAyBh+D,EAAM47D,GACtBD,OAAAA,EAAa,KAAM37D,EAAM47D,GAAU,IAqBhDR,EAAa1+D,UAAUuhE,KAAO,SAAcj+D,EAAM47D,GAC5C,GAAoB,mBAAbA,EACH,MAAA,IAAIK,UAAU,0EAA4EL,GAG3F,OADFmC,KAAAA,GAAG/9D,EAAM28D,EAAU,KAAM38D,EAAM47D,IAC7B,MAGTR,EAAa1+D,UAAUwhE,oBACnB,SAA6Bl+D,EAAM47D,GAC7B,GAAoB,mBAAbA,EACH,MAAA,IAAIK,UAAU,0EAA4EL,GAG3F,OADFoC,KAAAA,gBAAgBh+D,EAAM28D,EAAU,KAAM38D,EAAM47D,IAC1C,MAIbR,EAAa1+D,UAAU+/D,eACnB,SAAwBz8D,EAAM47D,GACxB3xD,IAAAA,EAAM8xD,EAAQv5C,EAAU3vB,EAAGsrE,EAE3B,GAAoB,mBAAbvC,EACH,MAAA,IAAIK,UAAU,0EAA4EL,GAI9FG,QAAW7nB,KADf6nB,EAAS,KAAKV,SAEZ,OAAO,KAGLpxD,QAASiqC,KADbjqC,EAAO8xD,EAAO/7D,IAEZ,OAAO,KAELiK,GAAAA,IAAS2xD,GAAY3xD,EAAK2xD,WAAaA,EACb,KAAtB,KAAKN,aACT,KAAKD,QAAUrpE,OAAOkqE,OAAO,cAEtBH,EAAO/7D,GACV+7D,EAAOU,gBACT,KAAKL,KAAK,iBAAkBp8D,EAAMiK,EAAK2xD,UAAYA,SAElD,GAAoB,mBAAT3xD,EAAqB,CAGhCpX,IAFL2vB,GAAY,EAEP3vB,EAAIoX,EAAKnX,OAAS,EAAGD,GAAK,EAAGA,IAC5BoX,GAAAA,EAAKpX,KAAO+oE,GAAY3xD,EAAKpX,GAAG+oE,WAAaA,EAAU,CACzDuC,EAAmBl0D,EAAKpX,GAAG+oE,SAC3Bp5C,EAAW3vB,EACX,MAIA2vB,GAAAA,EAAW,EACb,OAAO,KAEQ,IAAbA,EACFvY,EAAK6yB,QAELugC,EAAUpzD,EAAMuY,GAGE,IAAhBvY,EAAKnX,SACPipE,EAAO/7D,GAAQiK,EAAK,SAEQiqC,IAA1B6nB,EAAOU,gBACT,KAAKL,KAAK,iBAAkBp8D,EAAMm+D,GAAoBvC,GAGnD,OAAA,MAGbR,EAAa1+D,UAAU0hE,IAAMhD,EAAa1+D,UAAU+/D,eAEpDrB,EAAa1+D,UAAU2hE,mBACnB,SAA4Br+D,GACtB69D,IAAAA,EAAW9B,EAAQlpE,EAGnBkpE,QAAW7nB,KADf6nB,EAAS,KAAKV,SAEZ,OAAO,KAGLU,QAA0B7nB,IAA1B6nB,EAAOU,eAUF,OATkB,IAArBnqD,UAAUxf,QACPuoE,KAAAA,QAAUrpE,OAAOkqE,OAAO,MACxBZ,KAAAA,aAAe,QACMpnB,IAAjB6nB,EAAO/7D,KACY,KAAtB,KAAKs7D,aACT,KAAKD,QAAUrpE,OAAOkqE,OAAO,aAEtBH,EAAO/7D,IAEX,KAILsS,GAAqB,IAArBA,UAAUxf,OAAc,CACtBY,IACAE,EADAF,EAAO1B,OAAO0B,KAAKqoE,GAElBlpE,IAAAA,EAAI,EAAGA,EAAIa,EAAKZ,SAAUD,EAEjB,oBADZe,EAAMF,EAAKb,KAENwrE,KAAAA,mBAAmBzqE,GAKnB,OAHFyqE,KAAAA,mBAAmB,kBACnBhD,KAAAA,QAAUrpE,OAAOkqE,OAAO,MACxBZ,KAAAA,aAAe,EACb,KAKL,GAAqB,mBAFzBuC,EAAY9B,EAAO/7D,IAGZy8D,KAAAA,eAAez8D,EAAM69D,QACrB,QAAkB3pB,IAAd2pB,EAEJhrE,IAAAA,EAAIgrE,EAAU/qE,OAAS,EAAGD,GAAK,EAAGA,IAChC4pE,KAAAA,eAAez8D,EAAM69D,EAAUhrE,IAIjC,OAAA,MAoBbuoE,EAAa1+D,UAAUmhE,UAAY,SAAmB79D,GAC7C68D,OAAAA,EAAW,KAAM78D,GAAM,IAGhCo7D,EAAa1+D,UAAU4hE,aAAe,SAAsBt+D,GACnD68D,OAAAA,EAAW,KAAM78D,GAAM,IAGhCo7D,EAAa8B,cAAgB,SAASZ,EAASt8D,GACzC,MAAiC,mBAA1Bs8D,EAAQY,cACVZ,EAAQY,cAAcl9D,GAEtBk9D,EAAclgE,KAAKs/D,EAASt8D,IAIvCo7D,EAAa1+D,UAAUwgE,cAAgBA,EAiBvC9B,EAAa1+D,UAAU6hE,WAAa,WAC3B,OAAA,KAAKjD,aAAe,EAAIX,EAAe,KAAKU,SAAW;;ACzahE,mBAAA,OAAA,OAEA,OAAA,QAAA,SAAA,EAAA,GACA,EAAA,OAAA,EACA,EAAA,UAAA,OAAA,OAAA,EAAA,UAAA,CACA,YAAA,CACA,MAAA,EACA,YAAA,EACA,UAAA,EACA,cAAA,MAMA,OAAA,QAAA,SAAA,EAAA,GACA,EAAA,OAAA,EACA,IAAA,EAAA,aACA,EAAA,UAAA,EAAA,UACA,EAAA,UAAA,IAAA,EACA,EAAA,UAAA,YAAA;;;ACnBA,IAOImD,EACAC,EARAC,EAAUxuE,OAAOC,QAAU,GAU/B,SAASwuE,IACC,MAAA,IAAI57D,MAAM,mCAEpB,SAAS67D,IACC,MAAA,IAAI77D,MAAM,qCAsBpB,SAAS87D,EAAWC,GACZN,GAAAA,IAAqBpb,WAEdA,OAAAA,WAAW0b,EAAK,GAGvB,IAACN,IAAqBG,IAAqBH,IAAqBpb,WAEzDA,OADPob,EAAmBpb,WACZA,WAAW0b,EAAK,GAEvB,IAEON,OAAAA,EAAiBM,EAAK,GAC/B,MAAMz9C,GACA,IAEOm9C,OAAAA,EAAiBxhE,KAAK,KAAM8hE,EAAK,GAC1C,MAAMz9C,GAEGm9C,OAAAA,EAAiBxhE,KAAK,KAAM8hE,EAAK,KAMpD,SAASC,EAAgBC,GACjBP,GAAAA,IAAuB3E,aAEhBA,OAAAA,aAAakF,GAGpB,IAACP,IAAuBG,IAAwBH,IAAuB3E,aAEhEA,OADP2E,EAAqB3E,aACdA,aAAakF,GAEpB,IAEOP,OAAAA,EAAmBO,GAC5B,MAAO39C,GACD,IAEOo9C,OAAAA,EAAmBzhE,KAAK,KAAMgiE,GACvC,MAAO39C,GAGEo9C,OAAAA,EAAmBzhE,KAAK,KAAMgiE,MAjEhD,WACO,IAEIR,EADsB,mBAAfpb,WACYA,WAEAub,EAEzB,MAAOt9C,GACLm9C,EAAmBG,EAEnB,IAEIF,EADwB,mBAAjB3E,aACcA,aAEA8E,EAE3B,MAAOv9C,GACLo9C,EAAqBG,GAjB5B,GAwED,IAEIK,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAansE,OACbosE,EAAQD,EAAatqE,OAAOuqE,GAE5BE,GAAc,EAEdF,EAAMpsE,QACNwsE,KAIR,SAASA,IACDH,IAAAA,EAAAA,CAGAtI,IAAAA,EAAUgI,EAAWQ,GACzBF,GAAW,EAGLppD,IADFA,IAAAA,EAAMmpD,EAAMpsE,OACVijB,GAAK,CAGA,IAFPkpD,EAAeC,EACfA,EAAQ,KACCE,EAAarpD,GACdkpD,GACAA,EAAaG,GAAYlpC,MAGjCkpC,GAAc,EACdrpD,EAAMmpD,EAAMpsE,OAEhBmsE,EAAe,KACfE,GAAW,EACXJ,EAAgBlI,IAiBpB,SAAS0I,EAAKT,EAAKlsE,GACVksE,KAAAA,IAAMA,EACNlsE,KAAAA,MAAQA,EAYjB,SAAS4sE,KA5BTd,EAAQe,SAAW,SAAUX,GACrB3uC,IAAAA,EAAO,IAAI38B,MAAM8e,UAAUxf,OAAS,GACpCwf,GAAAA,UAAUxf,OAAS,EACd,IAAA,IAAID,EAAI,EAAGA,EAAIyf,UAAUxf,OAAQD,IAClCs9B,EAAKt9B,EAAI,GAAKyf,UAAUzf,GAGhCqsE,EAAMtqE,KAAK,IAAI2qE,EAAKT,EAAK3uC,IACJ,IAAjB+uC,EAAMpsE,QAAiBqsE,GACvBN,EAAWS,IASnBC,EAAK7iE,UAAUw5B,IAAM,WACZ4oC,KAAAA,IAAI1mD,MAAM,KAAM,KAAKxlB,QAE9B8rE,EAAQgB,MAAQ,UAEhBhB,EAAQiB,IAAM,GACdjB,EAAQkB,KAAO,GACflB,EAAQz7C,QAAU,GAClBy7C,EAAQmB,SAAW,GAInBnB,EAAQX,GAAKyB,EACbd,EAAQZ,YAAc0B,EACtBd,EAAQT,KAAOuB,EACfd,EAAQN,IAAMoB,EACdd,EAAQjC,eAAiB+C,EACzBd,EAAQL,mBAAqBmB,EAC7Bd,EAAQtC,KAAOoD,EACfd,EAAQV,gBAAkBwB,EAC1Bd,EAAQR,oBAAsBsB,EAE9Bd,EAAQb,UAAY,SAAUxmE,GAAe,MAAA,IAE7CqnE,EAAQoB,QAAU,SAAUzoE,GAClB,MAAA,IAAI0L,MAAM,qCAGpB27D,EAAQqB,IAAM,WAAqB,MAAA,KACnCrB,EAAQsB,MAAQ,SAAUC,GAChB,MAAA,IAAIl9D,MAAM,mCAEpB27D,EAAQwB,MAAQ,WAAoB,OAAA;;;AC3IpC,IAAA,EAAA,QAAA,WAlCA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,mBAAA,EACA,MAAA,IAAA,UAAA,0CAEA,IACA,EAAA,EADA,EAAA,UAAA,OAEA,OAAA,GACA,KAAA,EACA,KAAA,EACA,OAAA,EAAA,SAAA,GACA,KAAA,EACA,OAAA,EAAA,SAAA,WACA,EAAA,KAAA,KAAA,KAEA,KAAA,EACA,OAAA,EAAA,SAAA,WACA,EAAA,KAAA,KAAA,EAAA,KAEA,KAAA,EACA,OAAA,EAAA,SAAA,WACA,EAAA,KAAA,KAAA,EAAA,EAAA,KAEA,QAGA,IAFA,EAAA,IAAA,MAAA,EAAA,GACA,EAAA,EACA,EAAA,EAAA,QACA,EAAA,KAAA,UAAA,GAEA,OAAA,EAAA,SAAA,WACA,EAAA,MAAA,KAAA,OArCA,EAAA,SACA,IAAA,EAAA,QAAA,QAAA,QACA,IAAA,EAAA,QAAA,QAAA,QAAA,IAAA,EAAA,QAAA,QAAA,SACA,OAAA,QAAA,CAAA,SAAA,GAEA,OAAA,QAAA;;ACPA,IAAA,EAAA,GAAA,SAEA,OAAA,QAAA,MAAA,SAAA,SAAA,GACA,MAAA,kBAAA,EAAA,KAAA;;ACHA,OAAA,QAAA,QAAA,UAAA;;ACAA,aAEA,QAAA,WAAA,EACA,QAAA,YAAA,EACA,QAAA,cAAA,EAOA,IALA,IAAA,EAAA,GACA,EAAA,GACA,EAAA,oBAAA,WAAA,WAAA,MAEA,EAAA,mEACA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,GACA,EAAA,EAAA,WAAA,IAAA,EAQA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAEA,GAAA,EAAA,EAAA,EACA,MAAA,IAAA,MAAA,kDAKA,IAAA,EAAA,EAAA,QAAA,KAOA,OANA,IAAA,IAAA,EAAA,GAMA,CAAA,EAJA,IAAA,EACA,EACA,EAAA,EAAA,GAMA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,GAAA,EAAA,GAAA,EAAA,EAGA,SAAA,EAAA,GAeA,IAdA,IAAA,EACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,EAAA,EAAA,GAEA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IAEA,EAAA,EAGA,EAAA,EAAA,EACA,EAAA,EACA,EAEA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EACA,EAAA,EAAA,WAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,IACA,EAAA,KAAA,GAAA,GAAA,IACA,EAAA,KAAA,GAAA,EAAA,IACA,EAAA,KAAA,IAAA,EAmBA,OAhBA,IAAA,IACA,EACA,EAAA,EAAA,WAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,KAAA,IAAA,GAGA,IAAA,IACA,EACA,EAAA,EAAA,WAAA,KAAA,GACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,EAAA,WAAA,EAAA,KAAA,EACA,EAAA,KAAA,GAAA,EAAA,IACA,EAAA,KAAA,IAAA,GAGA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,GAAA,IACA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,GAGA,SAAA,EAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,GACA,EAAA,IAAA,GAAA,WACA,EAAA,EAAA,IAAA,EAAA,QACA,IAAA,EAAA,EAAA,IACA,EAAA,KAAA,EAAA,IAEA,OAAA,EAAA,KAAA,IAGA,SAAA,EAAA,GAQA,IAPA,IAAA,EACA,EAAA,EAAA,OACA,EAAA,EAAA,EACA,EAAA,GAIA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAHA,MAIA,EAAA,KAAA,EACA,EAAA,EAAA,EALA,MAKA,EAAA,EAAA,EALA,QA2BA,OAjBA,IAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,GAAA,GACA,EAAA,GAAA,EAAA,IACA,OAEA,IAAA,IACA,GAAA,EAAA,EAAA,IAAA,GAAA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,GAAA,IACA,EAAA,GAAA,EAAA,IACA,EAAA,GAAA,EAAA,IACA,MAIA,EAAA,KAAA,IAnIA,EAAA,IAAA,WAAA,IAAA,GACA,EAAA,IAAA,WAAA,IAAA;;ACnBA,QAAA,KAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,EACA,EAAA,GAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EACA,EAAA,EAAA,EAAA,GAOA,IALA,GAAA,EAEA,EAAA,GAAA,IAAA,GAAA,EACA,KAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAKA,IAHA,EAAA,GAAA,IAAA,GAAA,EACA,KAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,GAAA,GAEA,GAAA,IAAA,EACA,EAAA,EAAA,MACA,CAAA,GAAA,IAAA,EACA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAEA,GAAA,KAAA,IAAA,EAAA,GACA,GAAA,EAEA,OAAA,GAAA,EAAA,GAAA,EAAA,KAAA,IAAA,EAAA,EAAA,IAGA,QAAA,MAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,GAAA,GAAA,GAAA,EACA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,KAAA,IAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,EACA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,EAAA,GAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAmCA,IAjCA,EAAA,KAAA,IAAA,GAEA,MAAA,IAAA,IAAA,EAAA,GACA,EAAA,MAAA,GAAA,EAAA,EACA,EAAA,IAEA,EAAA,KAAA,MAAA,KAAA,IAAA,GAAA,KAAA,KACA,GAAA,EAAA,KAAA,IAAA,GAAA,IAAA,IACA,IACA,GAAA,IAGA,GADA,EAAA,GAAA,EACA,EAAA,EAEA,EAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAAA,IACA,IACA,GAAA,GAGA,EAAA,GAAA,GACA,EAAA,EACA,EAAA,GACA,EAAA,GAAA,GACA,GAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GACA,GAAA,IAEA,EAAA,EAAA,KAAA,IAAA,EAAA,EAAA,GAAA,KAAA,IAAA,EAAA,GACA,EAAA,IAIA,GAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAIA,IAFA,EAAA,GAAA,EAAA,EACA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,EAAA,GAAA,IAAA,GAAA,GAEA,EAAA,EAAA,EAAA,IAAA,IAAA;;;;AE2qDA,IAAA,EAAA,UAAA,GAnvDA,EAAA,QAAA,aACA,EAAA,QAAA,WACA,EAAA,QAAA,WAuCA,SAAA,IACA,IACA,IAAA,EAAA,IAAA,WAAA,GAEA,OADA,EAAA,UAAA,CAAA,UAAA,WAAA,UAAA,IAAA,WAAA,OAAA,KACA,KAAA,EAAA,OACA,mBAAA,EAAA,UACA,IAAA,EAAA,SAAA,EAAA,GAAA,WACA,MAAA,GACA,OAAA,GAIA,SAAA,IACA,OAAA,EAAA,oBACA,WACA,WAGA,SAAA,EAAA,EAAA,GACA,GAAA,IAAA,EACA,MAAA,IAAA,WAAA,8BAcA,OAZA,EAAA,qBAEA,EAAA,IAAA,WAAA,IACA,UAAA,EAAA,WAGA,OAAA,IACA,EAAA,IAAA,EAAA,IAEA,EAAA,OAAA,GAGA,EAaA,SAAA,EAAA,EAAA,EAAA,GACA,KAAA,EAAA,qBAAA,gBAAA,GACA,OAAA,IAAA,EAAA,EAAA,EAAA,GAIA,GAAA,iBAAA,EAAA,CACA,GAAA,iBAAA,EACA,MAAA,IAAA,MACA,qEAGA,OAAA,EAAA,KAAA,GAEA,OAAA,EAAA,KAAA,EAAA,EAAA,GAWA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,yCAGA,MAAA,oBAAA,aAAA,aAAA,YACA,EAAA,EAAA,EAAA,EAAA,GAGA,iBAAA,EACA,EAAA,EAAA,EAAA,GAGA,EAAA,EAAA,GA4BA,SAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,oCACA,GAAA,EAAA,EACA,MAAA,IAAA,WAAA,wCAIA,SAAA,EAAA,EAAA,EAAA,EAAA,GAEA,OADA,EAAA,GACA,GAAA,EACA,EAAA,EAAA,QAEA,IAAA,EAIA,iBAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,GACA,EAAA,EAAA,GAAA,KAAA,GAEA,EAAA,EAAA,GAWA,SAAA,EAAA,EAAA,GAGA,GAFA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KACA,EAAA,oBACA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,EAGA,OAAA,EAgBA,SAAA,EAAA,EAAA,EAAA,GAKA,GAJA,iBAAA,GAAA,KAAA,IACA,EAAA,SAGA,EAAA,WAAA,GACA,MAAA,IAAA,UAAA,8CAGA,IAAA,EAAA,EAAA,EAAA,EAAA,GAGA,GAFA,EAAA,EAAA,EAAA,IAEA,MAAA,EAAA,GASA,OAPA,IAAA,IAIA,EAAA,EAAA,MAAA,EAAA,IAGA,EAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,EAAA,EAAA,EAAA,QACA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,GAAA,IAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GAGA,GAFA,EAAA,WAEA,EAAA,GAAA,EAAA,WAAA,EACA,MAAA,IAAA,WAAA,6BAGA,GAAA,EAAA,WAAA,GAAA,GAAA,GACA,MAAA,IAAA,WAAA,6BAmBA,OAfA,OADA,IAAA,QAAA,IAAA,EACA,IAAA,WAAA,QACA,IAAA,EACA,IAAA,WAAA,EAAA,GAEA,IAAA,WAAA,EAAA,EAAA,GAGA,EAAA,qBAEA,EAAA,GACA,UAAA,EAAA,UAGA,EAAA,EAAA,EAAA,GAEA,EAGA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,SAAA,GAAA,CACA,IAAA,EAAA,EAAA,EAAA,EAAA,QAGA,OAAA,KAFA,EAAA,EAAA,EAAA,IAEA,OACA,GAGA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,GAGA,GAAA,EAAA,CACA,GAAA,oBAAA,aACA,EAAA,kBAAA,aAAA,WAAA,EACA,MAAA,iBAAA,EAAA,QAAA,EAAA,EAAA,QACA,EAAA,EAAA,GAEA,EAAA,EAAA,GAGA,GAAA,WAAA,EAAA,MAAA,EAAA,EAAA,MACA,OAAA,EAAA,EAAA,EAAA,MAIA,MAAA,IAAA,UAAA,sFAGA,SAAA,EAAA,GAGA,GAAA,GAAA,IACA,MAAA,IAAA,WAAA,0DACA,IAAA,SAAA,IAAA,UAEA,OAAA,EAAA,EAGA,SAAA,EAAA,GAIA,OAHA,GAAA,IACA,EAAA,GAEA,EAAA,OAAA,GA+EA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,SAAA,GACA,OAAA,EAAA,OAEA,GAAA,oBAAA,aAAA,mBAAA,YAAA,SACA,YAAA,OAAA,IAAA,aAAA,aACA,OAAA,EAAA,WAEA,iBAAA,IACA,EAAA,GAAA,GAGA,IAAA,EAAA,EAAA,OACA,GAAA,IAAA,EAAA,OAAA,EAIA,IADA,IAAA,GAAA,IAEA,OAAA,GACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,OAAA,EACA,IAAA,OACA,IAAA,QACA,UAAA,EACA,OAAA,EAAA,GAAA,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,EACA,IAAA,MACA,OAAA,IAAA,EACA,IAAA,SACA,OAAA,EAAA,GAAA,OACA,QACA,GAAA,EAAA,OAAA,EAAA,GAAA,OACA,GAAA,GAAA,GAAA,cACA,GAAA,GAMA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,GAAA,EAcA,SALA,IAAA,GAAA,EAAA,KACA,EAAA,GAIA,EAAA,KAAA,OACA,MAAA,GAOA,SAJA,IAAA,GAAA,EAAA,KAAA,UACA,EAAA,KAAA,QAGA,GAAA,EACA,MAAA,GAOA,IAHA,KAAA,KACA,KAAA,GAGA,MAAA,GAKA,IAFA,IAAA,EAAA,UAGA,OAAA,GACA,IAAA,MACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,SACA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,KAAA,EAAA,GAEA,QACA,GAAA,EAAA,MAAA,IAAA,UAAA,qBAAA,GACA,GAAA,EAAA,IAAA,cACA,GAAA,GASA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,EAAA,GAAA,EAAA,GACA,EAAA,GAAA,EAmIA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAEA,GAAA,IAAA,EAAA,OAAA,OAAA,EAmBA,GAhBA,iBAAA,GACA,EAAA,EACA,EAAA,GACA,EAAA,WACA,EAAA,WACA,GAAA,aACA,GAAA,YAEA,GAAA,EACA,MAAA,KAEA,EAAA,EAAA,EAAA,EAAA,OAAA,GAIA,EAAA,IAAA,EAAA,EAAA,OAAA,GACA,GAAA,EAAA,OAAA,CACA,GAAA,EAAA,OAAA,EACA,EAAA,EAAA,OAAA,OACA,GAAA,EAAA,EAAA,CACA,IAAA,EACA,OAAA,EADA,EAAA,EAUA,GALA,iBAAA,IACA,EAAA,EAAA,KAAA,EAAA,IAIA,EAAA,SAAA,GAEA,OAAA,IAAA,EAAA,QACA,EAEA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EAEA,OADA,GAAA,IACA,EAAA,qBACA,mBAAA,WAAA,UAAA,QACA,EACA,WAAA,UAAA,QAAA,KAAA,EAAA,EAAA,GAEA,WAAA,UAAA,YAAA,KAAA,EAAA,EAAA,GAGA,EAAA,EAAA,CAAA,GAAA,EAAA,EAAA,GAGA,MAAA,IAAA,UAAA,wCAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IA0BA,EA1BA,EAAA,EACA,EAAA,EAAA,OACA,EAAA,EAAA,OAEA,QAAA,IAAA,IAEA,UADA,EAAA,OAAA,GAAA,gBACA,UAAA,GACA,YAAA,GAAA,aAAA,GAAA,CACA,GAAA,EAAA,OAAA,GAAA,EAAA,OAAA,EACA,OAAA,EAEA,EAAA,EACA,GAAA,EACA,GAAA,EACA,GAAA,EAIA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,EACA,EAAA,GAEA,EAAA,aAAA,EAAA,GAKA,GAAA,EAAA,CACA,IAAA,GAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,KAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,IAEA,IADA,IAAA,IAAA,EAAA,GACA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,OAEA,IAAA,IAAA,GAAA,EAAA,GACA,GAAA,OAKA,IADA,EAAA,EAAA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,IAAA,CAEA,IADA,IAAA,GAAA,EACA,EAAA,EAAA,EAAA,EAAA,IACA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CACA,GAAA,EACA,MAGA,GAAA,EAAA,OAAA,EAIA,OAAA,EAeA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,OAAA,IAAA,EACA,IAAA,EAAA,EAAA,OAAA,EACA,GAGA,EAAA,OAAA,IACA,IACA,EAAA,GAJA,EAAA,EASA,IAAA,EAAA,EAAA,OACA,GAAA,EAAA,GAAA,EAAA,MAAA,IAAA,UAAA,sBAEA,EAAA,EAAA,IACA,EAAA,EAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EAAA,CACA,IAAA,EAAA,SAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IACA,GAAA,MAAA,GAAA,OAAA,EACA,EAAA,EAAA,GAAA,EAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EAAA,EAAA,GAkFA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,IAAA,GAAA,IAAA,EAAA,OACA,EAAA,cAAA,GAEA,EAAA,cAAA,EAAA,MAAA,EAAA,IAIA,SAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAIA,IAHA,IAAA,EAAA,GAEA,EAAA,EACA,EAAA,GAAA,CACA,IAQA,EAAA,EAAA,EAAA,EARA,EAAA,EAAA,GACA,EAAA,KACA,EAAA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAAA,IAAA,EACA,EAEA,GAAA,EAAA,GAAA,EAGA,OAAA,GACA,KAAA,EACA,EAAA,MACA,EAAA,GAEA,MACA,KAAA,EAEA,MAAA,KADA,EAAA,EAAA,EAAA,OAEA,GAAA,GAAA,IAAA,EAAA,GAAA,GACA,MACA,EAAA,GAGA,MACA,KAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,MAAA,IAAA,IAAA,MAAA,IAAA,KACA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GACA,OAAA,EAAA,OAAA,EAAA,SACA,EAAA,GAGA,MACA,KAAA,EACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,EAAA,EAAA,EAAA,GACA,MAAA,IAAA,IAAA,MAAA,IAAA,IAAA,MAAA,IAAA,KACA,GAAA,GAAA,IAAA,IAAA,GAAA,IAAA,IAAA,GAAA,IAAA,EAAA,GAAA,GACA,OAAA,EAAA,UACA,EAAA,GAMA,OAAA,GAGA,EAAA,MACA,EAAA,GACA,EAAA,QAEA,GAAA,MACA,EAAA,KAAA,IAAA,GAAA,KAAA,OACA,EAAA,MAAA,KAAA,GAGA,EAAA,KAAA,GACA,GAAA,EAGA,OAAA,EAAA,GA98BA,QAAA,OAAA,EACA,QAAA,WAAA,EACA,QAAA,kBAAA,GA0BA,EAAA,yBAAA,IAAA,EAAA,oBACA,EAAA,oBACA,IAKA,QAAA,WAAA,IAkEA,EAAA,SAAA,KAGA,EAAA,SAAA,SAAA,GAEA,OADA,EAAA,UAAA,EAAA,UACA,GA2BA,EAAA,KAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,IAGA,EAAA,sBACA,EAAA,UAAA,UAAA,WAAA,UACA,EAAA,UAAA,WACA,oBAAA,QAAA,OAAA,SACA,EAAA,OAAA,WAAA,GAEA,OAAA,eAAA,EAAA,OAAA,QAAA,CACA,MAAA,KACA,cAAA,KAiCA,EAAA,MAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,IAiBA,EAAA,YAAA,SAAA,GACA,OAAA,EAAA,KAAA,IAKA,EAAA,gBAAA,SAAA,GACA,OAAA,EAAA,KAAA,IAiHA,EAAA,SAAA,SAAA,GACA,QAAA,MAAA,IAAA,EAAA,YAGA,EAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,SAAA,KAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,6BAGA,GAAA,IAAA,EAAA,OAAA,EAKA,IAHA,IAAA,EAAA,EAAA,OACA,EAAA,EAAA,OAEA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,MAIA,OAAA,EAAA,GAAA,EACA,EAAA,EAAA,EACA,GAGA,EAAA,WAAA,SAAA,GACA,OAAA,OAAA,GAAA,eACA,IAAA,MACA,IAAA,OACA,IAAA,QACA,IAAA,QACA,IAAA,SACA,IAAA,SACA,IAAA,SACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EACA,QACA,OAAA,IAIA,EAAA,OAAA,SAAA,EAAA,GACA,IAAA,EAAA,GACA,MAAA,IAAA,UAAA,+CAGA,GAAA,IAAA,EAAA,OACA,OAAA,EAAA,MAAA,GAGA,IAAA,EACA,QAAA,IAAA,EAEA,IADA,EAAA,EACA,EAAA,EAAA,EAAA,EAAA,SAAA,EACA,GAAA,EAAA,GAAA,OAIA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,EACA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CACA,IAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,+CAEA,EAAA,KAAA,EAAA,GACA,GAAA,EAAA,OAEA,OAAA,GA8CA,EAAA,WAAA,EA0EA,EAAA,UAAA,WAAA,EAQA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,OACA,GAAA,EAAA,GAAA,EACA,MAAA,IAAA,WAAA,6CAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EACA,EAAA,KAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,EAAA,EAAA,GAEA,OAAA,MAGA,EAAA,UAAA,SAAA,WACA,IAAA,EAAA,EAAA,KAAA,OACA,OAAA,IAAA,EAAA,GACA,IAAA,UAAA,OAAA,EAAA,KAAA,EAAA,GACA,EAAA,MAAA,KAAA,YAGA,EAAA,UAAA,OAAA,SAAA,GACA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,6BACA,OAAA,OAAA,GACA,IAAA,EAAA,QAAA,KAAA,IAGA,EAAA,UAAA,QAAA,WACA,IAAA,EAAA,GACA,EAAA,QAAA,kBAKA,OAJA,KAAA,OAAA,IACA,EAAA,KAAA,SAAA,MAAA,EAAA,GAAA,MAAA,SAAA,KAAA,KACA,KAAA,OAAA,IAAA,GAAA,UAEA,WAAA,EAAA,KAGA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GACA,MAAA,IAAA,UAAA,6BAgBA,QAbA,IAAA,IACA,EAAA,QAEA,IAAA,IACA,EAAA,EAAA,EAAA,OAAA,QAEA,IAAA,IACA,EAAA,QAEA,IAAA,IACA,EAAA,KAAA,QAGA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,KAAA,OACA,MAAA,IAAA,WAAA,sBAGA,GAAA,GAAA,GAAA,GAAA,EACA,OAAA,EAEA,GAAA,GAAA,EACA,OAAA,EAEA,GAAA,GAAA,EACA,OAAA,EAQA,GAAA,OAAA,EAAA,OAAA,EASA,IAPA,IAAA,GAJA,KAAA,IADA,KAAA,GAMA,GAPA,KAAA,IADA,KAAA,GASA,EAAA,KAAA,IAAA,EAAA,GAEA,EAAA,KAAA,MAAA,EAAA,GACA,EAAA,EAAA,MAAA,EAAA,GAEA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,EAAA,KAAA,EAAA,GAAA,CACA,EAAA,EAAA,GACA,EAAA,EAAA,GACA,MAIA,OAAA,EAAA,GAAA,EACA,EAAA,EAAA,EACA,GA6HA,EAAA,UAAA,SAAA,SAAA,EAAA,EAAA,GACA,OAAA,IAAA,KAAA,QAAA,EAAA,EAAA,IAGA,EAAA,UAAA,QAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAAA,IAkDA,EAAA,UAAA,MAAA,SAAA,EAAA,EAAA,EAAA,GAEA,QAAA,IAAA,EACA,EAAA,OACA,EAAA,KAAA,OACA,EAAA,OAEA,QAAA,IAAA,GAAA,iBAAA,EACA,EAAA,EACA,EAAA,KAAA,OACA,EAAA,MAEA,CAAA,IAAA,SAAA,GAWA,MAAA,IAAA,MACA,2EAXA,GAAA,EACA,SAAA,IACA,GAAA,OACA,IAAA,IAAA,EAAA,UAEA,EAAA,EACA,OAAA,GASA,IAAA,EAAA,KAAA,OAAA,EAGA,SAFA,IAAA,GAAA,EAAA,KAAA,EAAA,GAEA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,KAAA,OACA,MAAA,IAAA,WAAA,0CAGA,IAAA,EAAA,QAGA,IADA,IAAA,GAAA,IAEA,OAAA,GACA,IAAA,MACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,QACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,SACA,IAAA,SACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,SAEA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,OAAA,EAAA,KAAA,EAAA,EAAA,GAEA,QACA,GAAA,EAAA,MAAA,IAAA,UAAA,qBAAA,GACA,GAAA,GAAA,GAAA,cACA,GAAA,IAKA,EAAA,UAAA,OAAA,WACA,MAAA,CACA,KAAA,SACA,KAAA,MAAA,UAAA,MAAA,KAAA,KAAA,MAAA,KAAA,KAwFA,IAAA,EAAA,KAEA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,OACA,GAAA,GAAA,EACA,OAAA,OAAA,aAAA,MAAA,OAAA,GAMA,IAFA,IAAA,EAAA,GACA,EAAA,EACA,EAAA,GACA,GAAA,OAAA,aAAA,MACA,OACA,EAAA,MAAA,EAAA,GAAA,IAGA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,OAAA,aAAA,IAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,GACA,EAAA,KAAA,IAAA,EAAA,OAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,OAAA,aAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,SAEA,GAAA,EAAA,KAAA,EAAA,KACA,GAAA,EAAA,GAAA,EAAA,KAAA,EAAA,GAGA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,IAAA,EACA,GAAA,EAAA,EAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,GAAA,EACA,GAAA,OAAA,aAAA,EAAA,GAAA,IAAA,EAAA,EAAA,IAEA,OAAA,EA0CA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,sBACA,GAAA,EAAA,EAAA,EAAA,MAAA,IAAA,WAAA,yCA+JA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,SAAA,GAAA,MAAA,IAAA,UAAA,+CACA,GAAA,EAAA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,qCACA,GAAA,EAAA,EAAA,EAAA,OAAA,MAAA,IAAA,WAAA,sBAkDA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,IAAA,EAAA,MAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EACA,EAAA,EAAA,IAAA,EAAA,KAAA,GAAA,EAAA,EAAA,EAAA,MACA,GAAA,EAAA,EAAA,EAAA,GA8BA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,IAAA,EAAA,WAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KAAA,IAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EACA,EAAA,EAAA,GAAA,IAAA,GAAA,EAAA,EAAA,EAAA,GAAA,IAmJA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,OAAA,MAAA,IAAA,WAAA,sBACA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,sBAGA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAKA,OAJA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,uBAAA,uBAEA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EAWA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAKA,OAJA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,wBAAA,wBAEA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,EA/cA,EAAA,UAAA,MAAA,SAAA,EAAA,GACA,IAoBA,EApBA,EAAA,KAAA,OAqBA,IApBA,IAAA,GAGA,GACA,GAAA,GACA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,IANA,OAAA,IAAA,EAAA,IAAA,GASA,GACA,GAAA,GACA,IAAA,EAAA,GACA,EAAA,IACA,EAAA,GAGA,EAAA,IAAA,EAAA,GAGA,EAAA,qBACA,EAAA,KAAA,SAAA,EAAA,IACA,UAAA,EAAA,cACA,CACA,IAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,OAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,GAAA,KAAA,EAAA,GAIA,OAAA,GAWA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,KAAA,GACA,EAAA,EACA,EAAA,IACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,EAAA,GAAA,EAGA,OAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GACA,EAAA,EAAA,EAAA,KAAA,QAKA,IAFA,IAAA,EAAA,KAAA,IAAA,GACA,EAAA,EACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,IAAA,GAAA,EAGA,OAAA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,GAAA,KAAA,EAAA,IAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,KAAA,IAAA,EAAA,KAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,SAEA,KAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAAA,IACA,SAAA,KAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,SAAA,KAAA,IACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,KAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,KAAA,GACA,EAAA,EACA,EAAA,IACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,EAAA,GAAA,EAMA,OAFA,IAFA,GAAA,OAEA,GAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GACA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,EAAA,EAAA,KAAA,QAKA,IAHA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,IAAA,GACA,EAAA,IAAA,GAAA,MACA,GAAA,KAAA,IAAA,GAAA,EAMA,OAFA,IAFA,GAAA,OAEA,GAAA,KAAA,IAAA,EAAA,EAAA,IAEA,GAGA,EAAA,UAAA,SAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,KAAA,IACA,GAAA,IAAA,KAAA,GAAA,GADA,KAAA,IAIA,EAAA,UAAA,YAAA,SAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,EAAA,KAAA,GAAA,KAAA,EAAA,IAAA,EACA,OAAA,MAAA,EAAA,WAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GACA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,IAAA,EAAA,KAAA,EAAA,GAAA,KAAA,IAAA,EACA,OAAA,MAAA,EAAA,WAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,KAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAGA,OAFA,GAAA,EAAA,EAAA,EAAA,KAAA,QAEA,KAAA,IAAA,GACA,KAAA,EAAA,IAAA,GACA,KAAA,EAAA,IAAA,EACA,KAAA,EAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,YAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,GAEA,OADA,GAAA,EAAA,EAAA,EAAA,KAAA,QACA,EAAA,KAAA,KAAA,GAAA,EAAA,GAAA,IASA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,IACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,IAEA,EAAA,KAAA,EAAA,EAAA,EADA,KAAA,IAAA,EAAA,EAAA,GAAA,EACA,GAGA,IAAA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,GAAA,IAAA,IACA,EAAA,IAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,YAAA,SAAA,EAAA,EAAA,EAAA,IACA,GAAA,EACA,GAAA,EACA,GAAA,EACA,IAEA,EAAA,KAAA,EAAA,EAAA,EADA,KAAA,IAAA,EAAA,EAAA,GAAA,EACA,GAGA,IAAA,EAAA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,EAAA,GAAA,IAAA,IACA,GAAA,IAAA,GAAA,MACA,KAAA,EAAA,GAAA,EAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GAMA,OALA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,sBAAA,EAAA,KAAA,MAAA,IACA,KAAA,GAAA,IAAA,EACA,EAAA,GAWA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAUA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GACA,EAAA,qBACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,WAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAGA,GAFA,GAAA,EACA,GAAA,GACA,EAAA,CACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAEA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGA,IAAA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,GAAA,IAAA,IACA,EAAA,IAAA,GAAA,MACA,EAAA,GAAA,IAAA,GAAA,IAAA,KAAA,EAAA,EAAA,KACA,EAAA,GAEA,KAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAGA,GAFA,GAAA,EACA,GAAA,GACA,EAAA,CACA,IAAA,EAAA,KAAA,IAAA,EAAA,EAAA,EAAA,GAEA,EAAA,KAAA,EAAA,EAAA,EAAA,EAAA,GAAA,GAGA,IAAA,EAAA,EAAA,EACA,EAAA,EACA,EAAA,EAEA,IADA,KAAA,EAAA,GAAA,IAAA,IACA,GAAA,IAAA,GAAA,MACA,EAAA,GAAA,IAAA,GAAA,IAAA,KAAA,EAAA,EAAA,KACA,EAAA,GAEA,KAAA,EAAA,IAAA,EAAA,GAAA,GAAA,EAAA,IAGA,OAAA,EAAA,GAGA,EAAA,UAAA,UAAA,SAAA,EAAA,EAAA,GAOA,OANA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,KAAA,KACA,EAAA,sBAAA,EAAA,KAAA,MAAA,IACA,EAAA,IAAA,EAAA,IAAA,EAAA,GACA,KAAA,GAAA,IAAA,EACA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAUA,OATA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,OAAA,OACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAYA,OAXA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAAA,YACA,EAAA,qBACA,KAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,IAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GAaA,OAZA,GAAA,EACA,GAAA,EACA,GAAA,EAAA,KAAA,EAAA,EAAA,EAAA,YAAA,YACA,EAAA,IAAA,EAAA,WAAA,EAAA,GACA,EAAA,qBACA,KAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,GACA,KAAA,EAAA,GAAA,IAAA,EACA,KAAA,EAAA,GAAA,IAAA,GAEA,EAAA,KAAA,EAAA,GAAA,GAEA,EAAA,GAgBA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAGA,EAAA,UAAA,aAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAWA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAGA,EAAA,UAAA,cAAA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAIA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAQA,GAPA,IAAA,EAAA,GACA,GAAA,IAAA,IAAA,EAAA,KAAA,QACA,GAAA,EAAA,SAAA,EAAA,EAAA,QACA,IAAA,EAAA,GACA,EAAA,GAAA,EAAA,IAAA,EAAA,GAGA,IAAA,EAAA,OAAA,EACA,GAAA,IAAA,EAAA,QAAA,IAAA,KAAA,OAAA,OAAA,EAGA,GAAA,EAAA,EACA,MAAA,IAAA,WAAA,6BAEA,GAAA,EAAA,GAAA,GAAA,KAAA,OAAA,MAAA,IAAA,WAAA,6BACA,GAAA,EAAA,EAAA,MAAA,IAAA,WAAA,2BAGA,EAAA,KAAA,SAAA,EAAA,KAAA,QACA,EAAA,OAAA,EAAA,EAAA,IACA,EAAA,EAAA,OAAA,EAAA,GAGA,IACA,EADA,EAAA,EAAA,EAGA,GAAA,OAAA,GAAA,EAAA,GAAA,EAAA,EAEA,IAAA,EAAA,EAAA,EAAA,GAAA,IAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,QAEA,GAAA,EAAA,MAAA,EAAA,oBAEA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,EAAA,GAAA,KAAA,EAAA,QAGA,WAAA,UAAA,IAAA,KACA,EACA,KAAA,SAAA,EAAA,EAAA,GACA,GAIA,OAAA,GAOA,EAAA,UAAA,KAAA,SAAA,EAAA,EAAA,EAAA,GAEA,GAAA,iBAAA,EAAA,CASA,GARA,iBAAA,GACA,EAAA,EACA,EAAA,EACA,EAAA,KAAA,QACA,iBAAA,IACA,EAAA,EACA,EAAA,KAAA,QAEA,IAAA,EAAA,OAAA,CACA,IAAA,EAAA,EAAA,WAAA,GACA,EAAA,MACA,EAAA,GAGA,QAAA,IAAA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6BAEA,GAAA,iBAAA,IAAA,EAAA,WAAA,GACA,MAAA,IAAA,UAAA,qBAAA,OAEA,iBAAA,IACA,GAAA,KAIA,GAAA,EAAA,GAAA,KAAA,OAAA,GAAA,KAAA,OAAA,EACA,MAAA,IAAA,WAAA,sBAGA,GAAA,GAAA,EACA,OAAA,KAQA,IAAA,EACA,GANA,KAAA,EACA,OAAA,IAAA,EAAA,KAAA,OAAA,IAAA,EAEA,IAAA,EAAA,GAGA,iBAAA,EACA,IAAA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,GAAA,MAEA,CACA,IAAA,EAAA,EAAA,SAAA,GACA,EACA,EAAA,IAAA,EAAA,EAAA,GAAA,YACA,EAAA,EAAA,OACA,IAAA,EAAA,EAAA,EAAA,EAAA,IAAA,EACA,KAAA,EAAA,GAAA,EAAA,EAAA,GAIA,OAAA,MAMA,IAAA,EAAA,qBAEA,SAAA,EAAA,GAIA,IAFA,EAAA,EAAA,GAAA,QAAA,EAAA,KAEA,OAAA,EAAA,MAAA,GAEA,KAAA,EAAA,OAAA,GAAA,GACA,GAAA,IAEA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,KAAA,EAAA,OACA,EAAA,QAAA,aAAA,IAGA,SAAA,EAAA,GACA,OAAA,EAAA,GAAA,IAAA,EAAA,SAAA,IACA,EAAA,SAAA,IAGA,SAAA,EAAA,EAAA,GAEA,IAAA,EADA,EAAA,GAAA,EAAA,EAMA,IAJA,IAAA,EAAA,EAAA,OACA,EAAA,KACA,EAAA,GAEA,EAAA,EAAA,EAAA,IAAA,EAAA,CAIA,IAHA,EAAA,EAAA,WAAA,IAGA,OAAA,EAAA,MAAA,CAEA,IAAA,EAAA,CAEA,GAAA,EAAA,MAAA,EAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,SACA,GAAA,EAAA,IAAA,EAAA,EAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,SAIA,EAAA,EAEA,SAIA,GAAA,EAAA,MAAA,EACA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KACA,EAAA,EACA,SAIA,EAAA,OAAA,EAAA,OAAA,GAAA,EAAA,YACA,IAEA,GAAA,IAAA,GAAA,EAAA,KAAA,IAAA,IAAA,KAMA,GAHA,EAAA,KAGA,EAAA,IAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KAAA,QACA,GAAA,EAAA,KAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,EAAA,IACA,GAAA,EAAA,UAEA,GAAA,EAAA,MAAA,CACA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,SAEA,CAAA,KAAA,EAAA,SASA,MAAA,IAAA,MAAA,sBARA,IAAA,GAAA,GAAA,EAAA,MACA,EAAA,KACA,GAAA,GAAA,IACA,GAAA,GAAA,GAAA,IACA,GAAA,EAAA,GAAA,IACA,GAAA,EAAA,MAOA,OAAA,EAGA,SAAA,EAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,SAAA,EAEA,EAAA,KAAA,IAAA,EAAA,WAAA,IAEA,OAAA,EAGA,SAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,EACA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,WACA,GAAA,GAAA,KADA,EAIA,GADA,EAAA,EAAA,WAAA,KACA,EACA,EAAA,EAAA,IACA,EAAA,KAAA,GACA,EAAA,KAAA,GAGA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,EAAA,YAAA,EAAA,IAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,KACA,EAAA,GAAA,EAAA,QAAA,GAAA,EAAA,UADA,EAEA,EAAA,EAAA,GAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,GACA,OAAA,GAAA;;;AC1vDA,IAAA,EAAA,QAAA,UACA,EAAA,EAAA,OAGA,SAAA,EAAA,EAAA,GACA,IAAA,IAAA,KAAA,EACA,EAAA,GAAA,EAAA,GAWA,SAAA,EAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,EAAA,GATA,EAAA,MAAA,EAAA,OAAA,EAAA,aAAA,EAAA,gBACA,OAAA,QAAA,GAGA,EAAA,EAAA,SACA,QAAA,OAAA,GAQA,EAAA,EAAA,GAEA,EAAA,KAAA,SAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,iCAEA,OAAA,EAAA,EAAA,EAAA,IAGA,EAAA,MAAA,SAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6BAEA,IAAA,EAAA,EAAA,GAUA,YATA,IAAA,EACA,iBAAA,EACA,EAAA,KAAA,EAAA,GAEA,EAAA,KAAA,GAGA,EAAA,KAAA,GAEA,GAGA,EAAA,YAAA,SAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6BAEA,OAAA,EAAA,IAGA,EAAA,gBAAA,SAAA,GACA,GAAA,iBAAA,EACA,MAAA,IAAA,UAAA,6BAEA,OAAA,EAAA,WAAA;;;AC+CA,IAAA,EAAA,QAAA,UAAA,OAnFA,SAAA,EAAA,GACA,OAAA,MAAA,QACA,MAAA,QAAA,GAEA,mBAAA,EAAA,GAIA,SAAA,EAAA,GACA,MAAA,kBAAA,EAIA,SAAA,EAAA,GACA,OAAA,OAAA,EAIA,SAAA,EAAA,GACA,OAAA,MAAA,EAIA,SAAA,EAAA,GACA,MAAA,iBAAA,EAIA,SAAA,EAAA,GACA,MAAA,iBAAA,EAIA,SAAA,EAAA,GACA,MAAA,iBAAA,EAIA,SAAA,EAAA,GACA,YAAA,IAAA,EAIA,SAAA,EAAA,GACA,MAAA,oBAAA,EAAA,GAIA,SAAA,EAAA,GACA,MAAA,iBAAA,GAAA,OAAA,EAIA,SAAA,EAAA,GACA,MAAA,kBAAA,EAAA,GAIA,SAAA,EAAA,GACA,MAAA,mBAAA,EAAA,IAAA,aAAA,MAIA,SAAA,EAAA,GACA,MAAA,mBAAA,EAIA,SAAA,EAAA,GACA,OAAA,OAAA,GACA,kBAAA,GACA,iBAAA,GACA,iBAAA,GACA,iBAAA,QACA,IAAA,EAMA,SAAA,EAAA,GACA,OAAA,OAAA,UAAA,SAAA,KAAA,GA3EA,QAAA,QAAA,EAKA,QAAA,UAAA,EAKA,QAAA,OAAA,EAKA,QAAA,kBAAA,EAKA,QAAA,SAAA,EAKA,QAAA,SAAA,EAKA,QAAA,SAAA,EAKA,QAAA,YAAA,EAKA,QAAA,SAAA,EAKA,QAAA,SAAA,EAKA,QAAA,OAAA,EAKA,QAAA,QAAA,EAKA,QAAA,WAAA,EAUA,QAAA,YAAA,EAEA,QAAA,SAAA,EAAA;;;;;ACtGA,aAEA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAEA,IAAA,EAAA,QAAA,eAAA,OACA,EAAA,QAAA,QAEA,SAAA,EAAA,EAAA,EAAA,GACA,EAAA,KAAA,EAAA,GAGA,OAAA,QAAA,WACA,SAAA,IACA,EAAA,KAAA,GAEA,KAAA,KAAA,KACA,KAAA,KAAA,KACA,KAAA,OAAA,EAqDA,OAlDA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,EAAA,CAAA,KAAA,EAAA,KAAA,MACA,KAAA,OAAA,EAAA,KAAA,KAAA,KAAA,EAAA,KAAA,KAAA,EACA,KAAA,KAAA,IACA,KAAA,QAGA,EAAA,UAAA,QAAA,SAAA,GACA,IAAA,EAAA,CAAA,KAAA,EAAA,KAAA,KAAA,MACA,IAAA,KAAA,SAAA,KAAA,KAAA,GACA,KAAA,KAAA,IACA,KAAA,QAGA,EAAA,UAAA,MAAA,WACA,GAAA,IAAA,KAAA,OAAA,CACA,IAAA,EAAA,KAAA,KAAA,KAGA,OAFA,IAAA,KAAA,OAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,OACA,KAAA,OACA,IAGA,EAAA,UAAA,MAAA,WACA,KAAA,KAAA,KAAA,KAAA,KACA,KAAA,OAAA,GAGA,EAAA,UAAA,KAAA,SAAA,GACA,GAAA,IAAA,KAAA,OAAA,MAAA,GAGA,IAFA,IAAA,EAAA,KAAA,KACA,EAAA,GAAA,EAAA,KACA,EAAA,EAAA,MACA,GAAA,EAAA,EAAA,KACA,OAAA,GAGA,EAAA,UAAA,OAAA,SAAA,GACA,GAAA,IAAA,KAAA,OAAA,OAAA,EAAA,MAAA,GACA,GAAA,IAAA,KAAA,OAAA,OAAA,KAAA,KAAA,KAIA,IAHA,IAAA,EAAA,EAAA,YAAA,IAAA,GACA,EAAA,KAAA,KACA,EAAA,EACA,GACA,EAAA,EAAA,KAAA,EAAA,GACA,GAAA,EAAA,KAAA,OACA,EAAA,EAAA,KAEA,OAAA,GAGA,EA3DA,GA8DA,GAAA,EAAA,SAAA,EAAA,QAAA,SACA,OAAA,QAAA,UAAA,EAAA,QAAA,QAAA,WACA,IAAA,EAAA,EAAA,QAAA,CAAA,OAAA,KAAA,SACA,OAAA,KAAA,YAAA,KAAA,IAAA;;AC5EA,aAIA,IAAA,EAAA,QAAA,wBAIA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAEA,EAAA,KAAA,gBAAA,KAAA,eAAA,UACA,EAAA,KAAA,gBAAA,KAAA,eAAA,UAEA,OAAA,GAAA,GACA,EACA,EAAA,IACA,GAAA,KAAA,gBAAA,KAAA,eAAA,cACA,EAAA,SAAA,EAAA,KAAA,GAEA,OAMA,KAAA,iBACA,KAAA,eAAA,WAAA,GAIA,KAAA,iBACA,KAAA,eAAA,WAAA,GAGA,KAAA,SAAA,GAAA,KAAA,SAAA,IACA,GAAA,GACA,EAAA,SAAA,EAAA,EAAA,GACA,EAAA,iBACA,EAAA,eAAA,cAAA,IAEA,GACA,EAAA,KAIA,MAGA,SAAA,IACA,KAAA,iBACA,KAAA,eAAA,WAAA,EACA,KAAA,eAAA,SAAA,EACA,KAAA,eAAA,OAAA,EACA,KAAA,eAAA,YAAA,GAGA,KAAA,iBACA,KAAA,eAAA,WAAA,EACA,KAAA,eAAA,OAAA,EACA,KAAA,eAAA,QAAA,EACA,KAAA,eAAA,UAAA,EACA,KAAA,eAAA,cAAA,GAIA,SAAA,EAAA,EAAA,GACA,EAAA,KAAA,QAAA,GAGA,OAAA,QAAA,CACA,QAAA,EACA,UAAA;;;ACLA,IAAA,EAAA,UAAA,GA1CA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,iBACA,OAAA,EAGA,IAAA,GAAA,EAeA,OAdA,WACA,IAAA,EAAA,CACA,GAAA,EAAA,oBACA,MAAA,IAAA,MAAA,GACA,EAAA,oBACA,QAAA,MAAA,GAEA,QAAA,KAAA,GAEA,GAAA,EAEA,OAAA,EAAA,MAAA,KAAA,YAcA,SAAA,EAAA,GAEA,IACA,IAAA,EAAA,aAAA,OAAA,EACA,MAAA,GACA,OAAA,EAEA,IAAA,EAAA,EAAA,aAAA,GACA,OAAA,MAAA,GACA,SAAA,OAAA,GAAA,cA5DA,OAAA,QAAA;;;;;ACsqBA,IAAA,EAAA,QAAA,WAAA,EAAA,UAAA,GA9oBIC,EAAMvvE,QAAQ,wBAMlB,SAASwvE,EAASC,EAAOC,EAAU3K,GAC5B0K,KAAAA,MAAQA,EACRC,KAAAA,SAAWA,EACX3J,KAAAA,SAAWhB,EACX7xD,KAAAA,KAAO,KAKd,SAASy8D,EAActlD,GACjB7f,IAAAA,EAAQ,KAEP0I,KAAAA,KAAO,KACP08D,KAAAA,MAAQ,KACRC,KAAAA,OAAS,WACZC,EAAetlE,EAAO6f,IAlB1B/qB,OAAOC,QAAUwwE,EAwBjB,IAIIC,EAJAC,EAA+GV,EAAIV,SAOvHkB,EAASG,cAAgBA,EAGzB,IAAIC,EAAOnwE,QAAQ,gBACnBmwE,EAAKC,SAAWpwE,QAAQ,YAIxB,IAAIqwE,EAAe,CACjBC,UAAWtwE,QAAQ,mBAKjBuwE,EAASvwE,QAAQ,6BAKjBwwE,EAASxwE,QAAQ,eAAewwE,OAChCC,EAAgBC,EAAOh8C,YAAc,aACzC,SAASi8C,EAAoBlB,GACpBe,OAAAA,EAAOt5C,KAAKu4C,GAErB,SAASmB,EAAc1kE,GACdskE,OAAAA,EAAOK,SAAS3kE,IAAQA,aAAeukE,EAKhD,IA2IIK,EA3IAC,EAAc/wE,QAAQ,8BAI1B,SAASgxE,KAET,SAASd,EAAcrpE,EAASoqE,GAC9BjB,EAASA,GAAUhwE,QAAQ,oBAE3B6G,EAAUA,GAAW,GAOjBqqE,IAAAA,EAAWD,aAAkBjB,EAI5BmB,KAAAA,aAAetqE,EAAQsqE,WAExBD,IAAU,KAAKC,WAAa,KAAKA,cAAgBtqE,EAAQuqE,oBAKzDC,IAAAA,EAAMxqE,EAAQyqE,cACdC,EAAc1qE,EAAQ2qE,sBACtBC,EAAa,KAAKN,WAAa,GAAK,MAElB,KAAKG,cAAvBD,GAAe,IAARA,EAAgCA,EAAaH,IAAaK,GAA+B,IAAhBA,GAAyCA,EAAsCE,EAG9JH,KAAAA,cAAgB9xE,KAAK4C,MAAM,KAAKkvE,eAGhCI,KAAAA,aAAc,EAGdC,KAAAA,WAAY,EAEZC,KAAAA,QAAS,EAETC,KAAAA,OAAQ,EAERC,KAAAA,UAAW,EAGXC,KAAAA,WAAY,EAKbC,IAAAA,GAAqC,IAA1BnrE,EAAQorE,cAClBA,KAAAA,eAAiBD,EAKjBE,KAAAA,gBAAkBrrE,EAAQqrE,iBAAmB,OAK7ChwE,KAAAA,OAAS,EAGTiwE,KAAAA,SAAU,EAGVC,KAAAA,OAAS,EAMTC,KAAAA,MAAO,EAKPC,KAAAA,kBAAmB,EAGnBC,KAAAA,QAAU,SAAUvF,GACvBuF,EAAQtB,EAAQjE,IAIbwF,KAAAA,QAAU,KAGVC,KAAAA,SAAW,EAEXC,KAAAA,gBAAkB,KAClBC,KAAAA,oBAAsB,KAItBC,KAAAA,UAAY,EAIZC,KAAAA,aAAc,EAGdC,KAAAA,cAAe,EAGfC,KAAAA,qBAAuB,EAIvBC,KAAAA,mBAAqB,IAAIrD,EAAc,MA0C9C,SAASI,EAASlpE,GAUZ,GATJmpE,EAASA,GAAUhwE,QAAQ,sBAStB8wE,EAAgB1kE,KAAK2jE,EAAU,OAAW,gBAAgBC,GACtD,OAAA,IAAID,EAASlpE,GAGjBosE,KAAAA,eAAiB,IAAI/C,EAAcrpE,EAAS,MAG5CqsE,KAAAA,UAAW,EAEZrsE,IAC2B,mBAAlBA,EAAQssE,QAAsB,KAAKC,OAASvsE,EAAQssE,OAEjC,mBAAnBtsE,EAAQwsE,SAAuB,KAAKC,QAAUzsE,EAAQwsE,QAElC,mBAApBxsE,EAAQy2B,UAAwB,KAAKi2C,SAAW1sE,EAAQy2B,SAEtC,mBAAlBz2B,EAAQ2sE,QAAsB,KAAKC,OAAS5sE,EAAQ2sE,QAGjEjD,EAAOnkE,KAAK,MAQd,SAASsnE,EAAczC,EAAQlM,GACzBiI,IAAAA,EAAK,IAAI76D,MAAM,mBAEnB8+D,EAAOzF,KAAK,QAASwB,GACrBuC,EAAIV,SAAS9J,EAAIiI,GAMnB,SAAS2G,EAAW1C,EAAQ5mD,EAAOolD,EAAO1K,GACpC6O,IAAAA,GAAQ,EACR5G,GAAK,EAYF4G,OAVO,OAAVnE,EACFzC,EAAK,IAAI3B,UAAU,uCACO,iBAAVoE,QAAgCnsB,IAAVmsB,GAAwBplD,EAAM8mD,aACpEnE,EAAK,IAAI3B,UAAU,oCAEjB2B,IACFiE,EAAOzF,KAAK,QAASwB,GACrBuC,EAAIV,SAAS9J,EAAIiI,GACjB4G,GAAQ,GAEHA,EAqDT,SAASC,EAAYxpD,EAAOolD,EAAOC,GAI1BD,OAHFplD,EAAM8mD,aAAsC,IAAxB9mD,EAAM4nD,eAA4C,iBAAVxC,IAC/DA,EAAQe,EAAOt5C,KAAKu4C,EAAOC,IAEtBD,EAgBT,SAASqE,EAAc7C,EAAQ5mD,EAAO0pD,EAAOtE,EAAOC,EAAU3K,GACxD,IAACgP,EAAO,CACNC,IAAAA,EAAWH,EAAYxpD,EAAOolD,EAAOC,GACrCD,IAAUuE,IACZD,GAAQ,EACRrE,EAAW,SACXD,EAAQuE,GAGR7uD,IAAAA,EAAMkF,EAAM8mD,WAAa,EAAI1B,EAAMvtE,OAEvCmoB,EAAMnoB,QAAUijB,EAEZ4R,IAAAA,EAAM1M,EAAMnoB,OAASmoB,EAAMinD,cAI3BjnD,GAFC0M,IAAK1M,EAAMsnD,WAAY,GAExBtnD,EAAM8nD,SAAW9nD,EAAM+nD,OAAQ,CAC7B/zD,IAAAA,EAAOgM,EAAMsoD,oBACjBtoD,EAAMsoD,oBAAsB,CAC1BlD,MAAOA,EACPC,SAAUA,EACVqE,MAAOA,EACPhO,SAAUhB,EACV7xD,KAAM,MAEJmL,EACFA,EAAKnL,KAAOmX,EAAMsoD,oBAElBtoD,EAAMqoD,gBAAkBroD,EAAMsoD,oBAEhCtoD,EAAM0oD,sBAAwB,OAE9BkB,EAAQhD,EAAQ5mD,GAAO,EAAOlF,EAAKsqD,EAAOC,EAAU3K,GAG/ChuC,OAAAA,EAGT,SAASk9C,EAAQhD,EAAQ5mD,EAAOgpD,EAAQluD,EAAKsqD,EAAOC,EAAU3K,GAC5D16C,EAAMooD,SAAWttD,EACjBkF,EAAMmoD,QAAUzN,EAChB16C,EAAM8nD,SAAU,EAChB9nD,EAAMgoD,MAAO,EACTgB,EAAQpC,EAAOqC,QAAQ7D,EAAOplD,EAAMkoD,SAActB,EAAOmC,OAAO3D,EAAOC,EAAUrlD,EAAMkoD,SAC3FloD,EAAMgoD,MAAO,EAGf,SAAS6B,EAAajD,EAAQ5mD,EAAOgoD,EAAMrF,EAAIjI,KAC3C16C,EAAMuoD,UAEJP,GAGF9C,EAAIV,SAAS9J,EAAIiI,GAGjBuC,EAAIV,SAASsF,EAAalD,EAAQ5mD,GAClC4mD,EAAOgC,eAAeH,cAAe,EACrC7B,EAAOzF,KAAK,QAASwB,KAIrBjI,EAAGiI,GACHiE,EAAOgC,eAAeH,cAAe,EACrC7B,EAAOzF,KAAK,QAASwB,GAGrBmH,EAAYlD,EAAQ5mD,IAIxB,SAAS+pD,EAAmB/pD,GAC1BA,EAAM8nD,SAAU,EAChB9nD,EAAMmoD,QAAU,KAChBnoD,EAAMnoB,QAAUmoB,EAAMooD,SACtBpoD,EAAMooD,SAAW,EAGnB,SAASF,EAAQtB,EAAQjE,GACnB3iD,IAAAA,EAAQ4mD,EAAOgC,eACfZ,EAAOhoD,EAAMgoD,KACbtN,EAAK16C,EAAMmoD,QAIXxF,GAFJoH,EAAmB/pD,GAEf2iD,EAAIkH,EAAajD,EAAQ5mD,EAAOgoD,EAAMrF,EAAIjI,OAAS,CAEjD+M,IAAAA,EAAWuC,EAAWhqD,GAErBynD,GAAaznD,EAAM+nD,QAAW/nD,EAAMioD,mBAAoBjoD,EAAMqoD,iBACjE4B,EAAYrD,EAAQ5mD,GAGlBgoD,EAEFpC,EAAWsE,EAAYtD,EAAQ5mD,EAAOynD,EAAU/M,GAGhDwP,EAAWtD,EAAQ5mD,EAAOynD,EAAU/M,IAK1C,SAASwP,EAAWtD,EAAQ5mD,EAAOynD,EAAU/M,GACtC+M,GAAU0C,EAAavD,EAAQ5mD,GACpCA,EAAMuoD,YACN7N,IACAoP,EAAYlD,EAAQ5mD,GAMtB,SAASmqD,EAAavD,EAAQ5mD,GACP,IAAjBA,EAAMnoB,QAAgBmoB,EAAMsnD,YAC9BtnD,EAAMsnD,WAAY,EAClBV,EAAOzF,KAAK,UAKhB,SAAS8I,EAAYrD,EAAQ5mD,GAC3BA,EAAMioD,kBAAmB,EACrB1C,IAAAA,EAAQvlD,EAAMqoD,gBAEdzB,GAAAA,EAAOqC,SAAW1D,GAASA,EAAM18D,KAAM,CAErC4W,IAAAA,EAAIO,EAAM0oD,qBACVt7C,EAAS,IAAI70B,MAAMknB,GACnB2qD,EAASpqD,EAAM2oD,mBACnByB,EAAO7E,MAAQA,EAIRA,IAFHnG,IAAAA,EAAQ,EACRiL,GAAa,EACV9E,GACLn4C,EAAOgyC,GAASmG,EACXA,EAAMmE,QAAOW,GAAa,GAC/B9E,EAAQA,EAAM18D,KACdu2D,GAAS,EAEXhyC,EAAOi9C,WAAaA,EAEpBT,EAAQhD,EAAQ5mD,GAAO,EAAMA,EAAMnoB,OAAQu1B,EAAQ,GAAIg9C,EAAO5E,QAI9DxlD,EAAMuoD,YACNvoD,EAAMsoD,oBAAsB,KACxB8B,EAAOvhE,MACTmX,EAAM2oD,mBAAqByB,EAAOvhE,KAClCuhE,EAAOvhE,KAAO,MAEdmX,EAAM2oD,mBAAqB,IAAIrD,EAActlD,GAE/CA,EAAM0oD,qBAAuB,MACxB,CAEEnD,KAAAA,GAAO,CACRH,IAAAA,EAAQG,EAAMH,MACdC,EAAWE,EAAMF,SACjB3K,EAAK6K,EAAM7J,SAUX17C,GAPJ4pD,EAAQhD,EAAQ5mD,GAAO,EAFbA,EAAM8mD,WAAa,EAAI1B,EAAMvtE,OAEJutE,EAAOC,EAAU3K,GACpD6K,EAAQA,EAAM18D,KACdmX,EAAM0oD,uBAKF1oD,EAAM8nD,QACR,MAIU,OAAVvC,IAAgBvlD,EAAMsoD,oBAAsB,MAGlDtoD,EAAMqoD,gBAAkB9C,EACxBvlD,EAAMioD,kBAAmB,EAiC3B,SAAS+B,EAAWhqD,GACXA,OAAAA,EAAMunD,QAA2B,IAAjBvnD,EAAMnoB,QAA0C,OAA1BmoB,EAAMqoD,kBAA6BroD,EAAMynD,WAAaznD,EAAM8nD,QAE3G,SAASwC,EAAU1D,EAAQ5mD,GACzB4mD,EAAOwC,OAAO,SAAU3uD,GACtBuF,EAAMuoD,YACF9tD,GACFmsD,EAAOzF,KAAK,QAAS1mD,GAEvBuF,EAAMwoD,aAAc,EACpB5B,EAAOzF,KAAK,aACZ2I,EAAYlD,EAAQ5mD,KAGxB,SAASuqD,EAAU3D,EAAQ5mD,GACpBA,EAAMwoD,aAAgBxoD,EAAMqnD,cACF,mBAAlBT,EAAOwC,QAChBppD,EAAMuoD,YACNvoD,EAAMqnD,aAAc,EACpBnC,EAAIV,SAAS8F,EAAW1D,EAAQ5mD,KAEhCA,EAAMwoD,aAAc,EACpB5B,EAAOzF,KAAK,eAKlB,SAAS2I,EAAYlD,EAAQ5mD,GACvBwqD,IAAAA,EAAOR,EAAWhqD,GAQfwqD,OAPHA,IACFD,EAAU3D,EAAQ5mD,GACM,IAApBA,EAAMuoD,YACRvoD,EAAMynD,UAAW,EACjBb,EAAOzF,KAAK,YAGTqJ,EAGT,SAASC,EAAY7D,EAAQ5mD,EAAO06C,GAClC16C,EAAMunD,QAAS,EACfuC,EAAYlD,EAAQ5mD,GAChB06C,IACE16C,EAAMynD,SAAUvC,EAAIV,SAAS9J,GAASkM,EAAO5D,KAAK,SAAUtI,IAElE16C,EAAMwnD,OAAQ,EACdZ,EAAOiC,UAAW,EAGpB,SAASpD,EAAeiF,EAAS1qD,EAAOvF,GAClC8qD,IAAAA,EAAQmF,EAAQnF,MAEbA,IADPmF,EAAQnF,MAAQ,KACTA,GAAO,CACR7K,IAAAA,EAAK6K,EAAM7J,SACf17C,EAAMuoD,YACN7N,EAAGjgD,GACH8qD,EAAQA,EAAM18D,KAEZmX,EAAM2oD,mBACR3oD,EAAM2oD,mBAAmB9/D,KAAO6hE,EAEhC1qD,EAAM2oD,mBAAqB+B,EAljB/B5E,EAAKC,SAASL,EAAUQ,GAmHxBL,EAAcpkE,UAAUkpE,UAAY,WAG3B/qD,IAFHA,IAAAA,EAAU,KAAKyoD,gBACfrrD,EAAM,GACH4C,GACL5C,EAAIrjB,KAAKimB,GACTA,EAAUA,EAAQ/W,KAEbmU,OAAAA,GAGT,WACM,IACFjmB,OAAOsrE,eAAewD,EAAcpkE,UAAW,SAAU,CACvD+T,IAAKwwD,EAAaC,UAAU,WACnB,OAAA,KAAK0E,aACX,6EAAmF,aAExF,MAAOC,KAPX,GAasB,mBAAXxmD,QAAyBA,OAAOymD,aAAiE,mBAA3CxkC,SAAS5kC,UAAU2iB,OAAOymD,cACzFpE,EAAkBpgC,SAAS5kC,UAAU2iB,OAAOymD,aAC5C9zE,OAAOsrE,eAAeqD,EAAUthD,OAAOymD,YAAa,CAClDv1E,MAAO,SAAUwZ,GACX23D,QAAAA,EAAgB1kE,KAAK,KAAM+M,IAC3B,OAAS42D,IAEN52D,GAAUA,EAAO85D,0BAA0B/C,OAItDY,EAAkB,SAAU33D,GACnBA,OAAAA,aAAkB,MAqC7B42D,EAASjkE,UAAUqpE,KAAO,WACnB3J,KAAAA,KAAK,QAAS,IAAIr5D,MAAM,+BA8B/B49D,EAASjkE,UAAUqnE,MAAQ,SAAU1D,EAAOC,EAAU3K,GAChD16C,IAAAA,EAAQ,KAAK4oD,eACbl8C,GAAM,EACNg9C,GAAS1pD,EAAM8mD,YAAcP,EAAcnB,GAoBxC14C,OAlBHg9C,IAAUvD,EAAOK,SAASpB,KAC5BA,EAAQkB,EAAoBlB,IAGN,mBAAbC,IACT3K,EAAK2K,EACLA,EAAW,MAGTqE,EAAOrE,EAAW,SAAmBA,IAAUA,EAAWrlD,EAAM6nD,iBAElD,mBAAPnN,IAAmBA,EAAKiM,GAE/B3mD,EAAMwnD,MAAO6B,EAAc,KAAM3O,IAAagP,GAASJ,EAAW,KAAMtpD,EAAOolD,EAAO1K,MACxF16C,EAAMuoD,YACN77C,EAAM+8C,EAAc,KAAMzpD,EAAO0pD,EAAOtE,EAAOC,EAAU3K,IAGpDhuC,GAGTg5C,EAASjkE,UAAUspE,KAAO,WACZ,KAAKnC,eAEXb,UAGRrC,EAASjkE,UAAUupE,OAAS,WACtBhrD,IAAAA,EAAQ,KAAK4oD,eAEb5oD,EAAM+nD,SACR/nD,EAAM+nD,SAED/nD,EAAM8nD,SAAY9nD,EAAM+nD,QAAW/nD,EAAMynD,UAAaznD,EAAMioD,mBAAoBjoD,EAAMqoD,iBAAiB4B,EAAY,KAAMjqD,KAIlI0lD,EAASjkE,UAAUwpE,mBAAqB,SAA4B5F,GAG9D,GADoB,iBAAbA,IAAuBA,EAAWA,EAAS36C,iBAChD,CAAC,MAAO,OAAQ,QAAS,QAAS,SAAU,SAAU,OAAQ,QAAS,UAAW,WAAY,OAAOtQ,SAASirD,EAAW,IAAI36C,gBAAkB,GAAI,MAAM,IAAIs2C,UAAU,qBAAuBqE,GAE7L,OADFuD,KAAAA,eAAef,gBAAkBxC,EAC/B,MAUTtuE,OAAOsrE,eAAeqD,EAASjkE,UAAW,wBAAyB,CAIjE6gE,YAAY,EACZ9sD,IAAK,WACI,OAAA,KAAKozD,eAAe3B,iBA8L/BvB,EAASjkE,UAAUsnE,OAAS,SAAU3D,EAAOC,EAAU3K,GACrDA,EAAG,IAAI5yD,MAAM,iCAGf49D,EAASjkE,UAAUwnE,QAAU,KAE7BvD,EAASjkE,UAAUiB,IAAM,SAAU0iE,EAAOC,EAAU3K,GAC9C16C,IAAAA,EAAQ,KAAK4oD,eAEI,mBAAVxD,GACT1K,EAAK0K,EACLA,EAAQ,KACRC,EAAW,MACkB,mBAAbA,IAChB3K,EAAK2K,EACLA,EAAW,MAGTD,MAAAA,GAAuC,KAAK0D,MAAM1D,EAAOC,GAGzDrlD,EAAM+nD,SACR/nD,EAAM+nD,OAAS,EACViD,KAAAA,UAIFhrD,EAAMunD,QAAWvnD,EAAMynD,UAAUgD,EAAY,KAAMzqD,EAAO06C,IAoEjE3jE,OAAOsrE,eAAeqD,EAASjkE,UAAW,YAAa,CACrD+T,IAAK,WACC,YAAwByjC,IAAxB,KAAK2vB,gBAGF,KAAKA,eAAelB,WAE7BzsE,IAAK,SAAU3F,GAGR,KAAKszE,iBAMLA,KAAAA,eAAelB,UAAYpyE,MAIpCowE,EAASjkE,UAAUwxB,QAAUyzC,EAAYzzC,QACzCyyC,EAASjkE,UAAUypE,WAAaxE,EAAYyE,UAC5CzF,EAASjkE,UAAUynE,SAAW,SAAUzuD,EAAKigD,GACtCh4D,KAAAA,MACLg4D,EAAGjgD;;ACnpBL,aAIA,IAAA,EAAA,QAAA,wBAIA,EAAA,OAAA,MAAA,SAAA,GACA,IAAA,EAAA,GACA,IAAA,IAAA,KAAA,EACA,EAAA,KAAA,GACA,OAAA,GAIA,OAAA,QAAA,EAGA,IAAA,EAAA,QAAA,gBACA,EAAA,SAAA,QAAA,YAGA,IAAA,EAAA,QAAA,sBACA,EAAA,QAAA,sBAEA,EAAA,SAAA,EAAA,GAKA,IADA,IAAA,EAAA,EAAA,EAAA,WACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GACA,EAAA,UAAA,KAAA,EAAA,UAAA,GAAA,EAAA,UAAA,IAIA,SAAA,EAAA,GACA,KAAA,gBAAA,GAAA,OAAA,IAAA,EAAA,GAEA,EAAA,KAAA,KAAA,GACA,EAAA,KAAA,KAAA,GAEA,IAAA,IAAA,EAAA,WAAA,KAAA,UAAA,GAEA,IAAA,IAAA,EAAA,WAAA,KAAA,UAAA,GAEA,KAAA,eAAA,EACA,IAAA,IAAA,EAAA,gBAAA,KAAA,eAAA,GAEA,KAAA,KAAA,MAAA,GAcA,SAAA,IAGA,KAAA,eAAA,KAAA,eAAA,OAIA,EAAA,SAAA,EAAA,MAGA,SAAA,EAAA,GACA,EAAA,MAtBA,OAAA,eAAA,EAAA,UAAA,wBAAA,CAIA,YAAA,EACA,IAAA,WACA,OAAA,KAAA,eAAA,iBAmBA,OAAA,eAAA,EAAA,UAAA,YAAA,CACA,IAAA,WACA,YAAA,IAAA,KAAA,qBAAA,IAAA,KAAA,iBAGA,KAAA,eAAA,WAAA,KAAA,eAAA,YAEA,IAAA,SAAA,QAGA,IAAA,KAAA,qBAAA,IAAA,KAAA,iBAMA,KAAA,eAAA,UAAA,EACA,KAAA,eAAA,UAAA,MAIA,EAAA,UAAA,SAAA,SAAA,EAAA,GACA,KAAA,KAAA,MACA,KAAA,MAEA,EAAA,SAAA,EAAA;;;AC5GA,aAIA,IAAA,EAAA,QAAA,eAAA,OAGA,EAAA,EAAA,YAAA,SAAA,GAEA,QADA,EAAA,GAAA,IACA,EAAA,eACA,IAAA,MAAA,IAAA,OAAA,IAAA,QAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,IAAA,OAAA,IAAA,QAAA,IAAA,UAAA,IAAA,WAAA,IAAA,MACA,OAAA,EACA,QACA,OAAA,IAIA,SAAA,EAAA,GACA,IAAA,EAAA,MAAA,OAEA,IADA,IAAA,IAEA,OAAA,GACA,IAAA,OACA,IAAA,QACA,MAAA,OACA,IAAA,OACA,IAAA,QACA,IAAA,UACA,IAAA,WACA,MAAA,UACA,IAAA,SACA,IAAA,SACA,MAAA,SACA,IAAA,SACA,IAAA,QACA,IAAA,MACA,OAAA,EACA,QACA,GAAA,EAAA,OACA,GAAA,GAAA,GAAA,cACA,GAAA,GAOA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,GACA,GAAA,iBAAA,IAAA,EAAA,aAAA,IAAA,EAAA,IAAA,MAAA,IAAA,MAAA,qBAAA,GACA,OAAA,GAAA,EAOA,SAAA,EAAA,GAEA,IAAA,EACA,OAFA,KAAA,SAAA,EAAA,GAEA,KAAA,UACA,IAAA,UACA,KAAA,KAAA,EACA,KAAA,IAAA,EACA,EAAA,EACA,MACA,IAAA,OACA,KAAA,SAAA,EACA,EAAA,EACA,MACA,IAAA,SACA,KAAA,KAAA,EACA,KAAA,IAAA,EACA,EAAA,EACA,MACA,QAGA,OAFA,KAAA,MAAA,OACA,KAAA,IAAA,GAGA,KAAA,SAAA,EACA,KAAA,UAAA,EACA,KAAA,SAAA,EAAA,YAAA,GAoCA,SAAA,EAAA,GACA,OAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EACA,GAAA,GAAA,GAAA,GAAA,EAMA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,OAAA,EACA,GAAA,EAAA,EAAA,OAAA,EACA,IAAA,EAAA,EAAA,EAAA,IACA,OAAA,GAAA,GACA,EAAA,IAAA,EAAA,SAAA,EAAA,GACA,KAEA,EAAA,IAAA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,MACA,GACA,EAAA,IAAA,EAAA,SAAA,EAAA,GACA,KAEA,EAAA,IAAA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,MACA,GACA,EAAA,IACA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAEA,GAEA,EAWA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,MAAA,IAAA,EAAA,IAEA,OADA,EAAA,SAAA,EACA,IAEA,GAAA,EAAA,SAAA,GAAA,EAAA,OAAA,EAAA,CACA,GAAA,MAAA,IAAA,EAAA,IAEA,OADA,EAAA,SAAA,EACA,IAEA,GAAA,EAAA,SAAA,GAAA,EAAA,OAAA,GACA,MAAA,IAAA,EAAA,IAEA,OADA,EAAA,SAAA,EACA,KAOA,SAAA,EAAA,GACA,IAAA,EAAA,KAAA,UAAA,KAAA,SACA,EAAA,EAAA,KAAA,EAAA,GACA,YAAA,IAAA,EAAA,EACA,KAAA,UAAA,EAAA,QACA,EAAA,KAAA,KAAA,SAAA,EAAA,EAAA,KAAA,UACA,KAAA,SAAA,SAAA,KAAA,SAAA,EAAA,KAAA,aAEA,EAAA,KAAA,KAAA,SAAA,EAAA,EAAA,EAAA,aACA,KAAA,UAAA,EAAA,SAMA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,KAAA,EAAA,GACA,IAAA,KAAA,SAAA,OAAA,EAAA,SAAA,OAAA,GACA,KAAA,UAAA,EACA,IAAA,EAAA,EAAA,QAAA,EAAA,KAAA,UAEA,OADA,EAAA,KAAA,KAAA,SAAA,EAAA,GACA,EAAA,SAAA,OAAA,EAAA,GAKA,SAAA,EAAA,GACA,IAAA,EAAA,GAAA,EAAA,OAAA,KAAA,MAAA,GAAA,GACA,OAAA,KAAA,SAAA,EAAA,IACA,EAOA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,OAAA,GAAA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,SAAA,UAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,EAAA,WAAA,EAAA,OAAA,GACA,GAAA,GAAA,OAAA,GAAA,MAKA,OAJA,KAAA,SAAA,EACA,KAAA,UAAA,EACA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,GACA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,GACA,EAAA,MAAA,GAAA,GAGA,OAAA,EAKA,OAHA,KAAA,SAAA,EACA,KAAA,UAAA,EACA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,GACA,EAAA,SAAA,UAAA,EAAA,EAAA,OAAA,GAKA,SAAA,EAAA,GACA,IAAA,EAAA,GAAA,EAAA,OAAA,KAAA,MAAA,GAAA,GACA,GAAA,KAAA,SAAA,CACA,IAAA,EAAA,KAAA,UAAA,KAAA,SACA,OAAA,EAAA,KAAA,SAAA,SAAA,UAAA,EAAA,GAEA,OAAA,EAGA,SAAA,EAAA,EAAA,GACA,IAAA,GAAA,EAAA,OAAA,GAAA,EACA,OAAA,IAAA,EAAA,EAAA,SAAA,SAAA,IACA,KAAA,SAAA,EAAA,EACA,KAAA,UAAA,EACA,IAAA,EACA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,IAEA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,GACA,KAAA,SAAA,GAAA,EAAA,EAAA,OAAA,IAEA,EAAA,SAAA,SAAA,EAAA,EAAA,OAAA,IAGA,SAAA,EAAA,GACA,IAAA,EAAA,GAAA,EAAA,OAAA,KAAA,MAAA,GAAA,GACA,OAAA,KAAA,SAAA,EAAA,KAAA,SAAA,SAAA,SAAA,EAAA,EAAA,KAAA,UACA,EAIA,SAAA,EAAA,GACA,OAAA,EAAA,SAAA,KAAA,UAGA,SAAA,EAAA,GACA,OAAA,GAAA,EAAA,OAAA,KAAA,MAAA,GAAA,GAzNA,QAAA,cAAA,EA6BA,EAAA,UAAA,MAAA,SAAA,GACA,GAAA,IAAA,EAAA,OAAA,MAAA,GACA,IAAA,EACA,EACA,GAAA,KAAA,SAAA,CAEA,QAAA,KADA,EAAA,KAAA,SAAA,IACA,MAAA,GACA,EAAA,KAAA,SACA,KAAA,SAAA,OAEA,EAAA,EAEA,OAAA,EAAA,EAAA,OAAA,EAAA,EAAA,KAAA,KAAA,EAAA,GAAA,KAAA,KAAA,EAAA,GACA,GAAA,IAGA,EAAA,UAAA,IAAA,EAGA,EAAA,UAAA,KAAA,EAGA,EAAA,UAAA,SAAA,SAAA,GACA,GAAA,KAAA,UAAA,EAAA,OAEA,OADA,EAAA,KAAA,KAAA,SAAA,KAAA,UAAA,KAAA,SAAA,EAAA,KAAA,UACA,KAAA,SAAA,SAAA,KAAA,SAAA,EAAA,KAAA,WAEA,EAAA,KAAA,KAAA,SAAA,KAAA,UAAA,KAAA,SAAA,EAAA,EAAA,QACA,KAAA,UAAA,EAAA;;;;;ACo3BA,IAAA,EAAA,UAAA,GAAA,EAAA,QAAA,WAj+BA,EAAA,QAAA,wBAGA,OAAA,QAAA,EAGA,IAIA,EAJA,EAAA,QAAA,WAOA,EAAA,cAAA,EAGA,IAAA,EAAA,QAAA,UAAA,aAEA,EAAA,SAAA,EAAA,GACA,OAAA,EAAA,UAAA,GAAA,QAKA,EAAA,QAAA,6BAKA,EAAA,QAAA,eAAA,OACA,EAAA,EAAA,YAAA,aACA,SAAA,EAAA,GACA,OAAA,EAAA,KAAA,GAEA,SAAA,EAAA,GACA,OAAA,EAAA,SAAA,IAAA,aAAA,EAMA,IAAA,EAAA,QAAA,gBACA,EAAA,SAAA,QAAA,YAIA,IAAA,EAAA,QAAA,QACA,OAAA,EAEA,EADA,GAAA,EAAA,SACA,EAAA,SAAA,UAEA,aAIA,IAEA,EAFA,EAAA,QAAA,iCACA,EAAA,QAAA,8BAGA,EAAA,SAAA,EAAA,GAEA,IAAA,EAAA,CAAA,QAAA,QAAA,UAAA,QAAA,UAEA,SAAA,EAAA,EAAA,EAAA,GAGA,GAAA,mBAAA,EAAA,gBAAA,OAAA,EAAA,gBAAA,EAAA,GAMA,EAAA,SAAA,EAAA,QAAA,GAAA,EAAA,EAAA,QAAA,IAAA,EAAA,QAAA,GAAA,QAAA,GAAA,EAAA,QAAA,GAAA,CAAA,EAAA,EAAA,QAAA,IAAA,EAAA,GAAA,EAAA,GAGA,SAAA,EAAA,EAAA,GAGA,EAAA,GAAA,GAOA,IAAA,EAAA,aATA,EAAA,GAAA,QAAA,qBAaA,KAAA,aAAA,EAAA,WAEA,IAAA,KAAA,WAAA,KAAA,cAAA,EAAA,oBAIA,IAAA,EAAA,EAAA,cACA,EAAA,EAAA,sBACA,EAAA,KAAA,WAAA,GAAA,MAEA,KAAA,cAAA,GAAA,IAAA,EAAA,EAAA,IAAA,GAAA,IAAA,GAAA,EAAA,EAGA,KAAA,cAAA,KAAA,MAAA,KAAA,eAKA,KAAA,OAAA,IAAA,EACA,KAAA,OAAA,EACA,KAAA,MAAA,KACA,KAAA,WAAA,EACA,KAAA,QAAA,KACA,KAAA,OAAA,EACA,KAAA,YAAA,EACA,KAAA,SAAA,EAMA,KAAA,MAAA,EAIA,KAAA,cAAA,EACA,KAAA,iBAAA,EACA,KAAA,mBAAA,EACA,KAAA,iBAAA,EAGA,KAAA,WAAA,EAKA,KAAA,gBAAA,EAAA,iBAAA,OAGA,KAAA,WAAA,EAGA,KAAA,aAAA,EAEA,KAAA,QAAA,KACA,KAAA,SAAA,KACA,EAAA,WACA,IAAA,EAAA,QAAA,mBAAA,eACA,KAAA,QAAA,IAAA,EAAA,EAAA,UACA,KAAA,SAAA,EAAA,UAIA,SAAA,EAAA,GAGA,GAFA,EAAA,GAAA,QAAA,sBAEA,gBAAA,GAAA,OAAA,IAAA,EAAA,GAEA,KAAA,eAAA,IAAA,EAAA,EAAA,MAGA,KAAA,UAAA,EAEA,IACA,mBAAA,EAAA,OAAA,KAAA,MAAA,EAAA,MAEA,mBAAA,EAAA,UAAA,KAAA,SAAA,EAAA,UAGA,EAAA,KAAA,MA2DA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAKA,EALA,EAAA,EAAA,eACA,OAAA,GACA,EAAA,SAAA,EACA,EAAA,EAAA,KAGA,IAAA,EAAA,EAAA,EAAA,IACA,EACA,EAAA,KAAA,QAAA,GACA,EAAA,YAAA,GAAA,EAAA,OAAA,GACA,iBAAA,GAAA,EAAA,YAAA,OAAA,eAAA,KAAA,EAAA,YACA,EAAA,EAAA,IAGA,EACA,EAAA,WAAA,EAAA,KAAA,QAAA,IAAA,MAAA,qCAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,MACA,EAAA,KAAA,QAAA,IAAA,MAAA,6BAEA,EAAA,SAAA,EACA,EAAA,UAAA,GACA,EAAA,EAAA,QAAA,MAAA,GACA,EAAA,YAAA,IAAA,EAAA,OAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,EAAA,IAEA,EAAA,EAAA,EAAA,GAAA,KAGA,IACA,EAAA,SAAA,IAIA,OAAA,EAAA,GAGA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,SAAA,IAAA,EAAA,SAAA,EAAA,MACA,EAAA,KAAA,OAAA,GACA,EAAA,KAAA,KAGA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,OACA,EAAA,EAAA,OAAA,QAAA,GAAA,EAAA,OAAA,KAAA,GAEA,EAAA,cAAA,EAAA,IAEA,EAAA,EAAA,GAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAIA,OAHA,EAAA,IAAA,iBAAA,QAAA,IAAA,GAAA,EAAA,aACA,EAAA,IAAA,UAAA,oCAEA,EAUA,SAAA,EAAA,GACA,OAAA,EAAA,QAAA,EAAA,cAAA,EAAA,OAAA,EAAA,eAAA,IAAA,EAAA,QA1HA,OAAA,eAAA,EAAA,UAAA,YAAA,CACA,IAAA,WACA,YAAA,IAAA,KAAA,gBAGA,KAAA,eAAA,WAEA,IAAA,SAAA,GAGA,KAAA,iBAMA,KAAA,eAAA,UAAA,MAIA,EAAA,UAAA,QAAA,EAAA,QACA,EAAA,UAAA,WAAA,EAAA,UACA,EAAA,UAAA,SAAA,SAAA,EAAA,GACA,KAAA,KAAA,MACA,EAAA,IAOA,EAAA,UAAA,KAAA,SAAA,EAAA,GACA,IACA,EADA,EAAA,KAAA,eAgBA,OAbA,EAAA,WAUA,GAAA,EATA,iBAAA,KACA,EAAA,GAAA,EAAA,mBACA,EAAA,WACA,EAAA,EAAA,KAAA,EAAA,GACA,EAAA,IAEA,GAAA,GAMA,EAAA,KAAA,EAAA,GAAA,EAAA,IAIA,EAAA,UAAA,QAAA,SAAA,GACA,OAAA,EAAA,KAAA,EAAA,MAAA,GAAA,IAwEA,EAAA,UAAA,SAAA,WACA,OAAA,IAAA,KAAA,eAAA,SAIA,EAAA,UAAA,YAAA,SAAA,GAIA,OAHA,IAAA,EAAA,QAAA,mBAAA,eACA,KAAA,eAAA,QAAA,IAAA,EAAA,GACA,KAAA,eAAA,SAAA,EACA,MAIA,IAAA,EAAA,QACA,SAAA,EAAA,GAcA,OAbA,GAAA,EACA,EAAA,GAIA,IACA,GAAA,IAAA,EACA,GAAA,IAAA,EACA,GAAA,IAAA,EACA,GAAA,IAAA,EACA,GAAA,IAAA,GACA,KAEA,EAKA,SAAA,EAAA,EAAA,GACA,OAAA,GAAA,GAAA,IAAA,EAAA,QAAA,EAAA,MAAA,EACA,EAAA,WAAA,EACA,GAAA,EAEA,EAAA,SAAA,EAAA,OAAA,EAAA,OAAA,KAAA,KAAA,OAAA,EAAA,QAGA,EAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,IACA,GAAA,EAAA,OAAA,EAEA,EAAA,MAIA,EAAA,QAHA,EAAA,cAAA,EACA,IA0GA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,MAAA,CACA,GAAA,EAAA,QAAA,CACA,IAAA,EAAA,EAAA,QAAA,MACA,GAAA,EAAA,SACA,EAAA,OAAA,KAAA,GACA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,QAGA,EAAA,OAAA,EAGA,EAAA,IAMA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,eACA,EAAA,cAAA,EACA,EAAA,kBACA,EAAA,eAAA,EAAA,SACA,EAAA,iBAAA,EACA,EAAA,KAAA,EAAA,SAAA,EAAA,GAAA,EAAA,IAIA,SAAA,EAAA,GACA,EAAA,iBACA,EAAA,KAAA,YACA,EAAA,GASA,SAAA,EAAA,EAAA,GACA,EAAA,cACA,EAAA,aAAA,EACA,EAAA,SAAA,EAAA,EAAA,IAIA,SAAA,EAAA,EAAA,GAEA,IADA,IAAA,EAAA,EAAA,QACA,EAAA,UAAA,EAAA,UAAA,EAAA,OAAA,EAAA,OAAA,EAAA,gBACA,EAAA,wBACA,EAAA,KAAA,GACA,IAAA,EAAA,SAEA,EAAA,EAAA,OAEA,EAAA,aAAA,EAkJA,SAAA,EAAA,GACA,OAAA,WACA,IAAA,EAAA,EAAA,eACA,EAAA,cAAA,EAAA,YACA,EAAA,YAAA,EAAA,aACA,IAAA,EAAA,YAAA,EAAA,EAAA,UACA,EAAA,SAAA,EACA,EAAA,KAgFA,SAAA,EAAA,GACA,EAAA,4BACA,EAAA,KAAA,GAeA,SAAA,EAAA,EAAA,GACA,EAAA,kBACA,EAAA,iBAAA,EACA,EAAA,SAAA,EAAA,EAAA,IAIA,SAAA,EAAA,EAAA,GACA,EAAA,UACA,EAAA,iBACA,EAAA,KAAA,IAGA,EAAA,iBAAA,EACA,EAAA,WAAA,EACA,EAAA,KAAA,UACA,EAAA,GACA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,GAaA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,eAEA,IADA,EAAA,OAAA,EAAA,SACA,EAAA,SAAA,OAAA,EAAA,UAmFA,SAAA,EAAA,EAAA,GAEA,OAAA,IAAA,EAAA,OAAA,MAGA,EAAA,WAAA,EAAA,EAAA,OAAA,SAAA,GAAA,GAAA,EAAA,QAEA,EAAA,EAAA,QAAA,EAAA,OAAA,KAAA,IAAA,IAAA,EAAA,OAAA,OAAA,EAAA,OAAA,KAAA,KAAA,EAAA,OAAA,OAAA,EAAA,QACA,EAAA,OAAA,SAGA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,SAGA,GAVA,IAAA,EAgBA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAYA,OAXA,EAAA,EAAA,KAAA,KAAA,QAEA,EAAA,EAAA,KAAA,KAAA,MAAA,EAAA,GACA,EAAA,KAAA,KAAA,EAAA,KAAA,KAAA,MAAA,IAGA,EAFA,IAAA,EAAA,KAAA,KAAA,OAEA,EAAA,QAGA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAEA,EAOA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,KACA,EAAA,EACA,EAAA,EAAA,KAEA,IADA,GAAA,EAAA,OACA,EAAA,EAAA,MAAA,CACA,IAAA,EAAA,EAAA,KACA,EAAA,EAAA,EAAA,OAAA,EAAA,OAAA,EAGA,GAFA,IAAA,EAAA,OAAA,GAAA,EAAA,GAAA,EAAA,MAAA,EAAA,GAEA,KADA,GAAA,GACA,CACA,IAAA,EAAA,UACA,EACA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,OAEA,EAAA,KAAA,EACA,EAAA,KAAA,EAAA,MAAA,IAEA,QAEA,EAGA,OADA,EAAA,QAAA,EACA,EAMA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,YAAA,GACA,EAAA,EAAA,KACA,EAAA,EAGA,IAFA,EAAA,KAAA,KAAA,GACA,GAAA,EAAA,KAAA,OACA,EAAA,EAAA,MAAA,CACA,IAAA,EAAA,EAAA,KACA,EAAA,EAAA,EAAA,OAAA,EAAA,OAAA,EAGA,GAFA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,EAAA,GAEA,KADA,GAAA,GACA,CACA,IAAA,EAAA,UACA,EACA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,OAEA,EAAA,KAAA,EACA,EAAA,KAAA,EAAA,MAAA,IAEA,QAEA,EAGA,OADA,EAAA,QAAA,EACA,EAGA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,eAIA,GAAA,EAAA,OAAA,EAAA,MAAA,IAAA,MAAA,8CAEA,EAAA,aACA,EAAA,OAAA,EACA,EAAA,SAAA,EAAA,EAAA,IAIA,SAAA,EAAA,EAAA,GAEA,EAAA,YAAA,IAAA,EAAA,SACA,EAAA,YAAA,EACA,EAAA,UAAA,EACA,EAAA,KAAA,QAIA,SAAA,EAAA,EAAA,GACA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,EAAA,EAAA,IACA,GAAA,EAAA,KAAA,EAAA,OAAA,EAEA,OAAA,EApoBA,EAAA,UAAA,KAAA,SAAA,GACA,EAAA,OAAA,GACA,EAAA,SAAA,EAAA,IACA,IAAA,EAAA,KAAA,eACA,EAAA,EAOA,GALA,IAAA,IAAA,EAAA,iBAAA,GAKA,IAAA,GAAA,EAAA,eAAA,EAAA,QAAA,EAAA,eAAA,EAAA,OAGA,OAFA,EAAA,qBAAA,EAAA,OAAA,EAAA,OACA,IAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MACA,KAMA,GAAA,KAHA,EAAA,EAAA,EAAA,KAGA,EAAA,MAEA,OADA,IAAA,EAAA,QAAA,EAAA,MACA,KA0BA,IA4BA,EA5BA,EAAA,EAAA,aAiDA,OAhDA,EAAA,gBAAA,IAGA,IAAA,EAAA,QAAA,EAAA,OAAA,EAAA,EAAA,gBAEA,EAAA,6BADA,GAAA,GAMA,EAAA,OAAA,EAAA,QAEA,EAAA,mBADA,GAAA,GAEA,IACA,EAAA,WACA,EAAA,SAAA,EACA,EAAA,MAAA,EAEA,IAAA,EAAA,SAAA,EAAA,cAAA,GAEA,KAAA,MAAA,EAAA,eACA,EAAA,MAAA,EAGA,EAAA,UAAA,EAAA,EAAA,EAAA,KAMA,QAFA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,OAGA,EAAA,cAAA,EACA,EAAA,GAEA,EAAA,QAAA,EAGA,IAAA,EAAA,SAGA,EAAA,QAAA,EAAA,cAAA,GAGA,IAAA,GAAA,EAAA,OAAA,EAAA,OAGA,OAAA,GAAA,KAAA,KAAA,OAAA,GAEA,GAkEA,EAAA,UAAA,MAAA,SAAA,GACA,KAAA,KAAA,QAAA,IAAA,MAAA,gCAGA,EAAA,UAAA,KAAA,SAAA,EAAA,GACA,IAAA,EAAA,KACA,EAAA,KAAA,eAEA,OAAA,EAAA,YACA,KAAA,EACA,EAAA,MAAA,EACA,MACA,KAAA,EACA,EAAA,MAAA,CAAA,EAAA,MAAA,GACA,MACA,QACA,EAAA,MAAA,KAAA,GAGA,EAAA,YAAA,EACA,EAAA,wBAAA,EAAA,WAAA,GAEA,IAEA,IAFA,IAAA,IAAA,EAAA,MAAA,IAAA,EAAA,QAAA,IAAA,EAAA,OAEA,EAAA,EAIA,SAAA,EAAA,EAAA,GACA,EAAA,YACA,IAAA,GACA,IAAA,IAAA,EAAA,aACA,EAAA,YAAA,EAoBA,EAAA,WAEA,EAAA,eAAA,QAAA,GACA,EAAA,eAAA,SAAA,GACA,EAAA,eAAA,QAAA,GACA,EAAA,eAAA,QAAA,GACA,EAAA,eAAA,SAAA,GACA,EAAA,eAAA,MAAA,GACA,EAAA,eAAA,MAAA,GACA,EAAA,eAAA,OAAA,GAEA,GAAA,GAOA,EAAA,YAAA,EAAA,iBAAA,EAAA,eAAA,WAAA,KAhCA,SAAA,IACA,EAAA,SACA,EAAA,MAfA,EAAA,WAAA,EAAA,SAAA,GAAA,EAAA,KAAA,MAAA,GAEA,EAAA,GAAA,SAAA,GAoBA,IAAA,EAAA,EAAA,GACA,EAAA,GAAA,QAAA,GAEA,IAAA,GAAA,EA2BA,IAAA,GAAA,EAEA,SAAA,EAAA,GACA,EAAA,UACA,GAAA,GAEA,IADA,EAAA,MAAA,IACA,KAKA,IAAA,EAAA,YAAA,EAAA,QAAA,GAAA,EAAA,WAAA,IAAA,IAAA,EAAA,EAAA,MAAA,MAAA,IACA,EAAA,8BAAA,EAAA,eAAA,YACA,EAAA,eAAA,aACA,GAAA,GAEA,EAAA,SAMA,SAAA,EAAA,GACA,EAAA,UAAA,GACA,IACA,EAAA,eAAA,QAAA,GACA,IAAA,EAAA,EAAA,UAAA,EAAA,KAAA,QAAA,GAOA,SAAA,IACA,EAAA,eAAA,SAAA,GACA,IAGA,SAAA,IACA,EAAA,YACA,EAAA,eAAA,QAAA,GACA,IAIA,SAAA,IACA,EAAA,UACA,EAAA,OAAA,GAYA,OA1DA,EAAA,GAAA,OAAA,GA6BA,EAAA,EAAA,QAAA,GAOA,EAAA,KAAA,QAAA,GAMA,EAAA,KAAA,SAAA,GAQA,EAAA,KAAA,OAAA,GAGA,EAAA,UACA,EAAA,eACA,EAAA,UAGA,GAeA,EAAA,UAAA,OAAA,SAAA,GACA,IAAA,EAAA,KAAA,eACA,EAAA,CAAA,YAAA,GAGA,GAAA,IAAA,EAAA,WAAA,OAAA,KAGA,GAAA,IAAA,EAAA,WAEA,OAAA,GAAA,IAAA,EAAA,MAAA,MAEA,IAAA,EAAA,EAAA,OAGA,EAAA,MAAA,KACA,EAAA,WAAA,EACA,EAAA,SAAA,EACA,GAAA,EAAA,KAAA,SAAA,KAAA,GACA,MAKA,IAAA,EAAA,CAEA,IAAA,EAAA,EAAA,MACA,EAAA,EAAA,WACA,EAAA,MAAA,KACA,EAAA,WAAA,EACA,EAAA,SAAA,EAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,KAAA,SAAA,KAAA,GACA,OAAA,KAIA,IAAA,EAAA,EAAA,EAAA,MAAA,GACA,OAAA,IAAA,EAAA,MAEA,EAAA,MAAA,OAAA,EAAA,GACA,EAAA,YAAA,EACA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,MAAA,IAEA,EAAA,KAAA,SAAA,KAAA,GAEA,OAKA,EAAA,UAAA,GAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,UAAA,GAAA,KAAA,KAAA,EAAA,GAEA,GAAA,SAAA,GAEA,IAAA,KAAA,eAAA,SAAA,KAAA,cACA,GAAA,aAAA,EAAA,CACA,IAAA,EAAA,KAAA,eACA,EAAA,YAAA,EAAA,oBACA,EAAA,kBAAA,EAAA,cAAA,EACA,EAAA,iBAAA,EACA,EAAA,QAEA,EAAA,QACA,EAAA,MAFA,EAAA,SAAA,EAAA,OAOA,OAAA,GAEA,EAAA,UAAA,YAAA,EAAA,UAAA,GASA,EAAA,UAAA,OAAA,WACA,IAAA,EAAA,KAAA,eAMA,OALA,EAAA,UACA,EAAA,UACA,EAAA,SAAA,EACA,EAAA,KAAA,IAEA,MAuBA,EAAA,UAAA,MAAA,WAOA,OANA,EAAA,wBAAA,KAAA,eAAA,UACA,IAAA,KAAA,eAAA,UACA,EAAA,SACA,KAAA,eAAA,SAAA,EACA,KAAA,KAAA,UAEA,MAYA,EAAA,UAAA,KAAA,SAAA,GACA,IAAA,EAAA,KAEA,EAAA,KAAA,eACA,GAAA,EA4BA,IAAA,IAAA,KA1BA,EAAA,GAAA,MAAA,WAEA,GADA,EAAA,eACA,EAAA,UAAA,EAAA,MAAA,CACA,IAAA,EAAA,EAAA,QAAA,MACA,GAAA,EAAA,QAAA,EAAA,KAAA,GAGA,EAAA,KAAA,QAGA,EAAA,GAAA,OAAA,SAAA,IACA,EAAA,gBACA,EAAA,UAAA,EAAA,EAAA,QAAA,MAAA,IAGA,EAAA,YAAA,MAAA,KAAA,EAAA,YAAA,GAAA,EAAA,UAEA,EAAA,KAAA,KAEA,GAAA,EACA,EAAA,YAMA,OACA,IAAA,KAAA,IAAA,mBAAA,EAAA,KACA,KAAA,GAAA,SAAA,GACA,OAAA,WACA,OAAA,EAAA,GAAA,MAAA,EAAA,YAFA,CAIA,IAKA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IACA,EAAA,GAAA,EAAA,GAAA,KAAA,KAAA,KAAA,KAAA,EAAA,KAaA,OARA,KAAA,MAAA,SAAA,GACA,EAAA,gBAAA,GACA,IACA,GAAA,EACA,EAAA,WAIA,MAGA,OAAA,eAAA,EAAA,UAAA,wBAAA,CAIA,YAAA,EACA,IAAA,WACA,OAAA,KAAA,eAAA,iBAKA,EAAA,UAAA;;AC1zBA,aAEA,OAAA,QAAA,EAEA,IAAA,EAAA,QAAA,oBAGA,EAAA,QAAA,gBAMA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,gBACA,EAAA,cAAA,EAEA,IAAA,EAAA,EAAA,QAEA,IAAA,EACA,OAAA,KAAA,KAAA,QAAA,IAAA,MAAA,yCAGA,EAAA,WAAA,KACA,EAAA,QAAA,KAEA,MAAA,GACA,KAAA,KAAA,GAEA,EAAA,GAEA,IAAA,EAAA,KAAA,eACA,EAAA,SAAA,GACA,EAAA,cAAA,EAAA,OAAA,EAAA,gBACA,KAAA,MAAA,EAAA,eAIA,SAAA,EAAA,GACA,KAAA,gBAAA,GAAA,OAAA,IAAA,EAAA,GAEA,EAAA,KAAA,KAAA,GAEA,KAAA,gBAAA,CACA,eAAA,EAAA,KAAA,MACA,eAAA,EACA,cAAA,EACA,QAAA,KACA,WAAA,KACA,cAAA,MAIA,KAAA,eAAA,cAAA,EAKA,KAAA,eAAA,MAAA,EAEA,IACA,mBAAA,EAAA,YAAA,KAAA,WAAA,EAAA,WAEA,mBAAA,EAAA,QAAA,KAAA,OAAA,EAAA,QAIA,KAAA,GAAA,YAAA,GAGA,SAAA,IACA,IAAA,EAAA,KAEA,mBAAA,KAAA,OACA,KAAA,OAAA,SAAA,EAAA,GACA,EAAA,EAAA,EAAA,KAGA,EAAA,KAAA,KAAA,MA2DA,SAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,OAAA,EAAA,KAAA,QAAA,GAOA,GALA,MAAA,GACA,EAAA,KAAA,GAIA,EAAA,eAAA,OAAA,MAAA,IAAA,MAAA,8CAEA,GAAA,EAAA,gBAAA,aAAA,MAAA,IAAA,MAAA,kDAEA,OAAA,EAAA,KAAA,MA7IA,EAAA,SAAA,QAAA,YAGA,EAAA,SAAA,EAAA,GAuEA,EAAA,UAAA,KAAA,SAAA,EAAA,GAEA,OADA,KAAA,gBAAA,eAAA,EACA,EAAA,UAAA,KAAA,KAAA,KAAA,EAAA,IAaA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,MAAA,IAAA,MAAA,oCAGA,EAAA,UAAA,OAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,KAAA,gBAIA,GAHA,EAAA,QAAA,EACA,EAAA,WAAA,EACA,EAAA,cAAA,GACA,EAAA,aAAA,CACA,IAAA,EAAA,KAAA,gBACA,EAAA,eAAA,EAAA,cAAA,EAAA,OAAA,EAAA,gBAAA,KAAA,MAAA,EAAA,iBAOA,EAAA,UAAA,MAAA,SAAA,GACA,IAAA,EAAA,KAAA,gBAEA,OAAA,EAAA,YAAA,EAAA,UAAA,EAAA,cACA,EAAA,cAAA,EACA,KAAA,WAAA,EAAA,WAAA,EAAA,cAAA,EAAA,iBAIA,EAAA,eAAA,GAIA,EAAA,UAAA,SAAA,SAAA,EAAA,GACA,IAAA,EAAA,KAEA,EAAA,UAAA,SAAA,KAAA,KAAA,EAAA,SAAA,GACA,EAAA,GACA,EAAA,KAAA;;AC3KA,aAEA,OAAA,QAAA,EAEA,IAAA,EAAA,QAAA,uBAGA,EAAA,QAAA,gBAMA,SAAA,EAAA,GACA,KAAA,gBAAA,GAAA,OAAA,IAAA,EAAA,GAEA,EAAA,KAAA,KAAA,GARA,EAAA,SAAA,QAAA,YAGA,EAAA,SAAA,EAAA,GAQA,EAAA,UAAA,WAAA,SAAA,EAAA,EAAA,GACA,EAAA,KAAA;;AC7CA,QAAA,OAAA,QAAA,QAAA,6BACA,QAAA,OAAA,QACA,QAAA,SAAA,QACA,QAAA,SAAA,QAAA,6BACA,QAAA,OAAA,QAAA,2BACA,QAAA,UAAA,QAAA,8BACA,QAAA,YAAA,QAAA;;ACNA,OAAA,QAAA,QAAA;;ACAA,OAAA,QAAA,QAAA;;ACAA,OAAA,QAAA,QAAA,cAAA;;ACAA,OAAA,QAAA,QAAA,cAAA;;ACqBA,OAAA,QAAA,EAEA,IAAA,EAAA,QAAA,UAAA,aACA,EAAA,QAAA,YAiBA,SAAA,IACA,EAAA,KAAA,MAhBA,EAAA,EAAA,GACA,EAAA,SAAA,QAAA,+BACA,EAAA,SAAA,QAAA,+BACA,EAAA,OAAA,QAAA,6BACA,EAAA,UAAA,QAAA,gCACA,EAAA,YAAA,QAAA,kCAGA,EAAA,OAAA,EAWA,EAAA,UAAA,KAAA,SAAA,EAAA,GACA,IAAA,EAAA,KAEA,SAAA,EAAA,GACA,EAAA,WACA,IAAA,EAAA,MAAA,IAAA,EAAA,OACA,EAAA,QAOA,SAAA,IACA,EAAA,UAAA,EAAA,QACA,EAAA,SAJA,EAAA,GAAA,OAAA,GAQA,EAAA,GAAA,QAAA,GAIA,EAAA,UAAA,IAAA,IAAA,EAAA,MACA,EAAA,GAAA,MAAA,GACA,EAAA,GAAA,QAAA,IAGA,IAAA,GAAA,EACA,SAAA,IACA,IACA,GAAA,EAEA,EAAA,OAIA,SAAA,IACA,IACA,GAAA,EAEA,mBAAA,EAAA,SAAA,EAAA,WAIA,SAAA,EAAA,GAEA,GADA,IACA,IAAA,EAAA,cAAA,KAAA,SACA,MAAA,EAQA,SAAA,IACA,EAAA,eAAA,OAAA,GACA,EAAA,eAAA,QAAA,GAEA,EAAA,eAAA,MAAA,GACA,EAAA,eAAA,QAAA,GAEA,EAAA,eAAA,QAAA,GACA,EAAA,eAAA,QAAA,GAEA,EAAA,eAAA,MAAA,GACA,EAAA,eAAA,QAAA,GAEA,EAAA,eAAA,QAAA,GAWA,OA5BA,EAAA,GAAA,QAAA,GACA,EAAA,GAAA,QAAA,GAmBA,EAAA,GAAA,MAAA,GACA,EAAA,GAAA,QAAA,GAEA,EAAA,GAAA,QAAA,GAEA,EAAA,KAAA,OAAA,GAGA;;AC8DA,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GA3LA,IAAMirD,EAAW/vE,QAAQ,UAAU+vE,SAC7Bv0C,EAASx7B,QAAQ,YAQvB,SAASy1E,EAAQlJ,GAEJ,OAAA,EAAA,IAAI7nC,IAAI6nC,IASfmJ,IAAAA,EAuKN,SAAA,GAtKcr1E,SAAAA,EAAAA,GAAM,IAAA,EAQZ,GARY,EAAA,KAAA,GACV,EAAA,EAAA,KAAA,EAAA,GAAA,KAAA,KAAA,CACJ8wE,YAAY,OAGd9wE,EAAOA,GAAQ,IAGLs1E,cACF,MAAA,IAAIxjE,MAAM,+BA8BlB,OA3BKwjE,EAAAA,cAAgBt1E,EAAKs1E,cACrBC,EAAAA,sBAAuB,EAEvBC,EAAAA,UAAY,GACZC,EAAAA,WAAa,GACb7zE,EAAAA,EAAI,EACJT,EAAAA,WAAanB,EAAKmB,YAAc,IAChCqkE,EAAAA,YAAcxlE,EAAKwlE,aAAe,KAElCp1B,EAAAA,MAAMpwC,EAAKowC,MACQ,mBAAbpwC,EAAKowC,IACVpwC,EAAKowC,IACLlY,QAAQkY,KAETq1B,EAAAA,UAAYzlE,EAAKylE,WAAa,GAC9BC,EAAAA,SAAW1lE,EAAK0lE,SAChBC,EAAAA,eAAiB3lE,EAAK2lE,gBAAkB,GACxC+P,EAAAA,cAAgB11E,EAAK01E,cACrBC,EAAAA,qBAAuB31E,EAAK21E,qBAE5BtzE,EAAAA,KAAO,EACP+mE,EAAAA,MAAQ,EAER/S,EAAAA,IAAM,EAENyW,EAAAA,GAAG,SAAU,EAAK8I,sBAAsBtlC,KAA7C,EAAA,KAEA,EAAA,EAAA,EAAA,IA+HJ,OAAA,EAAA,EAvK0Bo/B,GAuK1B,EAAA,EAAA,CAAA,CAAA,IAAA,SApHSN,MAAAA,SAAAA,EAAOyG,EAAKhjE,GACb,IAACu8D,EAGIv8D,OADFs4D,KAAAA,KAAK,UACHt4D,IAGL,IAAC,KAAK0iE,qBASD1iE,OARFxQ,KAAAA,OACAmzE,KAAAA,UAAYJ,EACf,KAAKI,UAAUnyE,MAAM,GAAGK,OAAO3C,OAAO0B,KAAK2sE,EAAMviE,SAE9C4oE,KAAAA,WAAaL,EAChB,KAAKK,WAAWpyE,MAAM,GAAGK,OAAO3C,OAAO0B,KAAK2sE,EAAM77C,UAE/CuiD,KAAAA,WAAa,KAAKA,YAAc1G,EAC9Bv8D,IAGJu2D,KAAAA,QAECjnE,IAAAA,EAAO,KAAKmzE,cAAcS,WAAW3G,GAIpCv8D,OAHFmjE,KAAAA,WAAW7zE,EAAK,IAGd0Q,MA2FX,CAAA,IAAA,aApFaojE,MAAAA,SAAAA,GACHxxD,IAAAA,EAAM,KAAK6wD,cAAcY,aAAaD,EAAMppE,MAAOopE,EAAM1iD,QAC1D8iC,KAAAA,KAAO5xC,IAkFhB,CAAA,IAAA,wBA3E0B,MAAA,WAKlB,GAJA,KAAK8wD,sBAAwB,KAAKlzE,OAAS,KAAK+mE,OAC7Ch5B,KAAAA,IAAI,+DAGN,KAAKmlC,qBAAsB,CAEzBD,KAAAA,cAAchP,YAAcnrC,EAAOg7C,gBAAgB,KAAKX,WACxDjzE,MAAMyJ,QAAQ,KAAK8pE,WAAWviD,UAC5B+hD,KAAAA,cAAc9O,aAAerrC,EAAOg7C,gBACvC,KAAKV,aAIHtzE,IAAAA,EAAO,KAAKmzE,cAAcS,WAAW,KAAKD,YAC1CM,EAAQ,GACRC,EAAYl0E,EAAK,GAAG0K,MAAMhL,OAC1By0E,EAAan0E,EAAK,GAAGoxB,OAAO1xB,OAC1BN,EAAgB,KAAhBA,YAmBR,OAjBKA,EAGHA,EAAYmB,QAAQ,SAAAL,GAClB+zE,EAAMzyE,KAAKtB,KAHb+zE,EAAMzyE,KAAKxE,KAAKC,IAAI,EAAGD,KAAK4C,MAAMs0E,EAAY,KAOhDD,EAAM/tC,QAAQguC,GACdD,EAAMzyE,KAAK2yE,GAENf,KAAAA,sBAAuB,EACvBD,KAAAA,cAAcpO,WAAWkP,QAEI,mBAAvB,KAAKV,eACTA,KAAAA,iBAKH12E,IAAAA,EAAQ,KAAKq3D,IAAM,KAAKh0D,KAkB1B,GAhBA,KAAK+tC,KAAO,KAAKxuC,EAAI,KAAK6jE,WAAc,GACrCr1B,KAAAA,IAAI,cAAe,KAAKxuC,EAAG,kBAAmB5C,GAEjD,KAAK0mE,UAAY,KAAK9jE,EAAI,KAAK+jE,gBAAmB,GAC/CD,KAAAA,SAAS,CACZ1mE,MAAAA,EACAmC,WAAY,KAAKS,IAIhBy0D,KAAAA,IAAM,EACN+S,KAAAA,MAAQ,EAERxnE,KAAAA,IAGD,KAAKA,EAAI,KAAKT,YAAcnC,EAAQ,KAAKwmE,aACvC,GAA8B,mBAAvB,KAAKkQ,cAEP,OAAA,KAAKA,qBAIX,GAAyC,mBAA9B,KAAKC,qBAEZ,OAAA,KAAKA,qBAAqB,CAC/B32E,MAAAA,EACAmC,WAAY,KAAKS,QAMzB,EAAA,GAAA3C,OAAOC,QAAUm2E;;ACtLjBp2E,OAAOC,QAAU,SAAiBo5D,GAC5B/1D,OAAAA,MAAMyJ,QAAQssD,GACTA,EAEF,IAAIrlC,aAAalyB,OAAOu3D,OAAOA;;ACHxC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GANA,IAAMnf,EAAUx5C,QAAQ,cAMxBV,OAAOC,QAAU,SAAao5D,GACrBn5D,OAAAA,KAAKC,IAALD,MAAAA,KAAYg6C,EAAAA,EAAQmf;;ACP7Br5D,OAAOC,QAAU,SAAas9D,GAGvB,IADDnG,IAAAA,EAAM,EACDz0D,EAAI,EAAGA,EAAI46D,EAAO36D,OAAQD,IACjCy0D,GAAOmG,KAAAA,IAAAA,EAAO56D,GAAM,GAEfy0D,OAAAA,EAAMmG,EAAO36D;;ACAtB5C,OAAOC,QAAU,SAAeuN,EAAOC,GAE9BD,IADDlJ,IAAAA,EAAS,GACRkJ,EAAQC,EAAKD,IAClBlJ,EAAOI,KAAK8I,GAEPlJ,OAAAA;;AC+7BT,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA18BA,IAAMilE,EAAO7oE,QAAQ,WACfw7B,EAASx7B,QAAQ,YACjB01E,EAAc11E,QAAQ,kBACtBP,EAAMO,QAAQ,mBACd42E,EAAM52E,QAAQ,mBACdq2D,EAASr2D,QAAQ,sBACjBsP,EAAQtP,QAAQ,qBAChBw5C,EAAUx5C,QAAQ,wBAClBuzD,EAAQvzD,QAAQ,qBAMhB62E,EA47BN,WAz4B4B,SAAA,IAAdhwE,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,EAAA,KAAA,GACxBzF,OAAOC,OAAO,KAAM,KAAKsB,YAAYoxD,SAAUltD,GAC1CjF,KAAAA,YAAciF,EAAQw+D,aACtB/kE,KAAAA,UAAY,GACZilE,KAAAA,uBACHnkE,OAAOC,OAAO,GAAI,KAAKsB,YAAY6iE,cAAe3+D,IAG/C4vE,KAAAA,MAAQ,KACRnR,KAAAA,YAAc,KACdzM,KAAAA,OAAS,KACTjF,KAAAA,QAAU,KACVkjB,KAAAA,QAAU,KAGVnjB,KAAAA,OAAS,KACTyB,KAAAA,QAAU,KACVyH,KAAAA,OAAS,KACTqJ,KAAAA,mBAAqB,EACrB,KAAKvjE,YAAYmJ,UAAUC,eAAe,cACxC66D,KAAAA,SAAW,MAEb,KAAKjkE,YAAYmJ,UAAUC,eAAe,qBACxCgrE,KAAAA,gBAAkB,MAk3B7B,OAAA,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,2BAh6BkClwE,MAAAA,SAAAA,GACxB++D,IAAAA,EAAc,CAClBpkE,WAAY,SAAA8gB,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GACpDujD,YAAa,SAAAvjD,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GAAKA,EAAM,GAChEmuB,IAAK,SAAAnuB,GAAO,MAAe,mBAARA,GAAqC,kBAARA,GAChDwjD,UAAW,SAAAxjD,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GACnD5gB,aAAc,SAAA4gB,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GAAKA,EAAM,GACjEqzC,SAAU,SAAArzC,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GAAKA,EAAM,GAC7DyjD,SAAU,SAAAzjD,GAAO,MAAe,mBAARA,GAA8B,OAARA,GAC9C0jD,eAAgB,SAAA1jD,GAAO,MAAe,iBAARA,GAAoBA,EAAM,GACxD2jD,QAAS,SAAA3jD,GAAO,MAAe,iBAARA,GAAoBA,EAAM,IAEnDlhB,OAAO0B,KAAK+zE,EAAcrR,eAAeziE,QAAQ,SAAAC,GAC3C4iE,GAAAA,EAAY75D,eAAe/I,KAAS4iE,EAAY5iE,GAAK6D,EAAQ7D,IACzD,MAAA,IAAImP,MACJnP,IAAAA,OAAAA,EACF6D,MAAAA,OAAAA,EAAQ7D,GAFZ,iFAk5BR,CAAA,IAAA,gBA37B6B,IAAA,WAClB,MAAA,CACLxB,WAAY,IACZqkE,YAAa,KACbp1B,KAAK,EACLq1B,UAAW,GACXpkE,aAAc,GACdi0D,SAAU,GACVoQ,SAAU,KACVC,eAAgB,GAChBC,QAASr1C,EAAAA,KAi7Bf,CAAA,IAAA,WA76BwB,IAAA,WACb,MAAA,CACLw1C,aAAc,GACdf,aAAc,CAAC,GACf2R,WAAY,eAy6BlB,EAAA,EAAA,CAAA,CAAA,IAAA,cA12BgB,MAAA,WACR,IAAC,KAAKP,MAAO,MAAM,IAAItkE,MAAM,yCAE5BmzD,KAAAA,YAAc,KAAKmR,MAAMv0E,OAAS,EAClC22D,KAAAA,OAAS,GACTjF,KAAAA,QAAU,GACVkjB,KAAAA,QAAU,GAGVnjB,KAAAA,OAAS,GACTyB,KAAAA,QAAU,GACVyH,KAAAA,OAAS,GAET,IAAA,IAAI5I,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IAAS,CAChDvxD,IAAAA,EAAO,KAAK+zE,MAAMxiB,GAKpBA,GAJCN,KAAAA,OAAOM,GAASV,EAAM7wD,GACtBm6D,KAAAA,OAAO5I,GAASV,EAAM7wD,GACtBo0E,KAAAA,QAAQ7iB,GAASV,EAAM7wD,GAExBuxD,EAAQ,EAAG,CACR4E,KAAAA,OAAO5E,GAASoC,EAAO3zD,GACvBkxD,KAAAA,QAAQK,GAAS,IAAIrxD,MAAMF,GAC3B0yD,KAAAA,QAAQnB,GAAS,IAAIrxD,MAAMF,GAE3B,IAAA,IAAI2P,EAAO,EAAGA,EAAO3P,EAAM2P,IAAQ,CAChC4kE,IAAAA,EAAW,KAAKR,MAAMxiB,EAAQ,GAC/BL,KAAAA,QAAQK,GAAO5hD,GAAQgkD,EAAO4gB,GAC9B7hB,KAAAA,QAAQnB,GAAO5hD,GAAQkhD,EAAM0jB,KAKnCC,KAAAA,kBA00BT,CAAA,IAAA,gBAn0BgBF,MAAAA,SAAAA,GAEJ,OADHA,KAAAA,WAAaA,GAAc,KAAKA,WAC7B,KAAKA,YACN,IAAA,UACEpQ,KAAAA,SAAW,KAAKA,UAAY,KAAKuQ,iBACjCJ,KAAAA,gBACH,KAAKA,iBAAmB,KAAKK,wBAC/B,MACG,IAAA,OACExQ,KAAAA,SAAW,KAAKA,UAAY,KAAKyQ,cACjCN,KAAAA,gBAAkB,KAAKA,iBAAmB,KAAKO,qBACpD,MACG,IAAA,aACE1Q,KAAAA,SAAW,KAAKA,UAAY,KAAK2Q,mBACjCR,KAAAA,gBACH,KAAKA,iBAAmB,KAAKS,0BAC/B,MACG,IAAA,OACE5Q,KAAAA,SAAW,KAAKA,UAAY,KAAK6Q,cACjCV,KAAAA,gBAAkB,KAAKA,iBAAmB,KAAKW,qBACpD,MACF,QACQ,MAAA,IAAIvlE,MAEN,sBAAA,OAAA,KAAK6kE,WAFT,mFA6yBR,CAAA,IAAA,MA9vBM9pE,MAAAA,SAAAA,GACE,IAAC,KAAKyqE,WAAY,OAAO,KACzB,KAAKhR,cACPz5D,EAAQsuB,EAAOge,QAAQ,KAAKmtB,YAAaz5D,IAGvC0mB,IAAAA,EAAa,EAAA,KAAKgzC,SAAS15D,IAKxB0mB,OAHH,KAAKizC,eACPjzC,EAAS4H,EAAOsrC,OAAO,KAAKD,aAAcjzC,IAErCA,IAmvBX,CAAA,IAAA,mBA3uBmB1mB,MAAAA,SAAAA,GACV4pE,KAAAA,QAAQ,GAAK5pE,EAGb,IADD0mB,IAAAA,EAAS,KACJqgC,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IAAS,CACjD,IAAA,IAAI5hD,EAAO,EAAGA,EAAO,KAAKokE,MAAMxiB,GAAQ5hD,IAAQ,CAK9C,IAJCuhD,IAAAA,EAAU,KAAKA,QAAQK,GAAO5hD,GAEhCqkD,EAAM,KAAKmC,OAAO5E,GAAO5hD,GAEpB5P,EAAI,EAAGA,EAAImxD,EAAQ1xD,OAAQO,IAClCi0D,GAAO9C,EAAQnxD,GAAKyK,EAAMzK,GAGvBq0E,KAAAA,QAAQ7iB,GAAO5hD,GAAQ,GAAK,EAAI7S,KAAKI,KAAK82D,IAGjD9iC,EADA1mB,EAAQ,KAAK4pE,QAAQ7iB,GAGhBrgC,OAAAA,IAwtBX,CAAA,IAAA,gBArtBgB1mB,MAAAA,SAAAA,GACP4pE,KAAAA,QAAQ,GAAK5pE,EAGb,IADD0mB,IAAAA,EAAS,KACJqgC,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IAAS,CACjD,IAAA,IAAI5hD,EAAO,EAAGA,EAAO,KAAKokE,MAAMxiB,GAAQ5hD,IAAQ,CAI9C,IAHCuhD,IAAAA,EAAU,KAAKA,QAAQK,GAAO5hD,GAEhCqkD,EAAM,KAAKmC,OAAO5E,GAAO5hD,GACpB5P,EAAI,EAAGA,EAAImxD,EAAQ1xD,OAAQO,IAClCi0D,GAAO9C,EAAQnxD,GAAKyK,EAAMzK,GAGvBq0E,KAAAA,QAAQ7iB,GAAO5hD,GAAQqkD,EAAM,EAAI,EAAIA,EAG5C9iC,EADA1mB,EAAQ,KAAK4pE,QAAQ7iB,GAGhBrgC,OAAAA,IAmsBX,CAAA,IAAA,qBAhsBqB1mB,MAAAA,SAAAA,GACZ4pE,KAAAA,QAAQ,GAAK5pE,EAGb,IADD0mB,IAAAA,EAAS,KACJqgC,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IAAS,CACjD,IAAA,IAAI5hD,EAAO,EAAGA,EAAO,KAAKokE,MAAMxiB,GAAQ5hD,IAAQ,CAI9C,IAHCuhD,IAAAA,EAAU,KAAKA,QAAQK,GAAO5hD,GAEhCqkD,EAAM,KAAKmC,OAAO5E,GAAO5hD,GACpB5P,EAAI,EAAGA,EAAImxD,EAAQ1xD,OAAQO,IAClCi0D,GAAO9C,EAAQnxD,GAAKyK,EAAMzK,GAGvBq0E,KAAAA,QAAQ7iB,GAAO5hD,GAAQqkD,EAAM,EAAI,EAAI,IAAOA,EAGnD9iC,EADA1mB,EAAQ,KAAK4pE,QAAQ7iB,GAGhBrgC,OAAAA,IA8qBX,CAAA,IAAA,gBA3qBgB1mB,MAAAA,SAAAA,GACP4pE,KAAAA,QAAQ,GAAK5pE,EAGb,IADD0mB,IAAAA,EAAS,KACJqgC,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IAAS,CACjD,IAAA,IAAI5hD,EAAO,EAAGA,EAAO,KAAKokE,MAAMxiB,GAAQ5hD,IAAQ,CAI9C,IAHCuhD,IAAAA,EAAU,KAAKA,QAAQK,GAAO5hD,GAEhCqkD,EAAM,KAAKmC,OAAO5E,GAAO5hD,GACpB5P,EAAI,EAAGA,EAAImxD,EAAQ1xD,OAAQO,IAClCi0D,GAAO9C,EAAQnxD,GAAKyK,EAAMzK,GAGvBq0E,KAAAA,QAAQ7iB,GAAO5hD,GAAQ7S,KAAKK,KAAK62D,GAGxC9iC,EADA1mB,EAAQ,KAAK4pE,QAAQ7iB,GAGhBrgC,OAAAA,IAypBX,CAAA,IAAA,uBAhpBuBpxB,MAAAA,SAAAA,GAAM,IAAA,EAAA,KACrB,KAAKi0E,QAEJA,KAAAA,MAAQ,GACRA,KAAAA,MAAMzyE,KAAKxB,EAAK,GAAG0K,MAAMhL,QACzB,KAAKN,YAGHA,KAAAA,YAAYmB,QAAQ,SAAAL,GACvB,EAAK+zE,MAAMzyE,KAAKtB,KAHb+zE,KAAAA,MAAMzyE,KAAKxE,KAAKC,IAAI,EAAGD,KAAK4C,MAAMI,EAAK,GAAG0K,MAAMhL,OAAS,KAM3Du0E,KAAAA,MAAMzyE,KAAKxB,EAAK,GAAGoxB,OAAO1xB,QAE1B01E,KAAAA,iBAkoBT,CAAA,IAAA,yBAtnByBv3E,MAAAA,SAAAA,GAAM,IAAA,EAAA,KAC3Be,OAAO0B,KAAK+zE,EAAcrR,eAAeziE,QAAQ,SAAA4L,GAKxC,OAJP,EAAKrO,UAAUqO,GAAOtO,EAAK0L,eAAe4C,GACtCtO,EAAKsO,GACL,EAAKrO,UAAUqO,GAEZ,EAAKrO,UAAUqO,KAExBkoE,EAAcnR,yBAAyB,KAAKplE,WACvCqlE,KAAAA,cAActlE,EAAKowC,KAAO,KAAKnwC,UAAUmwC,KACzCumC,KAAAA,WAAa32E,EAAK22E,YAAc,KAAKA,aA4mB9C,CAAA,IAAA,oBApmBsB,MAAA,WAAA,IAAA,EAAA,KACX51E,OAAAA,OAAO0B,KAAK+zE,EAAcrR,eAAerC,OAAO,SAAC9iE,EAAMsO,GACxDA,MAAQ,YAARA,GAAqB,EAAKrO,UAAUqO,KAASiiB,EAAAA,EAAiBvwB,GAC9D,EAAKC,UAAUqO,KAAMtO,EAAKsO,GAAO,EAAKrO,UAAUqO,IACxC,QAARA,IAAetO,EAAKowC,IAA0B,mBAAbpwC,EAAKowC,KACnCpwC,IACN,MA8lBP,CAAA,IAAA,gBAplBgBowC,MAAAA,SAAAA,GAELnwC,KAAAA,UAAUmwC,IADE,mBAARA,EACYA,IACZA,GACYlY,QAAQkY,MAglBnC,CAAA,IAAA,0BArkB0BjuC,MAAAA,SAAAA,GAEjB,IADDk0D,IAAAA,EAAM,EACDz0D,EAAI,EAAGA,EAAIO,EAAKN,SAAUD,EACjCy0D,GAAO,KAAKkR,cAAcplE,EAAKP,GAAGiL,MAAO1K,EAAKP,GAAG2xB,QAAQ,GAEpD8iC,OAAAA,EAAMl0D,EAAKN,SAgkBtB,CAAA,IAAA,iBAzjBiBM,MAAAA,SAAAA,GACR,IAAA,IAAIP,EAAI,EAAGA,EAAIO,EAAKN,SAAUD,EAC5B2lE,KAAAA,cAAcplE,EAAKP,GAAGiL,MAAO1K,EAAKP,GAAG2xB,QAAQ,KAujBxD,CAAA,IAAA,gBA7iBgBpxB,MAAAA,SAAAA,EAAMukE,EAAQC,GAExBD,QAAAA,EAAOvlE,YAAc,KAAKlB,UAAUkB,YACpCulE,EAAO1nE,OAAS,KAAKiB,UAAUulE,aAC/BllE,KAAKC,OAASomE,KAKhBD,EAAOvlE,aAGL,KAAKlB,UAAUmwC,KACfs2B,EAAOvlE,WAAa,KAAKlB,UAAUwlE,WAAc,GAEjDiB,EAAO1nE,MAAQ,KAAK8nE,wBAAwB3kE,GACvClC,KAAAA,UAAUmwC,IACEs2B,eAAAA,OAAAA,EAAOvlE,WAA+BulE,sBAAAA,OAAAA,EAAO1nE,SAErD0nE,EAAOvlE,WAAa,KAAK0kE,oBAAuB,EACzDa,EAAO1nE,MAAQ,KAAK8nE,wBAAwB3kE,GAEvC4kE,KAAAA,eAAe5kE,GAIpB,KAAKlC,UAAUylE,UACfgB,EAAOvlE,WAAa,KAAKlB,UAAU0lE,gBAAmB,GAEjD1lE,KAAAA,UAAUylE,SAAS3kE,OAAOC,OAAO0lE,KAEjC,KA8gBX,CAAA,IAAA,gBApgBgBvkE,MAAAA,SAAAA,EAAMqE,GACb0+D,KAAAA,uBAAuB1+D,GAC5BrE,EAAO,KAAK8kE,YAAY9kE,GAClBwkE,IAAAA,EAAUrmE,KAAKC,MAAQ,KAAKN,UAAU2lE,QASrC,OAFF4R,KAAAA,qBAAqBr1E,GAEnB,CACLA,KAAAA,EACAukE,OATa,CACb1nE,MAAO,EACPmC,WAAY,GAQZwlE,QAAAA,KAqfN,CAAA,IAAA,QA3eQxkE,MAAAA,SAAAA,GAAMqE,IACNkgE,EACAC,EAFMngE,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAGS,EAAA,KAAKogE,cAAczkE,EAAMqE,GAE/C,IAFJrE,EAAAA,EAAAA,KAAMukE,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,QAEV,KAAKE,cAAc1kE,EAAMukE,EAAQC,KACjCD,OAAAA,IAqeX,CAAA,IAAA,aA1davkE,MAAAA,SAAAA,GAAoB,IACzBukE,EACAC,EAFyB,EAAA,KAAdngE,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAGK,EAAA,KAAKogE,cAAczkE,EAAMqE,GAEhD,OAFHrE,EAAAA,EAAAA,KAAMukE,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,QAEX,IAAI5W,QAAQ,SAAC0nB,EAASxnB,GACvB,IACIynB,IAAAA,EAAc,IAAIlP,EAAK,IAAIjmE,MAAM,EAAKtC,UAAUkB,YAAa,CACjE2nE,OAAO,EACPH,KAAM,WACJ,OAAA,EAAK9B,cAAc1kE,EAAMukE,EAAQC,IAAY+Q,EAAY3O,QAC3Dz6C,KAAM,WAAMmpD,OAAAA,EAAQ/Q,MAEtBgR,EAAY9O,OACZ,MAAOxnE,GACP6uD,EAAO,IAAIn+C,MAAM,CAAE1Q,WAAAA,EAAYslE,OAAAA,UA2cvC,CAAA,IAAA,gBAjcgB75D,MAAAA,SAAAA,EAAOgY,EAAQ2iD,GAQvBA,OANCjB,KAAAA,SAAS15D,GAGT6pE,KAAAA,gBAAgB7xD,GAChB6iD,KAAAA,iBAEDF,EACK+O,EAAI,KAAK/Z,OAAO,KAAKyI,cAEvB,OAsbX,CAAA,IAAA,0BA/a0BpgD,MAAAA,SAAAA,GACjB,IAAA,IAAI+uC,EAAQ,KAAKqR,YAAarR,GAAS,EAAGA,IACxC,IAAA,IAAI5hD,EAAO,EAAGA,EAAO,KAAKokE,MAAMxiB,GAAQ5hD,IAAQ,CAC7CuhB,IAAAA,EAAS,KAAKkjD,QAAQ7iB,GAAO5hD,GAE/BhT,EAAQ,EACR40D,GAAAA,IAAU,KAAKqR,YACjBjmE,EAAQ6lB,EAAO7S,GAAQuhB,OAGlB,IADC+/B,IAAAA,EAAS,KAAKA,OAAOM,EAAQ,GAC1BxxD,EAAI,EAAGA,EAAIkxD,EAAOzxD,OAAQO,IACjCpD,GAASs0D,EAAOlxD,GAAK,KAAKmxD,QAAQK,EAAQ,GAAGxxD,GAAG4P,GAG/CwqD,KAAAA,OAAO5I,GAAO5hD,GAAQhT,EACtBs0D,KAAAA,OAAOM,GAAO5hD,GAAQhT,EAAQu0B,GAAU,EAAIA,MAgazD,CAAA,IAAA,uBAvZuB1O,MAAAA,SAAAA,GACd,IAAA,IAAI+uC,EAAQ,KAAKqR,YAAarR,GAAS,EAAGA,IACxC,IAAA,IAAI5hD,EAAO,EAAGA,EAAO,KAAKokE,MAAMxiB,GAAQ5hD,IAAQ,CAC7CuhB,IAAAA,EAAS,KAAKkjD,QAAQ7iB,GAAO5hD,GAE/BhT,EAAQ,EACR40D,GAAAA,IAAU,KAAKqR,YACjBjmE,EAAQ6lB,EAAO7S,GAAQuhB,OAGlB,IADC+/B,IAAAA,EAAS,KAAKA,OAAOM,EAAQ,GAC1BxxD,EAAI,EAAGA,EAAIkxD,EAAOzxD,OAAQO,IACjCpD,GAASs0D,EAAOlxD,GAAK,KAAKmxD,QAAQK,EAAQ,GAAGxxD,GAAG4P,GAG/CwqD,KAAAA,OAAO5I,GAAO5hD,GAAQhT,EACtBs0D,KAAAA,OAAOM,GAAO5hD,GAAQuhB,EAAS,EAAIv0B,EAAQ,KAwYxD,CAAA,IAAA,4BA/X4B6lB,MAAAA,SAAAA,GACnB,IAAA,IAAI+uC,EAAQ,KAAKqR,YAAarR,GAAS,EAAGA,IACxC,IAAA,IAAI5hD,EAAO,EAAGA,EAAO,KAAKokE,MAAMxiB,GAAQ5hD,IAAQ,CAC7CuhB,IAAAA,EAAS,KAAKkjD,QAAQ7iB,GAAO5hD,GAE/BhT,EAAQ,EACR40D,GAAAA,IAAU,KAAKqR,YACjBjmE,EAAQ6lB,EAAO7S,GAAQuhB,OAGlB,IADC+/B,IAAAA,EAAS,KAAKA,OAAOM,EAAQ,GAC1BxxD,EAAI,EAAGA,EAAIkxD,EAAOzxD,OAAQO,IACjCpD,GAASs0D,EAAOlxD,GAAK,KAAKmxD,QAAQK,EAAQ,GAAGxxD,GAAG4P,GAG/CwqD,KAAAA,OAAO5I,GAAO5hD,GAAQhT,EACtBs0D,KAAAA,OAAOM,GAAO5hD,GAAQuhB,EAAS,EAAIv0B,EAAQ,IAAOA,KAgX/D,CAAA,IAAA,uBAvWuB6lB,MAAAA,SAAAA,GACd,IAAA,IAAI+uC,EAAQ,KAAKqR,YAAarR,GAAS,EAAGA,IACxC,IAAA,IAAI5hD,EAAO,EAAGA,EAAO,KAAKokE,MAAMxiB,GAAQ5hD,IAAQ,CAC7CuhB,IAAAA,EAAS,KAAKkjD,QAAQ7iB,GAAO5hD,GAE/BhT,EAAQ,EACR40D,GAAAA,IAAU,KAAKqR,YACjBjmE,EAAQ6lB,EAAO7S,GAAQuhB,OAGlB,IADC+/B,IAAAA,EAAS,KAAKA,OAAOM,EAAQ,GAC1BxxD,EAAI,EAAGA,EAAIkxD,EAAOzxD,OAAQO,IACjCpD,GAASs0D,EAAOlxD,GAAK,KAAKmxD,QAAQK,EAAQ,GAAGxxD,GAAG4P,GAG/CwqD,KAAAA,OAAO5I,GAAO5hD,GAAQhT,EACtBs0D,KAAAA,OAAOM,GAAO5hD,IAAS,EAAIuhB,EAASA,GAAUv0B,KAwV3D,CAAA,IAAA,iBA/UmB,MAAA,WACV,IAAA,IAAI40D,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IAGxC,IAFCwB,IAAAA,EAAW,KAAKqhB,QAAQ7iB,EAAQ,GAE7B5hD,EAAO,EAAGA,EAAO,KAAKokE,MAAMxiB,GAAQ5hD,IAAQ,CAG9C,IAFC3S,IAAAA,EAAQ,KAAKi0D,OAAOM,GAAO5hD,GAExB5P,EAAI,EAAGA,EAAIgzD,EAASvzD,OAAQO,IAAK,CACpCizD,IAAAA,EAAS,KAAKN,QAAQnB,GAAO5hD,GAAM5P,GAEvCizD,EACE,KAAKp1D,UAAUoB,aAAehC,EAAQ+1D,EAAShzD,GAC/C,KAAKnC,UAAUq1D,SAAWD,EAEvBN,KAAAA,QAAQnB,GAAO5hD,GAAM5P,GAAKizD,EAC1B9B,KAAAA,QAAQK,GAAO5hD,GAAM5P,IAAMizD,EAE7BmD,KAAAA,OAAO5E,GAAO5hD,IAAS,KAAK/R,UAAUoB,aAAehC,KA8TlE,CAAA,IAAA,cApTc8C,MAAAA,SAAAA,GAAM,IAAA,EAAA,KACZ,IAACI,MAAMyJ,QAAQ7J,GAAO,CAElBwlE,IAAAA,EAAM,GACZA,EAAIhkE,KAAKxB,GACTA,EAAOwlE,EAGHC,IAAAA,EAAkBzlE,EAAK,GAAG0K,MAC3BtK,MAAMyJ,QAAQ47D,IAAsBA,aAA2B30C,eAC7D,KAAKqzC,cACHA,KAAAA,YAAcnrC,EAAO0sC,YAAY1lE,EAAKo2B,IAAI,SAAAj5B,GAASA,OAAAA,EAAMuN,UAEhE1K,EAAOA,EAAKo2B,IAAI,SAAA09C,GACRt0E,IAAAA,EAAQw5B,EAAOge,QAAQ,EAAKmtB,YAAa2P,EAAMppE,OAC9C9L,OAAAA,OAAOC,OAAO,GAAIi1E,EAAO,CAAEppE,MAAOlL,KACxC,OAGComE,IAAAA,EAAmB5lE,EAAK,GAAGoxB,OAU1BpxB,OATFI,MAAMyJ,QAAQ+7D,IAAuBA,aAA4B90C,eAC/D,KAAKuzC,eACHA,KAAAA,aAAerrC,EAAO0sC,YAAY1lE,EAAKo2B,IAAI,SAAAj5B,GAASA,OAAAA,EAAMi0B,WAEjEpxB,EAAOA,EAAKo2B,IAAI,SAAA09C,GACRt0E,IAAAA,EAAQw5B,EAAOge,QAAQ,EAAKqtB,aAAcyP,EAAM1iD,QAC/CxyB,OAAAA,OAAOC,OAAO,GAAIi1E,EAAO,CAAE1iD,OAAQ5xB,KACzC,OAEEQ,IAuRX,CAAA,IAAA,OA1QOA,MAAAA,SAAAA,GAgBE,IAhBI,IAAA,EAAA,KAIHw1E,EAAqC,KAH3Cx1E,EAAO,KAAK8kE,YAAY9kE,IAGF,GAAGoxB,OAAO1xB,OAC5BkB,EAAW,EACXC,EAAW,EACXH,EAAU,EACVC,EAAU,EAGRI,EAAa,GAIfmzD,EAAM,EACDz0D,EAAAA,SAAAA,GACD2xB,IAAAA,EAAS,EAAKgzC,SAASpkE,EAAKP,GAAGiL,OAC/BgY,EAAS1iB,EAAKP,GAAG2xB,OAEnBqkD,OAAJ,EACIC,OAAJ,EAUID,GATAD,GACFC,EAASrkD,EAAO,GAAK,EAAKwyC,aAAe,EAAI,EAE7C8R,EAAWhzD,EAAO,KAElB+yD,EAASrkD,EAAOnP,QAAQhlB,EAAIm0B,IAC5BskD,EAAWhzD,EAAOT,QAAQhlB,EAAIylB,KAG5B+yD,IAAWC,EAAU,CACjBC,IAAAA,EAAW31E,EAAKP,GACtBb,OAAOC,OAAO82E,EAAU,CACtBF,OAAAA,EACAC,SAAAA,IAEF30E,EAAWS,KAAKm0E,GAGdH,IACa,IAAXC,GAA6B,IAAbC,EAClB/0E,IACoB,IAAX80E,GAA6B,IAAbC,EACzBh1E,IACoB,IAAX+0E,GAA6B,IAAbC,EACzB70E,IACoB,IAAX40E,GAA6B,IAAbC,GACzB90E,KAIEy5D,IAAAA,EAASjpC,EAAOgF,IAAI,SAACj5B,EAAOwC,GAAM+iB,OAAAA,EAAO/iB,GAAKxC,IACpD+2D,GAAOkgB,EAAI/Z,IArCJ56D,EAAI,EAAGA,EAAIO,EAAKN,OAAQD,IAAxBA,EAAAA,GAuCH5C,IAEA8B,EAAQ,CACZ9B,MAHYq3D,EAAMl0D,EAAKN,OAIvBqB,WAAAA,GAeKpC,OAZH62E,GACF52E,OAAOC,OAAOF,EAAO,CACnBgC,QAAAA,EACAD,QAAAA,EACAG,SAAAA,EACAD,SAAAA,EACAE,MAAOd,EAAKN,OACZ+B,UAAWf,GAAWA,EAAUE,GAChCc,OAAQhB,GAAWA,EAAUG,GAC7Bc,UAAWhB,EAAUD,GAAWV,EAAKN,SAGlCf,IAgMX,CAAA,IAAA,SAzJW,MAAA,WAEF,IAFE,IAAA,EAAA,KACD6jE,EAAS,GACN/Q,EAAAA,SAAAA,GACP+Q,EAAO/Q,GAAS,GAEZ72C,IAAAA,OAAJ,EAGEA,EADY,IAAV62C,GAAe,EAAK0S,YACdvlE,OAAO0B,KAAK,EAAK6jE,aAChB1S,IAAU,EAAKqR,aAAe,EAAKuB,aACpCzlE,OAAO0B,KAAK,EAAK+jE,cAEjBv3D,EAAM,EAAG,EAAKmnE,MAAMxiB,IAGzB,IAAI9xD,IAAAA,EAAAA,SAAAA,GACDkQ,IAAAA,EAAO+K,EAAMjb,GACnB6iE,EAAO/Q,GAAO5hD,GAAQ,GAElB4hD,EAAQ,IACV+Q,EAAO/Q,GAAO5hD,GAAMwoD,KAAO,EAAKhC,OAAO5E,GAAO9xD,GAC9C6iE,EAAO/Q,GAAO5hD,GAAMuhD,QAAU,GAE9BxyD,OAAO0B,KAAKkiE,EAAO/Q,EAAQ,IAAIlxD,QAAQ,SAAAN,GACjC8K,IAAAA,EAAQ9K,EACE,IAAVwxD,GAAe,EAAK0S,cACtBp5D,EAAQ,EAAKo5D,YAAYlkE,IAE3BuiE,EAAO/Q,GAAO5hD,GAAMuhD,QAAQnxD,GAAK,EAAKmxD,QAAQK,GAAO9xD,GAAGoL,OAbrDpL,EAAI,EAAGA,EAAIib,EAAMlb,OAAQC,IAAzBA,EAAAA,IAbF8xD,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IAAtCA,EAAAA,GA+BF,MAAA,CACLwiB,MAAO,KAAKA,MACZzR,OAAAA,EACA6B,eAAgB,KAAKA,aACrBF,cAAe,KAAKA,YACpBqQ,WAAY,KAAKA,WACjB12E,UAAW,KAAK83E,uBAkHtB,CAAA,IAAA,WAzGW7lC,MAAAA,SAAAA,GAAM,IAAA,EAAA,KACRkkC,KAAAA,MAAQlkC,EAAKkkC,MACbmB,KAAAA,cAEA,IAAI31E,IAAAA,EAAAA,SAAAA,GACDgyD,IAAAA,EAAQ1hB,EAAKyyB,OAAO/iE,GAMtBA,GALM,IAANA,GAAagyD,EAAM,KAAM1hB,EAAKo0B,YAEvB1kE,IAAM,EAAKqjE,aAAiBrR,EAAM,KAAM1hB,EAAKs0B,eACtD,EAAKA,aAAerrC,EAAO8nC,eAAerP,IAF1C,EAAK0S,YAAcnrC,EAAO8nC,eAAerP,GAIvChyD,EAAI,EAAG,CACHmb,IAAAA,EAAQhc,OAAO0B,KAAKmxD,GAC1B,EAAKwiB,MAAMx0E,GAAKmb,EAAMlb,OAEtBd,OAAO0B,KAAKsa,GAAOra,QAAQ,SAAAZ,GACnBkQ,IAAAA,EAAO+K,EAAMjb,GACnB,EAAK02D,OAAO52D,GAAGE,GAAK8xD,EAAM5hD,GAAMwoD,KAChC,EAAKjH,QAAQ3xD,GAAGE,GAAKq3C,EAAQya,EAAM5hD,GAAMuhD,aAdtC3xD,EAAI,EAAGA,GAAK,KAAKqjE,YAAarjE,IAA9BA,EAAAA,GAsBF,OAJHswC,EAAKxmC,eAAe,cACjBw5D,KAAAA,uBAAuBhzB,EAAKjyC,WAE9B42E,KAAAA,cAAc,KAAKF,YAAc,WAC/B,OA+EX,CAAA,IAAA,aAxEe,MAAA,WACHA,IAAAA,EAAe,KAAfA,WAsCW,IAEfpzE,EAFIohE,EAAW,KAAKljE,SAAhBkjE,OACFqT,EAAe,GAed,OAZPj3E,OAAO0B,KAAKkiE,EAAOA,EAAO9iE,OAAS,IAAIa,QAAQ,SAAA+mB,GAC7CuuD,EAAar0E,KA1CNs0E,SAAAA,EAAWtT,EAAQuT,EAAaC,GACnCD,GAAgB,IAAhBA,EACK,MAAmB,iBAAZC,EACAA,UAAAA,OAAAA,EACDA,MAAAA,SAAAA,OAAAA,EAFb,KAKIvkB,IACA5hD,EADQ2yD,EAAOuT,GACFC,GACb50E,EAAS,CAACyO,EAAKwoD,MAcbmc,OAZR51E,OAAO0B,KAAKuP,EAAKuhD,SAAS7wD,QAAQ,SAAAiwB,GAC5B3gB,EAAKuhD,QAAQ5gC,GAAK,EACpBpvB,EAAOI,KACFqO,GAAAA,OAAAA,EAAKuhD,QAAQ5gC,GAAOslD,MAAAA,OAAAA,EAAWtT,EAAQuT,EAAc,EAAGvlD,GAD7D,MAIApvB,EAAOI,KACDqO,IAAAA,OAAAA,EAAKuhD,QAAQ5gC,GAAOslD,MAAAA,OAAAA,EAAWtT,EAAQuT,EAAc,EAAGvlD,GAD9D,QAMIgkD,GACD,IAAA,UACuBpzE,MAAAA,mBAAAA,OAAAA,EAAOk0B,KAAK,IAAtC,MACG,IAAA,OACiBl0B,MAAAA,aAAAA,OAAAA,EAAOk0B,KAAK,IAAhC,yBACG,IAAA,aACiBl0B,MAAAA,aAAAA,OAAAA,EAAOk0B,KAAK,IAAhC,gCACG,IAAA,OACiBl0B,MAAAA,aAAAA,OAAAA,EAAOk0B,KAAK,IAAhC,MACF,QACQ,MAAA,IAAI3lB,MAAiC6kE,2BAAAA,OAAAA,KAS7BsB,CAAWtT,EAAQA,EAAO9iE,OAAS,EAAG4nB,MAIxDlmB,EADE,KAAKijE,aACMzlE,IAAAA,OAAAA,OAAO0B,KAAK,KAAK+jE,cAAcjuC,IAC1C,SAAC51B,EAAKf,GAAUe,MAAAA,IAAAA,OAAAA,EAAQq1E,MAAAA,OAAAA,EAAap2E,MADvC,KAIao2E,IAAAA,OAAAA,EAAavgD,KAAK,KAA/B,KAGK,IAAI4Y,SAAS,QAAmB9sC,UAAAA,OAAAA,MAiB3C,CAAA,IAAA,oBAToBvD,MAAAA,SAAAA,GAKT,OAJPA,EAAOA,GAAQ,IACVs1E,cAAgB,KAChBuB,KAAAA,gBACAuB,KAAAA,YAAc,IAAI/C,EAAYr1E,GAC5B,KAAKo4E,cAIhB,CAAA,IAAA,aAjyBmB,IAAA,WAAA,IAAA,EAAA,KACX,IAAC,KAAK7R,SAID,OAHPruC,QAAQl5B,MACN,uEAEK,EAGHq5E,IAAAA,EAAW,CACf,QACA,cACA,SACA,UACA,UACA,SACA,UACA,UACA7nC,OAAO,SAAA9mB,GAAK,OAAY,OAAZ,EAAKA,KAEf2uD,QAAAA,EAASx2E,OAAS,KACpBq2B,QAAQl5B,MACwFq5E,8FAAAA,OAAAA,EAAS5gD,KACrG,SAGG,OAwwBb,EAAA,GAAAx4B,OAAOC,QAAUs3E;;ACjejB,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAzeuB72E,IAAAA,EAAAA,QAAQ,UAAvBg8B,EAAAA,EAAAA,IAAK82B,EAAAA,EAAAA,MACP+jB,EAAgB72E,QAAQ,oBACxBw7B,EAASx7B,QAAQ,YAEvB,SAAS24E,EAAmB/kB,EAASiF,EAAQzB,GAEtC,IADDV,IAAAA,EAAMmC,EAAO,KAAKz8B,OAAOtJ,GACpBrwB,EAAI,EAAGA,EAAI,KAAK07B,UAAUz7B,KAAMD,IACvCi0D,GAAO9C,EAAQ,KAAKx3B,OAAOtJ,GAAGrwB,GAAK20D,EAAO30D,GAGrC,OAAA,GAAK,EAAIjD,KAAKI,KAAK82D,IAG5B,SAASkiB,EAAgBhlB,EAASiF,EAAQzB,GAEnC,IADDV,IAAAA,EAAMmC,EAAO,KAAKz8B,OAAOtJ,GACpBrwB,EAAI,EAAGA,EAAI,KAAK07B,UAAUz7B,KAAMD,IACvCi0D,GAAO9C,EAAQ,KAAKx3B,OAAOtJ,GAAGrwB,GAAK20D,EAAO30D,GAGrCi0D,OAAAA,EAAM,EAAI,EAAIA,EAGvB,SAASmiB,EAAqBjlB,EAASiF,EAAQzB,GAExC,IADDV,IAAAA,EAAMmC,EAAO,KAAKz8B,OAAOtJ,GACpBrwB,EAAI,EAAGA,EAAI,KAAK07B,UAAUz7B,KAAMD,IACvCi0D,GAAO9C,EAAQ,KAAKx3B,OAAOtJ,GAAGrwB,GAAK20D,EAAO30D,GAGrCi0D,OAAAA,EAAM,EAAI,EAAI,IAAOA,EAG9B,SAASoiB,EAAgBllB,EAASiF,EAAQzB,GAEnC,IADDV,IAAAA,EAAMmC,EAAO,KAAKz8B,OAAOtJ,GACpBrwB,EAAI,EAAGA,EAAI,KAAK07B,UAAUz7B,KAAMD,IACvCi0D,GAAO9C,EAAQ,KAAKx3B,OAAOtJ,GAAGrwB,GAAK20D,EAAO30D,GAGrCjD,OAAAA,KAAKK,KAAK62D,GAGnB,SAASqiB,EAAgBnlD,EAAQwtC,GACxBA,OAAAA,EAAQ,KAAKhlC,OAAOtJ,GAAKc,EAGlC,SAASolD,EAAkB35E,EAAOu0B,GAEzBv0B,OAAAA,EAAQu0B,GAAU,EAAIA,GAG/B,SAASqlD,EAAe55E,EAAOu0B,GAEtBA,OAAAA,EAAS,EAAIv0B,EAAQ,EAG9B,SAAS65E,EAAoB75E,EAAOu0B,GAE3BA,OAAAA,EAAS,EAAIv0B,EAAQ,IAAOA,EAGrC,SAAS85E,EAAe95E,EAAOu0B,GAEtB,OAAC,EAAIA,EAASA,GAAUv0B,EAGjC,SAAS+5E,EAAUC,EAAaC,GAEzB,IADDj6E,IAAAA,EAAQ,EACHoD,EAAI,EAAGA,EAAI,KAAK07B,UAAUz7B,KAAMD,IACvCpD,GAASi6E,EAAW72E,GAAK42E,EAAY52E,GAAG,KAAK25B,OAAOtJ,GAE/CzzB,OAAAA,EAGT,SAASk6E,EAAYC,EAAiB7lB,EAAQ8lB,GAE1C,OAAA,KAAKt7C,UAAUz8B,aACbiyD,EAAO,KAAKv3B,OAAOrJ,GACnB0mD,EAAgB,KAAKr9C,OAAOtJ,GAC9B,KAAKqL,UAAUw3B,SAAW6jB,EAAgB,KAAKp9C,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAIzE,SAAS4mD,EAAWhkB,EAAQ9B,GACnB8B,OAAAA,EAAS9B,EAAQ,KAAKx3B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,GAGrD,SAAS6mD,EAAU9gB,EAAQlF,GAEvBkF,OAAAA,EAAO,KAAKz8B,OAAOtJ,GAAK6gC,EAAO,KAAKv3B,OAAOtJ,GAAK,KAAKqL,UAAUz8B,aAKnE,SAASk1E,EAAI/Z,GAEN,IADDnG,IAAAA,EAAM,EACDz0D,EAAI,EAAGA,EAAI,KAAKk8B,UAAUz7B,KAAMT,IACvCy0D,GAAOmG,KAAAA,IAAAA,EAAO56D,GAAM,GAEfy0D,OAAAA,EAAM,KAAKv4B,UAAUz7B,KAQxBk3E,IAAAA,EAgYN,SAAA,GA/X4B,SAAA,IAAA,IAAA,EAAd/yE,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,OAAA,EAAA,KAAA,IAClBA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,KACDgzE,iBAAmB,GACnBC,EAAAA,kBAAoB,GACpBC,EAAAA,iBAAmB,GACnBC,EAAAA,gBAAkB,GAClBC,EAAAA,WAAa,GACbC,EAAAA,SAAW,GACXC,EAAAA,cAAgB,GAChBC,EAAAA,YAAc,GACdC,EAAAA,cAAgB,GAChBC,EAAAA,YAAc,GACdpU,EAAAA,mBAAqB,IACrBnqC,EAAAA,IAAM,IAAIC,EAAI,CAAEF,KAAMj1B,EAAQi1B,OAbX,EA+X5B,OAAA,EAAA,EAhY+B+6C,GAgY/B,EAAA,EAAA,CAAA,CAAA,IAAA,cA5WgB,MAAA,WACZ,EAAA,EAAA,EAAA,WAAA,cAAA,MAAA,KAAA,MACK0D,KAAAA,gBACAC,KAAAA,uBACAC,KAAAA,kBACAC,KAAAA,oBACAC,KAAAA,gBAsWT,CAAA,IAAA,gBAnWkB,MAAA,cAmWlB,CAAA,IAAA,gBAtVgBztE,MAAAA,SAAAA,EAAOgY,EAAQ2iD,GASvBA,OAPCjB,KAAAA,SAAS15D,GAGT6pE,KAAAA,gBAAgB7xD,GAChB01D,KAAAA,aACAC,KAAAA,eAEDhT,EACK,KAAKiT,OAAO,KAAKje,OAAO,KAAKyI,cAAc,GAE7C,OA0UX,CAAA,IAAA,gBAvUkB,MAAA,WACVyV,IAAAA,EAAc,KAEV,OAAA,KAAK/D,YACN,IAAA,UACH+D,EAAcpC,EACd,MACG,IAAA,OACHoC,EAAcnC,EACd,MACG,IAAA,aACHmC,EAAclC,EACd,MACG,IAAA,OACHkC,EAAcjC,EACd,MACF,QACQ,MAAA,IAAI3mE,MAA4B,sBAAA,OAAA,KAAK6kE,aAG1C,IAAA,IAAI/iB,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IACxC4lB,KAAAA,iBAAiB5lB,GAAS,KAAKl4B,IAAIG,aAAa6+C,EAAa,CAChEnnD,OAAQ,CAAC,KAAK6iD,MAAMxiB,IACpBn1B,UAAU,EACVX,UAAW,CACTz7B,KAAM,KAAK+zE,MAAMxiB,EAAQ,MAK1B+mB,KAAAA,oBAAsB,KAAKj/C,IAAIG,aAAa,SAASv8B,GACjDA,OAAAA,EAAM,KAAKy8B,OAAOtJ,IACxB,CACDc,OAAQ,CAAC,KAAK6iD,MAAM,IACpB33C,UAAU,EACVD,WAAW,MAoSjB,CAAA,IAAA,WA3RW3xB,MAAAA,SAAAA,GACH0mB,IAAAA,EACCkjD,KAAAA,QAAQ,GAAK5pE,EACb,IAAA,IAAI+mD,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IACxC6iB,KAAAA,QAAQ7iB,GAAS,KAAK4lB,iBAAiB5lB,GAC1C,KAAKL,QAAQK,GACb,KAAK4E,OAAO5E,GACZ/mD,GAGF0mB,EADA1mB,EAAQ,KAAK4pE,QAAQ7iB,GAGhBrgC,OAAAA,IA+QX,CAAA,IAAA,uBA5QyB,MAAA,WACjBqnD,IAAAA,EAAa,KAET,OAAA,KAAKjE,YACN,IAAA,UACHiE,EAAajC,EACb,MACG,IAAA,OACHiC,EAAahC,EACb,MACG,IAAA,aACHgC,EAAa/B,EACb,MACG,IAAA,OACH+B,EAAa9B,EACb,MACF,QACQ,MAAA,IAAIhnE,MAA4B,sBAAA,OAAA,KAAK6kE,aAG1C,IAAA,IAAI/iB,EAAQ,KAAKqR,YAAarR,EAAQ,EAAGA,IACxCA,IAAU,KAAKqR,YACZwU,KAAAA,kBAAkB7lB,GAAS,KAAKl4B,IAAIq3B,gBACvC,CACE/zD,MAAOyzD,EAAM,kBAAmBimB,GAChCplB,OAAQb,EAAM,aAAcmoB,IAE9B,SAAUnE,EAAS1V,GACXxtC,IAAAA,EAASkjD,EAAQ,KAAK16C,OAAOtJ,GAC5BmoD,OAAAA,EAAWlC,EAAgBnlD,EAAQwtC,GAAUxtC,IAEtD,CACEA,OAAQ,CAAC,KAAK6iD,MAAMxiB,IACpBn1B,UAAU,IAITg7C,KAAAA,kBAAkB7lB,GAAS,KAAKl4B,IAAIq3B,gBACvC,CACE/zD,MAAOyzD,EAAM,YAAasmB,GAC1BzlB,OAAQb,EAAM,aAAcmoB,IAE9B,SAAU5B,EAAavC,EAASwC,GACxB1lD,IAAAA,EAASkjD,EAAQ,KAAK16C,OAAOtJ,GAC5BmoD,OAAAA,EAAW7B,EAAUC,EAAaC,GAAa1lD,IAExD,CACEA,OAAQ,CAAC,KAAK6iD,MAAMxiB,IACpBn1B,UAAU,EACVX,UAAW,CACTz7B,KAAM,KAAKixD,OAAOM,EAAQ,GAAG/xD,YA0N3C,CAAA,IAAA,kBAlNkBgjB,MAAAA,SAAAA,GACT,IAAA,IAAI+uC,EAAQ,KAAKqR,YAAarR,EAAQ,EAAGA,IAAS,CACjDrgC,IAAAA,OAAJ,EAGEA,EADEqgC,IAAU,KAAKqR,YACR,KAAKwU,kBAAkB7lB,GAAO,KAAK6iB,QAAQ7iB,GAAQ/uC,GAEnD,KAAK40D,kBAAkB7lB,GAC9B,KAAKL,QAAQK,EAAQ,GACrB,KAAK6iB,QAAQ7iB,GACb,KAAKN,OAAOM,EAAQ,IAInBN,KAAAA,OAAOM,GAASrgC,EAAO+/B,OACvBkJ,KAAAA,OAAO5I,GAASrgC,EAAOv0B,SAmMlC,CAAA,IAAA,kBA/LoB,MAAA,WACX,IAAA,IAAI40D,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IACxC8lB,KAAAA,iBAAiB9lB,GAAS,KAAKl4B,IAAIq3B,gBACtC,CACEQ,QAASd,EAAM,aAAc4mB,GAC7BtkB,QAAStC,EAAM,cAAeymB,IAEhC,SAAUE,EAAiB9lB,EAAQC,EAASwB,GAGnCskB,OAAAA,EAFQH,EAAYnkB,EAASzB,EAAQ8lB,GAElB7lB,IAE5B,CACEhgC,OAAQ,CAAC,KAAK6iD,MAAMxiB,EAAQ,GAAI,KAAKwiB,MAAMxiB,IAC3Cn1B,UAAU,EACVX,UAAW,CACTz7B,KAAM,KAAKo0E,QAAQ7iB,EAAQ,GAAG/xD,OAC9BR,aAAc,KAAKpB,UAAUoB,aAC7Bi0D,SAAU,KAAKr1D,UAAUq1D,YAK1BykB,KAAAA,YAAYnmB,GAAS,KAAKl4B,IAAIG,aACjC,SAASv8B,GAAgBA,OAAAA,EAAM,KAAKy8B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAC1D,CACEc,OAAQ,KAAKmmD,iBAAiB9lB,GAAOrgC,OACrCkL,UAAU,IAITw7C,KAAAA,YAAYrmB,GAAS,KAAKl4B,IAAIG,aACjC,SAAUv8B,GAAgBA,OAAAA,EAAM,KAAKy8B,OAAOrJ,GAAG,KAAKqJ,OAAOtJ,IAC3D,CACEc,OAAQ,KAAKmmD,iBAAiB9lB,GAAOrgC,OACrCkL,UAAU,MA4JpB,CAAA,IAAA,aAtJe,MAAA,WACN,IAAA,IAAIm1B,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IAAS,CAChDrgC,IAAAA,EAAS,KAAKmmD,iBAAiB9lB,GACnC,KAAK6iB,QAAQ7iB,EAAQ,GACrB,KAAKN,OAAOM,GACZ,KAAKomB,cAAcpmB,IAAU,KAAKL,QAAQK,GAC1C,KAAKkmB,cAAclmB,IAAU,KAAKmB,QAAQnB,IAEvCmB,KAAAA,QAAQnB,GAASrgC,EAAOwhC,QACxBxB,KAAAA,QAAQK,GAASrgC,EAAOggC,QAExBumB,KAAAA,cAAclmB,GAAS,KAAKmmB,YAAYnmB,GAAOrgC,EAAOwhC,SACtDilB,KAAAA,cAAcpmB,GAAS,KAAKqmB,YAAYrmB,GAAOrgC,EAAOggC,YA0IjE,CAAA,IAAA,oBAtIsB,MAAA,WACb,IAAA,IAAIK,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IACxC+lB,KAAAA,gBAAgB/lB,GAAS,KAAKl4B,IAAIG,aAAay9C,EAAW,CAC7D/lD,OAAQ,CAAC,KAAK6iD,MAAMxiB,IACpBn1B,UAAU,EACVX,UAAW,CACTz8B,aAAc,KAAKpB,UAAUoB,gBAG5Bw4E,KAAAA,SAASjmB,GAAS,KAAKl4B,IAAIG,aAC9B,SAASv8B,GAAgBA,OAAAA,EAAM,KAAKy8B,OAAOtJ,IAC3C,CACEc,OAAQ,KAAKomD,gBAAgB/lB,GAAOrgC,OACpCkL,UAAU,MAyHpB,CAAA,IAAA,eAnHiB,MAAA,WACR,IAAA,IAAIm1B,EAAQ,EAAGA,GAAS,KAAKqR,YAAarR,IACxC4E,KAAAA,OAAO5E,GAAS,KAAK+lB,gBAAgB/lB,GACxC,KAAKgmB,WAAWhmB,IAAU,KAAK4E,OAAO5E,GACtC,KAAKN,OAAOM,IAETgmB,KAAAA,WAAWhmB,GAAS,KAAKimB,SAASjmB,GAAO,KAAK4E,OAAO5E,MA6GhE,CAAA,IAAA,cAzGgB,MAAA,WACP6mB,KAAAA,OAAS,KAAK/+C,IAAIG,aAAa06C,EAAK,CACvChjD,OAAQ,CAAC,GACTuK,UAAW,CACTz7B,KAAM,KAAK+zE,MAAM,KAAKnR,kBAqG9B,CAAA,IAAA,MA3FMp4D,MAAAA,SAAAA,GACE,IAAC,KAAKyqE,WAAY,OAAO,KACzB,KAAKhR,cACPz5D,EAAQsuB,EAAOge,QAAQ,KAAKmtB,YAAaz5D,IAErCy0C,IAAAA,EAAe,KAAKq5B,oBAAoB9tE,GACxCguE,EAAiB,KAAKtU,SAASjlB,GACjC/tB,EAASsnD,EAAe1hC,QAAU0hC,EAAe1hC,UAAY0hC,EAK1DtnD,OAHH,KAAKizC,eACPjzC,EAAS4H,EAAOsrC,OAAO,KAAKD,aAAcjzC,IAErCA,IA+EX,CAAA,IAAA,uBAtEuBpxB,MAAAA,SAAAA,GAAM,IAAA,EAAA,KACrB,KAAKi0E,QAEJA,KAAAA,MAAQ,GACRj0E,EAAK,GAAGE,OACXF,EAAK,GAAGE,KAAO,CACbwK,MAAO1K,EAAK,GAAG0K,MAAMhL,OACrB0xB,OAAQpxB,EAAK,GAAGoxB,OAAO1xB,SAItBu0E,KAAAA,MAAMzyE,KAAKxB,EAAK,GAAGE,KAAKwK,OACxB,KAAKtL,YAGHA,KAAAA,YAAYmB,QAAQ,SAAAL,GACvB,EAAK+zE,MAAMzyE,KAAKtB,KAHb+zE,KAAAA,MAAMzyE,KAAKxE,KAAKC,IAAI,EAAGD,KAAK4C,MAAMI,EAAK,GAAGE,KAAKwK,MAAQ,KAMzDupE,KAAAA,MAAMzyE,KAAKxB,EAAK,GAAGE,KAAKkxB,QAExBgkD,KAAAA,iBAiDT,CAAA,IAAA,gBAvCgBp1E,MAAAA,SAAAA,EAAMqE,GAAS,IAAA,EAAA,KACtB0+D,KAAAA,uBAAuB1+D,GAC5BrE,EAAO,KAAK8kE,YAAY9kE,GAClBwkE,IAAAA,EAAUrmE,KAAKC,MAAQ,KAAKN,UAAU2lE,QAOvC4R,KAAAA,qBAAqBr1E,GAEpB24E,IAAAA,EAAsB,KAAKp/C,IAAIG,aACnC,SAASv8B,GAAgBA,OAAAA,EAAM,KAAKy8B,OAAOtJ,IAC3C,CACEc,OAAQ,CAACpxB,EAAK,GAAGoxB,OAAO1xB,QACxB48B,UAAU,EACVD,WAAW,IAIR,MAAA,CACLr8B,KAAMA,EAAKo2B,IAAI,SAAAtzB,GAAQ,MAAA,CACrB5C,KAAM4C,EAAI5C,KACVwK,MAAO,EAAK8tE,oBAAoB11E,EAAI4H,OACpC0mB,OAAQunD,EAAoB71E,EAAIsuB,WAElCmzC,OAtBa,CACb1nE,MAAO,EACPmC,WAAY,GAqBZwlE,QAAAA,KAWN,CAAA,IAAA,aAPe,MAAA,WACL,MAAA,IAAI70D,MACL,GAAA,OAAA,KAAKxP,YAAY8D,KADtB,2CAMJ,EAAA,GAAAnH,OAAOC,QAAUq6E;;ACxajB,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAjEqB55E,IAAAA,EAAAA,QAAQ,WAArBw0D,EAAAA,EAAAA,SACFhB,EAAUxzD,QAAQ,yBAElBo7E,EA8DN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EA9DkC5mB,GA8DlC,EAAA,EAAA,CAAA,CAAA,IAAA,WA7DWP,MAAAA,SAAAA,GACFA,KAAAA,MAAQA,IA4DjB,CAAA,IAAA,UAzBY,MAAA,cAyBZ,CAAA,IAAA,UArBY,MAAA,cAqBZ,CAAA,IAAA,QAjBU,MAAA,WACDA,KAAAA,MAAMN,OAASH,EAAQ,KAAKx6B,MAAO,KAAKC,UAgBjD,CAAA,IAAA,eAbiB,MAAA,cAajB,CAAA,IAAA,eAPiB,MAAA,cAOjB,CAAA,IAAA,QAzDc,IAAA,WACH,OAAA,KAAKg7B,MAAMj7B,OAGVr5B,IAAAA,SAAAA,GACF,MAAA,IAAIwS,MAAS,GAAA,OAAA,KAAKxP,YAAY8D,KAApC,oCAoDJ,CAAA,IAAA,SAjDe,IAAA,WACJ,OAAA,KAAKwtD,MAAMh7B,QAGTt5B,IAAAA,SAAAA,GACH,MAAA,IAAIwS,MAAS,GAAA,OAAA,KAAKxP,YAAY8D,KAApC,qCA4CJ,CAAA,IAAA,SAzCe,IAAA,WACJ,OAAA,KAAKwtD,MAAMN,QAGTA,IAAAA,SAAAA,GACJM,KAAAA,MAAMN,OAASA,IAoCxB,CAAA,IAAA,UAjCgB,IAAA,WACL,OAAA,KAAKM,MAAML,SAGRA,IAAAA,SAAAA,GACLK,KAAAA,MAAML,QAAUA,MA4BzB,EAAA,GAAAt0D,OAAOC,QAAU,CACf67E,oBAAAA;;ACSF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA1EqBp7E,IAAAA,EAAAA,QAAQ,WAArBw0D,EAAAA,EAAAA,SACSx0D,EAAAA,QAAQ,UAAjB0zD,EAAAA,EAAAA,KAEF2nB,EAuEN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAvE6B7mB,GAuE7B,EAAA,EAAA,CAAA,CAAA,IAAA,oBAtEoByI,MAAAA,SAAAA,GACXA,KAAAA,eAAiBA,EACjBr+B,KAAAA,aAoET,CAAA,IAAA,WAjDa,MAAA,WAEL,GADJ80B,EAAK5nD,UAAU8yB,SAASxyB,KAAK,MACzB,KAAK4sB,QAAU,KAAKikC,eAAejkC,MAC/B,MAAA,IAAI7mB,MACL,GAAA,OAAA,KAAKxP,YAAY8D,KAAoB,iBAAA,OAAA,KAAKuyB,MAC3C,SAAA,OAAA,KAAKikC,eAAet6D,YAAY8D,KACvB,YAAA,OAAA,KAAKw2D,eAAejkC,MAHjC,mBAOE,GAAA,KAAKC,SAAW,KAAKgkC,eAAehkC,OAChC,MAAA,IAAI9mB,MACL,GAAA,OAAA,KAAKxP,YAAY8D,KAAqB,kBAAA,OAAA,KAAKwyB,OAC5C,SAAA,OAAA,KAAKgkC,eAAet6D,YAAY8D,KACvB,YAAA,OAAA,KAAKw2D,eAAehkC,OAHjC,qBAsCN,CAAA,IAAA,gBA9BgBD,MAAAA,SAAAA,EAAOC,GACdD,KAAAA,MAAQA,EACRC,KAAAA,OAASA,IA4BlB,CAAA,IAAA,UAzBY,MAAA,cAyBZ,CAAA,IAAA,UArBY,MAAA,cAqBZ,CAAA,IAAA,QAjBU,MAAA,cAiBV,CAAA,IAAA,eAbiB,MAAA,cAajB,CAAA,IAAA,eAPiB,MAAA,cAOjB,CAAA,IAAA,SAjEe,IAAA,WACJ,OAAA,KAAKgkC,eAAetJ,QAGlBA,IAAAA,SAAAA,GACJsJ,KAAAA,eAAetJ,OAASA,IA4DjC,CAAA,IAAA,UAzDgB,IAAA,WACL,OAAA,KAAKsJ,eAAerJ,SAGjBA,IAAAA,SAAAA,GACLqJ,KAAAA,eAAerJ,QAAUA,MAoDlC,EAAA,GAAAt0D,OAAOC,QAAU,CACf87E,eAAAA;;AC9BF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA9CA,IAAM7nB,EAAUxzD,QAAQ,yBACHA,EAAAA,QAAQ,WAArBw0D,EAAAA,EAAAA,SAEF8mB,EA2CN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EA3C6B9mB,GA2C7B,EAAA,EAAA,CAAA,CAAA,IAAA,gBA1CgBx7B,MAAAA,SAAAA,EAAOC,GACd46B,KAAAA,OAAS,KACT76B,KAAAA,MAAQA,EACRC,KAAAA,OAASA,EACT26B,KAAAA,QAAUJ,EAAQx6B,EAAOC,GACzB06B,KAAAA,OAASH,EAAQx6B,EAAOC,KAqCjC,CAAA,IAAA,eAlCiB,MAAA,cAkCjB,CAAA,IAAA,eA5BiB,MAAA,cA4BjB,CAAA,IAAA,UAtBY,MAAA,cAsBZ,CAAA,IAAA,UAlBY,MAAA,cAkBZ,CAAA,IAAA,QAdQm7B,MAAAA,SAAAA,EAAeC,EAAW3yD,GACzBkyD,KAAAA,QAAU,KAAKC,OAAOvuB,IAAI,KAAM8uB,EAAeC,EAAW3yD,GAC1DiyD,KAAAA,OAASH,EAAQ,KAAKx6B,MAAO,KAAKC,UAY3C,CAAA,IAAA,WATa,MAAA,WACH,MAAA,IAAI9mB,MAAS,GAAA,OAAA,KAAKxP,YAAY8D,KAApC,uCAQJ,CAAA,IAAA,QALU,MAAA,WACA,MAAA,IAAI0L,MAAS,GAAA,OAAA,KAAKxP,YAAY8D,KAApC,sCAIJ,EAAA,GAAAnH,OAAOC,QAAU,CACf+7E,eAAAA;;ACmQF,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,EAAA,oBAAA,SAAA,QAAA,IAAA,QAAA,IAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,IAAA,EAAA,OAAA,yBAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,KAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,GAAA,SAAA,EAAA,EAAA,GAAA,MAAA,OAAA,UAAA,eAAA,KAAA,EAAA,IAAA,QAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GAlTgCt7E,IAAAA,EAAAA,QAAQ,gCAAhCo7E,EAAAA,EAAAA,oBACmBp7E,EAAAA,QAAQ,2BAA3Bq7E,EAAAA,EAAAA,eACmBr7E,EAAAA,QAAQ,2BAA3Bs7E,EAAAA,EAAAA,eACFnW,EAAgBnlE,QAAQ,8BACxBilE,EAAQjlE,QAAQ,sBACEA,EAAAA,QAAQ,kBAAxBolE,EAAAA,EAAAA,YAGFmW,EA0SN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EA1SwBnW,GA0SxB,EAAA,EAAA,CAAA,CAAA,IAAA,iBA3QmB,MAAA,WACToW,IAAAA,EAAgB,GAChBjkB,EAAa,KAAKA,aAClB8N,EAAe,KAAKkB,qBAAqBhP,GAC1CkkB,KAAAA,kBAAkBC,SAASrW,EAAaA,EAAanjE,OAAS,IAC7DojE,IAAAA,EAAc,KAAKA,YACvB,KAAKmW,kBACLpW,EAAanjE,QAEfs5E,EAAcx3E,KAAKuzD,GACnBikB,EAAcx3E,KAAdw3E,MAAAA,EAAsBnW,EAAAA,IACtBmW,EAAcx3E,KAAKshE,GACbqW,IAAAA,EAAkBxW,EAAcqW,GACjCI,KAAAA,aAAeD,EAAgBj4E,MAClC,EACAi4E,EAAgBl3D,QAAQ8yC,GAAc,GAEnCskB,KAAAA,cAAgB,CACnBF,EAAgBj4E,MACdi4E,EAAgBl3D,QAAQ8yC,GAAc,EACtCokB,EAAgBl3D,QAAQ4gD,EAAaA,EAAanjE,OAAS,IAAM,IAGhE45E,KAAAA,cAAgBH,EAAgBj4E,MACnCi4E,EAAgBl3D,QAAQ4gD,EAAaA,EAAanjE,OAAS,IAAM,GAE9D45E,KAAAA,cAAcpzC,UACdqzC,KAAAA,kBAAoB,GACpBC,KAAAA,OAAS,GACT,IAAA,IAAI/5E,EAAI,EAAGA,EAAI,KAAK45E,cAAc,GAAG35E,OAAQD,IAG9C,UADAb,OAAO82B,eAAe,KAAK2jD,cAAc,GAAG55E,GAAGU,aAAa8D,OAGvDu1E,KAAAA,OAAOh4E,KAAK,KAAK63E,cAAc,GAAG55E,IAClC45E,KAAAA,cAAc,GAAGl4E,OAAO1B,EAAG,IAG/B,IAAA,IAAIA,EAAI,EAAGA,EAAIojE,EAAanjE,OAAQD,IAClC85E,KAAAA,kBAAkB/3E,KACrB,KAAK63E,cAAc,GAAGp3D,QAAQ4gD,EAAapjE,OAmOnD,CAAA,IAAA,uBA9NuBmyD,MAAAA,SAAAA,GAEd,IADCiR,IAAAA,EAAe,GACZpjE,EAAI,EAAGA,EAAI,KAAKojE,aAAanjE,OAAQD,IAAK,CAC3Cg7D,IAAAA,EAAiB,IAAIqe,EACrB9U,EAAc,KAAKnB,aAAapjE,GAAGmyD,EAAe6I,EAAgBh7D,GACxEmyD,EAAgBoS,EAChBnB,EAAarhE,KAAKwiE,GAEbnB,OAAAA,IAsNX,CAAA,IAAA,2BAnN6B,MAAA,WAOpB,IANCA,IAAAA,EAAe,GACf4W,EAAuB,KAAKJ,cAChC,KAAKA,cAAc35E,OAAS,GAExBg6E,EAAa,KAAKL,cAAc,GAClCM,EAAiB,EACZl6E,EAAI,EAAGA,EAAIg6E,EAAqB/5E,OAAQD,IAAK,CAC9Cm6E,IAAAA,EAAsBH,EAAqBh6E,GAC7CgyD,EAAQ,KACJ7yD,OAAAA,OAAO82B,eAAegkD,EAAWj6E,GAAGU,aAAa8D,MAClD,IAAA,aACG8wD,IAAAA,EACJ8N,EACE4W,EAAqBx3D,QAAQ23D,EAAoB7kB,cAC9C6kB,EAAoB7kB,WAC3BtD,EAAQ,IAAImoB,EAAoBz5E,YAAY40D,GAC5C,MAEG,IAAA,SACG9jC,IAAAA,EAAW2oD,EACX7kB,EACJ8N,EACE4W,EAAqBx3D,QAAQ23D,EAAoB7kB,cAC9C6kB,EAAoB7kB,WAC3BtD,EAAQ,IAAImoB,EAAoBz5E,YAAY8wB,EAAU8jC,GACtD,MAEG,IAAA,WACK6kB,OAAAA,EAAoBz5E,YAAY8D,MACjC,IAAA,sBACH,MACG,IAAA,iBACA,IAAA,iBACL,SACEwtD,EAAQ,IAAIonB,GACNra,cACJob,EAAoBpjD,MACpBojD,EAAoBnjD,QAEtBg7B,EAAMooB,kBACJJ,EAAqB,KAAKF,kBAAkBI,KAE9CA,IAGJ,MAEG,IAAA,QACHloB,EAAQmoB,EACR,MAEG,IAAA,WACG7kB,IAAAA,EACJ8N,EACE4W,EAAqBx3D,QAAQ23D,EAAoB7kB,cAC9C6kB,EAAoB7kB,WAC3BtD,EAAQ,IAAImoB,EAAoBz5E,YAAY40D,GAC5C,MAEG,IAAA,WACGtC,IAAAA,EACJoQ,EACE4W,EAAqBx3D,QAAQ23D,EAAoBnnB,eAC9CmnB,EAAoBnnB,YACrBC,EACJmQ,EACE4W,EAAqBx3D,QAAQ23D,EAAoBlnB,eAC9CknB,EAAoBlnB,YAC3BjB,EAAQ,IAAImoB,EAAoBz5E,YAAYsyD,EAAaC,GACzD,MAEF,QACQ,MAAA,IAAI/iD,MAENiqE,gBAAAA,OAAAA,EAAoBz5E,YAAY8D,KAEhCrF,kCAAAA,OAAAA,OAAO82B,eAAekkD,EAAoBz5E,aAAa8D,OAK/D4+D,EAAapjE,GAAKgyD,EAGboR,OADFwW,KAAAA,cAAc73E,KAAKqhE,GACjBA,IA8HX,CAAA,IAAA,aA3He,MAAA,WACNiX,KAAAA,gBAAkB,GAClBb,KAAAA,kBAAoB,IAAIL,EACxB3U,KAAAA,iBACAC,KAAAA,iBAAiB,KAAKsV,QACtBtV,KAAAA,iBAAiB,KAAKkV,cACtBlV,KAAAA,iBAAiB,KAAKmV,cAAc,IACpCnV,KAAAA,iBAAiB,KAAKoV,iBAoH/B,CAAA,IAAA,iBAjHmB,MAAA,WAEV,IADCzW,IAAAA,EAAe,KAAKkX,2BACjBt6E,EAAI,EAAGA,EAAIojE,EAAanjE,OAAQD,IAAK,CACxBojE,EAAapjE,GACrBu6E,aAAa,KAAKX,cAAc,GAAG55E,OA6GrD,CAAA,IAAA,WAzGWiL,MAAAA,SAAAA,GAEF,IADCzN,IAAAA,EAAMyN,EAAMhL,OAAS,EAClB4wB,EAAI,EAAGA,EAAIrzB,EAAKqzB,IAAK,CACtBuyC,IAAAA,EAAe,KAAKwW,cAAc/oD,GAClC2pD,EAAmBpX,EAAaA,EAAanjE,OAAS,GACvDu5E,KAAAA,kBAAkBC,SAASe,GAE3Bb,KAAAA,aAAa,GAAG/mB,QAAQ,CAAC3nD,EAAM4lB,KAC/BwpD,KAAAA,gBAAgBt4E,KAAK,KAAK43E,aAAa,GAAGhoB,SAC1C,IAAA,IAAI3xD,EAAI,EAAGA,EAAI,KAAK25E,aAAa15E,OAAQD,IACvC25E,KAAAA,aAAa35E,GAAG4yD,UAElB,IAAA,IAAI5yD,EAAI,EAAGA,EAAI,KAAK45E,cAAc/oD,GAAG5wB,OAAQD,IAC3C45E,KAAAA,cAAc/oD,GAAG7wB,GAAG4yD,UAEtB,IAAA,IAAI5yD,EAAI,EAAGA,EAAI,KAAK65E,cAAc55E,OAAQD,IACxC65E,KAAAA,cAAc75E,GAAG4yD,UAGnB,OAAA,KAAKinB,cAAc,KAAKA,cAAc55E,OAAS,GAAG0xD,UAsF7D,CAAA,IAAA,gBAnFgBpxD,MAAAA,SAAAA,EAAMqE,GACZ1F,IAAAA,EAA4BqB,EAAAA,EAAAA,EAAAA,WAAAA,gBAAAA,MAAAA,KAAAA,KAAAA,EAAMqE,GAEjC1F,OADFu7E,KAAAA,iBACEv7E,IAgFX,CAAA,IAAA,mBA7EmB+jB,MAAAA,SAAAA,EAAQxY,GAClB,IAAA,IAAIomB,EAAI5N,EAAOhjB,OAAS,EAAG4wB,GAAK,EAAGA,IAAK,CACrC6pD,IAAAA,EAAoBjwE,EAASomB,EAC7BuyC,EAAe,KAAKwW,cAAcc,GAClCF,EAAmBpX,EAAaA,EAAanjE,OAAS,GACvDu5E,KAAAA,kBAAkBC,SAASe,GAC5B,KAAKH,gBAAgBp6E,OAAS,IAC3B05E,KAAAA,aAAa,GAAGhoB,QAAU,KAAK0oB,gBAAgBhlE,OAGjDwkE,KAAAA,cAAc,KAAKA,cAAc55E,OAAS,GAAGm1D,QAAQ,CAACnyC,EAAO4N,KAC7D,IAAA,IAAI7wB,EAAI,KAAK65E,cAAc55E,OAAS,EAAGD,GAAK,EAAGA,IAC7C65E,KAAAA,cAAc75E,GAAGo1D,UAEnB,IAAA,IAAIp1D,EAAIojE,EAAanjE,OAAS,EAAGD,GAAK,EAAGA,IAC5CojE,EAAapjE,GAAGo1D,UAEb,IAAA,IAAIp1D,EAAI,KAAK25E,aAAa15E,OAAS,EAAGD,GAAK,EAAGA,IAC5C25E,KAAAA,aAAa35E,GAAGo1D,aA2D7B,CAAA,IAAA,iBAtDmB,MAAA,WAEb,IAAA,IAAIslB,EAAoB,EACxBA,EAAoB,KAAKd,cAAc35E,OACvCy6E,IACA,CACMtX,IAAAA,EAAe,KAAKwW,cAAcc,GAClCF,EAAmBpX,EAAaA,EAAanjE,OAAS,GACvDu5E,KAAAA,kBAAkBC,SAASe,GAC3B,IAAA,IAAIx6E,EAAI,EAAGA,EAAI,KAAK25E,aAAa15E,OAAQD,IACvC25E,KAAAA,aAAa35E,GAAGk/D,QAGlB,IAAA,IAAIl/D,EAAI,EAAGA,EAAIojE,EAAanjE,OAAQD,IACvCojE,EAAapjE,GAAGk/D,QAGb,IAAA,IAAIl/D,EAAI,EAAGA,EAAI,KAAK65E,cAAc55E,OAAQD,IACxC65E,KAAAA,cAAc75E,GAAGk/D,QAGnB,IAAA,IAAIl/D,EAAI,EAAGA,EAAI,KAAK+5E,OAAO95E,OAAQD,IACjC+5E,KAAAA,OAAO/5E,GAAGk/D,WAgCvB,CAAA,IAAA,gBArBgBj0D,MAAAA,SAAAA,EAAOgY,EAAQ2iD,GASvBA,GAPCjB,KAAAA,SAAS15D,GAGT46D,KAAAA,iBAAiB5iD,EAAQhY,EAAMhL,OAAS,GACxC4lE,KAAAA,iBAAiB56D,EAAMxJ,MAAM,GAAI,GACjCqkE,KAAAA,iBAEDF,EAAc,CACVvC,IAAAA,EAAc,KAAKwW,cAAc,KAAKA,cAAc55E,OAAS,GAC5D+iE,OAAAA,EACLK,EAAYzI,OAAO9wD,eAAe,WAC9Bu5D,EAAYzI,OAAOrjB,UACnB8rB,EAAYzI,QAGb,OAAA,QAIX,CAAA,CAAA,IAAA,YAzSyB,IAAA,WACd,MAAA,CAOL+e,aAAc,KAOdC,cAAe,KAOfC,cAAe,KACfL,kBAAmB,KACnBa,gBAAiB,KACjBN,OAAQ,KACRD,kBAAmB,UA+QzB,EAAA,GAAAz8E,OAAOC,QAAU,CACfg8E,UAAAA;;ACjKF,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlJA,IAAMhoB,EAAQvzD,QAAQ,yBAQhB48E,EA0IN,WAzIc9e,SAAAA,EAAAA,EAAMC,GAAS,EAAA,KAAA,QACZza,IAATwa,QACYxa,IAAZya,IAECD,KAAAA,KAAOA,EACPC,KAAAA,QAAUA,EACVnK,KAAAA,QAAUL,EAAMuK,EAAOC,GACvBpK,KAAAA,OAASJ,EAAMuK,EAAOC,IAkI/B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAzHatsB,MAAAA,SAAAA,EAAKjlC,GAGRqwE,IAAAA,EAAK,KAAK9e,QAAUtsB,EAAMjlC,EAC5BqwE,GAAAA,EAAK,GAAKA,GAAM,KAAKjpB,QAAQ1xD,OAC/B,MAAM,IAAIiQ,MAAM,0BACX,OAAA,KAAKyhD,QAAQipB,KAmHxB,CAAA,IAAA,YAzGYprC,MAAAA,SAAAA,EAAKjlC,EAAKqD,GAEZgtE,IAAAA,EAAK,KAAK9e,QAAUtsB,EAAMjlC,EAC5BqwE,GAAAA,EAAK,GAAKA,GAAM,KAAKjpB,QAAQ1xD,OAC/B,MAAM,IAAIiQ,MAAM,0BACbyhD,KAAAA,QAAQipB,GAAMhtE,IAoGvB,CAAA,IAAA,YA1FY4hC,MAAAA,SAAAA,EAAKjlC,EAAKqD,GAEZgtE,IAAAA,EAAK,KAAK9e,QAAUtsB,EAAMjlC,EAC5BqwE,GAAAA,EAAK,GAAKA,GAAM,KAAKjpB,QAAQ1xD,OAC/B,MAAM,IAAIiQ,MAAM,0BACbwhD,KAAAA,OAAOkpB,GAAMhtE,IAqFtB,CAAA,IAAA,SA9EW,MAAA,WACA,MAAA,CACLiuD,KAAM,KAAKA,KACXC,QAAS,KAAKA,QACdnK,QAAS,KAAKA,QAAQlwD,MAAM,MA0ElC,CAAA,IAAA,iBArCmB,MAAA,WAIV,IAHCiwD,IAAAA,EAAS,GACXliB,EAAM,EACNhlC,EAAS,EACJxK,EAAI,EAAGA,EAAI,KAAK2xD,QAAQ1xD,OAAQD,IACxB,IAAXwK,GACFknD,EAAO3vD,KAAK,IAEd2vD,EAAOliB,GAAKztC,KAAK,KAAK4vD,QAAQ3xD,MAC9BwK,GACc,KAAKsxD,UACjBtxD,EAAS,EACTglC,KAGGkiB,OAAAA,IAsBX,CAAA,IAAA,gBAnBkB,MAAA,WAIT,IAHCA,IAAAA,EAAS,GACXliB,EAAM,EACNhlC,EAAS,EACJxK,EAAI,EAAGA,EAAI,KAAK0xD,OAAOzxD,OAAQD,IACvB,IAAXwK,GACFknD,EAAO3vD,KAAK,IAEd2vD,EAAOliB,GAAKztC,KAAK,KAAK2vD,OAAO1xD,MAC7BwK,GACc,KAAKsxD,UACjBtxD,EAAS,EACTglC,KAGGkiB,OAAAA,KAIX,CAAA,CAAA,IAAA,WAtEkBphB,MAAAA,SAAAA,GAET,IADCuqC,IAAAA,EAAS,IAAIF,EAAOrqC,EAAKurB,KAAMvrB,EAAKwrB,SACjC97D,EAAI,EAAGxC,EAAM8yC,EAAKurB,KAAOvrB,EAAKwrB,QAAS97D,EAAIxC,EAAKwC,IACvD66E,EAAOlpB,QAAQ3xD,GAAKswC,EAAKqhB,QAAQ3xD,GAE5B66E,OAAAA,IAiEX,CAAA,IAAA,YAxDmBC,MAAAA,SAAAA,EAAYC,GACrBlf,IAAAA,EAAOif,EAAW76E,OAClB67D,EAAUgf,EAAW,GAAG76E,OACxBgpE,EAAI,IAAI0R,EAAO9e,EAAMC,GAE3Bif,EAAaA,GAAcD,EAEtB,IAAA,IAAIE,EAAW,EAAGA,EAAWnf,EAAMmf,IAGjC,IAFCC,IAAAA,EAAeH,EAAWE,GAC1BE,EAAeH,EAAWC,GACvBG,EAAc,EAAGA,EAAcrf,EAASqf,IAC/ClS,EAAEmS,UAAUJ,EAAUG,EAAaF,EAAaE,IAChDlS,EAAEoS,UAAUL,EAAUG,EAAaD,EAAaC,IAI7ClS,OAAAA,MAwCX,EAAA,GAAA5rE,OAAOC,QAAUq9E;;AClJjB,SAASW,EAAY/oD,EAAGF,GACf90B,OAAAA,KAAK6C,UAAYiyB,EAAIE,GAAKA,EAInC,SAASgpD,IACHA,GAAAA,EAAYC,QAEPD,OADPA,EAAYC,SAAU,EACfD,EAAYE,KAEfC,IAAAA,EAAI,EAAIn+E,KAAK6C,SAAW,EACxBwN,EAAI,EAAIrQ,KAAK6C,SAAW,EACxBg6B,EAAIshD,EAAIA,EAAI9tE,EAAIA,EAClBwsB,GAAM,IAANA,GAAWA,EAAI,EACVmhD,OAAAA,IAEHzzD,IAAAA,EAAIvqB,KAAK82B,MAAO,EAAI92B,KAAKixC,IAAIpU,GAAMA,GAGlCshD,OAFPH,EAAYE,KAAO7tE,EAAIka,EACvByzD,EAAYC,SAAU,EACfE,EAAI5zD,EAGb,SAAS6zD,EAAcppD,EAAGF,GACjB90B,OAAAA,KAAK4C,MAAM5C,KAAK6C,UAAYiyB,EAAIE,GAAKA,GAG9C,SAASqpD,EAAQC,EAAIC,GACZD,OAAAA,EAAKN,IAAgBO,EAG9BP,EAAYC,SAAU,EACtBD,EAAYE,KAAO,EAEnBp+E,OAAOC,QAAU,CAAEg+E,YAAAA,EAAaK,cAAAA,EAAeC,QAAAA;;ACZ/C,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GArBA,IAAMjB,EAAS58E,QAAQ,KACjBu9E,EAAcv9E,QAAQ,0BAA0Bu9E,YAQhDS,EAYN,SAAA,GAXclgB,SAAAA,EAAAA,EAAMC,EAASggB,GAAK,IAAA,EAAA,EAAA,KAAA,IACxBjgB,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,EAAMC,KACPD,KAAOA,EACPC,EAAAA,QAAUA,EACVggB,EAAAA,IAAMA,EACN,IAAA,IAAI97E,EAAI,EAAGxC,EAAM,EAAKm0D,QAAQ1xD,OAAQD,EAAIxC,EAAKwC,IAC7C2xD,EAAAA,QAAQ3xD,GAAKs7E,GAAaQ,EAAKA,GANR,OAAA,EAWlC,OAAA,EAAA,EAZ2BnB,GAY3B,EAAA,GAAAt9E,OAAOC,QAAUy+E;;AChBjB1+E,OAAOC,QAAU,SAAuB0+E,EAASpkE,GAC/CokE,EAAQngB,KAAO/sC,SAASlX,EAAKikD,KAAM,IACnCmgB,EAAQlgB,QAAUhtC,SAASlX,EAAKkkD,QAAS,IACzCkgB,EAAQrqB,QAAU/5C,EAAK+5C,QAAQlwD,MAAM,GACrCu6E,EAAQtqB,OAAS95C,EAAK85C,OAAOjwD,MAAM,GAC9B,IAAA,IAAIzB,EAAI,EAAGA,EAAI4X,EAAK+5C,QAAQ1xD,OAAQD,IACvCg8E,EAAQrqB,QAAQ3xD,IAAM4X,EAAK+5C,QAAQ3xD,GACnCg8E,EAAQtqB,OAAO1xD,GAAK;;ACNxB3C,OAAOC,QAAU,SAAa0+E,EAASpkE,EAAMC,GACtC,IAAA,IAAI7X,EAAI,EAAGA,EAAI4X,EAAK+5C,QAAQ1xD,OAAQD,IACvCg8E,EAAQrqB,QAAQ3xD,GAAK4X,EAAK+5C,QAAQ3xD,GAAK6X,EAAM85C,QAAQ3xD,GACrDg8E,EAAQtqB,OAAO1xD,GAAK;;ACHxB3C,OAAOC,QAAU,SAAc0+E,EAASpkE,EAAMC,GACvC,IAAA,IAAI7X,EAAI,EAAGA,EAAIg8E,EAAQtqB,OAAOzxD,OAAQD,IACzC4X,EAAK85C,OAAO1xD,GAAKg8E,EAAQtqB,OAAO1xD,GAChC6X,EAAM65C,OAAO1xD,GAAKg8E,EAAQtqB,OAAO1xD;;ACLrC3C,OAAOC,QAAU,SAAiB0+E,GAC3B,IAAA,IAAIh8E,EAAI,EAAGA,EAAIg8E,EAAQrqB,QAAQ1xD,OAAQD,IAC1Cg8E,EAAQrqB,QAAQ3xD,GAAK,EACrBg8E,EAAQtqB,OAAO1xD,GAAK;;ACDxB3C,OAAOC,QAAU,SAAkB0+E,EAASpkE,EAAMC,GAM3C,IALCokE,IAAAA,EAAWrkE,EAAKikD,KAChBqgB,EAActkE,EAAKkkD,QACnBqgB,EAAetkE,EAAMikD,QAGlBsgB,EAAU,EAAGA,EAAUH,EAAUG,IAInC,IAHCC,IAAAA,EAAcH,EAAcE,EAC5BE,EAAeH,EAAeC,EAE3BG,EAAc,EAAGA,EAAcJ,EAAcI,IAAe,CAI9D,IAFD52E,IAAAA,EAAM,EAED62E,EAAa,EAAGA,EAAaN,EAAaM,IAAc,CACzDC,IACAC,EAAYL,EAAcG,EAC1BG,EAFkBR,EAAeK,EAEFD,EACrC52E,GAAOiS,EAAK+5C,QAAQ+qB,GAAa7kE,EAAM85C,QAAQgrB,GAC/C/kE,EAAK85C,OAAOgrB,GAAa,EACzB7kE,EAAM65C,OAAOirB,GAAc,EAE7BX,EAAQrqB,QAAQ2qB,EAAeC,GAAe52E;;ACtBpDtI,OAAOC,QAAU,SAAmB0+E,EAASpkE,EAAMC,GAM5C,IALCokE,IAAAA,EAAWrkE,EAAKikD,KAChBqgB,EAActkE,EAAKkkD,QACnBqgB,EAAetkE,EAAMikD,QAGlB8gB,EAAc,EAAGA,EAAcX,EAAUW,IAI3C,IAHCP,IAAAA,EAAcH,EAAcU,EAC5BN,EAAeH,EAAeS,EAE3BL,EAAc,EAAGA,EAAcJ,EAAcI,IAE/C,IAAA,IAAIC,EAAa,EAAGA,EAAaN,EAAaM,IAAc,CACzDC,IACAL,EAAUC,EAAcG,EACxBK,EAFkBV,EAAeK,EAEJD,EAC7BO,EAAqBd,EAAQtqB,OAAO4qB,EAAeC,GACzD3kE,EAAK85C,OAAO0qB,IAAYvkE,EAAM85C,QAAQkrB,GAAYC,EAClDjlE,EAAM65C,OAAOmrB,IAAajlE,EAAK+5C,QAAQyqB,GAAWU;;ACnB1Dz/E,OAAOC,QAAU,SAAyB0+E,EAASpkE,EAAMC,GAElD,IADG85C,IAAAA,EAAY/5C,EAAZ+5C,QACC3xD,EAAI,EAAGA,EAAI2xD,EAAQ1xD,OAAQD,IAClCg8E,EAAQrqB,QAAQ3xD,GAAK4X,EAAK+5C,QAAQ3xD,GAAK6X,EAAM85C,QAAQ3xD,GACrDg8E,EAAQtqB,OAAO1xD,GAAK;;ACHxB3C,OAAOC,QAAU,SAA0B0+E,EAASpkE,EAAMC,GACnD,IAAA,IAAI7X,EAAI,EAAGA,EAAI4X,EAAK+5C,QAAQ1xD,OAAQD,IACvC4X,EAAK85C,OAAO1xD,GAAK6X,EAAM85C,QAAQ3xD,GAAKg8E,EAAQtqB,OAAO1xD,GACnD6X,EAAM65C,OAAO1xD,GAAK4X,EAAK+5C,QAAQ3xD,GAAKg8E,EAAQtqB,OAAO1xD;;ACHvD3C,OAAOC,QAAU,SAAc0+E,EAASpkE,GACjC,IAAA,IAAI5X,EAAI,EAAGA,EAAI4X,EAAK+5C,QAAQ1xD,OAAQD,IACvCg8E,EAAQrqB,QAAQ3xD,GAAKzC,KAAKC,IAAI,EAAGoa,EAAK+5C,QAAQ3xD,IAC9Cg8E,EAAQtqB,OAAO1xD,GAAK;;ACJxB3C,OAAOC,QAAU,SAAe0+E,EAASpkE,GAClC,IAAA,IAAI5X,EAAI,EAAGA,EAAIg8E,EAAQtqB,OAAOzxD,OAAQD,IACzC4X,EAAK85C,OAAO1xD,GAAK4X,EAAK+5C,QAAQ3xD,GAAK,EAAIg8E,EAAQtqB,OAAO1xD,GAAK;;ACF/D3C,OAAOC,QAAU,SAAkB0+E,EAASpkE,EAAMmlE,GAG3C,IAFGjhB,IAAAA,EAAYlkD,EAAZkkD,QACFkhB,EAAUlhB,EAAUihB,EACjBvyE,EAAS,EAAGA,EAASsxD,EAAStxD,IACrCwxE,EAAQrqB,QAAQnnD,GAAUoN,EAAK+5C,QAAQqrB,EAAUxyE,GACjDwxE,EAAQtqB,OAAOlnD,GAAU;;ACJ7BnN,OAAOC,QAAU,SAAmB0+E,EAASpkE,EAAMojE,GAG5C,IAFGlf,IAAAA,EAAYlkD,EAAZkkD,QACFkhB,EAAUlhB,EAAUkf,EACjBxwE,EAAS,EAAGA,EAASsxD,EAAStxD,IACrCoN,EAAK85C,OAAOsrB,EAAUxyE,GAAUwxE,EAAQtqB,OAAOlnD;;ACEnD,SAASyyE,EAAIpsD,GAEJ,OAAA,GAAK,EAAItzB,KAAKI,KAAKkzB,IAV5BxzB,OAAOC,QAAU,SAAiB0+E,EAASpkE,GAEpC,IAAA,IAAI5X,EAAI,EAAGA,EAAI4X,EAAK+5C,QAAQ1xD,OAAQD,IACvCg8E,EAAQrqB,QAAQ3xD,GAAK,GAAK,EAAIzC,KAAKI,KAAKia,EAAK+5C,QAAQ3xD,KACrDg8E,EAAQtqB,OAAO1xD,GAAK;;ACHxB3C,OAAOC,QAAU,SAAkB0+E,EAASpkE,GACrC,IAAA,IAAI5X,EAAI,EAAGA,EAAIg8E,EAAQtqB,OAAOzxD,OAAQD,IAAK,CACxCk9E,IAAAA,EAAMlB,EAAQrqB,QAAQ3xD,GAC5B4X,EAAK85C,OAAO1xD,GAAKk9E,GAAO,EAAIA,GAAOlB,EAAQtqB,OAAO1xD;;ACJtD3C,OAAOC,QAAU,SAAc0+E,EAASpkE,GAEjC,IAAA,IAAI5X,EAAI,EAAGA,EAAI4X,EAAK+5C,QAAQ1xD,OAAQD,IACvCg8E,EAAQrqB,QAAQ3xD,GAAKzC,KAAKK,KAAKga,EAAK+5C,QAAQ3xD,IAC5Cg8E,EAAQtqB,OAAO1xD,GAAK;;ACHxB3C,OAAOC,QAAU,SAAe0+E,EAASpkE,GAClC,IAAA,IAAI5X,EAAI,EAAGA,EAAIg8E,EAAQtqB,OAAOzxD,OAAQD,IAAK,CAExCk9E,IAAAA,EAAMlB,EAAQrqB,QAAQ3xD,GAC5B4X,EAAK85C,OAAO1xD,IAAM,EAAIk9E,EAAMA,GAAOlB,EAAQtqB,OAAO1xD;;AC8RtD,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAvSA,IAAM26E,EAAS58E,QAAQ,KACjBo/E,EAAgBp/E,QAAQ,oBACxB2kC,EAAM3kC,QAAQ,SACdq/E,EAAOr/E,QAAQ,WACfs/E,EAAUt/E,QAAQ,cAClBm3D,EAAWn3D,QAAQ,cACnBu/E,EAAYv/E,QAAQ,gBACpBy8D,EAAkBz8D,QAAQ,sBAC1Bw/E,EAAmBx/E,QAAQ,wBAC3BC,EAAOD,QAAQ,UACfy/E,EAAQz/E,QAAQ,YAChB0/E,EAAW1/E,QAAQ,eACnB2/E,EAAY3/E,QAAQ,iBACpBE,EAAUF,QAAQ,aAClB4/E,EAAW5/E,QAAQ,eACnBH,EAAOG,QAAQ,UACf6/E,EAAQ7/E,QAAQ,YAEhB8/E,EAqRN,WApRgB,SAAA,IAAA,EAAA,KAAA,GACPC,KAAAA,SAAW,EACXC,KAAAA,WAAa,KACbp6C,KAAAA,OAAS,GAiRlB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,MAxQM/rB,MAAAA,SAAAA,EAAMC,GACJD,GAAAA,EAAK+5C,QAAQ1xD,SAAW4X,EAAM85C,QAAQ1xD,OAClC,MAAA,IAAIiQ,MAAM,uBAEZ8rE,IAAAA,EAAU,IAAIrB,EAAO/iE,EAAKikD,KAAMjkD,EAAKkkD,SAQpCkgB,OAPFr4C,KAAAA,OAAO5hC,KAAK,CACf6V,KAAAA,EACAC,MAAAA,EACAmkE,QAAAA,EACAgC,UAAWt7C,EACXu7C,kBAAmBb,IAEdpB,IA4PX,CAAA,IAAA,UAnPUngB,MAAAA,SAAAA,EAAMC,GACNkgB,IAAAA,EAAU,IAAIrB,EAAO9e,EAAMC,GAM1BkgB,OALFr4C,KAAAA,OAAO5hC,KAAK,CACf6V,KAAMokE,EACNA,QAAAA,EACAgC,UAAWX,IAENrB,IA4OX,CAAA,IAAA,gBApOgB/S,MAAAA,SAAAA,GACN+S,IAAAA,EAAU,IAAIrB,EAAO1R,EAAEpN,KAAMoN,EAAEnN,SAM9BkgB,OALFr4C,KAAAA,OAAO5hC,KAAK,CACf6V,KAAMqxD,EACN+S,QAAAA,EACAgC,UAAWb,IAENnB,IA6NX,CAAA,IAAA,WApNWpkE,MAAAA,SAAAA,EAAMC,GACTD,GAAAA,EAAK+5C,QAAQ1xD,SAAW4X,EAAM85C,QAAQ1xD,OAClC,MAAA,IAAIiQ,MAAM,uBAEX,OAAA,KAAKwyB,IACV,KAAKA,IAAI,KAAK26C,QAAQzlE,EAAKikD,KAAMjkD,EAAKkkD,SAAU,KAAKqhB,cAAcvlE,IACnEC,KA8MN,CAAA,IAAA,WApMWD,MAAAA,SAAAA,EAAMC,GACTD,GAAAA,EAAKkkD,UAAYjkD,EAAMgkD,KACnB,MAAA,IAAI3rD,MAAM,uBAEZ8rE,IAAAA,EAAU,IAAIrB,EAAO/iE,EAAKikD,KAAMhkD,EAAMikD,SAQrCkgB,OAPFr4C,KAAAA,OAAO5hC,KAAK,CACf6V,KAAAA,EACAC,MAAAA,EACAmkE,QAAAA,EACAgC,UAAW9oB,EACX+oB,kBAAmBX,IAEdtB,IAwLX,CAAA,IAAA,kBA/KkBpkE,MAAAA,SAAAA,EAAMC,GAChBD,GAAAA,EAAK+5C,QAAQ1xD,SAAW4X,EAAM85C,QAAQ1xD,OAClC,MAAA,IAAIiQ,MAAM,uBAEZ8rE,IAAAA,EAAU,IAAIrB,EAAO/iE,EAAKikD,KAAMjkD,EAAKkkD,SAQpCkgB,OAPFr4C,KAAAA,OAAO5hC,KAAK,CACf6V,KAAAA,EACAC,MAAAA,EACAmkE,QAAAA,EACAgC,UAAWxjB,EACXyjB,kBAAmBV,IAEdvB,IAmKX,CAAA,IAAA,OA3JO/S,MAAAA,SAAAA,GACG+S,IAAAA,EAAU,IAAIrB,EAAO1R,EAAEpN,KAAMoN,EAAEnN,SAO9BkgB,OANFr4C,KAAAA,OAAO5hC,KAAK,CACf6V,KAAMqxD,EACN+S,QAAAA,EACAgC,UAAWhgF,EACXigF,kBAAmBT,IAEdxB,IAmJX,CAAA,IAAA,QA3IQ/wE,MAAAA,SAAAA,GACEizE,IAAAA,EAAO,KAONjzE,OANF04B,KAAAA,OAAO5hC,KAAK,CACfi6E,QAAS/wE,EACT+yE,UAAW,WACT/yE,EAAM0mD,QAAUusB,EAAKH,cAGlB9yE,IAmIX,CAAA,IAAA,mBA3HmBg+D,MAAAA,SAAAA,GACTiV,IAAAA,EAAO,KACPlC,EAAU,IAAIrB,EAAO1R,EAAEnN,QAAS,GAU/BkgB,OATFr4C,KAAAA,OAAO5hC,KAAK,CACf6V,KAAMqxD,EACFpxD,YACKqmE,OAAAA,EAAKJ,UAEd9B,QAAAA,EACAgC,UAAWP,EACXQ,kBAAmBP,IAEd1B,IA+GX,CAAA,IAAA,UAvGU/S,MAAAA,SAAAA,GACA+S,IAAAA,EAAU,IAAIrB,EAAO1R,EAAEpN,KAAMoN,EAAEnN,SAO9BkgB,OANFr4C,KAAAA,OAAO5hC,KAAK,CACf6V,KAAMqxD,EACN+S,QAAAA,EACAgC,UAAW//E,EACXggF,kBAAmBN,IAEd3B,IA+FX,CAAA,IAAA,OAvFO/S,MAAAA,SAAAA,GACG+S,IAAAA,EAAU,IAAIrB,EAAO1R,EAAEpN,KAAMoN,EAAEnN,SAO9BkgB,OANFr4C,KAAAA,OAAO5hC,KAAK,CACf6V,KAAMqxD,EACN+S,QAAAA,EACAgC,UAAWpgF,EACXqgF,kBAAmBL,IAEd5B,IA+EX,CAAA,IAAA,UAvEU/S,MAAAA,SAAAA,GAWCA,OARFtlC,KAAAA,OAAO5hC,KAAK,CACfi8E,UAAY,WACVG,GAEFF,kBAAoB,WAClBG,KAGGnV,IA4DX,CAAA,IAAA,MArDoB,MAAA,WAAd+R,IAEE5yD,EAFF4yD,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACR8C,KAAAA,SAAW9C,EAEX,IAAA,IAAIh7E,EAAI,EAAGxC,EAAM,KAAKmmC,OAAO1jC,OAAQD,EAAIxC,EAAKwC,KACjDooB,EAAQ,KAAKub,OAAO3jC,IACT8J,eAAe,cAG1Bse,EAAM41D,UAAU51D,EAAM4zD,QAAS5zD,EAAMxQ,KAAMwQ,EAAMvQ,OAG5CuQ,OAAAA,EAAM4zD,UA0CjB,CAAA,IAAA,WAnCW+B,MAAAA,SAAAA,GAEH31D,IAAAA,EADC21D,KAAAA,WAAaA,EAEb,IAAA,IAAI/9E,EAAI,EAAGxC,EAAM,KAAKmmC,OAAO1jC,OAAQD,EAAIxC,EAAKwC,KACjDooB,EAAQ,KAAKub,OAAO3jC,IACT8J,eAAe,cAG1Bse,EAAM41D,UAAU51D,EAAM4zD,QAAS5zD,EAAMxQ,KAAMwQ,EAAMvQ,OAG5CuQ,OAAAA,EAAM4zD,UAwBjB,CAAA,IAAA,mBAjBiC,MAAA,WAAdhB,IAAAA,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACrB8C,KAAAA,SAAW9C,EAITh7E,IAFHA,IACAooB,EADApoB,EAAI,KAAK2jC,OAAO1jC,OAEbD,KAAM,IACXooB,EAAQ,KAAKub,OAAO3jC,IACT8J,eAAe,sBAG1Bse,EAAM61D,kBAAkB71D,EAAM4zD,QAAS5zD,EAAMxQ,KAAMwQ,EAAMvQ,OAGpDuQ,OAAAA,EAAM4zD,YAIjB,EAAA,GAAA3+E,OAAOC,QAAUugF;;ACvSjB,IAAMQ,EAAWtgF,QAAQ,0BAA0Bu9E,YAG7CgD,EAAUD,EAMhBhhF,OAAOC,QAAU,SAAiB2rE,GAQzB,IALD7uC,IAAAA,EAAIkkD,EAAQ,EAAG,GACjBztD,EAAI,EACJ7wB,EAAI,EACF+wB,EAAIk4C,EAAEtX,UAEC,CAEP9gC,IADJA,GAAKE,EAAE/wB,IACCo6B,EACCp6B,OAAAA,EAETA;;ACjBJ3C,OAAOC,QAAU,SAAc2rE,GAKxB,IAHGtX,IAAAA,EAAYsX,EAAZtX,QACJ4sB,EAAO5sB,EAAQ,GACf6sB,EAAQ,EACHx+E,EAAI,EAAGA,EAAI2xD,EAAQ1xD,OAAQD,IAAK,CACjC4N,IAAAA,EAAI+jD,EAAQ3xD,GACd4N,EAAI2wE,IAERC,EAAQx+E,EACRu+E,EAAO3wE,GAEF4wE,OAAAA;;ACjBT,IAAM7D,EAAS58E,QAAQ,KAOvBV,OAAOC,QAAU,SAAiB2rE,GAG3B,IAFCtnE,IAAAA,EAAS,IAAIg5E,EAAO1R,EAAEpN,KAAMoN,EAAEnN,SAChC2iB,GAAU,OACLz+E,EAAI,EAAGA,EAAIipE,EAAEtX,QAAQ1xD,OAAQD,IAChCipE,EAAEtX,QAAQ3xD,GAAKy+E,IACjBA,EAASxV,EAAEtX,QAAQ3xD,IAKlB,IADD4nB,IAAAA,EAAI,EACC5nB,EAAI,EAAGA,EAAIipE,EAAEtX,QAAQ1xD,OAAQD,IACpC2B,EAAOgwD,QAAQ3xD,GAAKzC,KAAKI,IAAIsrE,EAAEtX,QAAQ3xD,GAAKy+E,GAC5C72D,GAAKjmB,EAAOgwD,QAAQ3xD,GAGjB,IAAA,IAAIA,EAAI,EAAGA,EAAIipE,EAAEtX,QAAQ1xD,OAAQD,IACpC2B,EAAOgwD,QAAQ3xD,IAAM4nB,EAMhBjmB,OAAAA;;ACxBTtE,OAAOC,QAAU,SAAc0+E,EAASpkE,GACtCokE,EAAQngB,KAAO/sC,SAASlX,EAAKikD,KAAM,IACnCmgB,EAAQlgB,QAAUhtC,SAASlX,EAAKkkD,QAAS,IACzCkgB,EAAQrqB,QAAU/5C,EAAK+5C,QAAQlwD,MAAM,GACrCu6E,EAAQtqB,OAAS95C,EAAK85C,OAAOjwD,MAAM;;ACiMrC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EApMMi9E,IAAAA,EAoMN,WAnMchoB,SAAAA,EAAAA,GAAQioB,IAAAA,EAAe,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAG,EAAA,KAAA,QACrBt9B,IAAXqV,IAECA,KAAAA,OAASA,EAGTkoB,KAAAA,WAAa,GACbC,KAAAA,eAAiB,GACjBC,KAAAA,WAAa,GACbC,KAAAA,4BAA4BroB,GAC5BsoB,KAAAA,YAAYL,IAyLrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,8BAtL8BjoB,MAAAA,SAAAA,GAGxB,IAFIuoB,IAAAA,EAAsB,GAEtBC,EAAqB,EAAGC,EAAsBzoB,EAAOz2D,OACzDi/E,EAAqBC,EACrBD,IACA,CACMJ,IAAAA,EAAapoB,EAAOwoB,GAEtBJ,GAAAA,EAAWh1E,eAAe,UAE1B,IAAA,IAAIs1E,EAAiB,EAAGC,EAAmBP,EAAW7+E,OACtDm/E,EAAiBC,EACjBD,IACA,CACME,IAAAA,EAAYR,EAAWM,GACzBH,EAAoBn1E,eAAew1E,KACvCL,EAAoBK,IAAa,EAC5BR,KAAAA,WAAW/8E,KAAKu9E,QAElB,CACCA,IAAAA,EAAY5oB,EAAOwoB,GACrBD,GAAAA,EAAoBn1E,eAAew1E,GAAY,SACnDL,EAAoBC,IAAsB,EACrCJ,KAAAA,WAAW/8E,KAAKu9E,OA8J7B,CAAA,IAAA,cAzJcX,MAAAA,SAAAA,GAIR,IAFIU,IAAAA,EAAmB,KAAKP,WAAW7+E,OAEnCm/E,EAAiB,EACrBA,EAAiBC,EACjBD,IACA,CACME,IAAAA,EAAY,KAAKR,WAAWM,GAC9BA,GAAkBT,IAEfC,KAAAA,WAAWU,GAAaF,EACxBP,KAAAA,eAAeO,GAAkBE,MA6I9C,CAAA,IAAA,YAxIY5hF,MAAAA,SAAAA,GAIH,IAJUihF,IAAAA,EAAe,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACxBh9E,EAAS,GACPi9E,EAAe,KAAfA,WAEC5+E,EAAI,EAAGxC,EAAME,EAAMuC,OAAQD,EAAIxC,EAAKwC,IAAK,CAC1Cs/E,IAAAA,EAAY5hF,EAAMsC,GAClBsL,EAAQszE,EAAWU,GACrBh0E,QAAU+1C,IAAV/1C,EACI,MAAA,IAAI4E,MAAiCovE,2BAAAA,OAAAA,EAA3C,MAEEh0E,EAAQqzE,GACZh9E,EAAOI,KAAKuJ,GAGP3J,OAAAA,IA0HX,CAAA,IAAA,uBAvHuBumD,MAAAA,SAAAA,GAAQC,IACvBxmD,EADuBwmD,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAAMw2B,EAAe,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAcrDx2B,OAXFxmD,EADoB,iBAAXumD,EACA,KAAKq3B,UACZr3B,EAAO75C,MAAM,IAAIvM,OAAO,CAAC,aAAc,iBACvC68E,GAGO,KAAKY,UACZr3B,EAAOpmD,OAAO,CAAC,aAAc,iBAC7B68E,GAIW,OAAXx2B,EAAwBxmD,EAEN,iBAAXwmD,EACFxmD,EAAOG,OAAO,KAAKy9E,UAAUp3B,EAAO95C,MAAM,IAAKswE,IAEjDh9E,EAAOG,OAAO,KAAKy9E,UAAUp3B,EAAQw2B,MAoGhD,CAAA,IAAA,eAjGea,MAAAA,SAAAA,GAIN,IAJeb,IAAAA,EAAe,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAC7Bh9E,EAAS,GACPk9E,EAAmB,KAAnBA,eAEC7+E,EAAI,EAAGxC,EAAMgiF,EAAQv/E,OAAQD,EAAIxC,EAAKwC,IAAK,CAC5CsL,IAAAA,EAAQk0E,EAAQx/E,GAClBsL,KAAAA,EAAQqzE,GAARrzE,CACEg0E,IAAAA,EAAYT,EAAevzE,GAC7Bg0E,QAAcj+B,IAAdi+B,EACI,MAAA,IAAIpvE,MAA6B5E,uBAAAA,OAAAA,EAAvC,MAEF3J,EAAOI,KAAKu9E,IAGP39E,OAAAA,IAmFX,CAAA,IAAA,WAhFW69E,MAAAA,SAAAA,EAASb,GACT,OAAA,KAAKc,aAAaD,EAASb,GAAc9oD,KAAK,MA+EzD,CAAA,IAAA,iBA5EmB,MAAA,WACV6pD,KAAAA,WAAW,cACXA,KAAAA,WAAW,kBA0EpB,CAAA,IAAA,aA5BsB,MAAA,WACb,IAAA,IAAI1/E,EAAI,EAAGA,EAAI,UAAKC,OAAQD,IAAK,CAC9B2/E,IAAAA,EAAe3/E,EAAAA,GAAAA,UAAAA,QAAAA,OAAAA,EAAAA,UAAAA,GAChB4+E,KAAAA,WAAWe,GAAW,KAAKb,WAAW7+E,OACrC2/E,IAAAA,EAAe,KAAKhB,WAAWe,GAChCd,KAAAA,eAAee,GAAgBD,EAC/Bb,KAAAA,WAAW/8E,KAAK49E,MAsB3B,CAAA,IAAA,mBAlBqB,MAAA,WAEEtzC,MAAAA,0BAAAA,OAAAA,KAAKC,UAAU,KAAKuyC,gBACxBxyC,wBAAAA,OAAAA,KAAKC,UAAU,KAAKsyC,YACpBvyC,wBAAAA,OAAAA,KAAKC,UAAU,KAAKwyC,YACrC,OAAA,OAAA,KAAKS,UACAx1E,WACAyD,QAAQ,8CAA+C,IACvDA,QAAQ,WAAY,IACzB,MAAA,OAAA,KAAKqyE,qBAAqB91E,WAAWyD,QAAQ,WAAY,IACzD,MAAA,OAAA,KAAKiyE,aACA11E,WACAyD,QAAQ,uDAAwD,IAChEA,QAAQ,UAAW,IAZtB,SAiBJ,CAAA,CAAA,IAAA,mBAvE0BmxE,MAAAA,SAAAA,GACjB,IAD+BjoB,IAAAA,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,CAAC,MACrC12D,EAAI,GAAIA,GAAK,IAAKA,IACzB02D,EAAO30D,KAAK0B,OAAOC,aAAa1D,IAE3B,OAAA,IAAI0+E,EAAchoB,EAAQioB,KAmErC,CAAA,IAAA,8BAhEqCA,MAAAA,SAAAA,GAAcjoB,IAAAA,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,CAAC,MACnDopB,EAAgBpB,EAAcqB,iBAAiBpB,EAAcjoB,GAE5DopB,OADPA,EAAcE,iBACPF,IA6DX,CAAA,IAAA,wBA1D+B96E,MAAAA,SAAAA,EAAQ25E,GAAc,IAAA,EAE3CmB,EAAgB,IAAIpB,GADXj7E,EAAAA,OAAOoG,WAAU/H,OAAU,MAAA,EAAA,EAAA,IAAI2gC,IAAIz9B,KACF25E,GAEzCmB,OADPA,EAAcE,iBACPF,IAsDX,CAAA,IAAA,uBAnD8B//E,MAAAA,SAAAA,EAAO4+E,GAC3BmB,IAAAA,EAAgB,IAAIpB,EACxB3+E,EAAM6uC,OAAO,SAAChhC,EAAG5N,EAAGuyB,GAAMA,OAAAA,EAAE/P,QAAQ5U,KAAO5N,IAAGigF,OAC9CtB,GAGKmB,OADPA,EAAcE,iBACPF,IA6CX,CAAA,IAAA,aA1CoB96E,MAAAA,SAAAA,EAAQ25E,GAAc,IAAA,EAE/B,OAAA,IAAID,GADIj7E,EAAAA,OAAOoG,WAAU/H,OAAU,MAAA,EAAA,EAAA,IAAI2gC,IAAIz9B,KACjB25E,KAwCrC,CAAA,IAAA,WArCkBruC,MAAAA,SAAAA,GACRwvC,IAAAA,EAAgB,IAAIpB,EAKnBoB,OAJPA,EAAclB,WAAatuC,EAAKsuC,WAChCkB,EAAcjB,eAAiBvuC,EAAKuuC,eACpCiB,EAAcppB,OAASpmB,EAAKomB,OAC5BopB,EAAchB,WAAaxuC,EAAKwuC,WACzBgB,MA+BX,EAAA,GAAAziF,OAAOC,QAAUohF;;ACiqBjB,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA32BA,IAAM/D,EAAS58E,QAAQ,YACjBg+E,EAAeh+E,QAAQ,0BACvB8/E,EAAW9/E,QAAQ,qBACnBmiF,EAAUniF,QAAQ,qBAClBoiF,EAAOpiF,QAAQ,kBACfqiF,EAAUriF,QAAQ,oBAClBwsE,EAAOxsE,QAAQ,iBACfu9E,EAAcv9E,QAAQ,uBAAuBu9E,YAC7ChqB,EAAQvzD,QAAQ,sBAChB2gF,EAAgB3gF,QAAQ,+BAExBsiF,EAg2BN,WA/1B4B,SAAA,IAAA,IAAA,EAAA,KAAdz7E,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,EAAA,KAAA,GAChBktD,IAAAA,EAAa,KAAKpxD,YAAlBoxD,SAER3yD,OAAOC,OAAO,KAAM0yD,EAAUltD,GAEzB07E,KAAAA,UAAY,GACZC,KAAAA,KAAO,EACPC,KAAAA,UAAY,KACZC,KAAAA,aAAe,KACfC,KAAAA,MAAQ,KAERC,KAAAA,mBAAqB,KAAKhhF,YAAYg3B,IACzC,WAAM,OAAA,IAAIgkD,EAAO,EAAKh7E,YAAY,GAAI,KAEnC+kE,KAAAA,YAAc,KACdE,KAAAA,aAAe,KACfU,KAAAA,aA+0BT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aA50Be,MAAA,WACNob,KAAAA,MAAQ,CACXz1E,MAAO,KACPm4D,aAAc,GACdzxC,OAAQ,KACRivD,UAAW,GACXC,YAAa,GACbC,oBAAqB,IAGI,OAAvB,KAAKhB,gBACFpL,KAAAA,WAAa,KAAKoL,cAAchB,WAAW7+E,OAC3C8gF,KAAAA,WAAa,KAAKrM,WAClBD,KAAAA,UAAY,KAAKsM,YAGpB,KAAKzwC,KACFxP,KAAAA,SAAS,KAAKwP,MAEd0wC,KAAAA,aAyzBX,CAAA,IAAA,qBArzBuB,MAAA,WACXN,IAAAA,EAAuB,KAAvBA,MAAO/gF,EAAgB,KAAhBA,YACPyjE,EAAiBsd,EAAjBtd,aAERA,EAAarhE,KAAKs+E,EAAIY,SAASthF,EAAY,GAAI,KAAK80E,YAG/C,IAFDO,IAAAA,EAAWr1E,EAAY,GAElBsxB,EAAI,EAAGA,EAAItxB,EAAYM,OAAQgxB,IAAK,CAErCiwD,IAAAA,EAAavhF,EAAYsxB,GAC/BmyC,EAAarhE,KAAKs+E,EAAIY,SAASC,EAAYlM,IAC3CA,EAAWkM,KA0yBjB,CAAA,IAAA,oBA7vBsB,MAAA,WAEbR,KAAAA,MAAMz1E,MAAQ,IAAI8wE,EACrB,KAAKgF,WAAa,EAClB,KAAKtM,UACL,OAwvBN,CAAA,IAAA,qBApvBuB,MAAA,WACW,IAAA,EAAA,KAAKiM,MAA3BA,EAAAA,EAAAA,MAAOhM,EAAAA,EAAAA,WACTyM,EAAiB,KAAKxhF,YAAY,KAAKA,YAAYM,OAAS,GAIlEygF,EAAMU,gBAAkB,IAAIrF,EAC1BrH,EAAa,EACbyM,EACA,KAIFT,EAAM/uD,OAAS,IAAIgpD,EAAOjG,EAAa,EAAG,KAuuB9C,CAAA,IAAA,eApuBiB,MAAA,WACkB,IAAA,EAAA,KAAKgM,MAA5BA,EAAAA,EAAAA,MAAO/gF,EAAAA,EAAAA,YACPyjE,EAAiBsd,EAAjBtd,aACFie,EAAW,IAAIxD,EACfhJ,EAAU,GACVyM,EACJZ,EAAMI,oBAAoB7gF,OAAS,EAC/BygF,EAAMI,oBAAoBJ,EAAMI,oBAAoB7gF,OAAS,GAC7D,KAAK0gF,mBAGPhvD,EAAS,KAAK4vD,YAChBF,EACAA,EAASG,iBAAiBd,EAAMz1E,OAChCq2E,EAAmB,GACnBle,EAAa,IAEfyR,EAAQ9yE,KAAK4vB,GAER,IAAA,IAAI3xB,EAAI,EAAGxC,EAAMmC,EAAYM,OAAQD,EAAIxC,EAAKwC,IACjD2xB,EAAS,KAAK4vD,YACZF,EACA1vD,EACA2vD,EAAmBthF,GACnBojE,EAAapjE,IAEf60E,EAAQ9yE,KAAK4vB,GAGf+uD,EAAMI,oBAAoB/+E,KAAK8yE,GAC/BwM,EAAS3+C,IAAI2+C,EAASnsB,SAASwrB,EAAMU,gBAAiBzvD,GAAS+uD,EAAM/uD,QACrE+uD,EAAME,UAAU7+E,KAAKs/E,KAqsBzB,CAAA,IAAA,WAlsBa,MAAA,WACDX,IAAAA,EAAU,KAAVA,MACAtd,EAA8Bsd,EAA9Btd,aAAcyd,EAAgBH,EAAhBG,YAGlB,GADCY,KAAAA,qBACAf,EAAMz1E,MAAO,MAAM,IAAIiF,MAAM,2BAI9B,GAHJ2wE,EAAY9+E,KAAK2+E,EAAMz1E,OAElBy2E,KAAAA,sBACAhB,EAAMtd,aAAanjE,OAAQ,MAAM,IAAIiQ,MAAM,4BAC3C,IAAA,IAAIlQ,EAAI,EAAGxC,EAAM4lE,EAAanjE,OAAQD,EAAIxC,EAAKwC,IAClDb,OAAOu3D,OAAO0M,EAAapjE,IAAIc,QAAQ,SAAAuf,GACrCwgE,EAAY9+E,KAAKse,KAKjB,GADCshE,KAAAA,sBACAjB,EAAMU,gBACT,MAAM,IAAIlxE,MAAM,qCACd,IAACwwE,EAAM/uD,OAAQ,MAAM,IAAIzhB,MAAM,4BAEnC2wE,EAAY9+E,KAAK2+E,EAAMU,iBACvBP,EAAY9+E,KAAK2+E,EAAM/uD,UA4qB3B,CAAA,IAAA,eAnqBe1mB,MAAAA,SAAAA,GAAOxL,IAAAA,EAAe,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAC3BrC,EAAQ,KAAKunE,SAAS15D,GAGrB7N,OAFFwkF,KAAAA,iBAAiB32E,GACjB42E,KAAAA,KAAKpiF,GACHrC,IA+pBX,CAAA,IAAA,WAvpBW6N,MAAAA,SAAAA,GACFs1E,KAAAA,OAMEG,IALCA,IAIJW,EAJIX,EAAU,KAAVA,MACFljF,EAAMyN,EAAMhL,OACd6hF,EAAU,EACVC,EAAO,EAEJrB,EAAME,UAAU3gF,QAAUgL,EAAMhL,OAAS,GAEzC+hF,KAAAA,eAGL,IAAA,IAAIC,GAAc,EAAGC,EAAWj3E,EAAMhL,OACtCgiF,EAAaC,EACbD,IACA,CAEME,IAAAA,EAAgBF,EAAa,EACnCZ,EAAWX,EAAME,UAAUuB,GAErB54E,IAAAA,GAAyB,IAAhB04E,EAAoB,EAAIh3E,EAAMg3E,GAAc,EACrDh/D,EAASg/D,IAAezkF,EAAM,EAAI,EAAIyN,EAAMg3E,EAAa,GAAK,EAC9DtwD,EAAS0vD,EAASh+C,IAAI95B,GAEtB64E,EAAmBzwD,EACnB0wD,EAAgBjC,EAAQzuD,GAE9BmwD,IAAYvkF,KAAK+kF,KAAKD,EAAc1wB,QAAQ1uC,IAC5C8+D,IAASxkF,KAAKixC,IAAI6zC,EAAc1wB,QAAQ1uC,IAExCm/D,EAAiB1wB,OAAS2wB,EAAc1wB,QAAQlwD,MAAM,GACtD2gF,EAAiB1wB,OAAOzuC,IAAW,EAI9B,OADFu9D,KAAAA,UAAYuB,EACV,KAAA,IAAA,EAAMD,GAAWtkF,EAAM,MAonBlC,CAAA,IAAA,mBA9mBmByN,MAAAA,SAAAA,GAIRjL,IAHHA,IAAAA,EAAIiL,EAAMhL,OAEN2gF,EADU,KAAVF,MACAE,UACD5gF,EAAI,GACT4gF,EAAU5gF,GAAG4hF,iBAAiB32E,EAAMjL,EAAI,GAAK,GAC7CA,IAEF4gF,EAAU,GAAGgB,iBAAiB,KAsmBlC,CAAA,IAAA,OA/lB4B,MAAA,WAQnB,IARFniF,IAGG8iF,GAHY,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,OAGe,KAAK9iF,aAC9B+iF,EAAyB,KAAzBA,KAAMC,EAAmB,KAAnBA,QACVC,EAAa,EACbC,EAAS,EACL9B,EAHyB,KAAVH,MAGfG,YACC+B,EAAc,EAAGA,EAAc/B,EAAY5gF,OAAQ2iF,IAAe,CACnE/H,IAAAA,EAASgG,EAAY+B,GACnBjxB,EAAoBkpB,EAApBlpB,QAASD,EAAWmpB,EAAXnpB,OACXkxB,KAAe,KAAKtC,YACnBA,KAAAA,UAAUsC,GAAetxB,EAAMupB,EAAOhf,KAAOgf,EAAO/e,UAGtD,IADC1T,IAAAA,EAAQ,KAAKk4B,UAAUsC,GACpB5iF,EAAI,EAAGA,EAAI2xD,EAAQ1xD,OAAQD,IAAK,CACnCo6B,IAAAA,EAAIs3B,EAAO1xD,GACT+wB,EAAI4gC,EAAQ3xD,GAElBooD,EAAMpoD,GAAKooD,EAAMpoD,GAAK,KAAKgiE,WAAa,EAAI,KAAKA,WAAa5nC,EAAIA,EAE9DA,EAAIqoD,IACNroD,EAAIqoD,EACJC,KAEEtoD,GAAKqoD,IACProD,GAAKqoD,EACLC,KAEFC,IAEAhxB,EAAQ3xD,GACN+wB,GAAMwxD,EAAWnoD,EAAK78B,KAAK82B,KAAK+zB,EAAMpoD,GAAK,KAAKiiE,WAAaugB,EAAOzxD,GAGrE0vD,KAAAA,aAAeiC,EAAaC,IA4jBrC,CAAA,IAAA,MA/hBI,MAAA,WAJAE,IAAAA,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACXC,EAAsB,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IACtBC,EAAY,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GACZC,EAAc,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAEV,IAAC,KAAKtN,WAAY,OAAO,KAKtBgL,IAJDz1E,IAAAA,EAAQ,KAAKg4E,aAAaJ,GACxBnC,EAAU,KAAVA,MACF/uD,EAAS,GACX3xB,EAAI,EACD0gF,EAAME,UAAU3gF,OAAS6iF,GACzBd,KAAAA,eAEA,OAAM,CAELkB,IAAAA,EACE,IAANljF,EAAU,EAAIA,EAAIiL,EAAMhL,OAASgL,EAAMjL,EAAI,GAAK,EAAI2xB,EAAO3xB,EAAI,GAI3DmjF,EAFWzC,EAAME,UAAU5gF,GAEHqjC,IAAI6/C,GAC5Bd,EAAmB,IAAIzH,EAC3B+F,EAAM/uD,OAAOkqC,KACb6kB,EAAM/uD,OAAOmqC,SAGXknB,GADJzY,EAAK6X,EAAkBe,GACH,IAAhBH,GAAqBD,EAOlB,IAAA,IAAI7iF,EAAI,EAAG1C,EAAM4kF,EAAiBzwB,QAAQ1xD,OAAQC,EAAI1C,EAAK0C,IAC9DkiF,EAAiBzwB,QAAQzxD,IAAM8iF,EAI7BI,IAAAA,EAAQhD,EAAQgC,GAChBr6D,EAAYg7D,EAAY7C,EAAQkD,GAASjD,EAAKiD,GAGhDr7D,GADJ/nB,IACkB,IAAd+nB,EAEF,MAEE/nB,GAAAA,GAAK8iF,EAEP,MAGFnxD,EAAO5vB,KAAKgmB,GAcP,OAAA,KAAKs7D,cACVp4E,EACA0mB,EAAOlwB,MAAMwJ,EAAMhL,QAAQ02B,IAAI,SAAAj5B,GAASA,OAAAA,EAAQ,OAgetD,CAAA,IAAA,QAtdQ6C,MAAAA,SAAAA,GAAMqE,IAaN5E,EAbM4E,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAQhBA,EAPJA,EAAUzF,OAAOC,OAAO,GAAI,KAAKsB,YAAY6iE,cAAe3+D,GAE1DrF,EAAAA,EAAAA,WACAqkE,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,UACAC,EAAAA,EAAAA,SACAC,EAAAA,EAAAA,eAGIv1B,GAAsB,IAAhB5pC,EAAQ4pC,IAAelY,QAAQkY,IAAM5pC,EAAQ4pC,IACnD/uC,EAAemF,EAAQnF,cAAgB,KAAKA,aAC9CrC,EAAQuxB,EAAAA,EAWP3uB,IARD,KAAK8J,eAAe,eACtBvJ,EAAO,KAAK+iF,UAAU/iF,IAGnBqE,EAAQ2+E,mBACNje,KAAAA,aAGFtlE,EAAI,EAAGA,EAAIT,GAAcnC,EAAQwmE,EAAa5jE,IAAK,CAEjD,IADDy0D,IAAAA,EAAM,EACDv0D,EAAI,EAAGA,EAAIK,EAAKN,OAAQC,IAAK,CAEpCu0D,GADY,KAAK6f,aAAa/zE,EAAKL,GAAIT,GAKrCo0B,GAFJz2B,EAAQq3D,EAAMl0D,EAAKN,OAEf4zB,OAAOL,MAAMp2B,GACf,MAAM,IAAI8S,MACR,oFAEAs+B,GAAOxuC,EAAI6jE,GAAc,GAC3Br1B,EAAI,cAAexuC,EAAG,kBAAmB5C,GAEvC0mE,GAAY9jE,EAAI+jE,GAAmB,GACrCD,EAAS,CAAE1mE,MAAAA,EAAOmC,WAAYS,IAI3B,MAAA,CACL5C,MAAAA,EACAmC,WAAYS,KAyalB,CAAA,IAAA,OA3ZS,MAAA,WACC,MAAA,IAAIkQ,MAAS,GAAA,OAAA,KAAKxP,YAAY8D,KAApC,mCA0ZJ,CAAA,IAAA,SAnZW,MAAA,WAAA,IAAA,EAAA,KACCstD,EAAa,KAAKpxD,YAAlBoxD,SACA4uB,EAAU,KAAVA,MACF97E,EAAU,GAMT,OAJPzF,OAAO0B,KAAKixD,GAAUhxD,QAAQ,SAAA8J,GAC5BhG,EAAQgG,GAAK,EAAKA,KAGb,CACLuC,KAAM,KAAKzM,YAAY8D,KACvBI,QAAAA,EACAqG,MAAOy1E,EAAMz1E,MAAMpL,SACnBujE,aAAcsd,EAAMtd,aAAazsC,IAAI,SAAA4tC,GAC7BxB,IAAAA,EAAS,GAMRA,OAJP5jE,OAAO0B,KAAK0jE,GAAazjE,QAAQ,SAAA8J,GAC/Bm4D,EAAOn4D,GAAK25D,EAAY35D,GAAG/K,WAGtBkjE,IAETqe,gBAAiB,KAAKV,MAAMU,gBAAgBvhF,SAC5C8xB,OAAQ,KAAK+uD,MAAM/uD,OAAO9xB,YA4XhC,CAAA,IAAA,eAxXiB,MAAA,WACNwsC,OAAAA,KAAKC,UAAU,KAAKzsC,YAuX/B,CAAA,IAAA,WApXWywC,MAAAA,SAAAA,GAAM,IAAA,EAAA,KACRA,KAAAA,KAAOA,EACJwhB,IAAAA,EAAa,KAAKpxD,YAAlBoxD,SACA4uB,EAAU,KAAKA,MAAfA,MACA97E,EAAY0rC,EAAZ1rC,QACAi8E,EAAgBH,EAAhBG,YAERH,EAAMz1E,MAAQ0vE,EAAO75C,SAASwP,EAAKrlC,OACnC41E,EAAY9+E,KAAK2+E,EAAMz1E,OACvBy1E,EAAMtd,aAAe9yB,EAAK8yB,aAAazsC,IAAI,SAAA4tC,GACnCxB,IAAAA,EAAS,GAORA,OALP5jE,OAAO0B,KAAK0jE,GAAazjE,QAAQ,SAAA8J,GAC/Bm4D,EAAOn4D,GAAK+vE,EAAO75C,SAASyjC,EAAY35D,IACxCi2E,EAAY9+E,KAAKghE,EAAOn4D,MAGnBm4D,IAET2d,EAAMU,gBAAkBzG,EAAO75C,SAASwP,EAAK8wC,iBAC7CV,EAAM/uD,OAASgpD,EAAO75C,SAASwP,EAAK3e,QACpCkvD,EAAY9+E,KAAK2+E,EAAMU,iBACvBP,EAAY9+E,KAAK2+E,EAAM/uD,QAEvBxyB,OAAO0B,KAAKixD,GAAUhxD,QAAQ,SAAA8J,GAC5B,EAAKA,GAAKhG,EAAQkF,eAAec,GAAKhG,EAAQgG,GAAKknD,EAASlnD,KAI5DhG,EAAQkF,eAAe,kBACG,OAA1BlF,EAAQk7E,gBAEHA,KAAAA,cAAgBpB,EAAc59C,SAASl8B,EAAQk7E,sBAC7Cl7E,EAAQk7E,eAGZkC,KAAAA,iBAgVT,CAAA,IAAA,iBA7UiB1xC,MAAAA,SAAAA,GACN,OAAA,KAAKxP,SAASuL,KAAKl8B,MAAMmgC,MA4UpC,CAAA,IAAA,aArUe,MAAA,WACHowC,IAAAA,EAAU,KAAVA,MACAE,EAAc,KAAKF,MAAnBE,UAEAj9C,EADSi9C,EAAU,GACnBj9C,OACF6/C,EAAan3C,KAAKC,UAAU,KAAKzsC,UAE9B4jF,SAAAA,EAAwBxa,GAG1B,IAFCya,IAAAA,EAAahD,EAAMI,oBAAoB,GACrC6C,EAAY/C,EAAU,GAAtB+C,QACC3jF,EAAI,EAAGxC,EAAMmmF,EAAQ1jF,OAAQD,EAAIxC,EAAKwC,IACzC2jF,GAAAA,EAAQ3jF,GAAGg8E,UAAY/S,EAClBjpE,OAAAA,EAGJ0jF,OAAAA,EAAWlhE,QAAQymD,GAwCnB2a,SAAAA,EAAe3a,EAAG4a,GACrB,IAAC5a,IAAMA,EAAEpN,OAASoN,EAAEnN,QAAS,MAAO,OAEpCmN,GAAAA,IAAMyX,EAAMz1E,MAAO,MAAA,aACnBg+D,GAAAA,IAAMyX,EAAMU,gBAAiB,MAAA,uBAC7BnY,GAAAA,IAAMyX,EAAM/uD,OAAQ,MAAA,cAEnB,IAAI3xB,IAAAA,EAAAA,SAAAA,EAAOxC,GACR+mE,IAAAA,EAAcmc,EAAMtd,aAAapjE,GAGvCb,OAAO0B,KAAK0jE,GAAazjE,QAAQ,SAAA8J,GAC3B25D,GAAAA,EAAY35D,KAAOq+D,EACOjpE,MAAAA,qBAAAA,OAAAA,EAAM4K,MAAAA,OAAAA,MAN/B5K,EAAI,EAAGxC,EAAMkjF,EAAMtd,aAAanjE,OAAQD,EAAIxC,EAAKwC,IAAjDA,EAAAA,GAWF8jF,OAvDAA,SAAa7a,EAAG4a,GAClB,IAAA,IAAI7jF,EAAI,EAAGxC,EAAMmmC,EAAO1jC,OAAQD,EAAIxC,EAAKwC,IAAK,CAC3CooB,IAAAA,EAAQub,EAAO3jC,GAEjBA,GAAAA,IAAM6jF,EAAY,CACd3jF,IAAAA,EAAIujF,EAAwBxa,GAC1BA,OAAAA,GACD7gD,KAAAA,EAAMxQ,KAQNwQ,KAAAA,EAAMvQ,MACL3X,GAAAA,GAAK,EACqBA,MAAAA,qBAAAA,OAAAA,EAAgCA,gCAAAA,OAAAA,EAC1D+oE,2BAAAA,OAAAA,EAAEpN,KACCoN,MAAAA,OAAAA,EAAEnN,QAFP,KAIF,MACG1zC,KAAAA,EAAM4zD,QACY/S,MAAAA,cAAAA,OAAAA,EAAEpN,KAASoN,MAAAA,OAAAA,EAAEnN,QAAlC,KACF,QACQ5rD,MAAAA,MAAM,kBAId+4D,GAAAA,IAAM7gD,EAAM4zD,QAAS,MAAiBh8E,UAAAA,OAAAA,EAAjB,aACrBipE,GAAAA,IAAM7gD,EAAMvQ,MAAO,MAAiB7X,UAAAA,OAAAA,EAAjB,WACnBipE,GAAAA,IAAM7gD,EAAMxQ,KAAM,MAAiB5X,UAAAA,OAAAA,EAAjB,UAGjB,OAAA,KAqBA8jF,CAAa7a,EAAG4a,GAGhBE,SAAAA,EAAQjzB,GAURA,OAPPA,EAAWA,EAAS/mD,WAAWsE,MAAM,MAC5B47B,SAGT6mB,GADAA,EAAWA,EAASj7B,KAAK,MACLxnB,MAAM,MACjBgH,MAEFy7C,EACJj7B,KAAK,KACLxnB,MAAM,MACNwnB,KAAK,cACLroB,QAAQ,yBAA0B,IAClCA,QAAQ,8BAA+B,IACvCA,QAAQ,8BAA+B,IACvCA,QAAQ,gCAAiC,IACzCA,QAAQ,yCAA0C,IAG9Cw2E,SAAAA,EAASC,GACeA,MAAAA,wBAAAA,OAAAA,EAAOz2E,QACpC,SACA,SAAA9P,GAAaA,MAAAA,IAAAA,OAAAA,EAAMo1B,iBAFrB,OASG,IAHCoxD,IAAAA,EAAY,GACZC,EAAoB,GACpBC,EAAuB,GACpBpkF,EAAI,EAAGxC,EAAMmmC,EAAO1jC,OAAQD,EAAIxC,EAAKwC,IAAK,CAC3CooB,IAAAA,EAAQub,EAAO3jC,GACrBkkF,EAAUniF,KAAe/B,UAAAA,OAAAA,EAChBooB,wBAAAA,OAAAA,EAAM41D,UAAUx5E,KACjBo/E,oBAAAA,OAAAA,EAAex7D,EAAMxQ,KAAM5X,GAC1B4jF,oBAAAA,OAAAA,EAAex7D,EAAMvQ,MAAO7X,GAC1B4jF,sBAAAA,OAAAA,EAAex7D,EAAM4zD,QAASh8E,GAJzC,YAOMikF,IAAAA,EAAS77D,EAAM41D,UAAUx5E,KAC1B2/E,EAAkBF,KACrBE,EAAkBF,IAAU,EAC5BG,EAAqBriF,KACFkiF,iBAAAA,OAAAA,EAA4BD,uBAAAA,OAAAA,EAASC,GACpDF,gBAAAA,OAAAA,EAAQ37D,EAAM41D,UAAUj0E,YAF5B,wBAQEygD,IAAAA,EAKN,oQAAA,OAAuB,OAAvB,KAAKs1B,cAAyB,KAAKA,cAAcuE,mBAAqB,GAGtE,sBAAA,OAAuB,OAAvB,KAAKvE,eAAuD,mBAAtB,KAAKmD,aACvC,yBACA,WAEOO,oBAAAA,OAAAA,EAeTU,iVAAAA,OAAAA,EAAUruD,KAAK,WAEfquD,+CAAAA,OAAAA,EAAUjkF,OAQdmkF,sNAAAA,OAAAA,EAAqBvuD,KAAK,MAyBxB,2gBAAA,OAAuB,OAAvB,KAAKiqD,eAAwD,mBAAvB,KAAKuD,cACvC,qGACA,+EAQJ,iJAAA,OAAuB,OAAvB,KAAKvD,eAAuD,mBAAtB,KAAKmD,aACGc,0CAAAA,OAAAA,EACxC,KAAKd,aAAal5E,YAEjByD,QAAQ,kCAAmC,IAC3CA,QAAQ,2BAA4B,IACpCA,QAAQ,wBAAyB,QACpC,MAAA,GAGJ,QAAA,OAAuB,OAAvB,KAAKsyE,eAAwD,mBAAvB,KAAKuD,cACIU,2CAAAA,OAAAA,EACzC,KAAKV,cAAct5E,YAElByD,QAAQ,kCAAmC,IAC3CA,QAAQ,2BAA4B,IACpCA,QAAQ,wBAAyB,QACpC,MAAA,GAEJ8jD,QAAAA,OAAAA,EAAMvnD,WACNq2E,QAAAA,OAAAA,EAAQr2E,WAAWyD,QAAQ,aAAc,UACzC8tE,QAAAA,OAAAA,EAAYvxE,WACZm2E,QAAAA,OAAAA,EAAQn2E,WACRo2E,QAAAA,OAAAA,EAAKp2E,YAEE,OAAA,IAAI0kC,SACT,WACA,sBACA,YACA,cACA+b,KAgGN,CAAA,IAAA,aArjBmB,IAAA,WACX,OAAgC,IAAhC,KAAKk2B,MAAME,UAAU3gF,SACvBq2B,QAAQl5B,MAAR,6CACO,MAkjBb,CAAA,CAAA,IAAA,WAhyBkB8jF,MAAAA,SAAAA,EAAYlM,GACnB,MAAA,CAEL93E,OAAQ,IAAI6+E,EAAamF,EAAYlM,EAAU,KAE/ChW,WAAY,IAAI+c,EAAamF,EAAYA,EAAY,KAErDtoB,KAAM,IAAI+hB,EAAOuG,EAAY,MAyxBnC,CAAA,IAAA,cA7wBqBG,MAAAA,SAAAA,EAAUiD,EAAaC,EAAgBhgB,GAClDvmE,IAAAA,EAAOqjF,EAASrjF,KAAK0wC,KAAK2yC,GAC1B3+C,EAAM2+C,EAAS3+C,IAAIgM,KAAK2yC,GACxBnsB,EAAWmsB,EAASnsB,SAASxmB,KAAK2yC,GAEjCrjF,OAAAA,EACL0kC,EACEA,EACEwyB,EAASqP,EAAYrnE,OAAQonF,GAC7BpvB,EAASqP,EAAYvF,WAAYulB,IAEnChgB,EAAY3L,WAkwBpB,EAAA,GA3FAynB,EAAIvuB,SAAW,CACb2iB,UAAW,GACXsM,WAAY,GACZphF,YAAa,CAAC,GAAI,IAClB+0E,WAAY,GACZj1E,aAAc,IACduiE,UAAW,KACXC,UAAW,KACXugB,KAAM,KACNC,QAAS,EACTnyC,KAAM,KAMNgzC,UAAU/iF,SAAAA,GAEN,KAAmB,iBAAZA,EAAK,IACXI,MAAMyJ,QAAQ7J,EAAK,KAClBA,EAAK,GAAGuJ,eAAe,UAAavJ,EAAK,GAAGuJ,eAAe,WAEtDvJ,OAAAA,EAEHm2D,IAAAA,EAAS,GACT/0D,EAAS,GACX,GAAmB,iBAAZpB,EAAK,IAAmBI,MAAMyJ,QAAQ7J,EAAK,IAAK,CACrD,GAAuB,OAAvB,KAAKu/E,cAAwB,CAC1B,IAAA,IAAI9/E,EAAI,EAAGA,EAAIO,EAAKN,OAAQD,IAC/B02D,EAAO30D,KAAKxB,EAAKP,IAEd8/E,KAAAA,cAAgB,IAAIpB,EAAchoB,GAEpC,IAAA,IAAI12D,EAAI,EAAGxC,EAAM+C,EAAKN,OAAQD,EAAIxC,EAAKwC,IAC1C2B,EAAOI,KAAK,KAAKkhF,aAAa1iF,EAAKP,SAEhC,CACD,GAAuB,OAAvB,KAAK8/E,cAAwB,CAC1B,IAAA,IAAI9/E,EAAI,EAAGA,EAAIO,EAAKN,OAAQD,IAC/B02D,EAAO30D,KAAKxB,EAAKP,GAAGiL,OACpByrD,EAAO30D,KAAKxB,EAAKP,GAAG2xB,QAEjBmuD,KAAAA,cAAgBpB,EAAc8F,qBAAqB9tB,GAErD,IAAA,IAAI12D,EAAI,EAAGxC,EAAM+C,EAAKN,OAAQD,EAAIxC,EAAKwC,IAC1C2B,EAAOI,KAAK,KAAKkhF,aAAa1iF,EAAKP,GAAGiL,MAAO1K,EAAKP,GAAG2xB,SAGlDhwB,OAAAA,GAQTshF,aAAah4E,SAAAA,GAAO0mB,IAAAA,EAAS,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KACvB,OAAuB,OAAvB,KAAKmuD,cACH,KAAKA,cAAclB,WAAW90E,eAAe,cACxC,KAAKg2E,cAAcD,qBAAqB50E,EAAO0mB,GAEjD,KAAKmuD,cAAcP,UAAUt0E,GAE/BA,GAQTo4E,cAAcp4E,SAAAA,EAAO0mB,GACf,OAAuB,OAAvB,KAAKmuD,cACA,KAAKA,cAAcL,aAAa9tD,GAAQkE,KAAK,IAE/ClE,GAETmuD,cAAe,MAGjBO,EAAI9c,cAAgB,CAClBhkE,WAAY,IACZqkE,YAAa,KACbp1B,KAAK,EACLq1B,UAAW,GACXpkE,aAAc,GACdqkE,SAAU,KACVC,eAAgB,GAChBwf,mBAAmB,GAGrBlmF,OAAOC,QAAU+iF;;AC5qBjB,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA/LA,IAAM1F,EAAS58E,QAAQ,YACjBg+E,EAAeh+E,QAAQ,0BACvB8/E,EAAW9/E,QAAQ,qBACnBsiF,EAAMtiF,QAAQ,SAEd0mF,EA0LN,SAAA,GAxLc7/E,SAAAA,EAAAA,GACJA,OADa,EAAA,KAAA,GACbA,EAAAA,KAAAA,EAAAA,GAAAA,KAAAA,KAAAA,IAuLV,OAAA,EAAA,EA1L0By7E,GA0L1B,EAAA,EAAA,CAAA,CAAA,IAAA,oBApLsB,MAAA,WACbK,KAAAA,MAAMz1E,MAAQ,IAAI8wE,EAAa,KAAKtH,UAAW,EAAG,OAmL3D,CAAA,IAAA,qBAhLuB,MAAA,WACXiM,IAAAA,EAAsB,KAAtBA,MAAOhM,EAAe,KAAfA,WACTyM,EAAiB,KAAKxhF,YAAY,KAAKA,YAAYM,OAAS,GAGlEygF,EAAMU,gBAAkB,IAAIrF,EAAarH,EAAYyM,EAAgB,KAErET,EAAM/uD,OAAS,IAAIgpD,EAAOjG,EAAY,KAyK1C,CAAA,IAAA,eAtKiB,MAAA,WACLgM,IAAAA,EAAuB,KAAvBA,MAAO/gF,EAAgB,KAAhBA,YACPyjE,EAAiBsd,EAAjBtd,aACFie,EAAW,IAAIxD,EACfhJ,EAAU,GACVyM,EACJZ,EAAMI,oBAAoB7gF,OAAS,EAC/BygF,EAAMI,oBAAoBJ,EAAMI,oBAAoB7gF,OAAS,GAC7D,KAAK0gF,mBAGPhvD,EAAS8yD,EAAYlD,YACvBF,EACAA,EAASp2E,MAAMy1E,EAAMz1E,OACrBq2E,EAAmB,GACnBle,EAAa,IAEfyR,EAAQ9yE,KAAK4vB,GAER,IAAA,IAAI3xB,EAAI,EAAGxC,EAAMmC,EAAYM,OAAQD,EAAIxC,EAAKwC,IACjD2xB,EAAS8yD,EAAYlD,YACnBF,EACA1vD,EACA2vD,EAAmBthF,GACnBojE,EAAapjE,IAEf60E,EAAQ9yE,KAAK4vB,GAGf+uD,EAAMI,oBAAoB/+E,KAAK8yE,GAC/BwM,EAAS3+C,IAAI2+C,EAASnsB,SAASwrB,EAAMU,gBAAiBzvD,GAAS+uD,EAAM/uD,QACrE+uD,EAAME,UAAU7+E,KAAKs/E,KAuIzB,CAAA,IAAA,WA/HWp2E,MAAAA,SAAAA,GACFs1E,KAAAA,OAIEG,IAHCA,IAEJW,EAFIX,EAAU,KAAVA,MACJgE,EAAW,EAERhE,EAAME,UAAU3gF,OAASgL,EAAMhL,OAAS,GACxC+hF,KAAAA,eAEDnN,IAAAA,EAAU,GAEZ,GAAmB,IAAnB,KAAKJ,UAEL,IAAA,IAAIwN,EAAa,EAAGzkF,EAAMyN,EAAMhL,OAAS,EACzCgiF,EAAazkF,EACbykF,IACA,CAEAZ,EAAWX,EAAME,UAAUqB,GAKtB,IAHCj6D,IAAAA,EAAU/c,EAAMg3E,GAChBhxE,EAAOhG,EAAMg3E,EAAa,GAC1BtwD,EAAS0vD,EAAS1c,SAAS,CAAC38C,IACzBhoB,EAAI,EAAGA,EAAI2xB,EAAOggC,QAAQ1xD,OAAQD,IAAK,CACxC5C,IAAAA,EAAQu0B,EAAOggC,QAAQ3xD,GAAKiR,EAElCyzE,GAAYnnF,KAAKonF,IAAIvnF,GAGrBu0B,EAAO+/B,OAAO1xD,GAAK5C,EACnBy3E,EAAQ9yE,KAAK4vB,EAAOggC,eAKtB,IAAA,IAAIswB,EAAa,EAAGzkF,EAAMyN,EAAMhL,OAAS,EACzCgiF,EAAazkF,EACbykF,IACA,CAEAZ,EAAWX,EAAME,UAAUqB,GAKtB,IAHCj6D,IAAAA,EAAU/c,EAAMg3E,GAChBhxE,EAAOhG,EAAMg3E,EAAa,GAC1BtwD,EAAS0vD,EAAS1c,SAAS38C,GACxBhoB,EAAI,EAAGA,EAAI2xB,EAAOggC,QAAQ1xD,OAAQD,IAAK,CACxC5C,IAAAA,EAAQu0B,EAAOggC,QAAQ3xD,GAAKiR,EAAKjR,GAEvC0kF,GAAYnnF,KAAKonF,IAAIvnF,GAGrBu0B,EAAO+/B,OAAO1xD,GAAK5C,EACnBy3E,EAAQ9yE,KAAK4vB,EAAOggC,UAMnB+yB,OADFlE,KAAAA,UAAYkE,EACVA,IAsEX,CAAA,IAAA,mBAnEqB,MAAA,WACZ,IAAA,IAAI1kF,EAAI,KAAK0gF,MAAME,UAAU3gF,OAAS,EAAGD,GAAK,EAAGA,IAC/C0gF,KAAAA,MAAME,UAAU5gF,GAAG4hF,qBAiE9B,CAAA,IAAA,MAAA,MAAA,WApDI32E,IAAAA,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACR63E,EAAsB,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAElB,IAAC,KAAKpN,WAAY,OAAO,KAEtBgL,IADCA,IAIJkE,EAJIlE,EAAU,KAAVA,MACDA,EAAME,UAAU3gF,OAAS6iF,GACzBd,KAAAA,eAGH,GAAmB,IAAnB,KAAKvN,UACF,IAAA,IAAIz0E,EAAI,EAAGA,EAAIiL,EAAMhL,OAAQD,IAAK,CAErC4kF,EADqBlE,EAAME,UAAU5gF,GAAG2kE,SAAS,CAAC15D,EAAMjL,KAC9B2xD,aAGvB,IAAA,IAAI3xD,EAAI,EAAGA,EAAIiL,EAAMhL,OAAQD,IAAK,CAErC4kF,EADqBlE,EAAME,UAAU5gF,GAAG2kE,SAAS15D,EAAMjL,IAC7B2xD,QAG1B,OAAoB,IAApB,KAAK+iB,WACAkQ,EAAW,GAEbA,IA6BX,CAAA,IAAA,aAtBe,MAAA,WACL,MAAA,IAAI10E,MACL,GAAA,OAAA,KAAKxP,YAAY8D,KADtB,2CAqBJ,EAAA,GAfAigF,EAAY3yB,SAAW,CACrB2iB,UAAW,EACX90E,YAAa,CAAC,IACd+0E,WAAY,EACZj1E,aAAc,IACduiE,UAAW,KACXC,UAAW,KACXugB,KAAM,KACNC,QAAS,EACTnyC,KAAM,KACNwvC,cAAe,MAGjB2E,EAAYlhB,cAAgB8c,EAAI9c,cAEhClmE,OAAOC,QAAUmnF;;AChGjB,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA/FA,IAAM9J,EAAS58E,QAAQ,YACjBg+E,EAAeh+E,QAAQ,0BACvBsiF,EAAMtiF,QAAQ,SAEd8mF,EA2FN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EA3FmBxE,GA2FnB,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WA1FkBa,MAAAA,SAAAA,EAAYlM,GACnB,MAAA,CAGLsP,YAAa,IAAIvI,EAAamF,EAAYlM,EAAU,KACpD8P,YAAa,IAAI/I,EAAamF,EAAYA,EAAY,KACtD6D,UAAW,IAAIpK,EAAOuG,EAAY,GAElC8D,aAAc,IAAIjJ,EAAamF,EAAYlM,EAAU,KACrDiQ,aAAc,IAAIlJ,EAAamF,EAAYA,EAAY,KACvDgE,WAAY,IAAIvK,EAAOuG,EAAY,GAEnCiC,aAAc,IAAIpH,EAAamF,EAAYlM,EAAU,KACrDmQ,aAAc,IAAIpJ,EAAamF,EAAYA,EAAY,KACvDkE,WAAY,IAAIzK,EAAOuG,EAAY,GAGnCmE,qBAAsB,IAAItJ,EAAamF,EAAYlM,EAAU,KAC7DsQ,qBAAsB,IAAIvJ,EAAamF,EAAYA,EAAY,KAC/DqE,mBAAoB,IAAI5K,EAAOuG,EAAY,MAuEjD,CAAA,IAAA,cA3DqBG,MAAAA,SAAAA,EAAUiD,EAAaC,EAAgBhgB,GAClDtmE,IAAAA,EAAUojF,EAASpjF,QAAQywC,KAAK2yC,GAChC3+C,EAAM2+C,EAAS3+C,IAAIgM,KAAK2yC,GACxBnsB,EAAWmsB,EAASnsB,SAASxmB,KAAK2yC,GAClC7mB,EAAkB6mB,EAAS7mB,gBAAgB9rB,KAAK2yC,GAChDzjF,EAAOyjF,EAASzjF,KAAK8wC,KAAK2yC,GAE1B9kB,EAAYt+D,EAChBykC,EACEA,EACEwyB,EAASqP,EAAY+f,YAAaA,GAClCpvB,EAASqP,EAAYugB,YAAaP,IAEpChgB,EAAYwgB,YAIVpoB,EAAa1+D,EACjBykC,EACEA,EACEwyB,EAASqP,EAAYygB,aAAcV,GACnCpvB,EAASqP,EAAY0gB,aAAcV,IAErChgB,EAAY2gB,aAKVnoB,EAAa9+D,EACjBykC,EACEA,EACEwyB,EAASqP,EAAY4e,aAAcmB,GACnCpvB,EAASqP,EAAY4gB,aAAcZ,IAErChgB,EAAY6gB,aAKVI,EAAY5nF,EAChB8kC,EACEA,EACEwyB,EAASqP,EAAY8gB,qBAAsBf,GAC3CpvB,EAASqP,EAAY+gB,qBAAsBf,IAE7ChgB,EAAYghB,qBAKVnoB,EAAa5C,EAAgBmC,EAAY4nB,GACzClnB,EAAY7C,EAAgB+B,EAAWipB,GAItChrB,OAAAA,EAAgBuC,EAAYn/D,EAHtB8kC,EAAI06B,EAAYC,SAOjC,EAAA,GAAAhgE,OAAOC,QAAUunF;;ACnEjB,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA5BA,IAAMlK,EAAS58E,QAAQ,YACjB8mF,EAAO9mF,QAAQ,UACf0mF,EAAc1mF,QAAQ,mBAEtB0nF,EAwBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAxB2BhB,GAwB3B,EAAA,EAAA,CAAA,CAAA,IAAA,WAvBWvD,MAAAA,SAAAA,EAAYlM,GACZ6P,OAAAA,EAAKh7E,UAAUo3E,SAAS92E,KAAK,KAAM+2E,EAAYlM,KAsB1D,CAAA,IAAA,cAXcqM,MAAAA,SAAAA,EAAUiD,EAAaC,EAAgBhgB,GAC1CsgB,OAAAA,EAAKh7E,UAAU03E,YAAYp3E,KAChC,KACAk3E,EACAiD,EACAC,EACAhgB,OAKN,EAAA,GAAAlnE,OAAOC,QAAUmoF;;ACiEjB,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA7FA,IAAM9K,EAAS58E,QAAQ,YACjBg+E,EAAeh+E,QAAQ,0BACvBsiF,EAAMtiF,QAAQ,SAEd2nF,EAyFN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAzFkBrF,GAyFlB,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WAxFkBa,MAAAA,SAAAA,EAAYlM,GACnB,MAAA,CAGL2Q,sBAAuB,IAAI5J,EAAamF,EAAYlM,EAAU,KAC9D4Q,uBAAwB,IAAI7J,EAAamF,EAAYA,EAAY,KACjE/lB,eAAgB,IAAIwf,EAAOuG,EAAY,GAGvC2E,qBAAsB,IAAI9J,EAAamF,EAAYlM,EAAU,KAC7D8Q,sBAAuB,IAAI/J,EAAamF,EAAYA,EAAY,KAChE3lB,cAAe,IAAIof,EAAOuG,EAAY,GAGtC6E,qBAAsB,IAAIhK,EAAamF,EAAYlM,EAAU,KAC7DgR,sBAAuB,IAAIjK,EAAamF,EAAYA,EAAY,KAChE+E,cAAe,IAAItL,EAAOuG,EAAY,MAwE5C,CAAA,IAAA,cA5DqBG,MAAAA,SAAAA,EAAUiD,EAAaC,EAAgBhgB,GAClDtmE,IAAAA,EAAUojF,EAASpjF,QAAQywC,KAAK2yC,GAChC3+C,EAAM2+C,EAAS3+C,IAAIgM,KAAK2yC,GACxBnsB,EAAWmsB,EAASnsB,SAASxmB,KAAK2yC,GAClC7mB,EAAkB6mB,EAAS7mB,gBAAgB9rB,KAAK2yC,GAChDzjF,EAAOyjF,EAASzjF,KAAK8wC,KAAK2yC,GAC1BhE,EAAUgE,EAAShE,QAAQ3uC,KAAK2yC,GAChClE,EAAgBkE,EAASlE,cAAczuC,KAAK2yC,GAG5CjmB,EAAan9D,EACjBykC,EACEA,EACEwyB,EAASqP,EAAYohB,sBAAuBrB,GAC5CpvB,EAASqP,EAAYqhB,uBAAwBrB,IAE/ChgB,EAAYpJ,iBAKVK,EAAYv9D,EAChBykC,EACEA,EACEwyB,EAASqP,EAAYshB,qBAAsBvB,GAC3CpvB,EAASqP,EAAYuhB,sBAAuBvB,IAE9ChgB,EAAYhJ,gBAKVK,EAAOh+D,EACX8kC,EACEA,EACEwyB,EAASqP,EAAYwhB,qBAAsBzB,GAC3CpvB,EACEqP,EAAYyhB,sBACZxrB,EAAgBgB,EAAW+oB,KAG/BhgB,EAAY0hB,gBAMTvjD,OAAAA,EACL83B,EACE93B,EACE26C,EAAQjiB,EAAWS,KAAMT,EAAWU,SACpCqhB,EAAc/hB,IAEhBQ,GAEFpB,EAAgB+pB,EAAgBnpB,QAKtC,EAAA,GAAA/9D,OAAOC,QAAUooF;;AClEjB,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,GAAA,WAAA,EAAA,IAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,GAAA,QAAA,IAAA,EAAA,MAAA,IAAA,eAAA,6DAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,eAAA,OAAA,eAAA,SAAA,GAAA,OAAA,EAAA,WAAA,OAAA,eAAA,KAAA,GAAA,SAAA,EAAA,EAAA,GAAA,GAAA,mBAAA,GAAA,OAAA,EAAA,MAAA,IAAA,UAAA,sDAAA,EAAA,UAAA,OAAA,OAAA,GAAA,EAAA,UAAA,CAAA,YAAA,CAAA,MAAA,EAAA,UAAA,EAAA,cAAA,KAAA,GAAA,EAAA,EAAA,GAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,EAAA,UAAA,EAAA,IAAA,EAAA,GA1BA,IAAMA,EAAM3nF,QAAQ,SACd0mF,EAAc1mF,QAAQ,mBAEtBmoF,EAuBN,SAAA,GAAA,SAAA,IAAA,OAAA,EAAA,KAAA,GAAA,EAAA,KAAA,EAAA,GAAA,MAAA,KAAA,YAAA,OAAA,EAAA,EAvB0BzB,GAuB1B,EAAA,EAAA,KAAA,CAAA,CAAA,IAAA,WAtBkBvD,MAAAA,SAAAA,EAAYlM,GACnB0Q,OAAAA,EAAI77E,UAAUo3E,SAASC,EAAYlM,KAqB9C,CAAA,IAAA,cAVqBqM,MAAAA,SAAAA,EAAUiD,EAAaC,EAAgBhgB,GACjDmhB,OAAAA,EAAI77E,UAAU03E,YACnBF,EACAiD,EACAC,EACAhgB,OAKN,EAAA,GAAAlnE,OAAOC,QAAU4oF;;AC3BjB,IAAMnR,EAAah3E,QAAQ,gBACrBuC,EAAgBvC,QAAQ,oBAAoBuC,cAC5C0xD,EAAQj0D,QAAQ,WAChBooF,EAASpoF,QAAQ,YACjBw7B,EAASx7B,QAAQ,YACjB6zD,EAAS7zD,QAAQ,YACCA,EAAAA,QAAQ,kBAAxBolE,EAAAA,EAAAA,YACFyR,EAAgB72E,QAAQ,oBACxB45E,EAAmB55E,QAAQ,wBAC3B01E,EAAc11E,QAAQ,kBACNA,EAAAA,QAAQ,eAAtBu7E,EAAAA,EAAAA,UACFmL,EAAc1mF,QAAQ,6BACtB0nF,EAAe1nF,QAAQ,8BACvBmoF,EAAcnoF,QAAQ,6BACtBsiF,EAAMtiF,QAAQ,mBACd8mF,EAAO9mF,QAAQ,oBACf2nF,EAAM3nF,QAAQ,mBACdP,EAAMO,QAAQ,mBACd42E,EAAM52E,QAAQ,mBACd08D,EAAO18D,QAAQ,oBACfqC,EAASrC,QAAQ,sBACjBo2D,EAAep2D,QAAQ,6BACvBq2D,EAASr2D,QAAQ,sBACjBsP,EAAQtP,QAAQ,qBAChBw5C,EAAUx5C,QAAQ,wBAClB2gF,EAAgB3gF,QAAQ,8BACxBuzD,EAAQvzD,QAAQ,qBAEhBqoF,EAAQ,CACZrR,WAAAA,EACAz0E,cAAAA,EACA6lF,OAAAA,EACAn0B,MAAAA,EACAz4B,OAAAA,EACAq4B,OAAAA,EACAuR,YAAAA,EACAyR,cAAAA,EACA+C,iBAAAA,EACA2B,UAAAA,EACA7F,YAAAA,EACA3U,UAAW,CACT2lB,YAAAA,EACAgB,aAAAA,EACAS,YAAAA,EACA7F,IAAAA,EACAwE,KAAAA,EACAa,IAAAA,GAEFW,UAAW,CACT7oF,IAAAA,EACAm3E,IAAAA,EACAla,KAAAA,EACAr6D,OAAAA,EACA+zD,aAAAA,EACAC,OAAAA,EACA/mD,MAAAA,EACAkqC,QAAAA,EACAmnC,cAAAA,EACAptB,MAAAA,IAIkB,oBAAXuW,SACTA,OAAOue,MAAQA,GAGK,oBAAX/oF,SACTA,OAAOC,QAAU8oF","file":"brain-browser.min.js","sourceRoot":"../src","sourcesContent":["/**\n * Leaky Relu Activation, aka Leaky Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return weight > 0 ? weight : 0.01 * weight;\n}\n\n/**\n * Leaky Relu derivative\n * @param weight\n * @param delta\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return weight > 0 ? error : 0.01 * error;\n}\n\nmodule.exports = { activate, measure };\n","/**\n * Relu Activation, aka Rectified Linear Unit Activation\n * @description https://en.wikipedia.org/wiki/Rectifier_(neural_networks)\n * @param weight\n * @returns {number}\n */\nfunction activate(weight) {\n  return Math.max(0, weight);\n}\n\n/**\n * Leaky Relu derivative\n * @param weight\n * @param delta\n * @returns {number}\n */\nfunction measure(weight, delta) {\n  if (weight <= 0) {\n    return 0;\n  }\n  return delta;\n}\n\nmodule.exports = { activate, measure };\n","/**\n * sigmoid activation\n * @param value\n * @returns {number}\n */\nfunction activate(value) {\n  return 1 / (1 + Math.exp(-value));\n}\n\n/**\n * sigmoid derivative\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction measure(weight, error) {\n  return weight * (1 - weight) * error;\n}\n\nmodule.exports = { activate, measure };\n","/**\n *\n * @param weight\n * @returns {number}\n */\nfunction tanh(weight) {\n  return Math.tanh(weight);\n}\n\n/**\n * @description grad for z = tanh(x) is (1 - z^2)\n * @param weight\n * @param error\n * @returns {number}\n */\nfunction tanhDerivative(weight, error) {\n  return (1 - weight * weight) * error;\n}\n\nmodule.exports = { tanh, tanhDerivative };\n","const leakyRelu = require('./leaky-relu');\nconst relu = require('./relu');\nconst sigmoid = require('./sigmoid');\nconst tanh = require('./tanh');\n\nmodule.exports = { leakyRelu, relu, sigmoid, tanh };\n","/**\n *\n * @param {NeuralNetwork|constructor} Classifier\n * @param {object} opts\n * @param {object} trainOpts\n * @param {object} trainSet\n * @param {object} testSet\n * @returns {void|*}\n */\nfunction testPartition(Classifier, opts, trainOpts, trainSet, testSet) {\n  const classifier = new Classifier(opts);\n  const beginTrain = Date.now();\n  const trainingStats = classifier.train(trainSet, trainOpts);\n  const beginTest = Date.now();\n  const testStats = classifier.test(testSet);\n  const endTest = Date.now();\n  const stats = Object.assign({}, testStats, {\n    trainTime: beginTest - beginTrain,\n    testTime: endTest - beginTest,\n    iterations: trainingStats.iterations,\n    trainError: trainingStats.error,\n    learningRate: trainOpts.learningRate,\n    hidden: classifier.hiddenSizes,\n    network: classifier.toJSON(),\n  });\n\n  return stats;\n}\n\n/**\n * Randomize array element order in-place.\n * Using Durstenfeld shuffle algorithm.\n * source: http://stackoverflow.com/a/12646864/1324039\n */\nfunction shuffleArray(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\n\n/**\n *\n * @param {NeuralNetwork|constructor} Classifier\n * @param {object} data\n * @param {object} opts\n * @param {object} trainOpts\n * @param {number} k\n * @returns {\n *  {\n *    avgs: {\n *      error: number,\n *      trainTime: number,\n *      testTime: number,\n *      iterations: number,\n *      trainError: number\n *    },\n *    stats: {\n *      truePos: number,\n *      trueNeg: number,\n *      falsePos: number,\n *      falseNeg: number,\n *      total: number\n *    },\n *    sets: Array,\n *    misclasses: Array\n *  }\n * }\n */\nfunction crossValidate(Classifier, data, opts, trainOpts, k) {\n  k = k || 4;\n  const size = data.length / k;\n\n  if (data.constructor === Array) {\n    shuffleArray(data);\n  } else {\n    const newData = {};\n    shuffleArray(Object.keys(data)).forEach(key => {\n      newData[key] = data[key];\n    });\n    data = newData;\n  }\n\n  const avgs = {\n    error: 0,\n    trainTime: 0,\n    testTime: 0,\n    iterations: 0,\n    trainError: 0,\n  };\n\n  const stats = {\n    truePos: 0,\n    trueNeg: 0,\n    falsePos: 0,\n    falseNeg: 0,\n    total: 0,\n  };\n\n  const misclasses = [];\n  const results = [];\n\n  for (let i = 0; i < k; i++) {\n    const dclone = data.slice(0);\n    const testSet = dclone.splice(i * size, size);\n    const trainSet = dclone;\n    const result = testPartition(Classifier, opts, trainOpts, trainSet, testSet);\n\n    Object.keys(avgs).forEach(avg => {\n      avgs[avg] += result[avg];\n    });\n\n    Object.keys(stats).forEach(stat => {\n      stats[stat] += result[stat];\n    });\n\n    misclasses.concat(results.misclasses);\n\n    results.push(result);\n  }\n\n  Object.keys(avgs).forEach(avg => {\n    avgs[avg] /= k;\n  });\n\n  stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n  stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n  stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n\n  stats.testSize = size;\n  stats.trainSize = data.length - size;\n\n  return {\n    avgs,\n    stats,\n    sets: results,\n    misclasses,\n  };\n}\n\nmodule.exports = { testPartition, shuffleArray, crossValidate };\n","function setupArguments(args) {\n  const newArguments = new Array(args.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i];\n    if (arg.toArray) {\n      newArguments[i] = arg.toArray();\n    } else {\n      newArguments[i] = arg;\n    }\n  }\n  return newArguments;\n}\n\nfunction mock1D() {\n  const args = setupArguments(arguments);\n  const row = new Float32Array(this.output.x);\n  for (let x = 0; x < this.output.x; x++) {\n    this.thread.x = x;\n    this.thread.y = 0;\n    this.thread.z = 0;\n    row[x] = this._fn.apply(this, args);\n  }\n  return row;\n}\n\nfunction mock2D() {\n  const args = setupArguments(arguments);\n  const matrix = new Array(this.output.y);\n  for (let y = 0; y < this.output.y; y++) {\n    const row = new Float32Array(this.output.x);\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      row[x] = this._fn.apply(this, args);\n    }\n    matrix[y] = row;\n  }\n  return matrix;\n}\n\nfunction mock2DGraphical() {\n  const args = setupArguments(arguments);\n  for (let y = 0; y < this.output.y; y++) {\n    for (let x = 0; x < this.output.x; x++) {\n      this.thread.x = x;\n      this.thread.y = y;\n      this.thread.z = 0;\n      this._fn.apply(this, args);\n    }\n  }\n}\n\nfunction mock3D() {\n  const args = setupArguments(arguments);\n  const cube = new Array(this.output.z);\n  for (let z = 0; z < this.output.z; z++) {\n    const matrix = new Array(this.output.y);\n    for (let y = 0; y < this.output.y; y++) {\n      const row = new Float32Array(this.output.x);\n      for (let x = 0; x < this.output.x; x++) {\n        this.thread.x = x;\n        this.thread.y = y;\n        this.thread.z = z;\n        row[x] = this._fn.apply(this, args);\n      }\n      matrix[y] = row;\n    }\n    cube[z] = matrix;\n  }\n  return cube;\n}\n\nfunction apiDecorate(kernel) {\n  kernel.setOutput = (output) => {\n    kernel.output = setupOutput(output);\n    if (kernel.graphical) {\n      setupGraphical(kernel);\n    }\n  };\n  kernel.toJSON = () => {\n    throw new Error('Not usable with gpuMock');\n  };\n  kernel.setConstants = (flag) => {\n    kernel.constants = flag;\n    return kernel;\n  };\n  kernel.setGraphical = (flag) => {\n    kernel.graphical = flag;\n    return kernel;\n  };\n  kernel.setCanvas = (flag) => {\n    kernel.canvas = flag;\n    return kernel;\n  };\n  kernel.setContext = (flag) => {\n    kernel.context = flag;\n    return kernel;\n  };\n  kernel.exec = function() {\n    return new Promise((resolve, reject) => {\n      try {\n        resolve(kernel.apply(kernel, arguments));\n      } catch(e) {\n        reject(e);\n      }\n    });\n  };\n  kernel.getPixels = (flip) => {\n    const {x, y} = kernel.output;\n    // cpu is not flipped by default\n    return flip ? flipPixels(kernel._imageData.data, x, y) : kernel._imageData.data.slice(0);\n  };\n  kernel.color = function(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = kernel.output.x;\n    const height = kernel.output.y;\n\n    const x = kernel.thread.x;\n    const y = height - kernel.thread.y - 1;\n\n    const index = x + y * width;\n\n    kernel._colorData[index * 4 + 0] = r;\n    kernel._colorData[index * 4 + 1] = g;\n    kernel._colorData[index * 4 + 2] = b;\n    kernel._colorData[index * 4 + 3] = a;\n  };\n\n  // these are added for api compatibility, but have no affect\n  kernel.setWarnVarUsage = () => {\n    return kernel;\n  };\n  kernel.setOptimizeFloatMemory = () => {\n    return kernel;\n  };\n  kernel.setArgumentTypes = () => {\n    return kernel;\n  };\n  kernel.setDebug = () => {\n    return kernel;\n  };\n  kernel.setLoopMaxIterations = () => {\n    return kernel;\n  };\n  kernel.setPipeline = () => {\n    return kernel;\n  };\n  kernel.setPrecision = () => {\n    return kernel;\n  };\n  kernel.setImmutable = () => {\n    return kernel;\n  };\n  kernel.setFunctions = () => {\n    return kernel;\n  };\n  kernel.addSubKernel = () => {\n    return kernel;\n  };\n  kernel.destroy = () => {};\n  kernel.validateSettings = () => {};\n  if (kernel.graphical && kernel.output) {\n    setupGraphical(kernel);\n  }\n  return kernel;\n}\n\nfunction setupGraphical(kernel) {\n  const {x, y} = kernel.output;\n  if (kernel.context && kernel.context.createImageData) {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = kernel.context.createImageData(x, y);\n    kernel._colorData = data;\n  } else {\n    const data = new Uint8ClampedArray(x * y * 4);\n    kernel._imageData = { data };\n    kernel._colorData = data;\n  }\n}\n\nfunction setupOutput(output) {\n  let result = null;\n  if (output.length) {\n    if (output.length === 3) {\n      const [x,y,z] = output;\n      result = { x, y, z };\n    } else if (output.length === 2) {\n      const [x,y] = output;\n      result = { x, y };\n    } else {\n      const [x] = output;\n      result = { x };\n    }\n  } else {\n    result = output;\n  }\n  return result;\n}\n\nfunction gpuMock(fn, settings = {}) {\n  const output = settings.output ? setupOutput(settings.output) : null;\n  function kernel() {\n    if (kernel.output.z) {\n      return mock3D.apply(kernel, arguments);\n    } else if (kernel.output.y) {\n      if (kernel.graphical) {\n        return mock2DGraphical.apply(kernel, arguments);\n      }\n      return mock2D.apply(kernel, arguments);\n    } else {\n      return mock1D.apply(kernel, arguments);\n    }\n  }\n  kernel._fn = fn;\n  kernel.constants = settings.constants || null;\n  kernel.context = settings.context || null;\n  kernel.canvas = settings.canvas || null;\n  kernel.graphical = settings.graphical || false;\n  kernel._imageData = null;\n  kernel._colorData = null;\n  kernel.output = output;\n  kernel.thread = {\n    x: 0,\n    y: 0,\n    z: 0\n  };\n  return apiDecorate(kernel);\n}\n\nfunction flipPixels(pixels, width, height) {\n  // https://stackoverflow.com/a/41973289/1324039\n  const halfHeight = height / 2 | 0; // the | 0 keeps the result an int\n  const bytesPerRow = width * 4;\n  // make a temp buffer to hold one row\n  const temp = new Uint8ClampedArray(width * 4);\n  const result = pixels.slice(0);\n  for (let y = 0; y < halfHeight; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n\n    // make copy of a row on the top half\n    temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n    // copy a row from the bottom half to the top\n    result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n    // copy the copy of the top half row to the bottom half\n    result.set(temp, bottomOffset);\n  }\n  return result;\n}\n\nmodule.exports = {\n  gpuMock\n};\n","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh === 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (!declaration) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.type === types._function);\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type === types._function) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      this.enterLexicalScope();\n      this.checkLVal(clause.param, \"let\");\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterLexicalScope();\n    }\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type === \"ClassDeclaration\" ||\n      node.body.type === \"VariableDeclaration\" && node.body.kind !== \"var\" ||\n      node.body.type === \"FunctionDeclaration\" && (this.strict || node.body.generator || node.body.async))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" ||\n      (init.type === \"VariableDeclaration\" && init.declarations[0].init != null &&\n       (this.strict || init.declarations[0].id.type !== \"Identifier\")))\n      { this.raise(init.start, \"Invalid assignment in for-in loop head\"); }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type !== types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, this.inModule && !this.inFunction ? \"let\" : \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var member = this$1.parseClassMember(classBody);\n    if (member && member.type === \"MethodDefinition\" && member.kind === \"constructor\") {\n      if (hadConstructor) { this$1.raise(member.start, \"Duplicate constructor in the same class\"); }\n      hadConstructor = true;\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMember = function(classBody) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(classBody, method, isGenerator, isAsync);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this$1.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this$1.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n    node = this.startNode();\n    this.next();\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc)\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this$1.type === types.eof) { this$1.raise(this$1.pos, \"Unterminated template literal\"); }\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Can not use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\nvar data = {\n  \"$LONE\": [\n    \"ASCII\",\n    \"ASCII_Hex_Digit\",\n    \"AHex\",\n    \"Alphabetic\",\n    \"Alpha\",\n    \"Any\",\n    \"Assigned\",\n    \"Bidi_Control\",\n    \"Bidi_C\",\n    \"Bidi_Mirrored\",\n    \"Bidi_M\",\n    \"Case_Ignorable\",\n    \"CI\",\n    \"Cased\",\n    \"Changes_When_Casefolded\",\n    \"CWCF\",\n    \"Changes_When_Casemapped\",\n    \"CWCM\",\n    \"Changes_When_Lowercased\",\n    \"CWL\",\n    \"Changes_When_NFKC_Casefolded\",\n    \"CWKCF\",\n    \"Changes_When_Titlecased\",\n    \"CWT\",\n    \"Changes_When_Uppercased\",\n    \"CWU\",\n    \"Dash\",\n    \"Default_Ignorable_Code_Point\",\n    \"DI\",\n    \"Deprecated\",\n    \"Dep\",\n    \"Diacritic\",\n    \"Dia\",\n    \"Emoji\",\n    \"Emoji_Component\",\n    \"Emoji_Modifier\",\n    \"Emoji_Modifier_Base\",\n    \"Emoji_Presentation\",\n    \"Extender\",\n    \"Ext\",\n    \"Grapheme_Base\",\n    \"Gr_Base\",\n    \"Grapheme_Extend\",\n    \"Gr_Ext\",\n    \"Hex_Digit\",\n    \"Hex\",\n    \"IDS_Binary_Operator\",\n    \"IDSB\",\n    \"IDS_Trinary_Operator\",\n    \"IDST\",\n    \"ID_Continue\",\n    \"IDC\",\n    \"ID_Start\",\n    \"IDS\",\n    \"Ideographic\",\n    \"Ideo\",\n    \"Join_Control\",\n    \"Join_C\",\n    \"Logical_Order_Exception\",\n    \"LOE\",\n    \"Lowercase\",\n    \"Lower\",\n    \"Math\",\n    \"Noncharacter_Code_Point\",\n    \"NChar\",\n    \"Pattern_Syntax\",\n    \"Pat_Syn\",\n    \"Pattern_White_Space\",\n    \"Pat_WS\",\n    \"Quotation_Mark\",\n    \"QMark\",\n    \"Radical\",\n    \"Regional_Indicator\",\n    \"RI\",\n    \"Sentence_Terminal\",\n    \"STerm\",\n    \"Soft_Dotted\",\n    \"SD\",\n    \"Terminal_Punctuation\",\n    \"Term\",\n    \"Unified_Ideograph\",\n    \"UIdeo\",\n    \"Uppercase\",\n    \"Upper\",\n    \"Variation_Selector\",\n    \"VS\",\n    \"White_Space\",\n    \"space\",\n    \"XID_Continue\",\n    \"XIDC\",\n    \"XID_Start\",\n    \"XIDS\"\n  ],\n  \"General_Category\": [\n    \"Cased_Letter\",\n    \"LC\",\n    \"Close_Punctuation\",\n    \"Pe\",\n    \"Connector_Punctuation\",\n    \"Pc\",\n    \"Control\",\n    \"Cc\",\n    \"cntrl\",\n    \"Currency_Symbol\",\n    \"Sc\",\n    \"Dash_Punctuation\",\n    \"Pd\",\n    \"Decimal_Number\",\n    \"Nd\",\n    \"digit\",\n    \"Enclosing_Mark\",\n    \"Me\",\n    \"Final_Punctuation\",\n    \"Pf\",\n    \"Format\",\n    \"Cf\",\n    \"Initial_Punctuation\",\n    \"Pi\",\n    \"Letter\",\n    \"L\",\n    \"Letter_Number\",\n    \"Nl\",\n    \"Line_Separator\",\n    \"Zl\",\n    \"Lowercase_Letter\",\n    \"Ll\",\n    \"Mark\",\n    \"M\",\n    \"Combining_Mark\",\n    \"Math_Symbol\",\n    \"Sm\",\n    \"Modifier_Letter\",\n    \"Lm\",\n    \"Modifier_Symbol\",\n    \"Sk\",\n    \"Nonspacing_Mark\",\n    \"Mn\",\n    \"Number\",\n    \"N\",\n    \"Open_Punctuation\",\n    \"Ps\",\n    \"Other\",\n    \"C\",\n    \"Other_Letter\",\n    \"Lo\",\n    \"Other_Number\",\n    \"No\",\n    \"Other_Punctuation\",\n    \"Po\",\n    \"Other_Symbol\",\n    \"So\",\n    \"Paragraph_Separator\",\n    \"Zp\",\n    \"Private_Use\",\n    \"Co\",\n    \"Punctuation\",\n    \"P\",\n    \"punct\",\n    \"Separator\",\n    \"Z\",\n    \"Space_Separator\",\n    \"Zs\",\n    \"Spacing_Mark\",\n    \"Mc\",\n    \"Surrogate\",\n    \"Cs\",\n    \"Symbol\",\n    \"S\",\n    \"Titlecase_Letter\",\n    \"Lt\",\n    \"Unassigned\",\n    \"Cn\",\n    \"Uppercase_Letter\",\n    \"Lu\"\n  ],\n  \"Script\": [\n    \"Adlam\",\n    \"Adlm\",\n    \"Ahom\",\n    \"Anatolian_Hieroglyphs\",\n    \"Hluw\",\n    \"Arabic\",\n    \"Arab\",\n    \"Armenian\",\n    \"Armn\",\n    \"Avestan\",\n    \"Avst\",\n    \"Balinese\",\n    \"Bali\",\n    \"Bamum\",\n    \"Bamu\",\n    \"Bassa_Vah\",\n    \"Bass\",\n    \"Batak\",\n    \"Batk\",\n    \"Bengali\",\n    \"Beng\",\n    \"Bhaiksuki\",\n    \"Bhks\",\n    \"Bopomofo\",\n    \"Bopo\",\n    \"Brahmi\",\n    \"Brah\",\n    \"Braille\",\n    \"Brai\",\n    \"Buginese\",\n    \"Bugi\",\n    \"Buhid\",\n    \"Buhd\",\n    \"Canadian_Aboriginal\",\n    \"Cans\",\n    \"Carian\",\n    \"Cari\",\n    \"Caucasian_Albanian\",\n    \"Aghb\",\n    \"Chakma\",\n    \"Cakm\",\n    \"Cham\",\n    \"Cherokee\",\n    \"Cher\",\n    \"Common\",\n    \"Zyyy\",\n    \"Coptic\",\n    \"Copt\",\n    \"Qaac\",\n    \"Cuneiform\",\n    \"Xsux\",\n    \"Cypriot\",\n    \"Cprt\",\n    \"Cyrillic\",\n    \"Cyrl\",\n    \"Deseret\",\n    \"Dsrt\",\n    \"Devanagari\",\n    \"Deva\",\n    \"Duployan\",\n    \"Dupl\",\n    \"Egyptian_Hieroglyphs\",\n    \"Egyp\",\n    \"Elbasan\",\n    \"Elba\",\n    \"Ethiopic\",\n    \"Ethi\",\n    \"Georgian\",\n    \"Geor\",\n    \"Glagolitic\",\n    \"Glag\",\n    \"Gothic\",\n    \"Goth\",\n    \"Grantha\",\n    \"Gran\",\n    \"Greek\",\n    \"Grek\",\n    \"Gujarati\",\n    \"Gujr\",\n    \"Gurmukhi\",\n    \"Guru\",\n    \"Han\",\n    \"Hani\",\n    \"Hangul\",\n    \"Hang\",\n    \"Hanunoo\",\n    \"Hano\",\n    \"Hatran\",\n    \"Hatr\",\n    \"Hebrew\",\n    \"Hebr\",\n    \"Hiragana\",\n    \"Hira\",\n    \"Imperial_Aramaic\",\n    \"Armi\",\n    \"Inherited\",\n    \"Zinh\",\n    \"Qaai\",\n    \"Inscriptional_Pahlavi\",\n    \"Phli\",\n    \"Inscriptional_Parthian\",\n    \"Prti\",\n    \"Javanese\",\n    \"Java\",\n    \"Kaithi\",\n    \"Kthi\",\n    \"Kannada\",\n    \"Knda\",\n    \"Katakana\",\n    \"Kana\",\n    \"Kayah_Li\",\n    \"Kali\",\n    \"Kharoshthi\",\n    \"Khar\",\n    \"Khmer\",\n    \"Khmr\",\n    \"Khojki\",\n    \"Khoj\",\n    \"Khudawadi\",\n    \"Sind\",\n    \"Lao\",\n    \"Laoo\",\n    \"Latin\",\n    \"Latn\",\n    \"Lepcha\",\n    \"Lepc\",\n    \"Limbu\",\n    \"Limb\",\n    \"Linear_A\",\n    \"Lina\",\n    \"Linear_B\",\n    \"Linb\",\n    \"Lisu\",\n    \"Lycian\",\n    \"Lyci\",\n    \"Lydian\",\n    \"Lydi\",\n    \"Mahajani\",\n    \"Mahj\",\n    \"Malayalam\",\n    \"Mlym\",\n    \"Mandaic\",\n    \"Mand\",\n    \"Manichaean\",\n    \"Mani\",\n    \"Marchen\",\n    \"Marc\",\n    \"Masaram_Gondi\",\n    \"Gonm\",\n    \"Meetei_Mayek\",\n    \"Mtei\",\n    \"Mende_Kikakui\",\n    \"Mend\",\n    \"Meroitic_Cursive\",\n    \"Merc\",\n    \"Meroitic_Hieroglyphs\",\n    \"Mero\",\n    \"Miao\",\n    \"Plrd\",\n    \"Modi\",\n    \"Mongolian\",\n    \"Mong\",\n    \"Mro\",\n    \"Mroo\",\n    \"Multani\",\n    \"Mult\",\n    \"Myanmar\",\n    \"Mymr\",\n    \"Nabataean\",\n    \"Nbat\",\n    \"New_Tai_Lue\",\n    \"Talu\",\n    \"Newa\",\n    \"Nko\",\n    \"Nkoo\",\n    \"Nushu\",\n    \"Nshu\",\n    \"Ogham\",\n    \"Ogam\",\n    \"Ol_Chiki\",\n    \"Olck\",\n    \"Old_Hungarian\",\n    \"Hung\",\n    \"Old_Italic\",\n    \"Ital\",\n    \"Old_North_Arabian\",\n    \"Narb\",\n    \"Old_Permic\",\n    \"Perm\",\n    \"Old_Persian\",\n    \"Xpeo\",\n    \"Old_South_Arabian\",\n    \"Sarb\",\n    \"Old_Turkic\",\n    \"Orkh\",\n    \"Oriya\",\n    \"Orya\",\n    \"Osage\",\n    \"Osge\",\n    \"Osmanya\",\n    \"Osma\",\n    \"Pahawh_Hmong\",\n    \"Hmng\",\n    \"Palmyrene\",\n    \"Palm\",\n    \"Pau_Cin_Hau\",\n    \"Pauc\",\n    \"Phags_Pa\",\n    \"Phag\",\n    \"Phoenician\",\n    \"Phnx\",\n    \"Psalter_Pahlavi\",\n    \"Phlp\",\n    \"Rejang\",\n    \"Rjng\",\n    \"Runic\",\n    \"Runr\",\n    \"Samaritan\",\n    \"Samr\",\n    \"Saurashtra\",\n    \"Saur\",\n    \"Sharada\",\n    \"Shrd\",\n    \"Shavian\",\n    \"Shaw\",\n    \"Siddham\",\n    \"Sidd\",\n    \"SignWriting\",\n    \"Sgnw\",\n    \"Sinhala\",\n    \"Sinh\",\n    \"Sora_Sompeng\",\n    \"Sora\",\n    \"Soyombo\",\n    \"Soyo\",\n    \"Sundanese\",\n    \"Sund\",\n    \"Syloti_Nagri\",\n    \"Sylo\",\n    \"Syriac\",\n    \"Syrc\",\n    \"Tagalog\",\n    \"Tglg\",\n    \"Tagbanwa\",\n    \"Tagb\",\n    \"Tai_Le\",\n    \"Tale\",\n    \"Tai_Tham\",\n    \"Lana\",\n    \"Tai_Viet\",\n    \"Tavt\",\n    \"Takri\",\n    \"Takr\",\n    \"Tamil\",\n    \"Taml\",\n    \"Tangut\",\n    \"Tang\",\n    \"Telugu\",\n    \"Telu\",\n    \"Thaana\",\n    \"Thaa\",\n    \"Thai\",\n    \"Tibetan\",\n    \"Tibt\",\n    \"Tifinagh\",\n    \"Tfng\",\n    \"Tirhuta\",\n    \"Tirh\",\n    \"Ugaritic\",\n    \"Ugar\",\n    \"Vai\",\n    \"Vaii\",\n    \"Warang_Citi\",\n    \"Wara\",\n    \"Yi\",\n    \"Yiii\",\n    \"Zanabazar_Square\",\n    \"Zanb\"\n  ]\n};\nArray.prototype.push.apply(data.$LONE, data.General_Category);\ndata.gc = data.General_Category;\ndata.sc = data.Script_Extensions = data.scx = data.Script;\n\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current () {\n  return this.at(this.pos)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead () {\n  return this.at(this.nextIndex(this.pos))\n};\n\nRegExpValidationState.prototype.advance = function advance () {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true\n  }\n  return false\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function(state) {\n  var this$1 = this;\n\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function(state) {\n  var this$1 = this;\n\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    {  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$9.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$9.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$9.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      state.switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (data.$LONE.indexOf(nameOrValue) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function(state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.7.3\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\nvar parse_dammit;\nvar LooseParser;\nvar pluginsLoose; // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  parse_dammit = parse; // eslint-disable-line camelcase\n  LooseParser = Parser$$1;\n  pluginsLoose = plugins$$1;\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };\n","class Input {\n  constructor(value, size) {\n    this.value = value;\n    if (Array.isArray(size)) {\n      this.size = size;\n    } else {\n      this.size = new Int32Array(3);\n      if (size.z) {\n        this.size = new Int32Array([size.x, size.y, size.z]);\n      } else if (size.y) {\n        this.size = new Int32Array([size.x, size.y]);\n      } else {\n        this.size = new Int32Array([size.x]);\n      }\n    }\n\n    const [w, h, d] = this.size;\n    if (d) {\n      if (this.value.length !== (w * h * d)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} * ${d} = ${(h * w * d)}`);\n      }\n    } else if (h) {\n      if (this.value.length !== (w * h)) {\n        throw new Error(`Input size ${this.value.length} does not match ${w} * ${h} = ${(h * w)}`);\n      }\n    } else {\n      if (this.value.length !== w) {\n        throw new Error(`Input size ${this.value.length} does not match ${w}`);\n      }\n    }\n\n  }\n\n  toArray() {\n    const { utils } = require('./utils');\n    const [w, h, d] = this.size;\n    if (d) {\n      return utils.erectMemoryOptimized3DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h, d);\n    } else if (h) {\n      return utils.erectMemoryOptimized2DFloat(this.value.subarray ? this.value : new Float32Array(this.value), w, h);\n    } else {\n      return this.value;\n    }\n  }\n}\n\nfunction input(value, size) {\n  return new Input(value, size);\n}\n\nmodule.exports = {\n  Input,\n  input\n};","/**\n * @desc WebGl Texture implementation in JS\n * @param {ITextureSettings} settings\n */\nclass Texture {\n  constructor(settings) {\n    const {\n      texture,\n      size,\n      dimensions,\n      output,\n      context,\n      type = 'NumberTexture',\n    } = settings;\n    if (!output) throw new Error('settings property \"output\" required.');\n    if (!context) throw new Error('settings property \"context\" required.');\n    this.texture = texture;\n    this.size = size;\n    this.dimensions = dimensions;\n    this.output = output;\n    this.context = context;\n    this.kernel = null;\n    this.type = type;\n  }\n\n  /**\n   * @desc Converts the Texture into a JavaScript Array\n   * @returns {Number[]|Number[][]|Number[][][]}\n   */\n  toArray() {\n    throw new Error(`Not implemented on ${this.constructor.name}`);\n  }\n\n  /**\n   * @desc Deletes the Texture\n   */\n  delete() {\n    return this.context.deleteTexture(this.texture);\n  }\n}\n\nmodule.exports = {\n  Texture\n};","const acorn = require('acorn');\nconst { Input } = require('./input');\nconst { Texture } = require('./texture');\n\nconst FUNCTION_NAME = /function ([^(]*)/;\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nconst ARGUMENT_NAMES = /([^\\s,]+)/g;\n\n/**\n *\n * @desc Various utility functions / snippets of code that GPU.JS uses internally.\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n */\nconst utils = {\n  /**\n   *\n   * @desc Gets the system endianness, and cache it\n   * @returns {String} 'LE' or 'BE' depending on system architecture\n   * Credit: https://gist.github.com/TooTallNate/4750953\n   */\n  systemEndianness() {\n    return _systemEndianness;\n  },\n  getSystemEndianness() {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) return 'LE';\n    if (c[0] === 0xde) return 'BE';\n    throw new Error('unknown endianness');\n  },\n\n  /**\n   * @descReturn TRUE, on a JS function\n   * @param {Function} funcObj - Object to validate if its a function\n   * @returns  {Boolean} TRUE if the object is a JS function\n   */\n  isFunction(funcObj) {\n    return typeof(funcObj) === 'function';\n  },\n\n  /**\n   * @desc Return TRUE, on a valid JS function string\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {String} fn - String of JS function to validate\n   * @returns {Boolean} TRUE if the string passes basic validation\n   */\n  isFunctionString(fn) {\n    if (typeof fn === 'string') {\n      return (fn\n        .slice(0, 'function'.length)\n        .toLowerCase() === 'function');\n    }\n    return false;\n  },\n\n  /**\n   * @desc Return the function name from a JS function string\n   * @param {String} funcStr - String of JS function to validate\n   * @returns {String} Function name string (if found)\n   */\n  getFunctionNameFromString(funcStr) {\n    return FUNCTION_NAME.exec(funcStr)[1].trim();\n  },\n\n  getFunctionBodyFromString(funcStr) {\n    return funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n  },\n\n  /**\n   * @desc Return list of argument names extracted from a javascript function\n   * @param {String} fn - String of JS function to validate\n   * @returns {String[]}  Array representing all the parameter names\n   */\n  getArgumentNamesFromString(fn) {\n    const fnStr = fn.replace(STRIP_COMMENTS, '');\n    let result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n    if (result === null) {\n      result = [];\n    }\n    return result;\n  },\n\n  /**\n   * @desc Returns a clone\n   * @param {Object} obj - Object to clone\n   * @returns {Object|Array} Cloned object\n   */\n  clone(obj) {\n    if (obj === null || typeof obj !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n    const temp = obj.constructor(); // changed\n\n    for (let key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        obj.isActiveClone = null;\n        temp[key] = utils.clone(obj[key]);\n        delete obj.isActiveClone;\n      }\n    }\n\n    return temp;\n  },\n\n  /**\n   * @desc Checks if is an array or Array-like object\n   * @param {Object} array - The argument object to check if is array\n   * @returns {Boolean}  true if is array or Array-like object\n   */\n  isArray(array) {\n    return !isNaN(array.length);\n  },\n\n  /**\n   * @desc Evaluate the argument type, to apply respective logic for it\n   * @param {Object} value - The argument object to evaluate type\n   * @returns {String}  Argument type Array/Number/Float/Texture/Unknown\n   */\n  getVariableType(value, strictIntegers) {\n    if (utils.isArray(value)) {\n      if (value[0].nodeName === 'IMG') {\n        return 'HTMLImageArray';\n      }\n      return 'Array';\n    }\n\n    switch (value.constructor) {\n      case Boolean:\n        return 'Boolean';\n      case Number:\n        if (strictIntegers && Number.isInteger(value)) {\n          return 'Integer';\n        }\n        return 'Float';\n      case Texture:\n        return value.type;\n      case Input:\n        return 'Input';\n    }\n\n    if (value.nodeName === 'IMG') {\n      return 'HTMLImage';\n    } else {\n      if (value.hasOwnProperty('type')) {\n        return value.type;\n      }\n      return 'Unknown';\n    }\n  },\n\n\n  getKernelTextureSize(settings, dimensions) {\n    let [w, h, d] = dimensions;\n    let texelCount = (w || 1) * (h || 1) * (d || 1);\n\n    if (settings.optimizeFloatMemory && settings.precision === 'single') {\n      w = texelCount = Math.ceil(texelCount / 4);\n    }\n    // if given dimensions == a 2d image\n    if (h > 1 && w * h === texelCount) {\n      return new Int32Array([w, h]);\n    }\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  /**\n   *\n   * @param {Number} length\n   * @returns {TextureDimensions}\n   */\n  closestSquareDimensions(length) {\n    const sqrt = Math.sqrt(length);\n    let high = Math.ceil(sqrt);\n    let low = Math.floor(sqrt);\n    while (high * low < length) {\n      high--;\n      low = Math.ceil(length / high);\n    }\n    return new Int32Array([low, Math.ceil(length / low)]);\n  },\n\n  /**\n   * A texture takes up four\n   * @param {OutputDimensions} dimensions\n   * @param {Number} bitRatio\n   * @returns {TextureDimensions}\n   */\n  getMemoryOptimizedFloatTextureSize(dimensions, bitRatio) {\n    const totalArea = utils.roundTo((dimensions[0] || 1) * (dimensions[1] || 1) * (dimensions[2] || 1) * (dimensions[3] || 1), 4);\n    const texelCount = totalArea / bitRatio;\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  /**\n   *\n   * @param dimensions\n   * @param bitRatio\n   * @returns {*|TextureDimensions}\n   */\n  getMemoryOptimizedPackedTextureSize(dimensions, bitRatio) {\n    const [w, h, d] = dimensions;\n    const totalArea = utils.roundTo((w || 1) * (h || 1) * (d || 1), 4);\n    const texelCount = totalArea / (4 / bitRatio);\n    return utils.closestSquareDimensions(texelCount);\n  },\n\n  roundTo(n, d) {\n    return Math.floor((n + d - 1) / d) * d;\n  },\n  /**\n   * @desc Return the dimension of an array.\n   * @param {Array|String|Texture|Input} x - The array\n   * @param {Boolean} [pad] - To include padding in the dimension calculation\n   * @returns {OutputDimensions}\n   */\n  getDimensions(x, pad) {\n    let ret;\n    if (utils.isArray(x)) {\n      const dim = [];\n      let temp = x;\n      while (utils.isArray(temp)) {\n        dim.push(temp.length);\n        temp = temp[0];\n      }\n      ret = dim.reverse();\n    } else if (x instanceof Texture) {\n      ret = x.output;\n    } else if (x instanceof Input) {\n      ret = x.size;\n    } else {\n      throw new Error(`Unknown dimensions of ${x}`);\n    }\n\n    if (pad) {\n      ret = Array.from(ret);\n      while (ret.length < 3) {\n        ret.push(1);\n      }\n    }\n\n    return new Int32Array(ret);\n  },\n\n  /**\n   * Puts a nested 2d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n  flatten2dArrayTo(array, target) {\n    let offset = 0;\n    for (let y = 0; y < array.length; y++) {\n      target.set(array[y], offset);\n      offset += array[y].length;\n    }\n  },\n\n  /**\n   * Puts a nested 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n  flatten3dArrayTo(array, target) {\n    let offset = 0;\n    for (let z = 0; z < array.length; z++) {\n      for (let y = 0; y < array[z].length; y++) {\n        target.set(array[z][y], offset);\n        offset += array[z][y].length;\n      }\n    }\n  },\n\n  /**\n   * Puts a nested 4d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n  flatten4dArrayTo(array, target) {\n    let offset = 0;\n    for (let l = 0; l < array.length; l++) {\n      for (let z = 0; z < array[l].length; z++) {\n        for (let y = 0; y < array[l][z].length; y++) {\n          target.set(array[l][z][y], offset);\n          offset += array[l][z][y].length;\n        }\n      }\n    }\n  },\n\n  /**\n   * Puts a nested 1d, 2d, or 3d array into a one-dimensional target array\n   * @param {Float32Array|Uint16Array|Uint8Array} array\n   * @param {Float32Array} target\n   */\n  flattenTo(array, target) {\n    if (utils.isArray(array[0])) {\n      if (utils.isArray(array[0][0])) {\n        if (utils.isArray(array[0][0][0])) {\n          utils.flatten4dArrayTo(array, target);\n        } else {\n          utils.flatten3dArrayTo(array, target);\n        }\n      } else {\n        utils.flatten2dArrayTo(array, target);\n      }\n    } else {\n      target.set(array);\n    }\n  },\n\n  /**\n   *\n   * @desc Splits an array into smaller arrays.\n   * Number of elements in one small chunk is given by `part`\n   *\n   * @param {Number[]} array - The array to split into chunks\n   * @param {Number} part - elements in one chunk\n   *\n   * @returns {Number[]} An array of smaller chunks\n   */\n  splitArray(array, part) {\n    const result = [];\n    for (let i = 0; i < array.length; i += part) {\n      result.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n    }\n    return result;\n  },\n\n  getAstString(source, ast) {\n    const lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n    const start = ast.loc.start;\n    const end = ast.loc.end;\n    const result = [];\n    if (start.line === end.line) {\n      result.push(lines[start.line - 1].substring(start.column, end.column));\n    } else {\n      result.push(lines[start.line - 1].slice(start.column));\n      for (let i = start.line; i < end.line; i++) {\n        result.push(lines[i]);\n      }\n      result.push(lines[end.line - 1].slice(0, end.column));\n    }\n    return result.join('\\n');\n  },\n\n  allPropertiesOf(obj) {\n    const props = [];\n\n    do {\n      props.push.apply(props, Object.getOwnPropertyNames(obj));\n    } while (obj = Object.getPrototypeOf(obj));\n\n    return props;\n  },\n\n  /**\n   * @param {Array} lines - An Array of strings\n   * @returns {String} Single combined String, separated by *\\n*\n   */\n  linesToString(lines) {\n    if (lines.length > 0) {\n      return lines.join(';\\n') + ';\\n';\n    } else {\n      return '\\n';\n    }\n  },\n  warnDeprecated(type, oldName, newName) {\n    if (newName) {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been replaced with \"${ newName }\". Fixing, but please upgrade as it will soon be removed.`);\n    } else {\n      console.warn(`You are using a deprecated ${ type } \"${ oldName }\". It has been removed. Fixing, but please upgrade as it will soon be removed.`);\n    }\n  },\n  /**\n   *\n   * @param {String|Function} source\n   * @param {IFunctionSettings} [settings]\n   * @returns {IFunction}\n   */\n  functionToIFunction(source, settings) {\n    settings = settings || {};\n    if (typeof source !== 'string' && typeof source !== 'function') throw new Error('source not a string or function');\n    const sourceString = typeof source === 'string' ? source : source.toString();\n\n    let argumentTypes = [];\n\n    if (Array.isArray(settings.argumentTypes)) {\n      argumentTypes = settings.argumentTypes;\n    } else if (typeof settings.argumentTypes === 'object') {\n      argumentTypes = utils.getArgumentNamesFromString(sourceString)\n        .map(name => settings.argumentTypes[name]) || [];\n    } else {\n      argumentTypes = settings.argumentTypes || [];\n    }\n\n    return {\n      source: sourceString,\n      argumentTypes,\n      returnType: settings.returnType || null,\n    };\n  },\n  flipPixels: (pixels, width, height) => {\n    // https://stackoverflow.com/a/41973289/1324039\n    const halfHeight = height / 2 | 0; // the | 0 keeps the result an int\n    const bytesPerRow = width * 4;\n    // make a temp buffer to hold one row\n    const temp = new Uint8ClampedArray(width * 4);\n    const result = pixels.slice(0);\n    for (let y = 0; y < halfHeight; ++y) {\n      const topOffset = y * bytesPerRow;\n      const bottomOffset = (height - y - 1) * bytesPerRow;\n\n      // make copy of a row on the top half\n      temp.set(result.subarray(topOffset, topOffset + bytesPerRow));\n\n      // copy a row from the bottom half to the top\n      result.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n\n      // copy the copy of the top half row to the bottom half\n      result.set(temp, bottomOffset);\n    }\n    return result;\n  },\n  erectPackedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erect2DPackedFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xStart = y * width;\n      const xEnd = xStart + width;\n      yResults[y] = array.subarray(xStart, xEnd);\n    }\n    return yResults;\n  },\n  erect3DPackedFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xStart = (z * height * width) + y * width;\n        const xEnd = xStart + width;\n        yResults[y] = array.subarray(xStart, xEnd);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectMemoryOptimizedFloat: (array, width) => {\n    return array.subarray(0, width);\n  },\n  erectMemoryOptimized2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const offset = y * width;\n      yResults[y] = array.subarray(offset, offset + width);\n    }\n    return yResults;\n  },\n  erectMemoryOptimized3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const offset = (z * height * width) + (y * width);\n        yResults[y] = array.subarray(offset, offset + width);\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectFloat: (array, width) => {\n    const xResults = new Float32Array(width);\n    let i = 0;\n    for (let x = 0; x < width; x++) {\n      xResults[x] = array[i];\n      i += 4;\n    }\n    return xResults;\n  },\n  erect2DFloat: (array, width, height) => {\n    const yResults = new Array(height);\n    let i = 0;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Float32Array(width);\n      for (let x = 0; x < width; x++) {\n        xResults[x] = array[i];\n        i += 4;\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DFloat: (array, width, height, depth) => {\n    const zResults = new Array(depth);\n    let i = 0;\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Float32Array(width);\n        for (let x = 0; x < width; x++) {\n          xResults[x] = array[i];\n          i += 4;\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray2: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 2);\n    }\n    return xResults;\n  },\n  erect2DArray2: (array, width, height) => {\n    const yResults = new Array(height);\n    const XResultsMax = width * 4;\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * XResultsMax;\n      let i = 0;\n      for (let x = 0; x < XResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 2);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray2: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 2);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray3: (array, width) => {\n    const xResults = new Array(width);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 3);\n    }\n    return xResults;\n  },\n  erect2DArray3: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 3);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray3: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 3);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n  erectArray4: (array, width) => {\n    const xResults = new Array(array);\n    const xResultsMax = width * 4;\n    let i = 0;\n    for (let x = 0; x < xResultsMax; x += 4) {\n      xResults[i++] = array.subarray(x, x + 4);\n    }\n    return xResults;\n  },\n  erect2DArray4: (array, width, height) => {\n    const xResultsMax = width * 4;\n    const yResults = new Array(height);\n    for (let y = 0; y < height; y++) {\n      const xResults = new Array(width);\n      const offset = y * xResultsMax;\n      let i = 0;\n      for (let x = 0; x < xResultsMax; x += 4) {\n        xResults[i++] = array.subarray(x + offset, x + offset + 4);\n      }\n      yResults[y] = xResults;\n    }\n    return yResults;\n  },\n  erect3DArray4: (array, width, height, depth) => {\n    const xResultsMax = width * 4;\n    const zResults = new Array(depth);\n    for (let z = 0; z < depth; z++) {\n      const yResults = new Array(height);\n      for (let y = 0; y < height; y++) {\n        const xResults = new Array(width);\n        const offset = (z * xResultsMax * height) + (y * xResultsMax);\n        let i = 0;\n        for (let x = 0; x < xResultsMax; x += 4) {\n          xResults[i++] = array.subarray(x + offset, x + offset + 4);\n        }\n        yResults[y] = xResults;\n      }\n      zResults[z] = yResults;\n    }\n    return zResults;\n  },\n\n  /**\n   *\n   * @param {String} source\n   * @param {Object} settings\n   * @return {String}\n   */\n  flattenFunctionToString: (source, settings) => {\n    const { findDependency, thisLookup, doNotDefine } = settings;\n    let flattened = settings.flattened;\n    if (!flattened) {\n      flattened = settings.flattened = {};\n    }\n    const ast = acorn.parse(source);\n    const functionDependencies = [];\n\n    function flatten(ast) {\n      if (Array.isArray(ast)) {\n        const results = [];\n        for (let i = 0; i < ast.length; i++) {\n          results.push(flatten(ast[i]));\n        }\n        return results.join('');\n      }\n      switch (ast.type) {\n        case 'Program':\n          return flatten(ast.body);\n        case 'FunctionDeclaration':\n          return `function ${ast.id.name}(${ast.params.map(flatten).join(', ')}) ${ flatten(ast.body) }`;\n        case 'BlockStatement': {\n          const result = [];\n          for (let i = 0; i < ast.body.length; i++) {\n            result.push(flatten(ast.body[i]), ';\\n');\n          }\n          return `{\\n${result.join('')}}`;\n        }\n        case 'VariableDeclaration':\n          switch (ast.declarations[0].id.type) {\n            case 'ObjectPattern': {\n              const source = flatten(ast.declarations[0].init);\n              const properties = ast.declarations.map(declaration => declaration.id.properties.map(flatten))[0];\n              if (/this/.test(source)) {\n                const result = [];\n                const lookups = properties.map(thisLookup);\n                for (let i = 0; i < lookups.length; i++) {\n                  const lookup = lookups[i];\n                  if (lookup === null) continue;\n                  const property = properties[i];\n                  result.push(`${ast.kind} ${ property } = ${ lookup };\\n`);\n                }\n\n                return result.join('');\n              }\n              return `${ast.kind} { ${properties} } = ${source}`;\n            }\n            case 'ArrayPattern':\n              return `${ast.kind} [ ${ ast.declarations.map(declaration => flatten(declaration.id)).join(', ') } ] = ${flatten(ast.declarations[0].init)}`;\n          }\n          if (doNotDefine && doNotDefine.indexOf(ast.declarations[0].id.name) !== -1) {\n            return '';\n          }\n          return `${ast.kind} ${ast.declarations[0].id.name} = ${flatten(ast.declarations[0].init)}`;\n        case 'CallExpression': {\n          if (ast.callee.property.name === 'subarray') {\n            return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n          }\n          if (ast.callee.object.name === 'gl' || ast.callee.object.name === 'context') {\n            return `${flatten(ast.callee.object)}.${flatten(ast.callee.property)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n          }\n          if (ast.callee.object.type === 'ThisExpression') {\n            functionDependencies.push(findDependency('this', ast.callee.property.name));\n            return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n          } else if (ast.callee.object.name) {\n            const foundSource = findDependency(ast.callee.object.name, ast.callee.property.name);\n            if (foundSource === null) {\n              // we're not flattening it\n              return `${ast.callee.object.name}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n            } else {\n              functionDependencies.push(foundSource);\n              // we're flattening it\n              return `${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n            }\n          } else if (ast.callee.object.type === 'MemberExpression') {\n            return `${flatten(ast.callee.object)}.${ast.callee.property.name}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n          } else {\n            throw new Error('unknown ast.callee');\n          }\n        }\n        case 'ReturnStatement':\n          return `return ${flatten(ast.argument)}`;\n        case 'BinaryExpression':\n          return `(${flatten(ast.left)}${ast.operator}${flatten(ast.right)})`;\n        case 'UnaryExpression':\n          if (ast.prefix) {\n            return `${ast.operator} ${flatten(ast.argument)}`;\n          } else {\n            return `${flatten(ast.argument)} ${ast.operator}`;\n          }\n          case 'ExpressionStatement':\n            return `(${flatten(ast.expression)})`;\n          case 'ArrowFunctionExpression':\n            return `(${ast.params.map(flatten).join(', ')}) => ${flatten(ast.body)}`;\n          case 'Literal':\n            return ast.raw;\n          case 'Identifier':\n            return ast.name;\n          case 'MemberExpression':\n            if (ast.object.type === 'ThisExpression') {\n              return thisLookup(ast.property.name);\n            }\n            if (ast.computed) {\n              return `${flatten(ast.object)}[${flatten(ast.property)}]`;\n            }\n            return flatten(ast.object) + '.' + flatten(ast.property);\n          case 'ThisExpression':\n            return 'this';\n          case 'NewExpression':\n            return `new ${flatten(ast.callee)}(${ast.arguments.map(value => flatten(value)).join(', ')})`;\n          case 'ForStatement':\n            return `for (${flatten(ast.init)};${flatten(ast.test)};${flatten(ast.update)}) ${flatten(ast.body)}`;\n          case 'AssignmentExpression':\n            return `${flatten(ast.left)}${ast.operator}${flatten(ast.right)}`;\n          case 'UpdateExpression':\n            return `${flatten(ast.argument)}${ast.operator}`;\n          case 'IfStatement':\n            return `if (${flatten(ast.test)}) ${flatten(ast.consequent)}`;\n          case 'ThrowStatement':\n            return `throw ${flatten(ast.argument)}`;\n          case 'ObjectPattern':\n            return ast.properties.map(flatten).join(', ');\n          case 'ArrayPattern':\n            return ast.elements.map(flatten).join(', ');\n          case 'DebuggerStatement':\n            return 'debugger;';\n          case 'ConditionalExpression':\n            return `${flatten(ast.test)}?${flatten(ast.consequent)}:${flatten(ast.alternate)}`;\n          case 'Property':\n            if (ast.kind === 'init') {\n              return flatten(ast.key);\n            }\n      }\n      throw new Error(`unhandled ast.type of ${ ast.type }`);\n    }\n    const result = flatten(ast);\n    if (functionDependencies.length > 0) {\n      const flattenedFunctionDependencies = [];\n      for (let i = 0; i < functionDependencies.length; i++) {\n        const functionDependency = functionDependencies[i];\n        if (!flattened[functionDependency]) {\n          flattened[functionDependency] = true;\n        }\n        flattenedFunctionDependencies.push(utils.flattenFunctionToString(functionDependency, settings) + ';\\n');\n      }\n      return flattenedFunctionDependencies.join('') + result;\n    }\n    return result;\n  },\n\n  splitHTMLImageToRGB: (image, mode) => {\n    const gpu = new GPU({ mode });\n\n    const rKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.r * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage'],\n    });\n    const gKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.g * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage'],\n    });\n    const bKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.b * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage'],\n    });\n    const aKernel = gpu.createKernel(function(a) {\n      const pixel = a[this.thread.y][this.thread.x];\n      return pixel.a * 255;\n    }, {\n      output: [image.width, image.height],\n      precision: 'unsigned',\n      argumentTypes: ['HTMLImage'],\n    });\n    const result = [\n      rKernel(image),\n      gKernel(image),\n      bKernel(image),\n      aKernel(image),\n    ];\n    result.rKernel = rKernel;\n    result.gKernel = gKernel;\n    result.bKernel = bKernel;\n    result.aKernel = aKernel;\n    result.gpu = gpu;\n    return result;\n  },\n\n  /**\n   * A visual debug utility\n   * @param rgba\n   * @param width\n   * @param height\n   * @param mode\n   * @return {Object[]}\n   */\n  splitRGBAToCanvases: (rgba, width, height, mode) => {\n    const { GPU } = require('./gpu.js');\n\n    const visualGPUR = new GPU({ mode });\n    const visualKernelR = visualGPUR.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(pixel.r / 255, 0, 0, 255);\n    }, { output: [width, height], graphical: true, argumentTypes: { v: 'Array2D(4)' } });\n    visualKernelR(rgba);\n\n    const visualGPUG = new GPU({ mode });\n    const visualKernelG = visualGPUG.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, pixel.g / 255, 0, 255);\n    }, { output: [width, height], graphical: true, argumentTypes: { v: 'Array2D(4)' } });\n    visualKernelG(rgba);\n\n    const visualGPUB = new GPU({ mode });\n    const visualKernelB = visualGPUB.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(0, 0, pixel.b / 255, 255);\n    }, { output: [width, height], graphical: true, argumentTypes: { v: 'Array2D(4)' } });\n    visualKernelB(rgba);\n\n    const visualGPUA = new GPU({ mode });\n    const visualKernelA = visualGPUA.createKernel(function(v) {\n      const pixel = v[this.thread.y][this.thread.x];\n      this.color(255, 255, 255, pixel.a / 255);\n    }, { output: [width, height], graphical: true, argumentTypes: { v: 'Array2D(4)' } });\n    visualKernelA(rgba);\n\n    visualGPUR.destroy();\n    visualGPUG.destroy();\n    visualGPUB.destroy();\n    visualGPUA.destroy();\n\n    return [\n      visualKernelR.canvas,\n      visualKernelG.canvas,\n      visualKernelB.canvas,\n      visualKernelA.canvas,\n    ];\n  }\n};\n\nconst _systemEndianness = utils.getSystemEndianness();\n\nmodule.exports = {\n  utils\n};","const { utils } = require('../utils');\nconst { Input } = require('../input');\n\nclass Kernel {\n  /**\n   * @type {Boolean}\n   */\n  static get isSupported() {\n    throw new Error(`\"isSupported\" not implemented on ${ this.name }`);\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  static isContextMatch(context) {\n    throw new Error(`\"isContextMatch\" not implemented on ${ this.name }`);\n  }\n\n  /**\n   * @type {IKernelFeatures}\n   * Used internally to populate the kernel.feature, which is a getter for the output of this value\n   */\n  static getFeatures() {\n    throw new Error(`\"getFeatures\" not implemented on ${ this.name }`);\n  }\n\n  static destroyContext(context) {\n    throw new Error(`\"destroyContext\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionArguments() {\n    throw new Error(`\"nativeFunctionArguments\" called on ${ this.name }`);\n  }\n\n  static nativeFunctionReturnType() {\n    throw new Error(`\"nativeFunctionReturnType\" called on ${ this.name }`);\n  }\n\n  static combineKernels() {\n    throw new Error(`\"combineKernels\" called on ${ this.name }`);\n  }\n\n  /**\n   *\n   * @param {string|object} source\n   * @param [settings]\n   */\n  constructor(source, settings) {\n    if (typeof source !== 'object') {\n      if (typeof source !== 'string') {\n        throw new Error('source not a string');\n      }\n      if (!utils.isFunctionString(source)) {\n        throw new Error('source not a function string');\n      }\n    }\n    this.useLegacyEncoder = false;\n    this.fallbackRequested = false;\n    this.onRequestFallback = null;\n\n    /**\n     * Name of the arguments found from parsing source argument\n     * @type {String[]}\n     */\n    this.argumentNames = typeof source === 'string' ? utils.getArgumentNamesFromString(source) : null;\n    this.argumentTypes = null;\n    this.argumentSizes = null;\n    this.argumentBitRatios = null;\n    this.kernelArguments = null;\n    this.kernelConstants = null;\n\n\n    /**\n     * The function source\n     * @type {String}\n     */\n    this.source = source;\n\n    /**\n     * The size of the kernel's output\n     * @type {Number[]}\n     */\n    this.output = null;\n\n    /**\n     * Debug mode\n     * @type {Boolean}\n     */\n    this.debug = false;\n\n    /**\n     * Graphical mode\n     * @type {Boolean}\n     */\n    this.graphical = false;\n\n    /**\n     * Maximum loops when using argument values to prevent infinity\n     * @type {Number}\n     */\n    this.loopMaxIterations = 0;\n\n    /**\n     * Constants used in kernel via `this.constants`\n     * @type {Object}\n     */\n    this.constants = null;\n    this.constantTypes = null;\n    this.constantBitRatios = null;\n    this.dynamicArguments = false;\n    this.dynamicOutput = true;\n\n    /**\n     *\n     * @type {Object}\n     */\n    this.canvas = null;\n\n    /**\n     *\n     * @type {WebGLRenderingContext}\n     */\n    this.context = null;\n\n    /**\n     *\n     * @type {Boolean}\n     */\n    this.checkContext = null;\n\n    /**\n     *\n     * @type {GPU}\n     */\n    this.gpu = null;\n\n    /**\n     *\n     * @type {IGPUFunction[]}\n     */\n    this.functions = null;\n\n    /**\n     *\n     * @type {IGPUNativeFunction[]}\n     */\n    this.nativeFunctions = null;\n\n    /**\n     *\n     * @type {ISubKernel[]}\n     */\n    this.subKernels = null;\n\n    /**\n     *\n     * @type {Boolean}\n     */\n    this.validate = true;\n\n    /**\n     * Enforces kernel to write to a new array or texture on run\n     * @type {Boolean}\n     */\n    this.immutable = false;\n\n    /**\n     * Enforces kernel to write to a texture on run\n     * @type {Boolean}\n     */\n    this.pipeline = false;\n\n    /**\n     * Make GPU use single precison or unsigned.  Acceptable values: 'single' or 'unsigned'\n     * @type {String|null}\n     * @enum 'single' | 'unsigned'\n     */\n    this.precision = null;\n\n    this.plugins = null;\n\n    this.returnType = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.optimizeFloatMemory = null;\n    this.strictIntegers = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.warnVarUsage = true;\n  }\n\n  mergeSettings(settings) {\n    for (let p in settings) {\n      if (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n      switch (p) {\n        case 'output':\n          if (!Array.isArray(settings.output)) {\n            this.setOutput(settings.output); // Flatten output object\n            continue;\n          }\n          break;\n        case 'functions':\n          if (typeof settings.functions[0] === 'function') {\n            this.functions = settings.functions.map(source => utils.functionToIFunction(source));\n            continue;\n          }\n          break;\n        case 'graphical':\n          if (settings[p] && !settings.hasOwnProperty('precision')) {\n            this.precision = 'unsigned';\n          }\n          this[p] = settings[p];\n          continue;\n      }\n      this[p] = settings[p];\n    }\n\n    if (!this.canvas) this.canvas = this.initCanvas();\n    if (!this.context) this.context = this.initContext();\n    if (!this.plugins) this.plugins = this.initPlugins(settings);\n  }\n  /**\n   * @desc Builds the Kernel, by compiling Fragment and Vertical Shaders,\n   * and instantiates the program.\n   * @abstract\n   */\n  build() {\n    throw new Error(`\"build\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @desc Run the kernel program, and send the output to renderOutput\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\n   * @returns {Float32Array|Float32Array[]|Float32Array[][]|void} Result The final output of the program, as float, and as Textures for reuse.\n   * @abstract\n   */\n  run() {\n    throw new Error(`\"run\" not defined on ${ this.constructor.name }`)\n  }\n\n  /**\n   * @abstract\n   * @return {Object}\n   */\n  initCanvas() {\n    throw new Error(`\"initCanvas\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @abstract\n   * @return {Object}\n   */\n  initContext() {\n    throw new Error(`\"initContext\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @param {IFunctionSettings} settings\n   * @return {Object};\n   * @abstract\n   */\n  initPlugins(settings) {\n    throw new Error(`\"initPlugins\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @desc Setup the parameter types for the parameters\n   * supplied to the Kernel function\n   *\n   * @param {IArguments} args - The actual parameters sent to the Kernel\n   */\n  setupArguments(args) {\n    this.kernelArguments = [];\n    if (!this.argumentTypes) {\n      if (!this.argumentTypes) {\n        this.argumentTypes = [];\n        for (let i = 0; i < args.length; i++) {\n          const argType = utils.getVariableType(args[i], this.strictIntegers);\n          const type = argType === 'Integer' ? 'Number' : argType;\n          this.argumentTypes.push(type);\n          this.kernelArguments.push({\n            type\n          });\n        }\n      }\n    } else {\n      for (let i = 0; i < this.argumentTypes.length; i++) {\n        this.kernelArguments.push({\n          type: this.argumentTypes[i]\n        });\n      }\n    }\n\n    // setup sizes\n    this.argumentSizes = new Array(args.length);\n    this.argumentBitRatios = new Int32Array(args.length);\n\n    for (let i = 0; i < args.length; i++) {\n      const arg = args[i];\n      this.argumentSizes[i] = arg.constructor === Input ? arg.size : null;\n      this.argumentBitRatios[i] = this.getBitRatio(arg);\n    }\n\n    if (this.argumentNames.length !== args.length) {\n      throw new Error(`arguments are miss-aligned`);\n    }\n  }\n\n  /**\n   * Setup constants\n   */\n  setupConstants() {\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    if (this.constants) {\n      for (let name in this.constants) {\n        if (needsConstantTypes) {\n          const type = utils.getVariableType(this.constants[name], this.strictIntegers);\n          this.constantTypes[name] = type;\n          this.kernelConstants.push({\n            name,\n            type\n          });\n        } else {\n          this.kernelConstants.push({\n            name,\n            type: this.constantTypes[name]\n          });\n        }\n        this.constantBitRatios[name] = this.getBitRatio(this.constants[name]);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param flag\n   * @return {Kernel}\n   */\n  setOptimizeFloatMemory(flag) {\n    this.optimizeFloatMemory = flag;\n    return this;\n  }\n\n  /**\n   * @desc Set output dimensions of the kernel function\n   * @param {Array|Object} output - The output array to set the kernel output size to\n   */\n  setOutput(output) {\n    if (output.hasOwnProperty('x')) {\n      if (output.hasOwnProperty('y')) {\n        if (output.hasOwnProperty('z')) {\n          this.output = [output.x, output.y, output.z];\n        } else {\n          this.output = [output.x, output.y];\n        }\n      } else {\n        this.output = [output.x];\n      }\n    } else {\n      this.output = output;\n    }\n    return this;\n  }\n\n  /**\n   * @desc Toggle debug mode\n   * @param {Boolean} flag - true to enable debug\n   */\n  setDebug(flag) {\n    this.debug = flag;\n    return this;\n  }\n\n  /**\n   * @desc Toggle graphical output mode\n   * @param {Boolean} flag - true to enable graphical output\n   */\n  setGraphical(flag) {\n    this.graphical = flag;\n    this.precision = 'unsigned';\n    return this;\n  }\n\n  /**\n   * @desc Set the maximum number of loop iterations\n   * @param {number} max - iterations count\n   *\n   */\n  setLoopMaxIterations(max) {\n    this.loopMaxIterations = max;\n    return this;\n  }\n\n  /**\n   * @desc Set Constants\n   */\n  setConstants(constants) {\n    this.constants = constants;\n    return this;\n  }\n\n  /**\n   *\n   * @param [IKernelValueTypes] constantTypes\n   * @return {Kernel}\n   */\n  setConstantTypes(constantTypes) {\n    this.constantTypes = constantTypes;\n    return this;\n  }\n\n  /**\n   *\n   * @param {IFunction[]|KernelFunction[]} functions\n   * @return {Kernel}\n   */\n  setFunctions(functions) {\n    if (typeof functions[0] === 'function') {\n      this.functions = functions.map(source => utils.functionToIFunction(source));\n    } else {\n      this.functions = functions;\n    }\n    return this;\n  }\n\n  /**\n   * Set writing to texture on/off\n   * @param flag\n   * @return {Kernel}\n   */\n  setPipeline(flag) {\n    this.pipeline = flag;\n    return this;\n  }\n\n  /**\n   * Set precision to 'unsigned' or 'single'\n   * @param {String} flag 'unsigned' or 'single'\n   * @return {Kernel}\n   */\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  /**\n   * @param flag\n   * @return {Kernel}\n   * @deprecated\n   */\n  setOutputToTexture(flag) {\n    utils.warnDeprecated('method', 'setOutputToTexture', 'setPipeline');\n    this.pipeline = flag;\n    return this;\n  }\n\n  /**\n   * Set to immutable\n   * @param flag\n   * @return {Kernel}\n   */\n  setImmutable(flag) {\n    this.immutable = flag;\n    return this;\n  }\n\n  /**\n   * @desc Bind the canvas to kernel\n   * @param {Object} canvas\n   */\n  setCanvas(canvas) {\n    this.canvas = canvas;\n    return this;\n  }\n\n  /**\n   * @param {Boolean} flag\n   * @return {Kernel}\n   */\n  setStrictIntegers(flag) {\n    this.strictIntegers = flag;\n    return this;\n  }\n\n  /**\n   *\n   * @param flag\n   * @return {Kernel}\n   */\n  setDynamicOutput(flag) {\n    this.dynamicOutput = flag;\n    return this;\n  }\n\n  /**\n   * @deprecated\n   * @param flag\n   * @return {Kernel}\n   */\n  setHardcodeConstants(flag) {\n    utils.warnDeprecated('method', 'setHardcodeConstants');\n    this.setDynamicOutput(flag);\n    this.setDynamicArguments(flag);\n    return this;\n  }\n\n  /**\n   *\n   * @param flag\n   * @return {Kernel}\n   */\n  setDynamicArguments(flag) {\n    this.dynamicArguments = flag;\n    return this;\n  }\n\n  /**\n   * @param {Boolean} flag\n   * @return {Kernel}\n   */\n  setUseLegacyEncoder(flag) {\n    this.useLegacyEncoder = flag;\n    return this;\n  }\n\n  /**\n   *\n   * @param {Boolean} flag\n   * @return {Kernel}\n   */\n  setWarnVarUsage(flag) {\n    this.warnVarUsage = flag;\n    return this;\n  }\n\n  /**\n   * @deprecated\n   * @returns {Object}\n   */\n  getCanvas() {\n    utils.warnDeprecated('method', 'getCanvas');\n    return this.canvas;\n  }\n\n  /**\n   * @deprecated\n   * @returns {Object}\n   */\n  getWebGl() {\n    utils.warnDeprecated('method', 'getWebGl');\n    return this.context;\n  }\n\n  /**\n   * @desc Bind the webGL instance to kernel\n   * @param {WebGLRenderingContext} context - webGl instance to bind\n   */\n  setContext(context) {\n    this.context = context;\n    return this;\n  }\n\n  /**\n   *\n   * @param [IKernelValueTypes|GPUVariableType[]] argumentTypes\n   * @return {Kernel}\n   */\n  setArgumentTypes(argumentTypes) {\n    if (Array.isArray(argumentTypes)) {\n      this.argumentTypes = argumentTypes;\n    } else {\n      this.argumentTypes = [];\n      for (const p in argumentTypes) {\n        const argumentIndex = this.argumentNames.indexOf(p);\n        if (argumentIndex === -1) throw new Error(`unable to find argument ${ p }`);\n        this.argumentTypes[argumentIndex] = argumentTypes[p];\n      }\n    }\n    return this;\n  }\n\n  requestFallback(args) {\n    if (!this.onRequestFallback) {\n      throw new Error(`\"onRequestFallback\" not defined on ${ this.constructor.name }`);\n    }\n    this.fallbackRequested = true;\n    return this.onRequestFallback(args);\n  }\n\n  /**\n   * @desc Validate settings\n   * @abstract\n   */\n  validateSettings() {\n    throw new Error(`\"validateSettings\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @desc Add a sub kernel to the root kernel instance.\n   * This is what `createKernelMap` uses.\n   *\n   * @param {ISubKernel} subKernel - function (as a String) of the subKernel to add\n   */\n  addSubKernel(subKernel) {\n    if (this.subKernels === null) {\n      this.subKernels = [];\n    }\n    if (!subKernel.source) throw new Error('subKernel missing \"source\" property');\n    if (!subKernel.property && isNaN(subKernel.property)) throw new Error('subKernel missing \"property\" property');\n    if (!subKernel.name) throw new Error('subKernel missing \"name\" property');\n    this.subKernels.push(subKernel);\n    return this;\n  }\n\n  /**\n   * @desc Destroys all memory associated with this kernel\n   * @param {Boolean} [removeCanvasReferences] remove any associated canvas references\n   */\n  destroy(removeCanvasReferences) {\n    throw new Error(`\"destroy\" called on ${ this.constructor.name }`);\n  }\n\n  /**\n   * bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n   * @param value\n   * @returns {number}\n   */\n  getBitRatio(value) {\n    if (this.precision === 'single') {\n      // 8 and 16 are upconverted to float32\n      return 4;\n    } else if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  /**\n   * @returns {number[]}\n   */\n  getPixels() {\n    throw new Error(`\"getPixels\" called on ${ this.constructor.name }`);\n  }\n\n  checkOutput() {\n    if (!this.output || !utils.isArray(this.output)) throw new Error('kernel.output not an array');\n    if (this.output.length < 1) throw new Error('kernel.output is empty, needs at least 1 value');\n    for (let i = 0; i < this.output.length; i++) {\n      if (isNaN(this.output[i]) || this.output[i] < 1) {\n        throw new Error(`${ this.constructor.name }.output[${ i }] incorrectly defined as \\`${ this.output[i] }\\`, needs to be numeric, and greater than 0`);\n      }\n    }\n  }\n\n  toJSON() {\n    const settings = {\n      output: this.output,\n      threadDim: this.threadDim,\n      pipeline: this.pipeline,\n      argumentNames: this.argumentNames,\n      argumentsTypes: this.argumentTypes,\n      constants: this.constants,\n      pluginNames: this.plugins ? this.plugins.map(plugin => plugin.name) : null,\n      returnType: this.returnType,\n    };\n    return {\n      settings\n    };\n  }\n}\n\nmodule.exports = {\n  Kernel\n};","/**\n * @desc This handles all the raw state, converted state, etc. of a single function.\n * [INTERNAL] A collection of functionNodes.\n * @class\n */\nclass FunctionBuilder {\n  /**\n   *\n   * @param {Kernel} kernel\n   * @param {FunctionNode} FunctionNode\n   * @param {object} [extraNodeOptions]\n   * @returns {FunctionBuilder}\n   * @static\n   */\n  static fromKernel(kernel, FunctionNode, extraNodeOptions) {\n    const {\n      kernelArguments,\n      kernelConstants,\n      argumentNames,\n      argumentSizes,\n      argumentBitRatios,\n      constants,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      nativeFunctions,\n      output,\n      optimizeFloatMemory,\n      precision,\n      plugins,\n      source,\n      subKernels,\n      functions,\n      leadingReturnStatement,\n      followingReturnStatement,\n      dynamicArguments,\n      dynamicOutput,\n      warnVarUsage,\n    } = kernel;\n\n    const argumentTypes = new Array(kernelArguments.length);\n    const constantTypes = {};\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      argumentTypes[i] = kernelArguments[i].type;\n    }\n\n    for (let i = 0; i < kernelConstants.length; i++) {\n      const kernelConstant = kernelConstants[i]\n      constantTypes[kernelConstant.name] = kernelConstant.type;\n    }\n\n    const needsArgumentType = (functionName, index) => {\n      return functionBuilder.needsArgumentType(functionName, index);\n    };\n\n    const assignArgumentType = (functionName, index, type) => {\n      functionBuilder.assignArgumentType(functionName, index, type);\n    };\n\n    const lookupReturnType = (functionName, ast, requestingNode) => {\n      return functionBuilder.lookupReturnType(functionName, ast, requestingNode);\n    };\n\n    const lookupFunctionArgumentTypes = (functionName) => {\n      return functionBuilder.lookupFunctionArgumentTypes(functionName);\n    };\n\n    const lookupFunctionArgumentName = (functionName, argumentIndex) => {\n      return functionBuilder.lookupFunctionArgumentName(functionName, argumentIndex);\n    };\n\n    const lookupFunctionArgumentBitRatio = (functionName, argumentName) => {\n      return functionBuilder.lookupFunctionArgumentBitRatio(functionName, argumentName);\n    };\n\n    const triggerImplyArgumentType = (functionName, i, argumentType, requestingNode) => {\n      functionBuilder.assignArgumentType(functionName, i, argumentType, requestingNode);\n    };\n\n    const triggerTrackArgumentSynonym = (functionName, argumentName, calleeFunctionName, argumentIndex) => {\n      functionBuilder.trackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex);\n    };\n\n    const lookupArgumentSynonym = (originFunctionName, functionName, argumentName) => {\n      return functionBuilder.lookupArgumentSynonym(originFunctionName, functionName, argumentName);\n    };\n\n    const onFunctionCall = (functionName, calleeFunctionName, args) => {\n      functionBuilder.trackFunctionCall(functionName, calleeFunctionName, args);\n    };\n\n    const onNestedFunction = (ast, returnType) => {\n      const argumentNames = [];\n      for (let i = 0; i < ast.params.length; i++) {\n        argumentNames.push(ast.params[i].name);\n      }\n      const nestedFunction = new FunctionNode(null, Object.assign({}, nodeOptions, {\n        returnType: null,\n        ast,\n        name: ast.id.name,\n        argumentNames,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerTrackArgumentSynonym,\n        lookupArgumentSynonym,\n        onFunctionCall,\n        warnVarUsage,\n      }));\n      nestedFunction.traceFunctionAST(ast);\n      functionBuilder.addFunctionNode(nestedFunction);\n    };\n\n    const nodeOptions = Object.assign({\n      isRootKernel: false,\n      onNestedFunction,\n      lookupReturnType,\n      lookupFunctionArgumentTypes,\n      lookupFunctionArgumentName,\n      lookupFunctionArgumentBitRatio,\n      needsArgumentType,\n      assignArgumentType,\n      triggerImplyArgumentType,\n      triggerTrackArgumentSynonym,\n      lookupArgumentSynonym,\n      onFunctionCall,\n      optimizeFloatMemory,\n      precision,\n      constants,\n      constantTypes,\n      constantBitRatios,\n      debug,\n      loopMaxIterations,\n      output,\n      plugins,\n      dynamicArguments,\n      dynamicOutput,\n    }, extraNodeOptions || {});\n\n    const rootNodeOptions = Object.assign({}, nodeOptions, {\n      isRootKernel: true,\n      name: 'kernel',\n      argumentNames,\n      argumentTypes,\n      argumentSizes,\n      argumentBitRatios,\n      leadingReturnStatement,\n      followingReturnStatement,\n    });\n\n    if (typeof source === 'object' && source.functionNodes) {\n      return new FunctionBuilder().fromJSON(source.functionNodes, FunctionNode);\n    }\n\n    const rootNode = new FunctionNode(source, rootNodeOptions);\n\n    let functionNodes = null;\n    if (functions) {\n      functionNodes = functions.map((fn) => new FunctionNode(fn.source, {\n        returnType: fn.returnType,\n        argumentTypes: fn.argumentTypes,\n        output,\n        plugins,\n        constants,\n        constantTypes,\n        constantBitRatios,\n        optimizeFloatMemory,\n        precision,\n        lookupReturnType,\n        lookupFunctionArgumentTypes,\n        lookupFunctionArgumentName,\n        lookupFunctionArgumentBitRatio,\n        needsArgumentType,\n        assignArgumentType,\n        triggerImplyArgumentType,\n        triggerTrackArgumentSynonym,\n        lookupArgumentSynonym,\n        onFunctionCall,\n      }));\n    }\n\n    let subKernelNodes = null;\n    if (subKernels) {\n      subKernelNodes = subKernels.map((subKernel) => {\n        const { name, source } = subKernel;\n        return new FunctionNode(source, Object.assign({}, nodeOptions, {\n          name,\n          isSubKernel: true,\n          isRootKernel: false,\n        }));\n      });\n    }\n\n    const functionBuilder = new FunctionBuilder({\n      kernel,\n      rootNode,\n      functionNodes,\n      nativeFunctions,\n      subKernelNodes\n    });\n\n    return functionBuilder;\n  }\n\n  /**\n   *\n   * @param {IFunctionBuilderSettings} [settings]\n   */\n  constructor(settings) {\n    settings = settings || {};\n    this.kernel = settings.kernel;\n    this.rootNode = settings.rootNode;\n    this.functionNodes = settings.functionNodes || [];\n    this.subKernelNodes = settings.subKernelNodes || [];\n    this.nativeFunctions = settings.nativeFunctions || [];\n    this.functionMap = {};\n    this.nativeFunctionNames = [];\n    this.lookupChain = [];\n    this.argumentChain = [];\n    this.functionNodeDependencies = {};\n    this.functionCalls = {};\n\n    if (this.rootNode) {\n      this.functionMap['kernel'] = this.rootNode;\n    }\n\n    if (this.functionNodes) {\n      for (let i = 0; i < this.functionNodes.length; i++) {\n        this.functionMap[this.functionNodes[i].name] = this.functionNodes[i];\n      }\n    }\n\n    if (this.subKernelNodes) {\n      for (let i = 0; i < this.subKernelNodes.length; i++) {\n        this.functionMap[this.subKernelNodes[i].name] = this.subKernelNodes[i];\n      }\n    }\n\n    if (this.nativeFunctions) {\n      for (let i = 0; i < this.nativeFunctions.length; i++) {\n        const nativeFunction = this.nativeFunctions[i];\n        this.nativeFunctionNames.push(nativeFunction.name);\n      }\n    }\n  }\n\n  /**\n   * @desc Add the function node directly\n   *\n   * @param {FunctionNode} functionNode - functionNode to add\n   *\n   */\n  addFunctionNode(functionNode) {\n    if (!functionNode.name) throw new Error('functionNode.name needs set');\n    this.functionMap[functionNode.name] = functionNode;\n    if (functionNode.isRootKernel) {\n      this.rootNode = functionNode;\n    }\n  }\n\n  /**\n   * @desc Trace all the depending functions being called, from a single function\n   *\n   * This allow for 'unneeded' functions to be automatically optimized out.\n   * Note that the 0-index, is the starting function trace.\n   *\n   * @param {String} functionName - Function name to trace from, default to 'kernel'\n   * @param {String[]} [retList] - Returning list of function names that is traced. Including itself.\n   *\n   * @returns {String[]}  Returning list of function names that is traced. Including itself.\n   */\n  traceFunctionCalls(functionName, retList) {\n    functionName = functionName || 'kernel';\n    retList = retList || [];\n\n    if (this.nativeFunctionNames.indexOf(functionName) > -1) {\n      if (retList.indexOf(functionName) === -1) {\n        retList.push(functionName);\n      }\n      return retList;\n    }\n\n    const functionNode = this.functionMap[functionName];\n    if (functionNode) {\n      // Check if function already exists\n      const functionIndex = retList.indexOf(functionName);\n      if (functionIndex === -1) {\n        retList.push(functionName);\n        functionNode.toString(); //ensure JS trace is done\n        for (let i = 0; i < functionNode.calledFunctions.length; ++i) {\n          this.traceFunctionCalls(functionNode.calledFunctions[i], retList);\n        }\n      } else {\n        /**\n         * https://github.com/gpujs/gpu.js/issues/207\n         * if dependent function is already in the list, because a function depends on it, and because it has\n         * already been traced, we know that we must move the dependent function to the end of the the retList.\n         * */\n        const dependantFunctionName = retList.splice(functionIndex, 1)[0];\n        retList.push(dependantFunctionName);\n      }\n    }\n\n    return retList;\n  }\n\n  /**\n   * @desc Return the string for a function\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\n   */\n  getPrototypeString(functionName) {\n    return this.getPrototypes(functionName).join('\\n');\n  }\n\n  /**\n   * @desc Return the string for a function\n   * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\n   * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\n   */\n  getPrototypes(functionName) {\n    if (this.rootNode) {\n      this.rootNode.toString();\n    }\n    if (functionName) {\n      return this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n    }\n    return this.getPrototypesFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  /**\n   * @desc Get string from function names\n   * @param {String[]} functionList - List of function to build string\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   */\n  getStringFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const node = this.functionMap[functionList[i]];\n      if (node) {\n        ret.push(this.functionMap[functionList[i]].toString());\n      }\n    }\n    return ret.join('\\n');\n  }\n\n  /**\n   * @desc Return string of all functions converted\n   * @param {String[]} functionList - List of function names to build the string.\n   * @returns {Array} Prototypes of all functions converted\n   */\n  getPrototypesFromFunctionNames(functionList) {\n    const ret = [];\n    for (let i = 0; i < functionList.length; ++i) {\n      const functionName = functionList[i];\n      const functionIndex = this.nativeFunctionNames.indexOf(functionName);\n      if (functionIndex > -1) {\n        ret.push(this.nativeFunctions[functionIndex].source);\n        continue;\n      }\n      const node = this.functionMap[functionName];\n      if (node) {\n        ret.push(node.toString());\n      }\n    }\n    return ret;\n  }\n\n  toJSON() {\n    return this.traceFunctionCalls(this.rootNode.name).reverse().map(name => {\n      const nativeIndex = this.nativeFunctions.indexOf(name);\n      if (nativeIndex > -1) {\n        return {\n          name,\n          source: this.nativeFunctions[nativeIndex].source\n        };\n      } else if (this.functionMap[name]) {\n        return this.functionMap[name].toJSON();\n      } else {\n        throw new Error(`function ${ name } not found`);\n      }\n    });\n  }\n\n  fromJSON(jsonFunctionNodes, FunctionNode) {\n    this.functionMap = {};\n    for (let i = 0; i < jsonFunctionNodes.length; i++) {\n      const jsonFunctionNode = jsonFunctionNodes[i];\n      this.functionMap[jsonFunctionNode.settings.name] = new FunctionNode(jsonFunctionNode.ast, jsonFunctionNode.settings);\n    }\n    return this;\n  }\n\n  /**\n   * @desc Get string for a particular function name\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   * @returns {String} settings - The string, of all the various functions. Trace optimized if functionName given\n   */\n  getString(functionName) {\n    if (functionName) {\n      return this.getStringFromFunctionNames(this.traceFunctionCalls(functionName).reverse());\n    }\n    return this.getStringFromFunctionNames(Object.keys(this.functionMap));\n  }\n\n  lookupReturnType(functionName, ast, requestingNode) {\n    if (ast.type !== 'CallExpression') {\n      throw new Error(`expected ast type of \"CallExpression\", but is ${ ast.type }`);\n    }\n    if (this._isNativeFunction(functionName)) {\n      return this._lookupNativeFunctionReturnType(functionName);\n    } else if (this._isFunction(functionName)) {\n      const node = this._getFunction(functionName);\n      if (node.returnType) {\n        return node.returnType;\n      } else {\n        for (let i = 0; i < this.lookupChain.length; i++) {\n          // detect circlical logic\n          if (this.lookupChain[i].ast === ast) {\n            // detect if arguments have not resolved, preventing a return type\n            // if so, go ahead and resolve them, so we can resolve the return type\n            if (node.argumentTypes.length === 0 && ast.arguments.length > 0) {\n              const args = ast.arguments;\n              for (let j = 0; j < args.length; j++) {\n                this.lookupChain.push({\n                  name: requestingNode.name,\n                  ast: args[i],\n                  requestingNode\n                });\n                node.argumentTypes[j] = requestingNode.getType(args[j]);\n                this.lookupChain.pop();\n              }\n              return node.returnType = node.getType(node.getJsAST());\n            }\n\n            throw new Error('circlical logic detected!');\n          }\n        }\n        // get ready for a ride!\n        this.lookupChain.push({\n          name: requestingNode.name,\n          ast,\n          requestingNode\n        });\n        const type = node.getType(node.getJsAST());\n        this.lookupChain.pop();\n        return node.returnType = type;\n      }\n    }\n\n    // function not found, maybe native?\n    return null;\n\n    /**\n     * first iteration\n     * kernel.outputs = Array\n     * kernel.targets = Array\n     * kernel.returns = null\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\n     * calcErrorOutput.output = null\n     * calcErrorOutput.targets = null\n     * calcErrorOutput.returns = null\n     * calcDeltasSigmoid.error = null\n     * calcDeltasSigmoid.output = Number\n     * calcDeltasSigmoid.returns = null\n     *\n     * resolvable are:\n     * calcErrorOutput.output\n     * calcErrorOutput.targets\n     * calcErrorOutput.returns\n     *\n     * second iteration\n     * kernel.outputs = Array\n     * kernel.targets = Array\n     * kernel.returns = null\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\n     * calcErrorOutput.output = Number\n     * calcErrorOutput.targets = Array\n     * calcErrorOutput.returns = Number\n     * calcDeltasSigmoid.error = null\n     * calcDeltasSigmoid.output = Number\n     * calcDeltasSigmoid.returns = null\n     *\n     * resolvable are:\n     * calcDeltasSigmoid.error\n     * calcDeltasSigmoid.returns\n     * kernel.returns\n     *\n     * third iteration\n     * kernel.outputs = Array\n     * kernel.targets = Array\n     * kernel.returns = Number\n     * kernel.calls.calcErrorOutput = [kernel.output, kernel.targets]\n     * kernel.calls.calcDeltas = [calcErrorOutput.returns, kernel.output]\n     * calcErrorOutput.output = Number\n     * calcErrorOutput.targets = Array\n     * calcErrorOutput.returns = Number\n     * calcDeltasSigmoid.error = Number\n     * calcDeltasSigmoid.output = Number\n     * calcDeltasSigmoid.returns = Number\n     *\n     *\n     */\n  }\n\n  _getFunction(functionName) {\n    if (!this._isFunction(functionName)) {\n      new Error(`Function ${functionName} not found`);\n    }\n    return this.functionMap[functionName];\n  }\n\n  _isFunction(functionName) {\n    return Boolean(this.functionMap[functionName]);\n  }\n\n  _getNativeFunction(functionName) {\n    for (let i = 0; i < this.nativeFunctions.length; i++) {\n      if (this.nativeFunctions[i].name === functionName) return this.nativeFunctions[i];\n    }\n    return null;\n  }\n\n  _isNativeFunction(functionName) {\n    return Boolean(this._getNativeFunction(functionName));\n  }\n\n  _lookupNativeFunctionReturnType(functionName) {\n    let nativeFunction = this._getNativeFunction(functionName);\n    if (nativeFunction) {\n      return nativeFunction.returnType;\n    }\n    throw new Error(`Native function ${ functionName } not found`);\n  }\n\n  lookupFunctionArgumentTypes(functionName) {\n    if (this._isNativeFunction(functionName)) {\n      return this._getNativeFunction(functionName).argumentTypes;\n    } else if (this._isFunction(functionName)) {\n      return this._getFunction(functionName).argumentTypes;\n    }\n    return null;\n  }\n\n  lookupFunctionArgumentName(functionName, argumentIndex) {\n    return this._getFunction(functionName).argumentNames[argumentIndex];\n  }\n\n  lookupFunctionArgumentBitRatio(functionName, argumentName) {\n    if (!this._isFunction(functionName)) {\n      throw new Error('function not found');\n    }\n    if (this.rootNode.name === functionName) {\n      const i = this.rootNode.argumentNames.indexOf(argumentName);\n      if (i !== -1) {\n        return this.rootNode.argumentBitRatios[i];\n      } else {\n        throw new Error('argument bit ratio not found');\n      }\n    } else {\n      const node = this._getFunction(functionName);\n      const argumentSynonym = node.argumentSynonym[node.synonymIndex];\n      if (!argumentSynonym) {\n        throw new Error('argument synonym not found');\n      }\n      return this.lookupFunctionArgumentBitRatio(argumentSynonym.functionName, argumentSynonym.argumentName);\n    }\n  }\n\n  needsArgumentType(functionName, i) {\n    if (!this._isFunction(functionName)) return false;\n    const fnNode = this._getFunction(functionName);\n    return !fnNode.argumentTypes[i];\n  }\n\n  assignArgumentType(functionName, i, argumentType, requestingNode) {\n    if (!this._isFunction(functionName)) return;\n    const fnNode = this._getFunction(functionName);\n    if (!fnNode.argumentTypes[i]) {\n      fnNode.argumentTypes[i] = argumentType;\n    }\n  }\n\n  trackArgumentSynonym(functionName, argumentName, calleeFunctionName, argumentIndex) {\n    if (!this._isFunction(calleeFunctionName)) return;\n    const node = this._getFunction(calleeFunctionName);\n    if (!node.argumentSynonym) {\n      node.argumentSynonym = {};\n    }\n    const calleeArgumentName = node.argumentNames[argumentIndex];\n    if (!node.argumentSynonym[calleeArgumentName]) {\n      node.argumentSynonym[calleeArgumentName] = {};\n    }\n    node.synonymIndex++;\n    node.argumentSynonym[node.synonymIndex] = {\n      functionName,\n      argumentName,\n      calleeArgumentName,\n      calleeFunctionName,\n    };\n  }\n\n  lookupArgumentSynonym(originFunctionName, functionName, argumentName) {\n    if (originFunctionName === functionName) return argumentName;\n    if (!this._isFunction(functionName)) return null;\n    const node = this._getFunction(functionName);\n    const argumentSynonym = node.argumentSynonym[node.synonymUseIndex];\n    if (!argumentSynonym) return null;\n    if (argumentSynonym.calleeArgumentName !== argumentName) return null;\n    node.synonymUseIndex++;\n    if (originFunctionName !== functionName) {\n      return this.lookupArgumentSynonym(originFunctionName, argumentSynonym.functionName, argumentSynonym.argumentName);\n    }\n    return argumentSynonym.argumentName;\n  }\n\n  trackFunctionCall(functionName, calleeFunctionName, args) {\n    if (!this.functionNodeDependencies[functionName]) {\n      this.functionNodeDependencies[functionName] = new Set();\n      this.functionCalls[functionName] = [];\n    }\n    this.functionNodeDependencies[functionName].add(calleeFunctionName);\n    this.functionCalls[functionName].push(args);\n  }\n\n  getKernelResultType() {\n    return this.rootNode.returnType || this.rootNode.getType(this.rootNode.ast);\n  }\n\n  getSubKernelResultType(index) {\n    const subKernelNode = this.subKernelNodes[index];\n    let called = false;\n    for (let functionCallIndex = 0; functionCallIndex < this.rootNode.functionCalls.length; functionCallIndex++) {\n      const functionCall = this.rootNode.functionCalls[functionCallIndex];\n      if (functionCall.ast.callee.name === subKernelNode.name) {\n        called = true;\n      }\n    }\n    if (!called) {\n      throw new Error(`SubKernel ${ subKernelNode.name } never called by kernel`);\n    }\n    return subKernelNode.returnType || subKernelNode.getType(subKernelNode.getJsAST());\n  }\n\n  getReturnTypes() {\n    const result = {\n      [this.rootNode.name]: this.rootNode.getType(this.rootNode.ast),\n    };\n    const list = this.traceFunctionCalls(this.rootNode.name);\n    for (let i = 0; i < list.length; i++) {\n      const functionName = list[i];\n      const functionNode = this.functionMap[functionName];\n      result[functionName] = functionNode.getType(functionNode.ast);\n    }\n    return result;\n  }\n}\n\nmodule.exports = {\n  FunctionBuilder\n};","class FunctionTracer {\n  constructor(ast) {\n    this.runningContexts = [];\n    this.contexts = [];\n    this.functionCalls = [];\n    this.declarations = [];\n    this.identifiers = [];\n    this.functions = [];\n    this.returnStatements = [];\n    this.inLoopInit = false;\n    this.scan(ast);\n  }\n\n  get currentContext() {\n    return this.runningContexts.length > 0 ? this.runningContexts[this.runningContexts.length - 1] : null;\n  }\n\n  newContext(run) {\n    const newContext = Object.assign({}, this.currentContext);\n    this.contexts.push(newContext);\n    this.runningContexts.push(newContext);\n    run();\n    this.runningContexts.pop();\n  }\n\n  /**\n   * Recursively scans AST for declarations and functions, and add them to their respective context\n   * @param ast\n   */\n  scan(ast) {\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.scan(ast[i]);\n      }\n      return;\n    }\n    switch (ast.type) {\n      case 'Program':\n        this.scan(ast.body);\n        break;\n      case 'BlockStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n        });\n        break;\n      case 'AssignmentExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'BinaryExpression':\n        this.scan(ast.left);\n        if (ast.right) this.scan(ast.right);\n        break;\n      case 'UpdateExpression':\n        this.scan(ast.argument);\n        break;\n      case 'UnaryExpression':\n        this.scan(ast.argument);\n        break;\n      case 'VariableDeclaration':\n        this.scan(ast.declarations);\n        break;\n      case 'VariableDeclarator':\n        const { currentContext } = this;\n        const declaration = {\n          ast: ast,\n          context: currentContext,\n          name: ast.id.name,\n          origin: 'declaration',\n          forceInteger: this.inLoopInit,\n          assignable: !this.inLoopInit && !currentContext.hasOwnProperty(ast.id.name),\n        };\n        currentContext[ast.id.name] = declaration;\n        this.declarations.push(declaration);\n        this.scan(ast.id);\n        this.scan(ast.init);\n        break;\n      case 'FunctionExpression':\n      case 'FunctionDeclaration':\n        if (this.runningContexts.length === 0) {\n          this.scan(ast.body);\n        } else {\n          this.functions.push(ast);\n        }\n        break;\n      case 'IfStatement':\n        this.scan(ast.test);\n        this.scan(ast.consequent);\n        if (ast.alternate) this.scan(ast.alternate);\n        break;\n      case 'ForStatement':\n        this.newContext(() => {\n          if (ast.init) {\n            this.inLoopInit = true;\n            this.scan(ast.init);\n            this.inLoopInit = false;\n          }\n          if (ast.test) {\n            this.scan(ast.test);\n          }\n          this.scan(ast.update);\n          this.newContext(() => {\n            this.scan(ast.body);\n          });\n        });\n        break;\n      case 'DoWhileStatement':\n      case 'WhileStatement':\n        this.newContext(() => {\n          this.scan(ast.body);\n          this.scan(ast.test);\n        });\n        break;\n      case 'Identifier':\n        this.identifiers.push({\n          context: this.currentContext,\n          ast,\n        });\n        break;\n      case 'ReturnStatement':\n        this.returnStatements.push(ast);\n        this.scan(ast.argument);\n        break;\n      case 'MemberExpression':\n        this.scan(ast.object);\n        this.scan(ast.property);\n        break;\n      case 'ExpressionStatement':\n        this.scan(ast.expression);\n        break;\n      case 'ThisExpression':\n        break;\n      case 'CallExpression':\n        this.functionCalls.push({\n          context: this.currentContext,\n          ast,\n        });\n        this.scan(ast.arguments);\n        break;\n      case 'ArrayExpression':\n        this.scan(ast.elements);\n        break;\n      case 'ConditionalExpression':\n        this.scan(ast.test);\n        this.scan(ast.alternate);\n        this.scan(ast.consequent);\n        break;\n      case 'SwitchStatement':\n        this.scan(ast.discriminant);\n        this.scan(ast.cases);\n        break;\n      case 'SwitchCase':\n        if (ast.test) this.scan(ast.test);\n        this.scan(ast.consequent);\n        break;\n      case 'LogicalExpression':\n        this.scan(ast.left);\n        this.scan(ast.right);\n        break;\n      case 'Literal':\n        break;\n      case 'DebuggerStatement':\n        break;\n      case 'EmptyStatement':\n        break;\n      case 'BreakStatement':\n        break;\n      default:\n        throw new Error(`unhandled type \"${ast.type}\"`);\n    }\n  }\n}\n\nmodule.exports = {\n  FunctionTracer,\n};","const acorn = require('acorn');\nconst { utils } = require('../utils');\nconst { FunctionTracer } = require('./function-tracer');\n\n/**\n *\n * @desc Represents a single function, inside JS, webGL, or openGL.\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n */\nclass FunctionNode {\n  /**\n   *\n   * @param {string|object} source\n   * @param {IFunctionSettings} [settings]\n   */\n  constructor(source, settings) {\n    if (!source && !settings.ast) {\n      throw new Error('source parameter is missing');\n    }\n    settings = settings || {};\n    this.source = source;\n    this.ast = null;\n    this.name = typeof source === 'string' ? settings.isRootKernel ?\n      'kernel' :\n      (settings.name || utils.getFunctionNameFromString(source)) : null;\n    this.calledFunctions = [];\n    this.constants = {};\n    this.constantTypes = {};\n    this.constantBitRatios = {};\n    this.isRootKernel = false;\n    this.isSubKernel = false;\n    this.debug = null;\n    this.declarations = null;\n    this.functions = null;\n    this.identifiers = null;\n    this.contexts = null;\n    this.functionCalls = null;\n    this.states = [];\n    this.needsArgumentType = null;\n    this.assignArgumentType = null;\n    this.lookupReturnType = null;\n    this.lookupFunctionArgumentTypes = null;\n    this.lookupFunctionArgumentBitRatio = null;\n    this.triggerImplyArgumentType = null;\n    this.triggerTrackArgumentSynonym = null;\n    this.lookupArgumentSynonym = null;\n    this.onNestedFunction = null;\n    this.onFunctionCall = null;\n    this.optimizeFloatMemory = null;\n    this.precision = null;\n    this.loopMaxIterations = null;\n    this.argumentNames = (typeof this.source === 'string' ? utils.getArgumentNamesFromString(this.source) : null);\n    this.argumentTypes = [];\n    this.argumentSizes = [];\n    this.argumentBitRatios = null;\n    this.returnType = null;\n    this.output = [];\n    this.plugins = null;\n    this.leadingReturnStatement = null;\n    this.followingReturnStatement = null;\n    this.dynamicOutput = null;\n    this.dynamicArguments = null;\n    this.strictTypingChecking = false;\n    this.fixIntegerDivisionAccuracy = null;\n    this.warnVarUsage = true;\n\n    if (settings) {\n      for (const p in settings) {\n        if (!settings.hasOwnProperty(p)) continue;\n        if (!this.hasOwnProperty(p)) continue;\n        this[p] = settings[p];\n      }\n    }\n\n    this.synonymIndex = -1;\n    this.synonymUseIndex = 0;\n    this.argumentSynonym = {};\n    this.literalTypes = {};\n\n    this.validate();\n    this._string = null;\n    this._internalVariableNames = {};\n  }\n\n  validate() {\n    if (typeof this.source !== 'string' && !this.ast) {\n      throw new Error('this.source not a string');\n    }\n\n    if (!this.ast && !utils.isFunctionString(this.source)) {\n      throw new Error('this.source not a function string');\n    }\n\n    if (!this.name) {\n      throw new Error('this.name could not be set');\n    }\n\n    if (this.argumentTypes.length > 0 && this.argumentTypes.length !== this.argumentNames.length) {\n      throw new Error(`argumentTypes count of ${ this.argumentTypes.length } exceeds ${ this.argumentNames.length }`);\n    }\n\n    if (this.output.length < 1) {\n      throw new Error('this.output is not big enough');\n    }\n  }\n\n  /**\n   * @param {String} name\n   * @returns {boolean}\n   */\n  isIdentifierConstant(name) {\n    if (!this.constants) return false;\n    return this.constants.hasOwnProperty(name);\n  }\n\n  isInput(argumentName) {\n    return this.argumentTypes[this.argumentNames.indexOf(argumentName)] === 'Input';\n  }\n\n  pushState(state) {\n    this.states.push(state);\n  }\n\n  popState(state) {\n    if (this.state !== state) {\n      throw new Error(`Cannot popState ${ state } when in ${ this.state }`);\n    }\n    this.states.pop();\n  }\n\n  isState(state) {\n    return this.state === state;\n  }\n\n  get state() {\n    return this.states[this.states.length - 1];\n  }\n\n  /**\n   * @function\n   * @name astMemberExpressionUnroll\n   * @desc Parses the abstract syntax tree for binary expression.\n   *\n   * <p>Utility function for astCallExpression.</p>\n   *\n   * @param {Object} ast - the AST object to parse\n   *\n   * @returns {String} the function namespace call, unrolled\n   */\n  astMemberExpressionUnroll(ast) {\n    if (ast.type === 'Identifier') {\n      return ast.name;\n    } else if (ast.type === 'ThisExpression') {\n      return 'this';\n    }\n\n    if (ast.type === 'MemberExpression') {\n      if (ast.object && ast.property) {\n        //babel sniffing\n        if (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n          return this.astMemberExpressionUnroll(ast.property);\n        }\n\n        return (\n          this.astMemberExpressionUnroll(ast.object) +\n          '.' +\n          this.astMemberExpressionUnroll(ast.property)\n        );\n      }\n    }\n\n    //babel sniffing\n    if (ast.hasOwnProperty('expressions')) {\n      const firstExpression = ast.expressions[0];\n      if (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n        return this.astMemberExpressionUnroll(ast.expressions[1]);\n      }\n    }\n\n    // Failure, unknown expression\n    throw this.astErrorOutput('Unknown astMemberExpressionUnroll', ast);\n  }\n\n  /**\n   * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\n   * This is used internally to convert to shader code\n   *\n   * @param {Object} [inParser] - Parser to use, assumes in scope 'parser' if null or undefined\n   *\n   * @returns {Object} The function AST Object, note that result is cached under this.ast;\n   */\n  getJsAST(inParser) {\n    if (this.ast) {\n      return this.ast;\n    }\n    if (typeof this.source === 'object') {\n      this.traceFunctionAST(this.source);\n      return this.ast = this.source;\n    }\n\n    inParser = inParser || acorn;\n    if (inParser === null) {\n      throw new Error('Missing JS to AST parser');\n    }\n\n    const ast = Object.freeze(inParser.parse(`const parser_${ this.name } = ${ this.source };`, {\n      locations: true\n    }));\n    // take out the function object, outside the var declarations\n    const functionAST = ast.body[0].declarations[0].init;\n    this.traceFunctionAST(functionAST);\n\n    if (!ast) {\n      throw new Error('Failed to parse JS code');\n    }\n\n    return this.ast = functionAST;\n  }\n\n  traceFunctionAST(ast) {\n    const { contexts, declarations, functions, identifiers, functionCalls } = new FunctionTracer(ast);\n    this.contexts = contexts;\n    this.identifiers = identifiers;\n    this.functionCalls = functionCalls;\n    this.declarations = [];\n    this.functions = functions;\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const { ast, context, name, origin, forceInteger, assignable } = declaration;\n      const { init } = ast;\n      const dependencies = this.getDependencies(init);\n      let valueType = null;\n\n      if (forceInteger) {\n        valueType = 'Integer';\n      } else {\n        if (init) {\n          const realType = this.getType(init);\n          switch (realType) {\n            case 'Integer':\n            case 'Float':\n            case 'Number':\n              if (init.type === 'MemberExpression') {\n                valueType = realType;\n              } else {\n                valueType = 'Number';\n              }\n              break;\n            case 'LiteralInteger':\n              valueType = 'Number';\n              break;\n            default:\n              valueType = realType;\n          }\n        }\n      }\n      this.declarations.push({\n        valueType,\n        dependencies,\n        isSafe: this.isSafeDependencies(dependencies),\n        ast,\n        name,\n        context,\n        origin,\n        assignable,\n      });\n    }\n\n    for (let i = 0; i < functions.length; i++) {\n      this.onNestedFunction(functions[i]);\n    }\n  }\n\n  getDeclaration(ast) {\n    for (let i = 0; i < this.identifiers.length; i++) {\n      const identifier = this.identifiers[i];\n      if (ast === identifier.ast && identifier.context.hasOwnProperty(ast.name)) {\n        for (let j = 0; j < this.declarations.length; j++) {\n          const declaration = this.declarations[j];\n          if (declaration.name === ast.name && declaration.context[ast.name] === identifier.context[ast.name]) {\n            return declaration;\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @desc Return the type of parameter sent to subKernel/Kernel.\n   * @param {Object} ast - Identifier\n   * @returns {String} Type of the parameter\n   */\n  getVariableType(ast) {\n    if (ast.type !== 'Identifier') {\n      throw new Error(`ast of ${ast.type} not \"Identifier\"`);\n    }\n    let type = null;\n    const argumentIndex = this.argumentNames.indexOf(ast.name);\n    if (argumentIndex === -1) {\n      const declaration = this.getDeclaration(ast);\n      if (declaration) {\n        return declaration.valueType;\n      }\n    } else {\n      const argumentType = this.argumentTypes[argumentIndex];\n      if (argumentType) {\n        type = argumentType;\n      }\n    }\n    if (!type && this.strictTypingChecking) {\n      throw new Error(`Declaration of ${name} not found`);\n    }\n    return type;\n  }\n\n  /**\n   * Generally used to lookup the value type returned from a member expressions\n   * @param {String} type\n   * @return {String}\n   */\n  getLookupType(type) {\n    if (!typeLookupMap.hasOwnProperty(type)) {\n      throw new Error(`unknown typeLookupMap ${ type }`);\n    }\n    return typeLookupMap[type];\n  }\n\n  getConstantType(constantName) {\n    if (this.constantTypes[constantName]) {\n      const type = this.constantTypes[constantName];\n      if (type === 'Float') {\n        return 'Number';\n      } else {\n        return type;\n      }\n    }\n    throw new Error(`Type for constant \"${ constantName }\" not declared`);\n  }\n\n  /**\n   * @desc Return the name of the *user argument*(subKernel argument) corresponding\n   * to the argument supplied to the kernel\n   *\n   * @param {String} name - Name of the argument\n   * @returns {String} Name of the parameter\n   */\n  getKernelArgumentName(name) {\n    if (!this.lookupArgumentSynonym) return null;\n    const argumentIndex = this.argumentNames.indexOf(name);\n    if (argumentIndex === -1) return null;\n    return this.lookupArgumentSynonym('kernel', this.name, name);\n  }\n\n  toString() {\n    if (this._string) return this._string;\n    return this._string = this.astGeneric(this.getJsAST(), []).join('').trim();\n  }\n\n  toJSON() {\n    const settings = {\n      source: this.source,\n      name: this.name,\n      constants: this.constants,\n      constantTypes: this.constantTypes,\n      isRootKernel: this.isRootKernel,\n      isSubKernel: this.isSubKernel,\n      debug: this.debug,\n      output: this.output,\n      loopMaxIterations: this.loopMaxIterations,\n      argumentNames: this.argumentNames,\n      argumentTypes: this.argumentTypes,\n      argumentSizes: this.argumentSizes,\n      returnType: this.returnType,\n      leadingReturnStatement: this.leadingReturnStatement,\n      followingReturnStatement: this.followingReturnStatement,\n    };\n\n    return {\n      ast: this.ast,\n      settings\n    };\n  }\n\n  /**\n   * Recursively looks up type for ast expression until it's found\n   * @param ast\n   * @returns {String|null}\n   */\n  getType(ast) {\n    if (Array.isArray(ast)) {\n      return this.getType(ast[ast.length - 1]);\n    }\n    switch (ast.type) {\n      case 'BlockStatement':\n        return this.getType(ast.body);\n      case 'ArrayExpression':\n        return `Array(${ ast.elements.length })`;\n      case 'Literal':\n        const literalKey = `${ast.start},${ast.end}`;\n        if (this.literalTypes[literalKey]) {\n          return this.literalTypes[literalKey];\n        }\n        if (Number.isInteger(ast.value)) {\n          return 'LiteralInteger';\n        } else if (ast.value === true || ast.value === false) {\n          return 'Boolean';\n        } else {\n          return 'Number';\n        }\n        case 'AssignmentExpression':\n          return this.getType(ast.left);\n        case 'CallExpression':\n          if (this.isAstMathFunction(ast)) {\n            return 'Number';\n          }\n          if (!ast.callee || !ast.callee.name) {\n            if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[ast.callee.expressions.length - 1].property.name) {\n              const functionName = ast.callee.expressions[ast.callee.expressions.length - 1].property.name;\n              this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n              return this.lookupReturnType(functionName, ast, this);\n            }\n            throw this.astErrorOutput('Unknown call expression', ast);\n          }\n          if (ast.callee && ast.callee.name) {\n            const functionName = ast.callee.name;\n            this.inferArgumentTypesIfNeeded(functionName, ast.arguments);\n            return this.lookupReturnType(functionName, ast, this);\n          }\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n        case 'BinaryExpression':\n          // modulos is Number\n          switch (ast.operator) {\n            case '%':\n            case '/':\n              if (this.fixIntegerDivisionAccuracy) {\n                return 'Number';\n              } else {\n                break;\n              }\n              case '>':\n              case '<':\n                return 'Boolean';\n              case '&':\n              case '|':\n              case '^':\n              case '<<':\n              case '>>':\n              case '>>>':\n                return 'Integer';\n          }\n          const type = this.getType(ast.left);\n          if (this.isState('skip-literal-correction')) return type;\n          if (type === 'LiteralInteger') {\n            const rightType = this.getType(ast.right);\n            if (rightType === 'LiteralInteger') {\n              if (ast.left.value % 1 === 0) {\n                return 'Integer';\n              } else {\n                return 'Float';\n              }\n            }\n            return rightType;\n          }\n          return typeLookupMap[type] || type;\n        case 'UpdateExpression':\n          return this.getType(ast.argument);\n        case 'UnaryExpression':\n          if (ast.operator === '~') {\n            return 'Integer';\n          }\n          return this.getType(ast.argument);\n        case 'VariableDeclaration': {\n          const declarations = ast.declarations;\n          let lastType;\n          for (let i = 0; i < declarations.length; i++) {\n            const declaration = declarations[i];\n            lastType = this.getType(declaration);\n          }\n          if (!lastType) {\n            throw this.astErrorOutput(`Unable to find type for declaration`, ast);\n          }\n          return lastType;\n        }\n        case 'VariableDeclarator':\n          const declaration = this.getDeclaration(ast.id);\n          if (!declaration) {\n            throw this.astErrorOutput(`Unable to find declarator`, ast);\n          }\n\n          if (!declaration.valueType) {\n            throw this.astErrorOutput(`Unable to find declarator valueType`, ast);\n          }\n\n          return declaration.valueType;\n        case 'Identifier':\n          if (ast.name === 'Infinity') {\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const signature = this.getVariableSignature(ast);\n            if (signature === 'value') {\n              const type = this.getVariableType(ast);\n              if (!type) {\n                throw this.astErrorOutput(`Unable to find identifier valueType`, ast);\n              }\n              return type;\n            }\n          }\n          const origin = this.findIdentifierOrigin(ast);\n          if (origin && origin.init) {\n            return this.getType(origin.init);\n          }\n          return null;\n        case 'ReturnStatement':\n          return this.getType(ast.argument);\n        case 'MemberExpression':\n          if (this.isAstMathFunction(ast)) {\n            switch (ast.property.name) {\n              case 'ceil':\n                return 'Integer';\n              case 'floor':\n                return 'Integer';\n              case 'round':\n                return 'Integer';\n            }\n            return 'Number';\n          }\n          if (this.isAstVariable(ast)) {\n            const variableSignature = this.getVariableSignature(ast);\n            switch (variableSignature) {\n              case 'value[]':\n                return this.getLookupType(this.getVariableType(ast.object));\n              case 'value[][]':\n                return this.getLookupType(this.getVariableType(ast.object.object));\n              case 'value[][][]':\n                return this.getLookupType(this.getVariableType(ast.object.object.object));\n              case 'value[][][][]':\n                return this.getLookupType(this.getVariableType(ast.object.object.object.object));\n              case 'value.thread.value':\n              case 'this.thread.value':\n                return 'Integer';\n              case 'this.output.value':\n                return this.dynamicOutput ? 'Integer' : 'LiteralInteger';\n              case 'this.constants.value':\n                return this.getConstantType(ast.property.name);\n              case 'this.constants.value[]':\n                return this.getLookupType(this.getConstantType(ast.object.property.name));\n              case 'this.constants.value[][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.property.name));\n              case 'this.constants.value[][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.property.name));\n              case 'this.constants.value[][][][]':\n                return this.getLookupType(this.getConstantType(ast.object.object.object.object.property.name));\n              case 'fn()[]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'fn()[][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'fn()[][][]':\n                return this.getLookupType(this.getType(ast.object));\n              case 'value.value':\n                if (this.isAstMathVariable(ast)) {\n                  return 'Number';\n                }\n                switch (ast.property.name) {\n                  case 'r':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'g':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'b':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                  case 'a':\n                    return this.getLookupType(this.getVariableType(ast.object));\n                }\n                case '[][]':\n                  return 'Number';\n            }\n            throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n          }\n          throw this.astErrorOutput('Unhandled getType MemberExpression', ast);\n        case 'ConditionalExpression':\n          return this.getType(ast.consequent);\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          const lastReturn = this.findLastReturn(ast.body);\n          if (lastReturn) {\n            return this.getType(lastReturn);\n          }\n          return null;\n        case 'IfStatement':\n          return this.getType(ast.consequent);\n        default:\n          throw this.astErrorOutput(`Unhandled getType Type \"${ ast.type }\"`, ast);\n    }\n  }\n\n  inferArgumentTypesIfNeeded(functionName, args) {\n    // ensure arguments are filled in, so when we lookup return type, we already can infer it\n    for (let i = 0; i < args.length; i++) {\n      if (!this.needsArgumentType(functionName, i)) continue;\n      const type = this.getType(args[i]);\n      if (!type) {\n        throw this.astErrorOutput(`Unable to infer argument ${i}`, args[i]);\n      }\n      this.assignArgumentType(functionName, i, type);\n    }\n  }\n\n  isAstMathVariable(ast) {\n    const mathProperties = [\n      'E',\n      'PI',\n      'SQRT2',\n      'SQRT1_2',\n      'LN2',\n      'LN10',\n      'LOG2E',\n      'LOG10E',\n    ];\n    return ast.type === 'MemberExpression' &&\n      ast.object && ast.object.type === 'Identifier' &&\n      ast.object.name === 'Math' &&\n      ast.property &&\n      ast.property.type === 'Identifier' &&\n      mathProperties.indexOf(ast.property.name) > -1;\n  }\n\n  isAstMathFunction(ast) {\n    const mathFunctions = [\n      'abs',\n      'acos',\n      'asin',\n      'atan',\n      'atan2',\n      'ceil',\n      'cos',\n      'exp',\n      'floor',\n      'log',\n      'log2',\n      'max',\n      'min',\n      'pow',\n      'random',\n      'round',\n      'sign',\n      'sin',\n      'sqrt',\n      'tan',\n    ];\n    return ast.type === 'CallExpression' &&\n      ast.callee &&\n      ast.callee.type === 'MemberExpression' &&\n      ast.callee.object &&\n      ast.callee.object.type === 'Identifier' &&\n      ast.callee.object.name === 'Math' &&\n      ast.callee.property &&\n      ast.callee.property.type === 'Identifier' &&\n      mathFunctions.indexOf(ast.callee.property.name) > -1;\n  }\n\n  isAstVariable(ast) {\n    return ast.type === 'Identifier' || ast.type === 'MemberExpression';\n  }\n\n  isSafe(ast) {\n    return this.isSafeDependencies(this.getDependencies(ast));\n  }\n\n  isSafeDependencies(dependencies) {\n    return dependencies && dependencies.every ? dependencies.every(dependency => dependency.isSafe) : true;\n  }\n\n  /**\n   *\n   * @param ast\n   * @param dependencies\n   * @param isNotSafe\n   * @return {Array}\n   */\n  getDependencies(ast, dependencies, isNotSafe) {\n    if (!dependencies) {\n      dependencies = [];\n    }\n    if (!ast) return null;\n    if (Array.isArray(ast)) {\n      for (let i = 0; i < ast.length; i++) {\n        this.getDependencies(ast[i], dependencies, isNotSafe);\n      }\n      return dependencies;\n    }\n    switch (ast.type) {\n      case 'AssignmentExpression':\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'Literal':\n        dependencies.push({\n          origin: 'literal',\n          value: ast.value,\n          isSafe: isNotSafe === true ? false : ast.value > -Infinity && ast.value < Infinity && !isNaN(ast.value)\n        });\n        break;\n      case 'VariableDeclarator':\n        return this.getDependencies(ast.init, dependencies, isNotSafe);\n      case 'Identifier':\n        const declaration = this.getDeclaration(ast);\n        if (declaration) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'declaration',\n            isSafe: isNotSafe ? false : this.isSafeDependencies(declaration.dependencies),\n          });\n        } else if (this.argumentNames.indexOf(ast.name) > -1) {\n          dependencies.push({\n            name: ast.name,\n            origin: 'argument',\n            isSafe: false,\n          });\n        } else if (this.strictTypingChecking) {\n          throw new Error(`Cannot find identifier origin \"${ast.name}\"`);\n        }\n        break;\n      case 'FunctionDeclaration':\n        return this.getDependencies(ast.body.body[ast.body.body.length - 1], dependencies, isNotSafe);\n      case 'ReturnStatement':\n        return this.getDependencies(ast.argument, dependencies);\n      case 'BinaryExpression':\n        isNotSafe = (ast.operator === '/' || ast.operator === '*');\n        this.getDependencies(ast.left, dependencies, isNotSafe);\n        this.getDependencies(ast.right, dependencies, isNotSafe);\n        return dependencies;\n      case 'UnaryExpression':\n      case 'UpdateExpression':\n        return this.getDependencies(ast.argument, dependencies, isNotSafe);\n      case 'VariableDeclaration':\n        return this.getDependencies(ast.declarations, dependencies, isNotSafe);\n      case 'ArrayExpression':\n        dependencies.push({\n          origin: 'declaration',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'CallExpression':\n        dependencies.push({\n          origin: 'function',\n          isSafe: true,\n        });\n        return dependencies;\n      case 'MemberExpression':\n        const details = this.getMemberExpressionDetails(ast);\n        switch (details.signature) {\n          case 'value[]':\n            this.getDependencies(ast.object, dependencies, isNotSafe);\n            break;\n          case 'value[][]':\n            this.getDependencies(ast.object.object, dependencies, isNotSafe);\n            break;\n          case 'value[][][]':\n            this.getDependencies(ast.object.object.object, dependencies, isNotSafe);\n            break;\n          case 'this.output.value':\n            if (this.dynamicOutput) {\n              dependencies.push({\n                name: details.name,\n                origin: 'output',\n                isSafe: false,\n              });\n            }\n            break;\n        }\n        if (details) {\n          if (details.property) {\n            this.getDependencies(details.property, dependencies, isNotSafe);\n          }\n          if (details.xProperty) {\n            this.getDependencies(details.xProperty, dependencies, isNotSafe);\n          }\n          if (details.yProperty) {\n            this.getDependencies(details.yProperty, dependencies, isNotSafe);\n          }\n          if (details.zProperty) {\n            this.getDependencies(details.zProperty, dependencies, isNotSafe);\n          }\n          return dependencies;\n        }\n        default:\n          throw this.astErrorOutput(`Unhandled type ${ ast.type } in getDependencies`, ast);\n    }\n    return dependencies;\n  }\n\n  getVariableSignature(ast) {\n    if (!this.isAstVariable(ast)) {\n      throw new Error(`ast of type \"${ ast.type }\" is not a variable signature`);\n    }\n    if (ast.type === 'Identifier') {\n      return 'value';\n    }\n    const signature = [];\n    while (true) {\n      if (!ast) break;\n      if (ast.computed) {\n        signature.push('[]');\n      } else if (ast.type === 'ThisExpression') {\n        signature.unshift('this');\n      } else if (ast.property && ast.property.name) {\n        if (\n          ast.property.name === 'x' ||\n          ast.property.name === 'y' ||\n          ast.property.name === 'z'\n        ) {\n          signature.unshift('.value');\n        } else if (\n          ast.property.name === 'constants' ||\n          ast.property.name === 'thread' ||\n          ast.property.name === 'output'\n        ) {\n          signature.unshift('.' + ast.property.name);\n        } else {\n          signature.unshift('.value');\n        }\n      } else if (ast.name) {\n        signature.unshift('value');\n      } else if (ast.callee && ast.callee.name) {\n        signature.unshift('fn()');\n      } else if (ast.elements) {\n        signature.unshift('[]');\n      } else {\n        signature.unshift('unknown');\n      }\n      ast = ast.object;\n    }\n\n    const signatureString = signature.join('');\n    const allowedExpressions = [\n      'value',\n      'value[]',\n      'value[][]',\n      'value[][][]',\n      'value[][][][]',\n      'value.value',\n      'value.thread.value',\n      'this.thread.value',\n      'this.output.value',\n      'this.constants.value',\n      'this.constants.value[]',\n      'this.constants.value[][]',\n      'this.constants.value[][][]',\n      'this.constants.value[][][][]',\n      'fn()[]',\n      'fn()[][]',\n      'fn()[][][]',\n      '[][]',\n    ];\n    if (allowedExpressions.indexOf(signatureString) > -1) {\n      return signatureString;\n    }\n    return null;\n  }\n\n  build() {\n    return this.toString().length > 0;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for generically to its respective function\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed string array\n   */\n  astGeneric(ast, retArr) {\n    if (ast === null) {\n      throw this.astErrorOutput('NULL ast', ast);\n    } else {\n      if (Array.isArray(ast)) {\n        for (let i = 0; i < ast.length; i++) {\n          this.astGeneric(ast[i], retArr);\n        }\n        return retArr;\n      }\n\n      switch (ast.type) {\n        case 'FunctionDeclaration':\n          return this.astFunctionDeclaration(ast, retArr);\n        case 'FunctionExpression':\n          return this.astFunctionExpression(ast, retArr);\n        case 'ReturnStatement':\n          return this.astReturnStatement(ast, retArr);\n        case 'Literal':\n          return this.astLiteral(ast, retArr);\n        case 'BinaryExpression':\n          return this.astBinaryExpression(ast, retArr);\n        case 'Identifier':\n          return this.astIdentifierExpression(ast, retArr);\n        case 'AssignmentExpression':\n          return this.astAssignmentExpression(ast, retArr);\n        case 'ExpressionStatement':\n          return this.astExpressionStatement(ast, retArr);\n        case 'EmptyStatement':\n          return this.astEmptyStatement(ast, retArr);\n        case 'BlockStatement':\n          return this.astBlockStatement(ast, retArr);\n        case 'IfStatement':\n          return this.astIfStatement(ast, retArr);\n        case 'SwitchStatement':\n          return this.astSwitchStatement(ast, retArr);\n        case 'BreakStatement':\n          return this.astBreakStatement(ast, retArr);\n        case 'ContinueStatement':\n          return this.astContinueStatement(ast, retArr);\n        case 'ForStatement':\n          return this.astForStatement(ast, retArr);\n        case 'WhileStatement':\n          return this.astWhileStatement(ast, retArr);\n        case 'DoWhileStatement':\n          return this.astDoWhileStatement(ast, retArr);\n        case 'VariableDeclaration':\n          return this.astVariableDeclaration(ast, retArr);\n        case 'VariableDeclarator':\n          return this.astVariableDeclarator(ast, retArr);\n        case 'ThisExpression':\n          return this.astThisExpression(ast, retArr);\n        case 'SequenceExpression':\n          return this.astSequenceExpression(ast, retArr);\n        case 'UnaryExpression':\n          return this.astUnaryExpression(ast, retArr);\n        case 'UpdateExpression':\n          return this.astUpdateExpression(ast, retArr);\n        case 'LogicalExpression':\n          return this.astLogicalExpression(ast, retArr);\n        case 'MemberExpression':\n          return this.astMemberExpression(ast, retArr);\n        case 'CallExpression':\n          return this.astCallExpression(ast, retArr);\n        case 'ArrayExpression':\n          return this.astArrayExpression(ast, retArr);\n        case 'DebuggerStatement':\n          return this.astDebuggerStatement(ast, retArr);\n        case 'ConditionalExpression':\n          return this.astConditionalExpression(ast, retArr);\n      }\n\n      throw this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n    }\n  }\n  /**\n   * @desc To throw the AST error, with its location.\n   * @param {string} error - the error message output\n   * @param {Object} ast - the AST object where the error is\n   */\n  astErrorOutput(error, ast) {\n    if (typeof this.source !== 'string') {\n      return new Error(error);\n    }\n\n    const debugString = utils.getAstString(this.source, ast);\n    const leadingSource = this.source.substr(ast.start);\n    const splitLines = leadingSource.split(/\\n/);\n    const lineBefore = splitLines.length > 0 ? splitLines[splitLines.length - 1] : 0;\n    return new Error(`${error} on line ${ splitLines.length }, position ${ lineBefore.length }:\\n ${ debugString }`);\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    return retArr;\n  }\n\n  astConditionalExpression(ast, retArr) {\n    if (ast.type !== 'ConditionalExpression') {\n      throw this.astErrorOutput('Not a conditional expression', ast);\n    }\n    retArr.push('(');\n    this.astGeneric(ast.test, retArr);\n    retArr.push('?');\n    this.astGeneric(ast.consequent, retArr);\n    retArr.push(':');\n    this.astGeneric(ast.alternate, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  /**\n   * @abstract\n   * @param {Object} ast\n   * @param {String[]} retArr\n   * @returns {String[]}\n   */\n  astFunction(ast, retArr) {\n    throw new Error(`\"astFunction\" not defined on ${ this.constructor.name }`);\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astFunctionDeclaration(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  astFunctionExpression(ast, retArr) {\n    if (this.isChildFunction(ast)) {\n      return retArr;\n    }\n    return this.astFunction(ast, retArr);\n  }\n  isChildFunction(ast) {\n    for (let i = 0; i < this.functions.length; i++) {\n      if (this.functions[i] === ast) {\n        return true;\n      }\n    }\n    return false;\n  }\n  astReturnStatement(ast, retArr) {\n    return retArr;\n  }\n  astLiteral(ast, retArr) {\n    this.literalTypes[`${ast.start},${ast.end}`] = 'Number';\n    return retArr;\n  }\n  astBinaryExpression(ast, retArr) {\n    return retArr;\n  }\n  astIdentifierExpression(ast, retArr) {\n    return retArr;\n  }\n  astAssignmentExpression(ast, retArr) {\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *generic expression* statement\n   * @param {Object} esNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astExpressionStatement(esNode, retArr) {\n    this.astGeneric(esNode.expression, retArr);\n    retArr.push(';');\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\n   * @param {Object} eNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astEmptyStatement(eNode, retArr) {\n    return retArr;\n  }\n  astBlockStatement(ast, retArr) {\n    return retArr;\n  }\n  astIfStatement(ast, retArr) {\n    return retArr;\n  }\n  astSwitchStatement(ast, retArr) {\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Break* Statement\n   * @param {Object} brNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astBreakStatement(brNode, retArr) {\n    retArr.push('break;');\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Continue* Statement\n   * @param {Object} crNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astContinueStatement(crNode, retArr) {\n    retArr.push('continue;\\n');\n    return retArr;\n  }\n  astForStatement(ast, retArr) {\n    return retArr;\n  }\n  astWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  astDoWhileStatement(ast, retArr) {\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   * @param {Object} varDecNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astVariableDeclaration(varDecNode, retArr) {\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    const firstDeclaration = declarations[0];\n    const init = firstDeclaration.init;\n    let type = this.isState('in-for-loop-init') ? 'Integer' : this.getType(init);\n    if (type === 'LiteralInteger') {\n      // We had the choice to go either float or int, choosing float\n      type = 'Number';\n    }\n    const markupType = typeMap[type];\n    if (!markupType) {\n      throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\n    }\n    let dependencies = this.getDependencies(firstDeclaration.init);\n    throw new Error('remove me');\n    this.declarations[firstDeclaration.id.name] = Object.freeze({\n      type,\n      dependencies,\n      isSafe: dependencies.every(dependency => dependency.isSafe)\n    });\n    const initResult = [`${type} user_${firstDeclaration.id.name}=`];\n    this.astGeneric(init, initResult);\n    result.push(initResult.join(''));\n\n    // first declaration is done, now any added ones setup\n    for (let i = 1; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      dependencies = this.getDependencies(declaration);\n      throw new Error('Remove me');\n      this.declarations[declaration.id.name] = Object.freeze({\n        type,\n        dependencies,\n        isSafe: false\n      });\n      this.astGeneric(declaration, result);\n    }\n\n    retArr.push(retArr, result.join(','));\n    retArr.push(';');\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\n   * @param {Object} iVarDecNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astVariableDeclarator(iVarDecNode, retArr) {\n    this.astGeneric(iVarDecNode.id, retArr);\n    if (iVarDecNode.init !== null) {\n      retArr.push('=');\n      this.astGeneric(iVarDecNode.init, retArr);\n    }\n    return retArr;\n  }\n  astThisExpression(ast, retArr) {\n    return retArr;\n  }\n  astSequenceExpression(sNode, retArr) {\n    for (let i = 0; i < sNode.expressions.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      this.astGeneric(sNode.expressions, retArr);\n    }\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Unary* Expression\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astUnaryExpression(uNode, retArr) {\n    const unaryResult = this.checkAndUpconvertBitwiseUnary(uNode, retArr);\n    if (unaryResult) {\n      return retArr;\n    }\n\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(uNode, retArr) {}\n\n  /**\n   * @desc Parses the abstract syntax tree for *Update* Expression\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astUpdateExpression(uNode, retArr) {\n    if (uNode.prefix) {\n      retArr.push(uNode.operator);\n      this.astGeneric(uNode.argument, retArr);\n    } else {\n      this.astGeneric(uNode.argument, retArr);\n      retArr.push(uNode.operator);\n    }\n\n    return retArr;\n  }\n  /**\n   * @desc Parses the abstract syntax tree for *Logical* Expression\n   * @param {Object} logNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astLogicalExpression(logNode, retArr) {\n    retArr.push('(');\n    this.astGeneric(logNode.left, retArr);\n    retArr.push(logNode.operator);\n    this.astGeneric(logNode.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n  astMemberExpression(ast, retArr) {\n    return retArr;\n  }\n  astCallExpression(ast, retArr) {\n    return retArr;\n  }\n  astArrayExpression(ast, retArr) {\n    return retArr;\n  }\n\n  /**\n   *\n   * @param ast\n   * @return {IFunctionNodeMemberExpressionDetails}\n   */\n  getMemberExpressionDetails(ast) {\n    if (ast.type !== 'MemberExpression') {\n      throw this.astErrorOutput(`Expression ${ ast.type } not a MemberExpression`, ast);\n    }\n    let name = null;\n    let type = null;\n    const variableSignature = this.getVariableSignature(ast);\n    switch (variableSignature) {\n      case 'value':\n        return null;\n      case 'value.thread.value':\n      case 'this.thread.value':\n      case 'this.output.value':\n        return {\n          signature: variableSignature,\n            type: 'Integer',\n            name: ast.property.name\n        };\n      case 'value[]':\n        if (typeof ast.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object),\n            xProperty: ast.property\n        };\n      case 'value[][]':\n        if (typeof ast.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object),\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][]':\n        if (typeof ast.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value[][][][]':\n        if (typeof ast.object.object.object.object.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        name = ast.object.object.object.object.name;\n        return {\n          name,\n          origin: 'user',\n            signature: variableSignature,\n            type: this.getVariableType(ast.object.object.object.object),\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n        };\n      case 'value.value':\n        if (typeof ast.property.name !== 'string') {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        if (this.isAstMathVariable(ast)) {\n          name = ast.property.name;\n          return {\n            name,\n            origin: 'Math',\n            type: 'Number',\n            signature: variableSignature,\n          };\n        }\n        switch (ast.property.name) {\n          case 'r':\n          case 'g':\n          case 'b':\n          case 'a':\n            name = ast.object.name;\n            return {\n              name,\n              property: ast.property.name,\n                origin: 'user',\n                signature: variableSignature,\n                type: 'Number'\n            };\n          default:\n            throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        case 'this.constants.value':\n          if (typeof ast.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n          };\n        case 'this.constants.value[]':\n          if (typeof ast.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n              signature: variableSignature,\n              xProperty: ast.property,\n          };\n        case 'this.constants.value[][]': {\n          if (typeof ast.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'this.constants.value[][][]': {\n          if (typeof ast.object.object.object.property.name !== 'string') {\n            throw this.astErrorOutput('Unexpected expression', ast);\n          }\n          name = ast.object.object.object.property.name;\n          type = this.getConstantType(name);\n          if (!type) {\n            throw this.astErrorOutput('Constant has no type', ast);\n          }\n          return {\n            name,\n            type,\n            origin: 'constants',\n            signature: variableSignature,\n            zProperty: ast.object.object.property,\n            yProperty: ast.object.property,\n            xProperty: ast.property,\n          };\n        }\n        case 'fn()[]':\n        case '[][]':\n          return {\n            signature: variableSignature,\n              property: ast.property,\n          };\n        default:\n          throw this.astErrorOutput('Unexpected expression', ast);\n    }\n  }\n\n  findIdentifierOrigin(astToFind) {\n    const stack = [this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack[0];\n      if (atNode.type === 'VariableDeclarator' && atNode.id && atNode.id.name && atNode.id.name === astToFind.name) {\n        return atNode;\n      }\n      stack.shift();\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      }\n    }\n    return null;\n  }\n\n  findLastReturn(ast) {\n    const stack = [ast || this.ast];\n\n    while (stack.length > 0) {\n      const atNode = stack.pop();\n      if (atNode.type === 'ReturnStatement') {\n        return atNode;\n      }\n      if (atNode.type === 'FunctionDeclaration') {\n        continue;\n      }\n      if (atNode.argument) {\n        stack.push(atNode.argument);\n      } else if (atNode.body) {\n        stack.push(atNode.body);\n      } else if (atNode.declarations) {\n        stack.push(atNode.declarations);\n      } else if (Array.isArray(atNode)) {\n        for (let i = 0; i < atNode.length; i++) {\n          stack.push(atNode[i]);\n        }\n      } else if (atNode.consequent) {\n        stack.push(atNode.consequent);\n      } else if (atNode.cases) {\n        stack.push(atNode.cases);\n      }\n    }\n    return null;\n  }\n\n  getInternalVariableName(name) {\n    if (!this._internalVariableNames.hasOwnProperty(name)) {\n      this._internalVariableNames[name] = 0;\n    }\n    this._internalVariableNames[name]++;\n    if (this._internalVariableNames[name] === 1) {\n      return name;\n    }\n    return name + this._internalVariableNames[name];\n  }\n\n  varWarn() {\n    console.warn('var declarations are deprecated, weird things happen when falling back to CPU because var scope differs in javascript than in most languages.  Use const or let');\n  }\n}\n\nconst typeLookupMap = {\n  'Number': 'Number',\n  'Float': 'Float',\n  'Integer': 'Integer',\n  'Array': 'Number',\n  'Array(2)': 'Number',\n  'Array(3)': 'Number',\n  'Array(4)': 'Number',\n  'Array2D': 'Number',\n  'Array3D': 'Number',\n  'Input': 'Number',\n  'HTMLImage': 'Array(4)',\n  'HTMLImageArray': 'Array(4)',\n  'NumberTexture': 'Number',\n  'MemoryOptimizedNumberTexture': 'Number',\n  'Array1D(2)': 'Array(2)',\n  'Array1D(3)': 'Array(3)',\n  'Array1D(4)': 'Array(4)',\n  'Array2D(2)': 'Array(2)',\n  'Array2D(3)': 'Array(3)',\n  'Array2D(4)': 'Array(4)',\n  'Array3D(2)': 'Array(2)',\n  'Array3D(3)': 'Array(3)',\n  'Array3D(4)': 'Array(4)',\n  'ArrayTexture(1)': 'Number',\n  'ArrayTexture(2)': 'Array(2)',\n  'ArrayTexture(3)': 'Array(3)',\n  'ArrayTexture(4)': 'Array(4)',\n};\n\nmodule.exports = {\n  FunctionNode\n};","const { FunctionNode } = require('../function-node');\n\n/**\n * @desc [INTERNAL] Represents a single function, inside JS\n *\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n */\nclass CPUFunctionNode extends FunctionNode {\n  /**\n   * @desc Parses the abstract syntax tree for to its *named function*\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astFunction(ast, retArr) {\n\n    // Setup function return type and name\n    if (!this.isRootKernel) {\n      retArr.push('function');\n      retArr.push(' ');\n      retArr.push(this.name);\n      retArr.push('(');\n\n      // Arguments handling\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n\n      // Function opening\n      retArr.push(') {\\n');\n    }\n\n    // Body statement iteration\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    if (!this.isRootKernel) {\n      // Function closing\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for to *return* statement\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astReturnStatement(ast, retArr) {\n    const type = this.returnType || this.getType(ast.argument);\n\n    if (!this.returnType) {\n      this.returnType = type;\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(this.leadingReturnStatement);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';\\n');\n      retArr.push(this.followingReturnStatement);\n      retArr.push('continue;\\n');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = `);\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push('return ');\n      this.astGeneric(ast.argument, retArr);\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *literal value*\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astLiteral(ast, retArr) {\n\n    // Reject non numeric literals\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    retArr.push(ast.value);\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *binary* expression\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astBinaryExpression(ast, retArr) {\n    retArr.push('(');\n    this.astGeneric(ast.left, retArr);\n    retArr.push(ast.operator);\n    this.astGeneric(ast.right, retArr);\n    retArr.push(')');\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    switch (idtNode.name) {\n      case 'Infinity':\n        retArr.push('Infinity');\n        break;\n      default:\n        if (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n          retArr.push('constants_' + idtNode.name);\n        } else {\n          const name = this.getKernelArgumentName(idtNode.name);\n          if (name) {\n            retArr.push('user_' + name);\n          } else {\n            retArr.push('user_' + idtNode.name);\n          }\n        }\n    }\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *for-loop* expression\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed webgl string\n   */\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      for (let i = 0; i < initArr.length; i++) {\n        if (initArr[i].includes && initArr[i].includes(',')) {\n          isSafe = false;\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.astGeneric(forNode.test, testArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    // have all parts, now make them safe\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (let ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *while* loop\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed javascript string\n   */\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        whileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    retArr.push('if (');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') {\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('} else {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *do while* loop\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed webgl string\n   */\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput(\n        'Invalid while statement',\n        doWhileNode\n      );\n    }\n\n    retArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') {\\n');\n    retArr.push('break;\\n');\n    retArr.push('}\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw new this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    this.astGeneric(assNode.left, retArr);\n    retArr.push(assNode.operator);\n    this.astGeneric(assNode.right, retArr);\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Block* statement\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); // this prevents recursive removal of braces\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   * @param {Object} varDecNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astVariableDeclaration(varDecNode, retArr) {\n    if (varDecNode.kind === 'var' && this.warnVarUsage) {\n      this.varWarn();\n    }\n    retArr.push(`${varDecNode.kind} `);\n    const { declarations } = varDecNode;\n    for (let i = 0; i < declarations.length; i++) {\n      if (i > 0) {\n        retArr.push(',');\n      }\n      this.astGeneric(declarations[i], retArr);\n    }\n    if (!this.isState('in-for-loop-init')) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *If* Statement\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n\n  }\n\n  astSwitchStatement(ast, retArr) {\n    const { discriminant, cases } = ast;\n    retArr.push('switch (');\n    this.astGeneric(discriminant, retArr);\n    retArr.push(') {\\n');\n    for (let i = 0; i < cases.length; i++) {\n      if (cases[i].test === null) {\n        retArr.push('default:\\n');\n        this.astGeneric(cases[i].consequent, retArr);\n        if (cases[i].consequent && cases[i].consequent.length > 0) {\n          retArr.push('break;\\n');\n        }\n        continue;\n      }\n      retArr.push('case ');\n      this.astGeneric(cases[i].test, retArr);\n      retArr.push(':\\n');\n      if (cases[i].consequent && cases[i].consequent.length > 0) {\n        this.astGeneric(cases[i].consequent, retArr);\n        retArr.push('break;\\n');\n      }\n    }\n    retArr.push('\\n}');\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *This* expression\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astThisExpression(tNode, retArr) {\n    retArr.push('_this');\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astMemberExpression(mNode, retArr) {\n    const {\n      signature,\n      type,\n      property,\n      xProperty,\n      yProperty,\n      zProperty,\n      name,\n      origin\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'this.thread.value':\n        retArr.push(`_this.thread.${ name }`);\n        return retArr;\n      case 'this.output.value':\n        switch (name) {\n          case 'x':\n            retArr.push('outputX');\n            break;\n          case 'y':\n            retArr.push('outputY');\n            break;\n          case 'z':\n            retArr.push('outputZ');\n            break;\n          default:\n            throw this.astErrorOutput('Unexpected expression', mNode);\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }[0]`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }[1]`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }[2]`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }[3]`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n      case 'this.constants.value[]':\n      case 'this.constants.value[][]':\n      case 'this.constants.value[][][]':\n        break;\n      case 'fn()[]':\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        this.astGeneric(mNode.property, retArr);\n        retArr.push(']');\n        return retArr;\n      default:\n        throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (!mNode.computed) {\n      // handle simple types\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    // handle more complex types\n    // argument may have come from a parent\n    const synonymName = this.getKernelArgumentName(name);\n    const markupName = `${origin}_${synonymName || name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n      case 'HTMLImageArray':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n      default:\n        let size;\n        let isInput;\n        if (origin === 'constants') {\n          const constant = this.constants[name];\n          isInput = this.constantTypes[name] === 'Input';\n          size = isInput ? constant.size : null;\n        } else {\n          isInput = this.isInput(synonymName || name);\n          size = isInput ? this.argumentSizes[this.argumentNames.indexOf(name)] : null;\n        }\n        retArr.push(`${ markupName }`);\n        if (zProperty && yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? '(outputY * outputX)' : size[1] * size[0] })+(`);\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(zProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (yProperty) {\n          if (isInput) {\n            retArr.push('[(');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(`*${ this.dynamicArguments ? 'outputX' : size[0] })+`);\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          } else {\n            retArr.push('[');\n            this.astGeneric(yProperty, retArr);\n            retArr.push(']');\n            retArr.push('[');\n            this.astGeneric(xProperty, retArr);\n            retArr.push(']');\n          }\n        } else if (typeof xProperty !== 'undefined') {\n          retArr.push('[');\n          this.astGeneric(xProperty, retArr);\n          retArr.push(']');\n        }\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *call* expression\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns  {Array} the append retArr\n   */\n  astCallExpression(ast, retArr) {\n    if (ast.type !== 'CallExpression') {\n      // Failure, unknown expression\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n    // Get the full function call, unrolled\n    let functionName = this.astMemberExpressionUnroll(ast.callee);\n\n    // Register the function into the called registry\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    // track the function was called\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    // Call the function\n    retArr.push(functionName);\n\n    // Open arguments space\n    retArr.push('(');\n    const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n    // Add the arguments\n    for (let i = 0; i < ast.arguments.length; ++i) {\n      const argument = ast.arguments[i];\n\n      // in order to track return type, even though this is CPU\n      let argumentType = this.getType(argument);\n      if (!targetTypes[i]) {\n        this.triggerImplyArgumentType(functionName, i, argumentType, this);\n      }\n\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      this.astGeneric(argument, retArr);\n    }\n    // Close arguments space\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   * @param {Object} arrNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astArrayExpression(arrNode, retArr) {\n    const arrLen = arrNode.elements.length;\n\n    retArr.push('new Float32Array([');\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push('])');\n\n    return retArr;\n  }\n\n  astDebuggerStatement(arrNode, retArr) {\n    retArr.push('debugger;');\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  CPUFunctionNode\n};","const { utils } = require('../../utils');\nconst { Input } = require('../../input');\n\nfunction constantsToString(constants) {\n  const results = [];\n  for (const p in constants) {\n    const constant = constants[p];\n    switch (typeof constant) {\n      case 'number':\n      case 'boolean':\n        results.push(`${p}:${constant}`);\n    }\n  }\n  return `{ ${ results.join() } }`;\n}\n\nfunction cpuKernelString(cpuKernel, name) {\n  const header = [];\n  const thisProperties = [];\n  const beforeReturn = [];\n\n  const useFunctionKeyword = !/^function/.test(cpuKernel.color.toString());\n\n  header.push(\n    '  const { context, canvas, constants } = settings;',\n    `  const output = new Int32Array(${JSON.stringify(Array.from(cpuKernel.output))});`,\n    `  const _constants = ${constantsToString(cpuKernel.constants)};`,\n  );\n\n  thisProperties.push(\n    '    constants: _constants,',\n    '    context,',\n    '    output,',\n    '    thread: {x: 0, y: 0, z: 0},',\n  );\n\n  if (cpuKernel.graphical) {\n    header.push(`  const _imageData = context.createImageData(${cpuKernel.output[0]}, ${cpuKernel.output[1]});`);\n    header.push(`  const _colorData = new Uint8ClampedArray(${cpuKernel.output[0]} * ${cpuKernel.output[1]} * 4);`);\n\n    const colorFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.color.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: (object, name) => {\n        return null;\n      }\n    });\n\n    const getPixelsFn = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel.getPixels.toString(), {\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case '_colorData':\n            return '_colorData';\n          case '_imageData':\n            return '_imageData';\n          case 'output':\n            return 'output';\n          case 'thread':\n            return 'this.thread';\n        }\n        return JSON.stringify(cpuKernel[propertyName]);\n      },\n      findDependency: () => {\n        return null;\n      }\n    });\n\n    thisProperties.push(\n      '    _imageData,',\n      '    _colorData,',\n      `    color: ${colorFn},`,\n    );\n\n    beforeReturn.push(\n      `  kernel.getPixels = ${getPixelsFn};`\n    );\n  }\n\n  const constantTypes = [];\n  const constantKeys = Object.keys(cpuKernel.constantTypes);\n  for (let i = 0; i < constantKeys.length; i++) {\n    constantTypes.push(cpuKernel.constantTypes[constantKeys]);\n  }\n  if (cpuKernel.argumentTypes.indexOf('HTMLImageArray') !== -1 || constantTypes.indexOf('HTMLImageArray') !== -1) {\n    const flattenedImageTo3DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo3DArray.toString(), {\n      doNotDefine: ['canvas'],\n      findDependency: (object, name) => {\n        if (object === 'this') {\n          return (useFunctionKeyword ? 'function ' : '') + cpuKernel[name].toString();\n        }\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return;\n          case 'context':\n            return 'context';\n        }\n      }\n    })\n    beforeReturn.push(flattenedImageTo3DArray);\n    thisProperties.push(`    _imageTo2DArray,`);\n    thisProperties.push(`    _imageTo3DArray,`);\n  } else if (cpuKernel.argumentTypes.indexOf('HTMLImage') !== -1 || constantTypes.indexOf('HTMLImage') !== -1) {\n    const flattenedImageTo2DArray = utils.flattenFunctionToString((useFunctionKeyword ? 'function ' : '') + cpuKernel._imageTo2DArray.toString(), {\n      findDependency: (object, name) => {\n        return null;\n      },\n      thisLookup: (propertyName) => {\n        switch (propertyName) {\n          case 'canvas':\n            return 'settings.canvas';\n          case 'context':\n            return 'settings.context';\n        }\n        throw new Error('unhandled thisLookup');\n      }\n    });\n    beforeReturn.push(flattenedImageTo2DArray);\n    thisProperties.push(`    _imageTo2DArray,`);\n  }\n\n  return `function(settings) {\n${ header.join('\\n') }\n  for (const p in constants) {\n    const constant = constants[p];\n    switch (typeof constant) {\n      case 'number':\n      case 'boolean':\n        continue;\n    }\n    _constants[p] = constant;\n  }\n  const kernel = (function() {\n${cpuKernel._kernelString}\n  })\n    .apply({ ${thisProperties.join('\\n')} });\n  ${ beforeReturn.join('\\n') }\n  return kernel;\n}`;\n}\n\nmodule.exports = {\n  cpuKernelString\n};","const { Kernel } = require('../kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { CPUFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst { cpuKernelString } = require('./kernel-string');\n\n/**\n * @desc Kernel Implementation for CPU.\n * <p>Instantiates properties to the CPU Kernel.</p>\n */\nclass CPUKernel extends Kernel {\n  static getFeatures() {\n    return this.features;\n  }\n  static get features() {\n    return Object.freeze({\n      kernelMap: true,\n      isIntegerDivisionAccurate: true\n    });\n  }\n  static get isSupported() {\n    return true;\n  }\n  static isContextMatch(context) {\n    return false;\n  }\n  /**\n   * @desc The current mode in which gpu.js is executing.\n   */\n  static get mode() {\n    return 'cpu';\n  }\n\n  static nativeFunctionArguments() {\n    return null;\n  }\n\n  static nativeFunctionReturnType() {\n    return null;\n  }\n\n  static combineKernels(combinedKernel) {\n    return combinedKernel;\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.mergeSettings(source.settings || settings);\n\n    this._imageData = null;\n    this._colorData = null;\n    this._kernelString = null;\n    this.thread = {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    this.translatedSources = null;\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      return document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    if (!this.canvas) return null;\n    return this.canvas.getContext('2d');\n  }\n\n  initPlugins(settings) {\n    return [];\n  }\n\n  /**\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\n   * @param {IArguments} args\n   */\n  validateSettings(args) {\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n    }\n\n    this.checkOutput();\n  }\n\n  translateSource() {\n    this.leadingReturnStatement = this.output.length > 1 ? 'resultX[x] = ' : 'result[x] = ';\n    if (this.subKernels) {\n      const followingReturnStatement = []\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const {\n          name\n        } = this.subKernels[i];\n        followingReturnStatement.push(this.output.length > 1 ? `resultX_${ name }[x] = subKernelResult_${ name };\\n` : `result_${ name }[x] = subKernelResult_${ name };\\n`);\n      }\n      this.followingReturnStatement = followingReturnStatement.join('');\n    }\n    const functionBuilder = FunctionBuilder.fromKernel(this, CPUFunctionNode);\n    this.translatedSources = functionBuilder.getPrototypes('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n  }\n\n  /**\n   * @desc Builds the Kernel, by generating the kernel\n   * string using thread dimensions, and arguments\n   * supplied to the kernel.\n   *\n   * <p>If the graphical flag is enabled, canvas is used.</p>\n   */\n  build() {\n    this.setupConstants();\n    this.setupArguments(arguments);\n    this.validateSettings(arguments);\n    this.translateSource();\n\n    if (this.graphical) {\n      const {\n        canvas,\n        output\n      } = this;\n      if (!canvas) {\n        throw new Error('no canvas available for using graphical output');\n      }\n      const width = output[0];\n      const height = output[1] || 1;\n      canvas.width = width;\n      canvas.height = height;\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n\n    const kernelString = this.getKernelString();\n    this.kernelString = kernelString;\n\n    if (this.debug) {\n      console.log('Function output:');\n      console.log(kernelString);\n    }\n\n    try {\n      this.run = new Function([], kernelString).bind(this)();\n    } catch (e) {\n      console.error('An error occurred compiling the javascript: ', e);\n    }\n  }\n\n  color(r, g, b, a) {\n    if (typeof a === 'undefined') {\n      a = 1;\n    }\n\n    r = Math.floor(r * 255);\n    g = Math.floor(g * 255);\n    b = Math.floor(b * 255);\n    a = Math.floor(a * 255);\n\n    const width = this.output[0];\n    const height = this.output[1];\n\n    const x = this.thread.x;\n    const y = height - this.thread.y - 1;\n\n    const index = x + y * width;\n\n    this._colorData[index * 4 + 0] = r;\n    this._colorData[index * 4 + 1] = g;\n    this._colorData[index * 4 + 2] = b;\n    this._colorData[index * 4 + 3] = a;\n  }\n\n  /**\n   * @desc Generates kernel string for this kernel program.\n   *\n   * <p>If sub-kernels are supplied, they are also factored in.\n   * This string can be saved by calling the `toString` method\n   * and then can be reused later.</p>\n   *\n   * @returns {String} result\n   *\n   */\n  getKernelString() {\n    if (this._kernelString !== null) return this._kernelString;\n\n    let kernelThreadString = null;\n    let {\n      translatedSources\n    } = this;\n    if (translatedSources.length > 1) {\n      translatedSources = translatedSources.filter(fn => {\n        if (/^function/.test(fn)) return fn;\n        kernelThreadString = fn;\n        return false;\n      })\n    } else {\n      kernelThreadString = translatedSources.shift();\n    }\n    const kernelString = this._kernelString = `  const LOOP_MAX = ${ this._getLoopMaxString() }\n  const constants = this.constants;\n  const _this = this;\n  return (${ this.argumentNames.map(argumentName => 'user_' + argumentName).join(', ') }) => {\n    ${ this._processConstants() }\n    ${ this._processArguments() }\n    ${ this.graphical ? this._graphicalKernelBody(kernelThreadString) : this._resultKernelBody(kernelThreadString) }\n    ${ translatedSources.length > 0 ? translatedSources.join('\\n') : '' }\n  };`;\n    return kernelString;\n  }\n\n  /**\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   */\n  toString() {\n    return cpuKernelString(this);\n  }\n\n  /**\n   * @desc Get the maximum loop size String.\n   * @returns {String} result\n   */\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${ parseInt(this.loopMaxIterations) };` :\n      ' 1000;'\n    );\n  }\n\n  _processConstants() {\n    if (!this.constants) return '';\n\n    const result = [];\n    for (let p in this.constants) {\n      const type = this.constantTypes[p];\n      switch (type) {\n        case 'HTMLImage':\n          result.push(`    const constants_${p} = this._imageTo2DArray(this.constants.${p});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    const constants_${p} = this._imageTo3DArray(this.constants.${p});\\n`);\n          break;\n        case 'Input':\n          result.push(`    const constants_${p} = this.constants.${p}.value;\\n`);\n          break;\n        default:\n          result.push(`    const constants_${p} = this.constants.${p};\\n`);\n      }\n    }\n    return result.join('');\n  }\n\n  _processArguments() {\n    const result = [];\n    for (let i = 0; i < this.argumentTypes.length; i++) {\n      const variableName = `user_${this.argumentNames[i]}`;\n      switch (this.argumentTypes[i]) {\n        case 'HTMLImage':\n          result.push(`    ${variableName} = this._imageTo2DArray(${variableName});\\n`);\n          break;\n        case 'HTMLImageArray':\n          result.push(`    ${variableName} = this._imageTo3DArray(${variableName});\\n`);\n          break;\n        case 'Input':\n          result.push(`    ${variableName} = ${variableName}.value;\\n`);\n          break;\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n          result.push(`\n    if (${variableName}.toArray) {\n      if (!_this.textureCache) {\n        _this.textureCache = [];\n        _this.arrayCache = [];\n      }\n      const textureIndex = _this.textureCache.indexOf(${variableName});\n      if (textureIndex !== -1) {\n        ${variableName} = _this.arrayCache[textureIndex];\n      } else {\n        _this.textureCache.push(${variableName});\n        ${variableName} = ${variableName}.toArray();\n        _this.arrayCache.push(${variableName});\n      }\n    }`);\n          break;\n      }\n    }\n    return result.join('');\n  }\n\n  _imageTo2DArray(image) {\n    const canvas = this.canvas;\n    if (canvas.width < image.width) {\n      canvas.width = image.width;\n    }\n    if (canvas.height < image.height) {\n      canvas.height = image.height;\n    }\n    const ctx = this.context;\n    ctx.drawImage(image, 0, 0, image.width, image.height);\n    const pixelsData = ctx.getImageData(0, 0, image.width, image.height).data;\n    const imageArray = new Array(image.height);\n    let index = 0;\n    for (let y = image.height - 1; y >= 0; y--) {\n      const row = imageArray[y] = new Array(image.width);\n      for (let x = 0; x < image.width; x++) {\n        const pixel = new Float32Array(4);\n        pixel[0] = pixelsData[index++] / 255; // r\n        pixel[1] = pixelsData[index++] / 255; // g\n        pixel[2] = pixelsData[index++] / 255; // b\n        pixel[3] = pixelsData[index++] / 255; // a\n        row[x] = pixel;\n      }\n    }\n    return imageArray;\n  }\n\n  getPixels(flip) {\n    const [width, height] = this.output;\n    // cpu is not flipped by default\n    return flip ? utils.flipPixels(this._imageData.data, width, height) : this._imageData.data.slice(0);\n  }\n\n  _imageTo3DArray(images) {\n    const imagesArray = new Array(images.length);\n    for (let i = 0; i < images.length; i++) {\n      imagesArray[i] = this._imageTo2DArray(images[i]);\n    }\n    return imagesArray;\n  }\n\n  _resultKernelBody(kernelString) {\n    switch (this.output.length) {\n      case 1:\n        return this._resultKernel1DLoop(kernelString) + this._kernelOutput();\n      case 2:\n        return this._resultKernel2DLoop(kernelString) + this._kernelOutput();\n      case 3:\n        return this._resultKernel3DLoop(kernelString) + this._kernelOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalKernelBody(kernelThreadString) {\n    switch (this.output.length) {\n      case 2:\n        return this._graphicalKernel2DLoop(kernelThreadString) + this._graphicalOutput();\n      default:\n        throw new Error('unsupported size kernel');\n    }\n  }\n\n  _graphicalOutput() {\n    return `\n    this._imageData.data.set(this._colorData);\n    this.context.putImageData(this._imageData, 0, 0);\n    return;`\n  }\n\n  _getKernelResultTypeConstructorString() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return 'Float32Array';\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        return 'Array';\n      default:\n        if (this.graphical) {\n          return 'Float32Array';\n        }\n        throw new Error(`unhandled returnType ${ this.returnType }`);\n    }\n  }\n\n  _resultKernel1DLoop(kernelString) {\n    const {\n      output\n    } = this;\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const result = new ${constructorString}(outputX);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new ${constructorString}(outputX);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let x = 0; x < outputX; x++) {\n      this.thread.x = x;\n      this.thread.y = 0;\n      this.thread.z = 0;\n      ${ kernelString }\n    }`;\n  }\n\n  _resultKernel2DLoop(kernelString) {\n    const {\n      output\n    } = this;\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const result = new Array(outputY);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      const resultX = result[y] = new ${constructorString}(outputX);\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _graphicalKernel2DLoop(kernelString) {\n    const {\n      output\n    } = this;\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputY);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let y = 0; y < outputY; y++) {\n      this.thread.z = 0;\n      this.thread.y = y;\n      ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = result_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('') }\n      for (let x = 0; x < outputX; x++) {\n        this.thread.x = x;\n        ${ kernelString }\n      }\n    }`;\n  }\n\n  _resultKernel3DLoop(kernelString) {\n    const {\n      output\n    } = this;\n    const constructorString = this._getKernelResultTypeConstructorString();\n    return `  const outputX = _this.output[0];\n    const outputY = _this.output[1];\n    const outputZ = _this.output[2];\n    const result = new Array(outputZ);\n    ${ this._mapSubKernels(subKernel => `const result_${ subKernel.name } = new Array(outputZ);\\n`).join('    ') }\n    ${ this._mapSubKernels(subKernel => `let subKernelResult_${ subKernel.name };\\n`).join('    ') }\n    for (let z = 0; z < outputZ; z++) {\n      this.thread.z = z;\n      const resultY = result[z] = new Array(outputY);\n      ${ this._mapSubKernels(subKernel => `const resultY_${ subKernel.name } = result_${subKernel.name}[z] = new Array(outputY);\\n`).join('      ') }\n      for (let y = 0; y < outputY; y++) {\n        this.thread.y = y;\n        const resultX = resultY[y] = new ${constructorString}(outputX);\n        ${ this._mapSubKernels(subKernel => `const resultX_${ subKernel.name } = resultY_${subKernel.name}[y] = new ${constructorString}(outputX);\\n`).join('        ') }\n        for (let x = 0; x < outputX; x++) {\n          this.thread.x = x;\n          ${ kernelString }\n        }\n      }\n    }`;\n  }\n\n  _kernelOutput() {\n    if (!this.subKernels) {\n      return '\\n    return result;';\n    }\n    return `\\n    return {\n      result: result,\n      ${ this.subKernels.map(subKernel => `${ subKernel.property }: result_${ subKernel.name }`).join(',\\n      ') }\n    };`;\n  }\n\n  _mapSubKernels(fn) {\n    return this.subKernels === null ? [''] :\n      this.subKernels.map(fn);\n  }\n\n\n\n  destroy(removeCanvasReference) {\n    if (removeCanvasReference) {\n      delete this.canvas;\n    }\n  }\n\n  static destroyContext(context) {}\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, CPUFunctionNode).toJSON();\n    return json;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    const [width, height] = this.output;\n    if (this.graphical) {\n      this._imageData = this.context.createImageData(width, height);\n      this._colorData = new Uint8ClampedArray(width * height * 4);\n    }\n  }\n}\n\nmodule.exports = {\n  CPUKernel\n};","'use strict'\n\nfunction createContext (width, height, options) {\n  width = width | 0\n  height = height | 0\n  if (!(width > 0 && height > 0)) {\n    return null\n  }\n\n  var canvas = document.createElement('canvas')\n  if (!canvas) {\n    return null\n  }\n  var gl\n  canvas.width = width\n  canvas.height = height\n\n  try {\n    gl = canvas.getContext('webgl', options)\n  } catch (e) {\n    try {\n      gl = canvas.getContext('experimental-webgl', options)\n    } catch (e) {\n      return null\n    }\n  }\n\n  var _getExtension = gl.getExtension\n  var extDestroy = {\n    destroy: function () {\n      var loseContext = _getExtension.call(gl, 'WEBGL_lose_context')\n      if (loseContext) {\n        loseContext.loseContext()\n      }\n    }\n  }\n\n  var extResize = {\n    resize: function (w, h) {\n      canvas.width = w\n      canvas.height = h\n    }\n  }\n\n  var _supportedExtensions = gl.getSupportedExtensions().slice()\n  _supportedExtensions.push(\n    'STACKGL_destroy_context',\n    'STACKGL_resize_drawingbuffer')\n  gl.getSupportedExtensions = function () {\n    return _supportedExtensions.slice()\n  }\n\n  gl.getExtension = function (extName) {\n    var name = extName.toLowerCase()\n    if (name === 'stackgl_resize_drawingbuffer') {\n      return extResize\n    }\n    if (name === 'stackgl_destroy_context') {\n      return extDestroy\n    }\n    return _getExtension.call(gl, extName)\n  }\n\n  return gl || null\n}\n\nmodule.exports = createContext\n","const { utils } = require('../../../utils');\nconst { Texture } = require('../../../texture');\n\nclass GLTextureFloat extends Texture {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Float32Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n  renderValues() {\n    return this.renderRawOutput();\n  }\n  toArray() {\n    return utils.erectFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erectArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect2DArray2(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray2Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(2)';\n  }\n  toArray() {\n    return utils.erect3DArray2(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray2Float3D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erectArray3(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect2DArray3(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray3Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(3)';\n  }\n  toArray() {\n    return utils.erect3DArray3(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray3Float3D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erectArray4(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect2DArray4(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureArray4Float3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return utils.erect3DArray4(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureArray4Float3D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureFloat3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(1)';\n  }\n  toArray() {\n    return utils.erect3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureFloat3D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimizedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized2D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized2DFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureFloat } = require('./float');\n\nclass GLTextureMemoryOptimized3D extends GLTextureFloat {\n  constructor(settings) {\n    super(settings);\n    this.type = 'MemoryOptimizedNumberTexture';\n  }\n  toArray() {\n    return utils.erectMemoryOptimized3DFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureMemoryOptimized3D\n};","const { utils } = require('../../../utils');\nconst { Texture } = require('../../../texture');\n\nclass GLTextureUnsigned extends Texture {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  renderRawOutput() {\n    const { context: gl } = this;\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture,\n      0\n    );\n    const result = new Uint8Array(this.size[0] * this.size[1] * 4);\n    gl.readPixels(0, 0, this.size[0], this.size[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n  renderValues() {\n    return new Float32Array(this.renderRawOutput().buffer);\n  }\n  toArray() {\n    return utils.erectPackedFloat(this.renderValues(), this.output[0]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned\n};","const { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned2D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect2DPackedFloat(this.renderValues(), this.output[0], this.output[1]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned2D\n};","const { utils } = require('../../../utils');\nconst { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureUnsigned3D extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'NumberTexture';\n  }\n  toArray() {\n    return utils.erect3DPackedFloat(this.renderValues(), this.output[0], this.output[1], this.output[2]);\n  }\n}\n\nmodule.exports = {\n  GLTextureUnsigned3D\n};","const { GLTextureUnsigned } = require('./unsigned');\n\nclass GLTextureGraphical extends GLTextureUnsigned {\n  constructor(settings) {\n    super(settings);\n    this.type = 'ArrayTexture(4)';\n  }\n  toArray() {\n    return this.renderValues();\n  }\n}\n\nmodule.exports = {\n  GLTextureGraphical\n};","const { Kernel } = require('../kernel');\nconst { Texture } = require('../../texture');\nconst { utils } = require('../../utils');\nconst { GLTextureArray2Float } = require('./texture/array-2-float');\nconst { GLTextureArray2Float2D } = require('./texture/array-2-float-2d');\nconst { GLTextureArray2Float3D } = require('./texture/array-2-float-3d');\nconst { GLTextureArray3Float } = require('./texture/array-3-float');\nconst { GLTextureArray3Float2D } = require('./texture/array-3-float-2d');\nconst { GLTextureArray3Float3D } = require('./texture/array-3-float-3d');\nconst { GLTextureArray4Float } = require('./texture/array-4-float');\nconst { GLTextureArray4Float2D } = require('./texture/array-4-float-2d');\nconst { GLTextureArray4Float3D } = require('./texture/array-4-float-3d');\nconst { GLTextureFloat } = require('./texture/float');\nconst { GLTextureFloat2D } = require('./texture/float-2d');\nconst { GLTextureFloat3D } = require('./texture/float-3d');\nconst { GLTextureMemoryOptimized } = require('./texture/memory-optimized');\nconst { GLTextureMemoryOptimized2D } = require('./texture/memory-optimized-2d');\nconst { GLTextureMemoryOptimized3D } = require('./texture/memory-optimized-3d');\nconst { GLTextureUnsigned } = require('./texture/unsigned');\nconst { GLTextureUnsigned2D } = require('./texture/unsigned-2d');\nconst { GLTextureUnsigned3D } = require('./texture/unsigned-3d');\nconst { GLTextureGraphical } = require('./texture/graphical');\n\n/**\n * @abstract\n * @extends Kernel\n */\nclass GLKernel extends Kernel {\n  static get mode() {\n    return 'gpu';\n  }\n\n  static getIsFloatRead() {\n    const kernelString = `function kernelFunction() {\n      return 1;\n    }`;\n    const kernel = new this(kernelString, {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [1],\n      precision: 'single',\n      returnType: 'Number'\n    });\n    kernel.build();\n    kernel.run();\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    return result[0] === 1;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    function kernelFunction(v1, v2) {\n      return v1[this.thread.x] / v2[this.thread.x];\n    }\n    const kernel = new this(kernelFunction.toString(), {\n      context: this.testContext,\n      canvas: this.testCanvas,\n      validate: false,\n      output: [2],\n      returnType: 'Number',\n      precision: 'unsigned',\n    });\n    const args = [\n      [6, 6030401],\n      [3, 3991]\n    ];\n    kernel.build.apply(kernel, args);\n    kernel.run.apply(kernel, args);\n    const result = kernel.renderOutput();\n    kernel.destroy(true);\n    // have we not got whole numbers for 6/3 or 6030401/3991\n    // add more here if others see this problem\n    return result[0] === 2 && result[1] === 1511;\n  }\n\n  /**\n   * @abstract\n   */\n  static get testCanvas() {\n    throw new Error(`\"testCanvas\" not defined on ${ this.name }`);\n  }\n\n  /**\n   * @abstract\n   */\n  static get testContext() {\n    throw new Error(`\"testContext\" not defined on ${ this.name }`);\n  }\n\n  /**\n   * @type {IKernelFeatures}\n   */\n  static get features() {\n    throw new Error(`\"features\" not defined on ${ this.name }`);\n  }\n\n  /**\n   * @abstract\n   */\n  static setupFeatureChecks() {\n    throw new Error(`\"setupFeatureChecks\" not defined on ${ this.name }`);\n  }\n\n  /**\n   * @desc Fix division by factor of 3 FP accuracy bug\n   * @param {Boolean} fix - should fix\n   */\n  setFixIntegerDivisionAccuracy(fix) {\n    this.fixIntegerDivisionAccuracy = fix;\n    return this;\n  }\n\n  /**\n   * @desc Toggle output mode\n   * @param {String} flag - 'single' or 'unsigned'\n   */\n  setPrecision(flag) {\n    this.precision = flag;\n    return this;\n  }\n\n  /**\n   * @desc Toggle texture output mode\n   * @param {Boolean} flag - true to enable floatTextures\n   * @deprecated\n   */\n  setFloatTextures(flag) {\n    utils.warnDeprecated('method', 'setFloatTextures', 'setOptimizeFloatMemory');\n    this.floatTextures = flag;\n    return this;\n  }\n\n  /**\n   * A highly readable very forgiving micro-parser for a glsl function that gets argument types\n   * @param {String} source\n   * @returns {{argumentTypes: String[], argumentNames: String[]}}\n   */\n  static nativeFunctionArguments(source) {\n    const argumentTypes = [];\n    const argumentNames = [];\n    const states = [];\n    const isStartingVariableName = /^[a-zA-Z_]/;\n    const isVariableChar = /[a-zA-Z_0-9]/;\n    let i = 0;\n    let argumentName = null;\n    let argumentType = null;\n    while (i < source.length) {\n      const char = source[i];\n      const nextChar = source[i + 1];\n      const state = states.length > 0 ? states[states.length - 1] : null;\n\n      // begin MULTI_LINE_COMMENT handling\n      if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '*') {\n        states.push('MULTI_LINE_COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'MULTI_LINE_COMMENT' && char === '*' && nextChar === '/') {\n        states.pop();\n        i += 2;\n        continue;\n      }\n      // end MULTI_LINE_COMMENT handling\n\n      // begin COMMENT handling\n      else if (state === 'FUNCTION_ARGUMENTS' && char === '/' && nextChar === '/') {\n        states.push('COMMENT');\n        i += 2;\n        continue;\n      } else if (state === 'COMMENT' && char === '\\n') {\n        states.pop();\n        i++;\n        continue;\n      }\n      // end COMMENT handling\n\n      // being FUNCTION_ARGUMENTS handling\n      else if (state === null && char === '(') {\n        states.push('FUNCTION_ARGUMENTS');\n        i++;\n        continue;\n      } else if (state === 'FUNCTION_ARGUMENTS') {\n        if (char === ')') {\n          states.pop();\n          break;\n        }\n        if (char === 'f' && nextChar === 'l' && source[i + 2] === 'o' && source[i + 3] === 'a' && source[i + 4] === 't' && source[i + 5] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'float';\n          argumentName = '';\n          i += 6;\n          continue;\n        } else if (char === 'i' && nextChar === 'n' && source[i + 2] === 't' && source[i + 3] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'int';\n          argumentName = '';\n          i += 4;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '2' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec2';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '3' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec3';\n          argumentName = '';\n          i += 5;\n          continue;\n        } else if (char === 'v' && nextChar === 'e' && source[i + 2] === 'c' && source[i + 3] === '4' && source[i + 4] === ' ') {\n          states.push('DECLARE_VARIABLE');\n          argumentType = 'vec4';\n          argumentName = '';\n          i += 5;\n          continue;\n        }\n      }\n      // end FUNCTION_ARGUMENTS handling\n\n      // begin DECLARE_VARIABLE handling\n      else if (state === 'DECLARE_VARIABLE') {\n        if (argumentName === '') {\n          if (char === ' ') {\n            i++;\n            continue;\n          }\n          if (!isStartingVariableName.test(char)) {\n            throw new Error('variable name is not expected string');\n          }\n        }\n        argumentName += char;\n        if (!isVariableChar.test(nextChar)) {\n          states.pop();\n          argumentNames.push(argumentName);\n          argumentTypes.push(typeMap[argumentType]);\n        }\n      }\n      // end DECLARE_VARIABLE handling\n\n      // Progress to next character\n      i++;\n    }\n    if (states.length > 0) {\n      throw new Error('GLSL function was not parsable');\n    }\n    return {\n      argumentNames,\n      argumentTypes,\n    };\n  }\n\n  static nativeFunctionReturnType(source) {\n    return typeMap[source.match(/int|float|vec[2-4]/)[0]];\n  }\n\n  static combineKernels(combinedKernel, lastKernel) {\n    combinedKernel.apply(null, arguments);\n    const {\n      texSize,\n      context,\n      threadDim\n    } = lastKernel.texSize;\n    let result;\n    if (lastKernel.precision === 'single') {\n      const w = texSize[0];\n      const h = Math.ceil(texSize[1] / 4);\n      result = new Float32Array(w * h * 4 * 4);\n      context.readPixels(0, 0, w, h * 4, context.RGBA, context.FLOAT, result);\n    } else {\n      const bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n      context.readPixels(0, 0, texSize[0], texSize[1], context.RGBA, context.UNSIGNED_BYTE, bytes);\n      result = new Float32Array(bytes.buffer);\n    }\n\n    result = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n    if (lastKernel.output.length === 1) {\n      return result;\n    } else if (lastKernel.output.length === 2) {\n      return utils.splitArray(result, lastKernel.output[0]);\n    } else if (lastKernel.output.length === 3) {\n      const cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n      return cube.map(function(x) {\n        return utils.splitArray(x, lastKernel.output[0]);\n      });\n    }\n  }\n\n  constructor(source, settings) {\n    super(source, settings);\n    this.transferValues = null;\n    this.formatValues = null;\n    this.TextureConstructor = null;\n    this.renderOutput = null;\n    this.renderRawOutput = null;\n    this.texSize = null;\n    this.translatedSource = null;\n    this.renderStrategy = null;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n  }\n\n  translateSource() {\n    throw new Error(`\"translateSource\" not defined on ${this.constructor.name}`);\n  }\n\n  /**\n   * Picks a render strategy for the now finally parsed kernel\n   * @param args\n   * @return {null|KernelOutput}\n   */\n  pickRenderStrategy(args) {\n    if (this.graphical) {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = (pixels) => pixels;\n      this.TextureConstructor = GLTextureGraphical;\n      return null;\n    }\n    if (this.precision === 'unsigned') {\n      this.renderRawOutput = this.readPackedPixelsToUint8Array;\n      this.transferValues = this.readPackedPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.renderStrategy = renderStrategy.PackedPixelTo3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.renderStrategy = renderStrategy.PackedPixelTo2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.renderStrategy = renderStrategy.PackedPixelToFloat;\n              return null;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return this.requestFallback(args);\n        }\n      } else {\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToArrays;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            this.renderOutput = this.renderValues;\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureUnsigned3D;\n              this.renderStrategy = renderStrategy.PackedPixelTo3DFloat;\n              this.formatValues = utils.erect3DPackedFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureUnsigned2D;\n              this.renderStrategy = renderStrategy.PackedPixelTo2DFloat;\n              this.formatValues = utils.erect2DPackedFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureUnsigned;\n              this.renderStrategy = renderStrategy.PackedPixelToFloat;\n              this.formatValues = utils.erectPackedFloat;\n              return null;\n            }\n\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            return this.requestFallback(args);\n        }\n      }\n    } else if (this.precision === 'single') {\n      this.renderRawOutput = this.readFloatPixelsToFloat32Array;\n      this.transferValues = this.readFloatPixelsToFloat32Array;\n      if (this.pipeline) {\n        this.renderStrategy = renderStrategy.FloatTexture;\n        this.renderOutput = this.renderTexture;\n        if (this.subKernels !== null) {\n          this.renderKernels = this.renderKernelsToTextures;\n        }\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureMemoryOptimized2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureMemoryOptimized;\n                return null;\n              }\n            } else {\n              if (this.output[2] > 0) {\n                this.TextureConstructor = GLTextureFloat3D;\n                return null;\n              } else if (this.output[1] > 0) {\n                this.TextureConstructor = GLTextureFloat2D;\n                return null;\n              } else {\n                this.TextureConstructor = GLTextureFloat;\n                return null;\n              }\n            }\n            break;\n          case 'Array(2)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              return null;\n            }\n            break;\n          case 'Array(3)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              return null;\n            }\n            break;\n          case 'Array(4)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              return null;\n            }\n        }\n      }\n      this.renderOutput = this.renderValues;\n      if (this.subKernels !== null) {\n        this.renderKernels = this.renderKernelsToArrays;\n      }\n      if (this.optimizeFloatMemory) {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized3D;\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimized3DFloat;\n              this.formatValues = utils.erectMemoryOptimized3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureMemoryOptimized2D;\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimized2DFloat;\n              this.formatValues = utils.erectMemoryOptimized2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureMemoryOptimized;\n              this.renderStrategy = renderStrategy.MemoryOptimizedFloatPixelToMemoryOptimizedFloat;\n              this.formatValues = utils.erectMemoryOptimizedFloat;\n              return null;\n            }\n            break;\n          case 'Array(2)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray2;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray2;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray2;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n            break;\n          case 'Array(3)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray3;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray3;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray3;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n            break;\n          case 'Array(4)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray4;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray4;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray4;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n        }\n      } else {\n        switch (this.returnType) {\n          case 'LiteralInteger':\n          case 'Float':\n          case 'Number':\n          case 'Integer':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureFloat3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DFloat;\n              this.formatValues = utils.erect3DFloat;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureFloat2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DFloat;\n              this.formatValues = utils.erect2DFloat;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureFloat;\n              this.renderStrategy = renderStrategy.FloatPixelToFloat;\n              this.formatValues = utils.erectFloat;\n              return null;\n            }\n            break;\n          case 'Array(2)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray2Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray2;\n              this.formatValues = utils.erect3DArray2;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray2Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray2;\n              this.formatValues = utils.erect2DArray2;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray2Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray2;\n              this.formatValues = utils.erectArray2;\n              return null;\n            }\n            break;\n          case 'Array(3)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray3Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray3;\n              this.formatValues = utils.erect3DArray3;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray3Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray3;\n              this.formatValues = utils.erect2DArray3;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray3Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray3;\n              this.formatValues = utils.erectArray3;\n              return null;\n            }\n            break;\n          case 'Array(4)':\n            if (this.output[2] > 0) {\n              this.TextureConstructor = GLTextureArray4Float3D;\n              this.renderStrategy = renderStrategy.FloatPixelTo3DArray4;\n              this.formatValues = utils.erect3DArray4;\n              return null;\n            } else if (this.output[1] > 0) {\n              this.TextureConstructor = GLTextureArray4Float2D;\n              this.renderStrategy = renderStrategy.FloatPixelTo2DArray4;\n              this.formatValues = utils.erect2DArray4;\n              return null;\n            } else {\n              this.TextureConstructor = GLTextureArray4Float;\n              this.renderStrategy = renderStrategy.FloatPixelToArray4;\n              this.formatValues = utils.erectArray4;\n              return null;\n            }\n        }\n      }\n    } else {\n      throw new Error(`unhandled precision of \"${this.precision}\"`);\n    }\n\n    throw new Error(`unhandled return type \"${this.returnType}\"`);\n  }\n\n  /**\n   * @abstract\n   * @returns String\n   */\n  getKernelString() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultTexture() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Integer':\n      case 'Number':\n        return this.getMainResultNumberTexture();\n      case 'Array(2)':\n        return this.getMainResultArray2Texture();\n      case 'Array(3)':\n        return this.getMainResultArray3Texture();\n      case 'Array(4)':\n        return this.getMainResultArray4Texture();\n      default:\n        throw new Error(`unhandled returnType type ${ this.returnType }`);\n    }\n  }\n\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultSubKernelNumberTexture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultSubKernelArray2Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultSubKernelArray3Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultSubKernelArray4Texture() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultGraphical() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultMemoryOptimizedFloats() {\n    throw new Error(`abstract method call`);\n  }\n  /**\n   * @abstract\n   * @returns String[]\n   */\n  getMainResultPackedPixels() {\n    throw new Error(`abstract method call`);\n  }\n\n  getMainResultString() {\n    if (this.graphical) {\n      return this.getMainResultGraphical();\n    } else if (this.precision === 'single') {\n      if (this.optimizeFloatMemory) {\n        return this.getMainResultMemoryOptimizedFloats();\n      }\n      return this.getMainResultTexture();\n    } else {\n      return this.getMainResultPackedPixels();\n    }\n  }\n\n  getMainResultNumberTexture() {\n    return utils.linesToString(this.getMainResultKernelNumberTexture()) +\n      utils.linesToString(this.getMainResultSubKernelNumberTexture());\n  }\n\n  getMainResultArray2Texture() {\n    return utils.linesToString(this.getMainResultKernelArray2Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray2Texture());\n  }\n\n  getMainResultArray3Texture() {\n    return utils.linesToString(this.getMainResultKernelArray3Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray3Texture());\n  }\n\n  getMainResultArray4Texture() {\n    return utils.linesToString(this.getMainResultKernelArray4Texture()) +\n      utils.linesToString(this.getMainResultSubKernelArray4Texture());\n  }\n\n  renderTexture() {\n    return new this.TextureConstructor({\n      texture: this.outputTexture,\n      size: this.texSize,\n      dimensions: this.threadDim,\n      output: this.output,\n      context: this.context,\n    });\n  }\n  readPackedPixelsToUint8Array() {\n    if (this.precision !== 'unsigned') throw new Error('Requires this.precision to be \"unsigned\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const result = new Uint8Array(texSize[0] * texSize[1] * 4);\n    gl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, result);\n    return result;\n  }\n\n  readPackedPixelsToFloat32Array() {\n    return new Float32Array(this.readPackedPixelsToUint8Array().buffer);\n  }\n\n  readFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  readMemoryOptimizedFloatPixelsToFloat32Array() {\n    if (this.precision !== 'single') throw new Error('Requires this.precision to be \"single\"');\n    const {\n      texSize,\n      context: gl\n    } = this;\n    const w = texSize[0];\n    const h = texSize[1];\n    const result = new Float32Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n    return result;\n  }\n\n  /**\n   *\n   * @param {Boolean} [flip]\n   * @return {Uint8Array}\n   */\n  getPixels(flip) {\n    const {\n      context: gl,\n      output\n    } = this;\n    const [width, height] = output;\n    const pixels = new Uint8Array(width * height * 4);\n    gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    // flipped by default, so invert\n    return new Uint8ClampedArray((flip ? pixels : utils.flipPixels(pixels, width, height)).buffer);\n  }\n\n  renderKernelsToArrays() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = new this.TextureConstructor({\n        texture: this.subKernelOutputTextures[i],\n        size: this.texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n      }).toArray();\n    }\n    return result;\n  }\n\n  renderKernelsToTextures() {\n    const result = {\n      result: this.renderOutput(),\n    };\n    for (let i = 0; i < this.subKernels.length; i++) {\n      result[this.subKernels[i].property] = new this.TextureConstructor({\n        texture: this.subKernelOutputTextures[i],\n        size: this.texSize,\n        dimensions: this.threadDim,\n        output: this.output,\n        context: this.context,\n      });\n    }\n    return result;\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.program) {\n      this.threadDim = [this.output[0], this.output[1] || 1, this.output[2] || 1];\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      const { context: gl } = this;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n      this.updateMaxTexSize();\n      this.framebuffer.width = this.texSize[0];\n      this.framebuffer.height = this.texSize[1];\n      this.context.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      this.canvas.width = this.maxTexSize[0];\n      this.canvas.height = this.maxTexSize[1];\n      this._setupOutputTexture();\n      if (this.subKernels && this.subKernels.length > 0) {\n        this._setupSubOutputTextures();\n      }\n    }\n    return this;\n  }\n  renderValues() {\n    return this.formatValues(\n      this.transferValues(),\n      this.output[0],\n      this.output[1],\n      this.output[2]\n    );\n  }\n}\n\nconst renderStrategy = Object.freeze({\n  PackedPixelToUint8Array: Symbol('PackedPixelToUint8Array'),\n  PackedPixelToFloat: Symbol('PackedPixelToFloat'),\n  PackedPixelTo2DFloat: Symbol('PackedPixelTo2DFloat'),\n  PackedPixelTo3DFloat: Symbol('PackedPixelTo3DFloat'),\n  PackedTexture: Symbol('PackedTexture'),\n  FloatPixelToFloat32Array: Symbol('FloatPixelToFloat32Array'),\n  FloatPixelToFloat: Symbol('FloatPixelToFloat'),\n  FloatPixelTo2DFloat: Symbol('FloatPixelTo2DFloat'),\n  FloatPixelTo3DFloat: Symbol('FloatPixelTo3DFloat'),\n  FloatPixelToArray2: Symbol('FloatPixelToArray2'),\n  FloatPixelTo2DArray2: Symbol('FloatPixelTo2DArray2'),\n  FloatPixelTo3DArray2: Symbol('FloatPixelTo3DArray2'),\n  FloatPixelToArray3: Symbol('FloatPixelToArray3'),\n  FloatPixelTo2DArray3: Symbol('FloatPixelTo2DArray3'),\n  FloatPixelTo3DArray3: Symbol('FloatPixelTo3DArray3'),\n  FloatPixelToArray4: Symbol('FloatPixelToArray4'),\n  FloatPixelTo2DArray4: Symbol('FloatPixelTo2DArray4'),\n  FloatPixelTo3DArray4: Symbol('FloatPixelTo3DArray4'),\n  FloatTexture: Symbol('FloatTexture'),\n  MemoryOptimizedFloatPixelToMemoryOptimizedFloat: Symbol('MemoryOptimizedFloatPixelToFloat'),\n  MemoryOptimizedFloatPixelToMemoryOptimized2DFloat: Symbol('MemoryOptimizedFloatPixelTo2DFloat'),\n  MemoryOptimizedFloatPixelToMemoryOptimized3DFloat: Symbol('MemoryOptimizedFloatPixelTo3DFloat'),\n});\n\nconst typeMap = {\n  int: 'Integer',\n  float: 'Number',\n  vec2: 'Array(2)',\n  vec3: 'Array(3)',\n  vec4: 'Array(4)',\n};\n\nmodule.exports = {\n  GLKernel,\n  renderStrategy\n};","const { utils } = require('../../utils');\nconst { FunctionNode } = require('../function-node');\n// Closure capture for the ast function, prevent collision with existing AST functions\n// The prefixes to use\nconst jsMathPrefix = 'Math.';\nconst localPrefix = 'this.';\n\n/**\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to toString its respective WebGL code\n * @extends FunctionNode\n * @returns the converted WebGL function string\n */\nclass WebGLFunctionNode extends FunctionNode {\n  constructor(source, settings) {\n    super(source, settings);\n    if (settings && settings.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n      this.fixIntegerDivisionAccuracy = settings.fixIntegerDivisionAccuracy;\n    }\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for to its *named function*\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astFunction(ast, retArr) {\n    // Setup function return type and name\n    if (this.isRootKernel) {\n      retArr.push('void');\n    } else {\n      // looking up return type, this is a little expensive, and can be avoided if returnType is set\n      let lastReturn = null;\n      if (!this.returnType) {\n        const lastReturn = this.findLastReturn();\n        if (lastReturn) {\n          this.returnType = this.getType(ast.body);\n          if (this.returnType === 'LiteralInteger') {\n            this.returnType = 'Number';\n          }\n        }\n      }\n\n      const { returnType } = this;\n      if (!returnType) {\n        retArr.push('void');\n      } else {\n        const type = typeMap[returnType];\n        if (!type) {\n          throw new Error(`unknown type ${returnType}`);\n        }\n        retArr.push(type);\n      }\n    }\n    retArr.push(' ');\n    retArr.push(this.name);\n    retArr.push('(');\n\n    if (!this.isRootKernel) {\n      // Arguments handling\n      for (let i = 0; i < this.argumentNames.length; ++i) {\n        const argumentName = this.argumentNames[i];\n\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        let argumentType = this.argumentTypes[this.argumentNames.indexOf(argumentName)];\n        // The type is too loose ended, here we descide to solidify a type, lets go with float\n        if (!argumentType) {\n          throw this.astErrorOutput(`Unknown argument ${argumentName} type`, ast);\n        }\n        if (argumentType === 'LiteralInteger') {\n          this.argumentTypes[i] = argumentType = 'Number';\n        }\n        const type = typeMap[argumentType];\n        if (!type) {\n          throw this.astErrorOutput('Unexpected expression', ast);\n        }\n        retArr.push(type);\n        retArr.push(' ');\n        retArr.push('user_');\n        retArr.push(argumentName);\n      }\n    }\n\n    // Function opening\n    retArr.push(') {\\n');\n\n    // Body statement iteration\n    for (let i = 0; i < ast.body.body.length; ++i) {\n      this.astGeneric(ast.body.body[i], retArr);\n      retArr.push('\\n');\n    }\n\n    // Function closing\n    retArr.push('}\\n');\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for to *return* statement\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astReturnStatement(ast, retArr) {\n    if (!ast.argument) throw this.astErrorOutput('Unexpected return statement', ast);\n    this.pushState('skip-literal-correction');\n    const type = this.getType(ast.argument);\n    this.popState('skip-literal-correction');\n\n    const result = [];\n\n    if (!this.returnType) {\n      if (type === 'LiteralInteger' || type === 'Integer') {\n        this.returnType = 'Number';\n      } else {\n        this.returnType = type;\n      }\n    }\n\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Float':\n        switch (type) {\n          case 'Integer':\n            result.push('float(');\n            this.astGeneric(ast.argument, result);\n            result.push(')');\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToFloat(ast.argument, result);\n\n            // Running astGeneric forces the LiteralInteger to pick a type, and here, if we are returning a float, yet\n            // the LiteralInteger has picked to be an integer because of constraints on it we cast it to float.\n            if (this.getType(ast) === 'Integer') {\n              result.unshift('float(');\n              result.push(')');\n            }\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Integer':\n        switch (type) {\n          case 'Float':\n          case 'Number':\n            this.castValueToInteger(ast.argument, result);\n            break;\n          case 'LiteralInteger':\n            this.castLiteralToInteger(ast.argument, result);\n            break;\n          default:\n            this.astGeneric(ast.argument, result);\n        }\n        break;\n      case 'Array(4)':\n      case 'Array(3)':\n      case 'Array(2)':\n      case 'Input':\n        this.astGeneric(ast.argument, result);\n        break;\n      default:\n        throw this.astErrorOutput(`unhandled return type ${this.returnType}`, ast);\n    }\n\n    if (this.isRootKernel) {\n      retArr.push(`kernelResult = ${ result.join('') };`);\n      retArr.push('return;');\n    } else if (this.isSubKernel) {\n      retArr.push(`subKernelResult_${ this.name } = ${ result.join('') };`);\n      retArr.push(`return subKernelResult_${ this.name };`);\n    } else {\n      retArr.push(`return ${ result.join('') };`);\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *literal value*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n  astLiteral(ast, retArr) {\n    // Reject non numeric literals\n    if (isNaN(ast.value)) {\n      throw this.astErrorOutput(\n        'Non-numeric literal not supported : ' + ast.value,\n        ast\n      );\n    }\n\n    const key = `${ast.start},${ast.end}`;\n    if (Number.isInteger(ast.value)) {\n      if (this.isState('in-for-loop-init') || this.isState('casting-to-integer') || this.isState('building-integer')) {\n        this.literalTypes[key] = 'Integer';\n        retArr.push(`${ast.value}`);\n      } else if (this.isState('casting-to-float') || this.isState('building-float')) {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      } else {\n        this.literalTypes[key] = 'Number';\n        retArr.push(`${ast.value}.0`);\n      }\n    } else if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n      this.literalTypes[key] = 'Integer';\n      retArr.push(Math.round(ast.value));\n    } else {\n      this.literalTypes[key] = 'Number';\n      retArr.push(`${ast.value}`);\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *binary* expression\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astBinaryExpression(ast, retArr) {\n    if (this.checkAndUpconvertOperator(ast, retArr)) {\n      return retArr;\n    }\n\n    if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n      retArr.push('div_with_int_check(');\n      this.pushState('building-float');\n      switch (this.getType(ast.left)) {\n        case 'Integer':\n          this.castValueToFloat(ast.left, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.left, retArr);\n          break;\n        default:\n          this.astGeneric(ast.left, retArr);\n      }\n      retArr.push(', ');\n      switch (this.getType(ast.right)) {\n        case 'Integer':\n          this.castValueToFloat(ast.right, retArr);\n          break;\n        case 'LiteralInteger':\n          this.castLiteralToFloat(ast.right, retArr);\n          break;\n        default:\n          this.astGeneric(ast.right, retArr);\n      }\n      this.popState('building-float');\n      retArr.push(')');\n      return retArr;\n    }\n\n    retArr.push('(');\n    const leftType = this.getType(ast.left) || 'Number';\n    const rightType = this.getType(ast.right) || 'Number';\n    if (!leftType || !rightType) {\n      throw this.astErrorOutput(`Unhandled binary expression`, ast);\n    }\n    const key = leftType + ' & ' + rightType;\n    switch (key) {\n      case 'Integer & Integer':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n      case 'Number & Float':\n      case 'Float & Number':\n      case 'Float & Float':\n      case 'Number & Number':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'LiteralInteger & LiteralInteger':\n        if (this.isState('casting-to-integer') || this.isState('building-integer')) {\n          this.pushState('building-integer');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.astGeneric(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.castLiteralToFloat(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n\n      case 'Integer & Float':\n      case 'Integer & Number':\n        if (ast.operator === '>' || ast.operator === '<' && ast.right.type === 'Literal') {\n          // if right value is actually a float, don't loose that information, cast left to right rather than the usual right to left\n          if (!Number.isInteger(ast.right.value)) {\n            this.pushState('building-float');\n            this.castValueToFloat(ast.left, retArr);\n            retArr.push(operatorMap[ast.operator] || ast.operator);\n            this.astGeneric(ast.right, retArr);\n            this.popState('building-float');\n            break;\n          }\n        }\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.pushState('casting-to-integer');\n        if (ast.right.type === 'Literal') {\n          const literalResult = [];\n          this.astGeneric(ast.right, literalResult);\n          const literalType = this.getType(ast.right);\n          if (literalType === 'Integer') {\n            retArr.push(literalResult.join(''));\n          } else {\n            throw this.astErrorOutput(`Unhandled binary expression with literal`, ast);\n          }\n        } else {\n          retArr.push('int(');\n          this.astGeneric(ast.right, retArr);\n          retArr.push(')');\n        }\n        this.popState('casting-to-integer');\n        this.popState('building-integer');\n        break;\n      case 'Integer & LiteralInteger':\n        this.pushState('building-integer');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castLiteralToInteger(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Number & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n      case 'Float & LiteralInteger':\n      case 'Number & LiteralInteger':\n        if (this.isState('in-for-loop-test')) {\n          this.pushState('building-integer');\n          retArr.push('int(');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(')');\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castLiteralToFloat(ast.right, retArr);\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Float':\n      case 'LiteralInteger & Number':\n        if (this.isState('in-for-loop-test') || this.isState('in-for-loop-init') || this.isState('casting-to-integer')) {\n          this.pushState('building-integer');\n          this.castLiteralToInteger(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.castValueToInteger(ast.right, retArr);\n          this.popState('building-integer');\n        } else {\n          this.pushState('building-float');\n          this.astGeneric(ast.left, retArr);\n          retArr.push(operatorMap[ast.operator] || ast.operator);\n          this.pushState('casting-to-float');\n          this.astGeneric(ast.right, retArr);\n          this.popState('casting-to-float');\n          this.popState('building-float');\n        }\n        break;\n      case 'LiteralInteger & Integer':\n        this.pushState('building-integer');\n        this.castLiteralToInteger(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-integer');\n        break;\n\n      case 'Boolean & Boolean':\n        this.pushState('building-boolean');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.astGeneric(ast.right, retArr);\n        this.popState('building-boolean');\n        break;\n\n      case 'Float & Integer':\n        this.pushState('building-float');\n        this.astGeneric(ast.left, retArr);\n        retArr.push(operatorMap[ast.operator] || ast.operator);\n        this.castValueToFloat(ast.right, retArr);\n        this.popState('building-float');\n        break;\n\n      default:\n        throw this.astErrorOutput(`Unhandled binary expression between ${key}`, ast);\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  checkAndUpconvertOperator(ast, retArr) {\n    const bitwiseResult = this.checkAndUpconvertBitwiseOperators(ast, retArr);\n    if (bitwiseResult) {\n      return bitwiseResult;\n    }\n    const upconvertableOperators = {\n      '%': 'mod',\n      '**': 'pow',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.left)) {\n      case 'Integer':\n        this.castValueToFloat(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    switch (this.getType(ast.right)) {\n      case 'Integer':\n        this.castValueToFloat(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToFloat(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseOperators(ast, retArr) {\n    const upconvertableOperators = {\n      '&': 'bitwiseAnd',\n      '|': 'bitwiseOr',\n      '^': 'bitwiseXOR',\n      '<<': 'bitwiseZeroFillLeftShift',\n      '>>': 'bitwiseSignedRightShift',\n      '>>>': 'bitwiseZeroFillRightShift',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    const leftType = this.getType(ast.left);\n    switch (leftType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.left, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.left, retArr);\n        break;\n      default:\n        this.astGeneric(ast.left, retArr);\n    }\n    retArr.push(',');\n    const rightType = this.getType(ast.right);\n    switch (rightType) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.right, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.right, retArr);\n        break;\n      default:\n        this.astGeneric(ast.right, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  checkAndUpconvertBitwiseUnary(ast, retArr) {\n    const upconvertableOperators = {\n      '~': 'bitwiseNot',\n    };\n    const foundOperator = upconvertableOperators[ast.operator];\n    if (!foundOperator) return null;\n    retArr.push(foundOperator);\n    retArr.push('(');\n    switch (this.getType(ast.argument)) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(ast.argument, retArr);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(ast.argument, retArr);\n        break;\n      default:\n        this.astGeneric(ast.argument, retArr);\n    }\n    retArr.push(')');\n    return retArr;\n  }\n\n  /**\n   *\n   * @param {Object} ast\n   * @param {Array} retArr\n   * @return {String[]}\n   */\n  castLiteralToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  /**\n   *\n   * @param {Object} ast\n   * @param {Array} retArr\n   * @return {String[]}\n   */\n  castLiteralToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    this.astGeneric(ast, retArr);\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  /**\n   *\n   * @param {Object} ast\n   * @param {Array} retArr\n   * @return {String[]}\n   */\n  castValueToInteger(ast, retArr) {\n    this.pushState('casting-to-integer');\n    retArr.push('int(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-integer');\n    return retArr;\n  }\n\n  /**\n   *\n   * @param {Object} ast\n   * @param {Array} retArr\n   * @return {String[]}\n   */\n  castValueToFloat(ast, retArr) {\n    this.pushState('casting-to-float');\n    retArr.push('float(');\n    this.astGeneric(ast, retArr);\n    retArr.push(')');\n    this.popState('casting-to-float');\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n    }\n\n    const type = this.getType(idtNode);\n\n    if (idtNode.name === 'Infinity') {\n      // https://stackoverflow.com/a/47543127/1324039\n      retArr.push('3.402823466e+38');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\n        retArr.push(`bool(user_${idtNode.name})`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    } else {\n      const userArgumentName = this.getKernelArgumentName(idtNode.name);\n      if (userArgumentName) {\n        retArr.push(`user_${userArgumentName}`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    }\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *for-loop* expression\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed webgl string\n   */\n  astForStatement(forNode, retArr) {\n    if (forNode.type !== 'ForStatement') {\n      throw this.astErrorOutput('Invalid for statement', forNode);\n    }\n\n    const initArr = [];\n    const testArr = [];\n    const updateArr = [];\n    const bodyArr = [];\n    let isSafe = null;\n\n    if (forNode.init) {\n      this.pushState('in-for-loop-init');\n      this.astGeneric(forNode.init, initArr);\n      const { declarations } = forNode.init;\n      for (let i = 0; i < declarations.length; i++) {\n        if (declarations[i].init && declarations[i].init.type !== 'Literal') {\n          isSafe = false;\n        }\n      }\n      if (isSafe) {\n        for (let i = 0; i < initArr.length; i++) {\n          if (initArr[i].includes && initArr[i].includes(',')) {\n            isSafe = false;\n          }\n        }\n      }\n      this.popState('in-for-loop-init');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.test) {\n      this.pushState('in-for-loop-test');\n      this.astGeneric(forNode.test, testArr);\n      this.popState('in-for-loop-test');\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.update) {\n      this.astGeneric(forNode.update, updateArr);\n    } else {\n      isSafe = false;\n    }\n\n    if (forNode.body) {\n      this.pushState('loop-body');\n      this.astGeneric(forNode.body, bodyArr);\n      this.popState('loop-body');\n    }\n\n    // have all parts, now make them safe\n    if (isSafe === null) {\n      isSafe = this.isSafe(forNode.init) && this.isSafe(forNode.test);\n    }\n\n    if (isSafe) {\n      retArr.push(`for (${initArr.join('')};${testArr.join('')};${updateArr.join('')}){\\n`);\n      retArr.push(bodyArr.join(''));\n      retArr.push('}\\n');\n    } else {\n      const iVariableName = this.getInternalVariableName('safeI');\n      if (initArr.length > 0) {\n        retArr.push(initArr.join(''), ';\\n');\n      }\n      retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n      if (testArr.length > 0) {\n        retArr.push(`if (!${testArr.join('')}) break;\\n`);\n      }\n      retArr.push(bodyArr.join(''));\n      retArr.push(`\\n${updateArr.join('')};`);\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *while* loop\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed webgl string\n   */\n  astWhileStatement(whileNode, retArr) {\n    if (whileNode.type !== 'WhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', whileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    retArr.push('if (!');\n    this.astGeneric(whileNode.test, retArr);\n    retArr.push(') break;\\n');\n    this.astGeneric(whileNode.body, retArr);\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *do while* loop\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the parsed webgl string\n   */\n  astDoWhileStatement(doWhileNode, retArr) {\n    if (doWhileNode.type !== 'DoWhileStatement') {\n      throw this.astErrorOutput('Invalid while statement', doWhileNode);\n    }\n\n    const iVariableName = this.getInternalVariableName('safeI');\n    retArr.push(`for (int ${iVariableName}=0;${iVariableName}<LOOP_MAX;${iVariableName}++){\\n`);\n    this.astGeneric(doWhileNode.body, retArr);\n    retArr.push('if (!');\n    this.astGeneric(doWhileNode.test, retArr);\n    retArr.push(') break;\\n');\n    retArr.push('}\\n');\n\n    return retArr;\n  }\n\n\n  /**\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astAssignmentExpression(assNode, retArr) {\n    const declaration = this.getDeclaration(assNode.left);\n    if (declaration && !declaration.assignable) {\n      throw new this.astErrorOutput(`Variable ${assNode.left.name} is not assignable here`, assNode);\n    }\n    // TODO: casting needs implemented here\n    if (assNode.operator === '%=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('mod(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else if (assNode.operator === '**=') {\n      this.astGeneric(assNode.left, retArr);\n      retArr.push('=');\n      retArr.push('pow(');\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(',');\n      this.astGeneric(assNode.right, retArr);\n      retArr.push(')');\n    } else {\n      const leftType = this.getType(assNode.left);\n      const rightType = this.getType(assNode.right);\n      this.astGeneric(assNode.left, retArr);\n      retArr.push(assNode.operator);\n      if (leftType !== 'Integer' && rightType === 'Integer') {\n        retArr.push('float(');\n        this.astGeneric(assNode.right, retArr);\n        retArr.push(')');\n      } else {\n        this.astGeneric(assNode.right, retArr);\n      }\n      return retArr;\n    }\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Block* statement\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astBlockStatement(bNode, retArr) {\n    if (this.isState('loop-body')) {\n      this.pushState('block-body'); // this prevents recursive removal of braces\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      this.popState('block-body');\n    } else {\n      retArr.push('{\\n');\n      for (let i = 0; i < bNode.body.length; i++) {\n        this.astGeneric(bNode.body[i], retArr);\n      }\n      retArr.push('}\\n');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   * @param {Object} varDecNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astVariableDeclaration(varDecNode, retArr) {\n    if (varDecNode.kind === 'var' && this.warnVarUsage) {\n      this.varWarn();\n    }\n    const declarations = varDecNode.declarations;\n    if (!declarations || !declarations[0] || !declarations[0].init) {\n      throw this.astErrorOutput('Unexpected expression', varDecNode);\n    }\n    const result = [];\n    let lastType = null;\n    const inForLoopInit = this.isState('in-for-loop-init');\n    for (let i = 0; i < declarations.length; i++) {\n      const declaration = declarations[i];\n      const init = declaration.init;\n      const info = this.getDeclaration(declaration.id);\n      const valueType = info.valueType;\n      const actualType = this.getType(declaration.init);\n      let dependencies = info.dependencies;\n      let type = inForLoopInit ? 'Integer' : actualType;\n      if (type === 'LiteralInteger') {\n        // We had the choice to go either float or int, choosing float\n        type = 'Number';\n      }\n      const markupType = typeMap[type];\n      if (!markupType) {\n        throw this.astErrorOutput(`Markup type ${ markupType } not handled`, varDecNode);\n      }\n      const declarationResult = [];\n      if (actualType === 'Integer' && type === 'Integer' && !inForLoopInit) {\n        // Since we are assigning to a float, ensure valueType is reset to that\n        info.valueType = 'Number';\n        if (i === 0 || lastType === null) {\n          declarationResult.push('float ');\n        } else if (type !== lastType) {\n          throw new Error('Unhandled declaration');\n        } else {\n          declarationResult.push(',');\n        }\n        lastType = type;\n        declarationResult.push(`user_${declaration.id.name}=`);\n        declarationResult.push('float(');\n        this.astGeneric(init, declarationResult);\n        declarationResult.push(')');\n      } else {\n        // Since we are assigning to a float, ensure valueType is reset to that\n        info.valueType = type;\n        if (i === 0 || lastType === null) {\n          declarationResult.push(`${markupType} `);\n        } else if (type !== lastType) {\n          result.push(';');\n          declarationResult.push(`${markupType} `);\n        } else {\n          declarationResult.push(',');\n        }\n        lastType = type;\n        declarationResult.push(`user_${declaration.id.name}=`);\n        if (actualType === 'Number' && type === 'Integer') {\n          if (init.left && init.left.type === 'Literal') {\n            this.astGeneric(init, declarationResult);\n          } else {\n            declarationResult.push('int(');\n            this.astGeneric(init, declarationResult);\n            declarationResult.push(')');\n          }\n        } else {\n          this.astGeneric(init, declarationResult);\n        }\n      }\n      result.push(declarationResult.join(''));\n    }\n\n    retArr.push(result.join(''));\n    if (!inForLoopInit) {\n      retArr.push(';');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *If* Statement\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astIfStatement(ifNode, retArr) {\n    retArr.push('if (');\n    this.astGeneric(ifNode.test, retArr);\n    retArr.push(')');\n    if (ifNode.consequent.type === 'BlockStatement') {\n      this.astGeneric(ifNode.consequent, retArr);\n    } else {\n      retArr.push(' {\\n');\n      this.astGeneric(ifNode.consequent, retArr);\n      retArr.push('\\n}\\n');\n    }\n\n    if (ifNode.alternate) {\n      retArr.push('else ');\n      if (ifNode.alternate.type === 'BlockStatement') {\n        this.astGeneric(ifNode.alternate, retArr);\n      } else {\n        retArr.push(' {\\n');\n        this.astGeneric(ifNode.alternate, retArr);\n        retArr.push('\\n}\\n');\n      }\n    }\n    return retArr;\n  }\n\n  astSwitchStatement(ast, retArr) {\n    if (ast.type !== 'SwitchStatement') {\n      throw this.astErrorOutput('Invalid switch statement', ast);\n    }\n    const { discriminant, cases } = ast;\n    const type = this.getType(discriminant);\n    const varName = `switchDiscriminant${ast.start}_${ast.end}`;\n    switch (type) {\n      case 'Float':\n      case 'Number':\n        retArr.push(`float ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n      case 'Integer':\n        retArr.push(`int ${varName} = `);\n        this.astGeneric(discriminant, retArr);\n        retArr.push(';\\n');\n        break;\n    }\n    // switch with just a default:\n    if (cases.length === 1 && !cases[0].test) {\n      this.astGeneric(cases[0].consequent, retArr);\n      return retArr;\n    }\n\n    // regular switches:\n    let fallingThrough = false;\n    let defaultResult = [];\n    let movingDefaultToEnd = false;\n    let pastFirstIf = false;\n    for (let i = 0; i < cases.length; i++) {\n      // default\n      if (!cases[i].test) {\n        if (cases.length > i + 1) {\n          movingDefaultToEnd = true;\n          this.astGeneric(cases[i].consequent, defaultResult);\n          continue;\n        } else {\n          retArr.push(' else {\\n');\n        }\n      } else {\n        // all others\n        if (i === 0 || !pastFirstIf) {\n          pastFirstIf = true;\n          retArr.push(`if (${varName} == `);\n        } else {\n          if (fallingThrough) {\n            retArr.push(`${varName} == `);\n            fallingThrough = false;\n          } else {\n            retArr.push(` else if (${varName} == `);\n          }\n        }\n        if (type === 'Integer') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'Number':\n            case 'Float':\n              this.castValueToInteger(cases[i].test, retArr);\n              break;\n            case 'LiteralInteger':\n              this.castLiteralToInteger(cases[i].test, retArr);\n              break;\n          }\n        } else if (type === 'Float') {\n          const testType = this.getType(cases[i].test);\n          switch (testType) {\n            case 'LiteralInteger':\n              this.castLiteralToFloat(cases[i].test, retArr);\n              break;\n            case 'Integer':\n              this.castValueToFloat(cases[i].test, retArr);\n              break;\n          }\n        } else {\n          throw new Error('unhanlded');\n        }\n        if (!cases[i].consequent || cases[i].consequent.length === 0) {\n          fallingThrough = true;\n          retArr.push(' || ');\n          continue;\n        }\n        retArr.push(`) {\\n`);\n      }\n      this.astGeneric(cases[i].consequent, retArr);\n      retArr.push('\\n}');\n    }\n    if (movingDefaultToEnd) {\n      retArr.push(' else {');\n      retArr.push(defaultResult.join(''));\n      retArr.push('}');\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *This* expression\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astThisExpression(tNode, retArr) {\n    retArr.push('this');\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astMemberExpression(mNode, retArr) {\n    const {\n      property,\n      name,\n      signature,\n      origin,\n      type,\n      xProperty,\n      yProperty,\n      zProperty\n    } = this.getMemberExpressionDetails(mNode);\n    switch (signature) {\n      case 'value.thread.value':\n      case 'this.thread.value':\n        if (name !== 'x' && name !== 'y' && name !== 'z') {\n          throw this.astErrorOutput('Unexpected expression, expected `this.thread.x`, `this.thread.y`, or `this.thread.z`', mNode);\n        }\n        retArr.push(`threadId.${name}`);\n        return retArr;\n      case 'this.output.value':\n        if (this.dynamicOutput) {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.x)');\n              } else {\n                retArr.push('uOutputDim.x');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.y)');\n              } else {\n                retArr.push('uOutputDim.y');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-float')) {\n                retArr.push('float(uOutputDim.z)');\n              } else {\n                retArr.push('uOutputDim.z');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        } else {\n          switch (name) {\n            case 'x':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[0]);\n              } else {\n                retArr.push(this.output[0], '.0');\n              }\n              break;\n            case 'y':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[1]);\n              } else {\n                retArr.push(this.output[1], '.0');\n              }\n              break;\n            case 'z':\n              if (this.isState('casting-to-integer')) {\n                retArr.push(this.output[2]);\n              } else {\n                retArr.push(this.output[2], '.0');\n              }\n              break;\n            default:\n              throw this.astErrorOutput('Unexpected expression', mNode);\n          }\n        }\n        return retArr;\n      case 'value':\n        throw this.astErrorOutput('Unexpected expression', mNode);\n      case 'value[]':\n      case 'value[][]':\n      case 'value[][][]':\n      case 'value[][][][]':\n      case 'value.value':\n        if (origin === 'Math') {\n          retArr.push(Math[name]);\n          return retArr;\n        }\n        switch (property) {\n          case 'r':\n            retArr.push(`user_${ name }.r`);\n            return retArr;\n          case 'g':\n            retArr.push(`user_${ name }.g`);\n            return retArr;\n          case 'b':\n            retArr.push(`user_${ name }.b`);\n            return retArr;\n          case 'a':\n            retArr.push(`user_${ name }.a`);\n            return retArr;\n        }\n        break;\n      case 'this.constants.value':\n        if (typeof xProperty === 'undefined') {\n          switch (type) {\n            case 'Array(2)':\n            case 'Array(3)':\n            case 'Array(4)':\n              retArr.push(`constants_${ name }`);\n              return retArr;\n          }\n        }\n        case 'this.constants.value[]':\n        case 'this.constants.value[][]':\n        case 'this.constants.value[][][]':\n        case 'this.constants.value[][][][]':\n          break;\n        case 'fn()[]':\n          this.astCallExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        case '[][]':\n          this.astArrayExpression(mNode.object, retArr);\n          retArr.push('[');\n          retArr.push(this.memberExpressionPropertyMarkup(property));\n          retArr.push(']');\n          return retArr;\n        default:\n          throw this.astErrorOutput('Unexpected expression', mNode);\n    }\n\n    if (mNode.computed === false) {\n      // handle simple types\n      switch (type) {\n        case 'Number':\n        case 'Integer':\n        case 'Float':\n        case 'Boolean':\n          retArr.push(`${origin}_${name}`);\n          return retArr;\n      }\n    }\n\n    // handle more complex types\n    // argument may have come from a parent\n    let synonymName = this.getKernelArgumentName(name);\n\n    const markupName = `${origin}_${synonymName || name}`;\n\n    switch (type) {\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        // Get from local vec4\n        this.astGeneric(mNode.object, retArr);\n        retArr.push('[');\n        retArr.push(this.memberExpressionPropertyMarkup(xProperty));\n        retArr.push(']');\n        break;\n      case 'HTMLImageArray':\n        retArr.push(`getImage3D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(1)':\n        retArr.push(`getFloatFromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(2)':\n      case 'Array2D(2)':\n      case 'Array3D(2)':\n        retArr.push(`getMemoryOptimizedVec2(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(2)':\n        retArr.push(`getVec2FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(3)':\n      case 'Array2D(3)':\n      case 'Array3D(3)':\n        retArr.push(`getMemoryOptimizedVec3(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(3)':\n        retArr.push(`getVec3FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'Array1D(4)':\n      case 'Array2D(4)':\n      case 'Array3D(4)':\n        retArr.push(`getMemoryOptimizedVec4(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'ArrayTexture(4)':\n      case 'HTMLImage':\n        retArr.push(`getVec4FromSampler2D(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      case 'NumberTexture':\n      case 'Array':\n      case 'Array2D':\n      case 'Array3D':\n      case 'Array4D':\n      case 'Input':\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        if (this.precision === 'single') {\n          // bitRatio is always 4 here, javascript doesn't yet have 8 or 16 bit support\n          // TODO: make 8 or 16 bit work anyway!\n          retArr.push(`getMemoryOptimized32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        } else {\n          const bitRatio = (origin === 'user' ?\n            this.lookupFunctionArgumentBitRatio(this.name, name) :\n            this.constantBitRatios[name]\n          );\n          switch (bitRatio) {\n            case 1:\n              retArr.push(`get8(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 2:\n              retArr.push(`get16(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            case 4:\n            case 0:\n              retArr.push(`get32(${markupName}, ${markupName}Size, ${markupName}Dim, `);\n              break;\n            default:\n              throw new Error(`unhandled bit ratio of ${bitRatio}`);\n          }\n          this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n          retArr.push(')');\n        }\n        break;\n      case 'MemoryOptimizedNumberTexture':\n        retArr.push(`getMemoryOptimized32(${ markupName }, ${ markupName }Size, ${ markupName }Dim, `);\n        this.memberExpressionXYZ(xProperty, yProperty, zProperty, retArr);\n        retArr.push(')');\n        break;\n      default:\n        throw new Error(`unhandled member expression \"${ type }\"`);\n    }\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *call* expression\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns  {Array} the append retArr\n   */\n  astCallExpression(ast, retArr) {\n    if (!ast.callee) {\n      throw this.astErrorOutput('Unknown CallExpression', ast);\n    }\n\n    let functionName = null;\n    const isMathFunction = this.isAstMathFunction(ast);\n\n    // Its a math operator or this.something(), remove the prefix\n    if (isMathFunction || (ast.callee.object && ast.callee.object.type === 'ThisExpression')) {\n      functionName = ast.callee.property.name;\n    }\n    // Issue #212, BABEL!\n    else if (ast.callee.type === 'SequenceExpression' && ast.callee.expressions[0].type === 'Literal' && !isNaN(ast.callee.expressions[0].raw)) {\n      functionName = ast.callee.expressions[1].property.name;\n    } else {\n      functionName = ast.callee.name;\n    }\n\n    if (!functionName) {\n      throw this.astErrorOutput(`Unhandled function, couldn't find name`, ast);\n    }\n\n    // if this if grows to more than one, lets use a switch\n    if (functionName === 'atan2') {\n      functionName = 'atan';\n    }\n\n    // Register the function into the called registry\n    if (this.calledFunctions.indexOf(functionName) < 0) {\n      this.calledFunctions.push(functionName);\n    }\n\n    if (functionName === 'random' && this.plugins && this.plugins.length > 0) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.functionMatch === 'Math.random()' && plugin.functionReplace) {\n          retArr.push(plugin.functionReplace);\n          return retArr;\n        }\n      }\n    }\n\n    // track the function was called\n    if (this.onFunctionCall) {\n      this.onFunctionCall(this.name, functionName, ast.arguments);\n    }\n\n    // Call the function\n    retArr.push(functionName);\n\n    // Open arguments space\n    retArr.push('(');\n\n    // Add the arguments\n    if (isMathFunction) {\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        const argumentType = this.getType(argument);\n        if (i > 0) {\n          retArr.push(', ');\n        }\n\n        switch (argumentType) {\n          case 'Integer':\n            this.castValueToFloat(argument, retArr);\n            break;\n          default:\n            this.astGeneric(argument, retArr);\n            break;\n        }\n      }\n    } else {\n      const targetTypes = this.lookupFunctionArgumentTypes(functionName) || [];\n      for (let i = 0; i < ast.arguments.length; ++i) {\n        const argument = ast.arguments[i];\n        let targetType = targetTypes[i];\n        if (i > 0) {\n          retArr.push(', ');\n        }\n        const argumentType = this.getType(argument);\n        if (!targetType) {\n          this.triggerImplyArgumentType(functionName, i, argumentType, this);\n          targetType = argumentType;\n        }\n        switch (argumentType) {\n          case 'Number':\n          case 'Float':\n            if (targetType === 'Integer') {\n              retArr.push('int(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.astGeneric(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Integer':\n            if (targetType === 'Number' || targetType === 'Float') {\n              retArr.push('float(');\n              this.astGeneric(argument, retArr);\n              retArr.push(')');\n              continue;\n            } else if (targetType === 'Integer') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'LiteralInteger':\n            if (targetType === 'Integer') {\n              this.castLiteralToInteger(argument, retArr);\n              continue;\n            } else if (targetType === 'Number' || targetType === 'Float') {\n              this.castLiteralToFloat(argument, retArr);\n              continue;\n            } else if (targetType === 'LiteralInteger') {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'Array(2)':\n          case 'Array(3)':\n          case 'Array(4)':\n            if (targetType === argumentType) {\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n          case 'ArrayTexture(1)':\n          case 'ArrayTexture(2)':\n          case 'ArrayTexture(3)':\n          case 'ArrayTexture(4)':\n          case 'Array':\n          case 'Input':\n            if (targetType === argumentType) {\n              this.triggerTrackArgumentSynonym(this.name, argument.name, functionName, i);\n              this.astGeneric(argument, retArr);\n              continue;\n            }\n            break;\n        }\n        throw this.astErrorOutput(`Unhandled argument combination of ${ argumentType } and ${ targetType } for argument named \"${ argument.name }\"`, ast);\n      }\n    }\n    // Close arguments space\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  /**\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   * @param {Object} arrNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astArrayExpression(arrNode, retArr) {\n    const arrLen = arrNode.elements.length;\n\n    retArr.push('vec' + arrLen + '(');\n    for (let i = 0; i < arrLen; ++i) {\n      if (i > 0) {\n        retArr.push(', ');\n      }\n      const subNode = arrNode.elements[i];\n      this.astGeneric(subNode, retArr)\n    }\n    retArr.push(')');\n\n    return retArr;\n  }\n\n  memberExpressionXYZ(x, y, z, retArr) {\n    if (z) {\n      retArr.push(this.memberExpressionPropertyMarkup(z), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    if (y) {\n      retArr.push(this.memberExpressionPropertyMarkup(y), ', ');\n    } else {\n      retArr.push('0, ');\n    }\n    retArr.push(this.memberExpressionPropertyMarkup(x));\n    return retArr;\n  }\n\n  memberExpressionPropertyMarkup(property) {\n    if (!property) {\n      throw new Error('Property not set');\n    }\n    const type = this.getType(property);\n    const result = [];\n    switch (type) {\n      case 'Number':\n      case 'Float':\n        this.castValueToInteger(property, result);\n        break;\n      case 'LiteralInteger':\n        this.castLiteralToInteger(property, result);\n        break;\n      default:\n        this.astGeneric(property, result);\n    }\n    return result.join('');\n  }\n}\n\nconst typeMap = {\n  'Array': 'sampler2D',\n  'Array(2)': 'vec2',\n  'Array(3)': 'vec3',\n  'Array(4)': 'vec4',\n  'Array2D': 'sampler2D',\n  'Array3D': 'sampler2D',\n  'Boolean': 'bool',\n  'Float': 'float',\n  'Input': 'sampler2D',\n  'Integer': 'int',\n  'Number': 'float',\n  'LiteralInteger': 'float',\n  'NumberTexture': 'sampler2D',\n  'MemoryOptimizedNumberTexture': 'sampler2D',\n  'ArrayTexture(1)': 'sampler2D',\n  'ArrayTexture(2)': 'sampler2D',\n  'ArrayTexture(3)': 'sampler2D',\n  'ArrayTexture(4)': 'sampler2D',\n};\n\nconst operatorMap = {\n  '===': '==',\n  '!==': '!='\n};\n\nmodule.exports = {\n  WebGLFunctionNode\n};","const source = `\n\nuniform highp float triangle_noise_seed;\nhighp float triangle_noise_shift = 0.000001;\n\n//https://www.shadertoy.com/view/4t2SDh\n//note: uniformly distributed, normalized rand, [0;1[\nfloat nrand( vec2 n )\n{\n  return fract(sin(dot(n.xy, vec2(12.9898, 78.233)))* 43758.5453);\n}\n//note: remaps v to [0;1] in interval [a;b]\nfloat remap( float a, float b, float v )\n{\n  return clamp( (v-a) / (b-a), 0.0, 1.0 );\n}\n\nfloat n4rand( vec2 n )\n{\n  float t = fract( triangle_noise_seed + triangle_noise_shift );\n  float nrnd0 = nrand( n + 0.07*t );\n  float nrnd1 = nrand( n + 0.11*t );  \n  float nrnd2 = nrand( n + 0.13*t );\n  float nrnd3 = nrand( n + 0.17*t );\n  float result = (nrnd0+nrnd1+nrnd2+nrnd3) / 4.0;\n  triangle_noise_shift = result + 0.000001;\n  return result;\n}`;\n\nconst name = 'triangle-noise-noise';\n\nconst functionMatch = 'Math.random()';\n\nconst functionReplace = 'n4rand(vTexCoord)';\n\nconst functionReturnType = 'Number';\n\nconst onBeforeRun = (kernel) => {\n  kernel.setUniform1f('triangle_noise_seed', Math.random());\n};\n\n/**\n *\n * @type IPlugin\n */\nmodule.exports = {\n  name,\n  onBeforeRun,\n  functionMatch,\n  functionReplace,\n  functionReturnType,\n  source\n};","// language=GLSL\nconst fragmentShader = `__HEADER__;\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nvarying vec2 vTexCoord;\n\nvec4 round(vec4 x) {\n  return floor(x + 0.5);\n}\n\nfloat round(float x) {\n  return floor(x + 0.5);\n}\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x / y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  if (channel == 0) return texel.r * 255.0 + texel.g * 65280.0;\n  if (channel == 1) return texel.b * 255.0 + texel.a * 65280.0;\n  return 0.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  if (channel == 0) return texel.r * 255.0;\n  if (channel == 1) return texel.g * 255.0;\n  if (channel == 2) return texel.b * 255.0;\n  if (channel == 3) return texel.a * 255.0;\n  return 0.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return texel.r;\n  if (channel == 1) return texel.g;\n  if (channel == 2) return texel.b;\n  if (channel == 3) return texel.a;\n  return 0.0;\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture2D(tex, st / vec2(texSize));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture2D(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n  \n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture2D(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture2D(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\nvoid color(sampler2D image) {\n  actualColor = texture2D(image, vTexCoord);\n}\n\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};","const vertexShader = `precision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nattribute vec2 aPos;\nattribute vec2 aTexCoord;\n\nvarying vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};","/**\n *\n * @param {WebGLRenderingContext} gl\n * @param {IGLWiretapOptions} [options]\n * @returns {GLWiretapProxy}\n */\nfunction glWiretap(gl, options = {}) {\n  const {\n    contextName = 'gl',\n    throwGetError,\n    useTrackablePrimitives,\n    readPixelsFile,\n    recording = [],\n    variables = {},\n    onReadPixels,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  const proxy = new Proxy(gl, { get: listen });\n  const contextVariables = [];\n  const entityNames = {};\n  let imageCount = 0;\n  let indent = '';\n  let readPixelsVariableName;\n  return proxy;\n  function listen(obj, property) {\n    switch (property) {\n      case 'addComment': return addComment;\n      case 'checkThrowError': return checkThrowError;\n      case 'getReadPixelsVariableName': return readPixelsVariableName;\n      case 'insertVariable': return insertVariable;\n      case 'reset': return reset;\n      case 'setIndent': return setIndent;\n      case 'toString': return toString;\n      case 'getContextVariableName': return getContextVariableName;\n    }\n    if (typeof gl[property] === 'function') {\n      return function() { // need arguments from this, fyi\n        switch (property) {\n          case 'getError':\n            if (throwGetError) {\n              recording.push(`${indent}if (${contextName}.getError() !== ${contextName}.NONE) throw new Error('error');`);\n            } else {\n              recording.push(`${indent}${contextName}.getError();`); // flush out errors\n            }\n            return gl.getError();\n          case 'getExtension': {\n            const variableName = `${contextName}Variables${contextVariables.length}`;\n            recording.push(`${indent}const ${variableName} = ${contextName}.getExtension('${arguments[0]}');`);\n            const extension = gl.getExtension(arguments[0]);\n            if (extension && typeof extension === 'object') {\n              const tappedExtension = glExtensionWiretap(extension, {\n                getEntity,\n                useTrackablePrimitives,\n                recording,\n                contextName: variableName,\n                contextVariables,\n                variables,\n                indent,\n                onUnrecognizedArgumentLookup,\n              });\n              contextVariables.push(tappedExtension);\n              return tappedExtension;\n            } else {\n              contextVariables.push(null);\n            }\n            return extension;\n          }\n          case 'readPixels':\n            const i = contextVariables.indexOf(arguments[6]);\n            let targetVariableName;\n            if (i === -1) {\n              const variableName = getVariableName(arguments[6]);\n              if (variableName) {\n                targetVariableName = variableName;\n                recording.push(`${indent}${variableName}`);\n              } else {\n                targetVariableName = `${contextName}Variable${contextVariables.length}`;\n                contextVariables.push(arguments[6]);\n                recording.push(`${indent}const ${targetVariableName} = new ${arguments[6].constructor.name}(${arguments[6].length});`);\n              }\n            } else {\n              targetVariableName = `${contextName}Variable${i}`;\n            }\n            readPixelsVariableName = targetVariableName;\n            const argumentAsStrings = [\n              arguments[0],\n              arguments[1],\n              arguments[2],\n              arguments[3],\n              getEntity(arguments[4]),\n              getEntity(arguments[5]),\n              targetVariableName\n            ];\n            recording.push(`${indent}${contextName}.readPixels(${argumentAsStrings.join(', ')});`);\n            if (readPixelsFile) {\n              writePPM(arguments[2], arguments[3]);\n            }\n            if (onReadPixels) {\n              onReadPixels(targetVariableName, argumentAsStrings);\n            }\n            return gl.readPixels.apply(gl, arguments);\n          case 'drawBuffers':\n            recording.push(`${indent}${contextName}.drawBuffers([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup } )}]);`);\n            return gl.drawBuffers(arguments[0]);\n        }\n        let result = gl[property].apply(gl, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n              break;\n            }\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n\n            contextVariables.push(result);\n        }\n        return result;\n      }\n    }\n    entityNames[gl[property]] = property;\n    return gl[property];\n  }\n  function toString() {\n    return recording.join('\\n');\n  }\n  function reset() {\n    while (recording.length > 0) {\n      recording.pop();\n    }\n  }\n  function insertVariable(name, value) {\n    variables[name] = value;\n  }\n  function getEntity(value) {\n    const name = entityNames[value];\n    if (name) {\n      return contextName + '.' + name;\n    }\n    return value;\n  }\n  function setIndent(spaces) {\n    indent = ' '.repeat(spaces);\n  }\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    contextVariables.push(value);\n    return variableName;\n  }\n  function writePPM(width, height) {\n    const sourceVariable = `${contextName}Variable${contextVariables.length}`;\n    const imageVariable = `imageDatum${imageCount}`;\n    recording.push(`${indent}let ${imageVariable} = [\"P3\\\\n# ${readPixelsFile}.ppm\\\\n\", ${width}, ' ', ${height}, \"\\\\n255\\\\n\"].join(\"\");`);\n    recording.push(`${indent}for (let i = 0; i < ${imageVariable}.length; i += 4) {`);\n    recording.push(`${indent}  ${imageVariable} += ${sourceVariable}[i] + ' ' + ${sourceVariable}[i + 1] + ' ' + ${sourceVariable}[i + 2] + ' ';`);\n    recording.push(`${indent}}`);\n    recording.push(`${indent}if (typeof require !== \"undefined\") {`);\n    recording.push(`${indent}  require('fs').writeFileSync('./${readPixelsFile}.ppm', ${imageVariable});`);\n    recording.push(`${indent}}`);\n    imageCount++;\n  }\n  function addComment(value) {\n    recording.push(`${indent}// ${value}`);\n  }\n  function checkThrowError() {\n    recording.push(`${indent}(() => {\n${indent}const error = ${contextName}.getError();\n${indent}if (error !== ${contextName}.NONE) {\n${indent}  const names = Object.getOwnPropertyNames(gl);\n${indent}  for (let i = 0; i < names.length; i++) {\n${indent}    const name = names[i];\n${indent}    if (${contextName}[name] === error) {\n${indent}      throw new Error('${contextName} threw ' + name);\n${indent}    }\n${indent}  }\n${indent}}\n${indent}})();`);\n  }\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n\n  function getContextVariableName(value) {\n    const i = contextVariables.indexOf(value);\n    if (i !== -1) {\n      return `${contextName}Variable${i}`;\n    }\n    return null;\n  }\n}\n\n/**\n *\n * @param extension\n * @param {IGLExtensionWiretapOptions} options\n * @returns {*}\n */\nfunction glExtensionWiretap(extension, options) {\n  const proxy = new Proxy(extension, { get: listen });\n  const extensionEntityNames = {};\n  const {\n    contextName,\n    contextVariables,\n    getEntity,\n    useTrackablePrimitives,\n    recording,\n    variables,\n    indent,\n    onUnrecognizedArgumentLookup,\n  } = options;\n  return proxy;\n  function listen(obj, property) {\n    if (typeof obj[property] === 'function') {\n      return function() {\n        switch (property) {\n          case 'drawBuffersWEBGL':\n            recording.push(`${indent}${contextName}.drawBuffersWEBGL([${argumentsToString(arguments[0], { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })}]);`);\n            return extension.drawBuffersWEBGL(arguments[0]);\n        }\n        let result = extension[property].apply(extension, arguments);\n        switch (typeof result) {\n          case 'undefined':\n            recording.push(`${indent}${methodCallToString(property, arguments)};`);\n            return;\n          case 'number':\n          case 'boolean':\n            if (useTrackablePrimitives && contextVariables.indexOf(trackablePrimitive(result)) === -1) {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result = trackablePrimitive(result));\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n              contextVariables.push(result);\n            }\n            break;\n          default:\n            if (result === null) {\n              recording.push(`${methodCallToString(property, arguments)};`);\n            } else {\n              recording.push(`${indent}const ${contextName}Variable${contextVariables.length} = ${methodCallToString(property, arguments)};`);\n            }\n            contextVariables.push(result);\n        }\n        return result;\n      };\n    }\n    extensionEntityNames[extension[property]] = property;\n    return extension[property];\n  }\n\n  function getExtensionEntity(value) {\n    if (extensionEntityNames.hasOwnProperty(value)) {\n      return `${contextName}.${extensionEntityNames[value]}`;\n    }\n    return getEntity(value);\n  }\n\n  function methodCallToString(method, args) {\n    return `${contextName}.${method}(${argumentsToString(args, { contextName, contextVariables, getEntity: getExtensionEntity, addVariable, variables, onUnrecognizedArgumentLookup })})`;\n  }\n\n  function addVariable(value, source) {\n    const variableName = `${contextName}Variable${contextVariables.length}`;\n    contextVariables.push(value);\n    recording.push(`${indent}const ${variableName} = ${source};`);\n    return variableName;\n  }\n}\n\nfunction argumentsToString(args, options) {\n  const { variables } = options;\n  return (Array.from(args).map((arg) => {\n    const variableName = getVariableName(arg);\n    if (variableName) {\n      return variableName;\n    }\n    return argumentToString(arg, options);\n  }).join(', '));\n\n  function getVariableName(value) {\n    if (variables) {\n      for (const name in variables) {\n        if (variables[name] === value) {\n          return name;\n        }\n      }\n    }\n    return null;\n  }\n}\n\nfunction argumentToString(arg, options) {\n  const { contextName, contextVariables, getEntity, addVariable, onUnrecognizedArgumentLookup } = options;\n  if (typeof arg === 'undefined') {\n    return 'undefined';\n  }\n  if (arg === null) {\n    return 'null';\n  }\n  const i = contextVariables.indexOf(arg);\n  if (i > -1) {\n    return `${contextName}Variable${i}`;\n  }\n  switch (arg.constructor.name) {\n    case 'String':\n      const hasLines = /\\n/.test(arg);\n      const hasSingleQuotes = /'/.test(arg);\n      const hasDoubleQuotes = /\"/.test(arg);\n      if (hasLines) {\n        return '`' + arg + '`';\n      } else if (hasSingleQuotes && !hasDoubleQuotes) {\n        return '\"' + arg + '\"';\n      } else if (!hasSingleQuotes && hasDoubleQuotes) {\n        return \"'\" + arg + \"'\";\n      } else {\n        return '\\'' + arg + '\\'';\n      }\n    case 'Number': return getEntity(arg);\n    case 'Boolean': return getEntity(arg);\n    case 'Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${Array.from(arg).join(',')})`);\n    case 'Float32Array':\n    case 'Uint8Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n      return addVariable(arg, `new ${arg.constructor.name}(${JSON.stringify(Array.from(arg))})`);\n    default:\n      if (onUnrecognizedArgumentLookup) {\n        const instantiationString = onUnrecognizedArgumentLookup(arg);\n        if (instantiationString) {\n          return instantiationString;\n        }\n      }\n      throw new Error(`unrecognized argument type ${arg.constructor.name}`);\n  }\n}\n\nfunction trackablePrimitive(value) {\n  // wrapped in object, so track-able\n  return new value.constructor(value);\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = { glWiretap, glExtensionWiretap };\n}\n\nif (typeof window !== 'undefined') {\n  glWiretap.glExtensionWiretap = glExtensionWiretap;\n  window.glWiretap = glWiretap;\n}\n","const { glWiretap } = require('gl-wiretap');\nconst { utils } = require('../../utils');\n\nfunction toStringWithoutUtils(fn) {\n  return fn.toString()\n    .replace('=>', '')\n    .replace(/^function /, '')\n    .replace(/utils[.]/g, '/*utils.*/');\n}\n\n/**\n *\n * @param {Kernel} Kernel\n * @param {KernelVariable[]} args\n * @param {Kernel} originKernel\n * @param {string} [setupContextString]\n * @param {string} [destroyContextString]\n * @returns {string}\n */\nfunction glKernelString(Kernel, args, originKernel, setupContextString, destroyContextString) {\n  const postResult = [];\n  const context = glWiretap(originKernel.context, {\n    useTrackablePrimitives: true,\n    onReadPixels: (targetName) => {\n      if (kernel.subKernels) {\n        if (!subKernelsResultVariableSetup) {\n          postResult.push(`    const result = { result: ${getRenderString(targetName, kernel)} };`);\n          subKernelsResultVariableSetup = true;\n        } else {\n          const property = kernel.subKernels[subKernelsResultIndex++].property;\n          postResult.push(`    result${isNaN(property) ? '.' + property : `[${property}]`} = ${getRenderString(targetName, kernel)};`);\n        }\n        if (subKernelsResultIndex === kernel.subKernels.length) {\n          postResult.push('    return result;');\n        }\n        return;\n      }\n      if (targetName) {\n        postResult.push(`    return ${getRenderString(targetName, kernel)};`);\n      } else {\n        postResult.push(`    return null;`);\n      }\n    },\n    onUnrecognizedArgumentLookup: (argument) => {\n      for (let i = 0; i < kernel.kernelConstants.length; i++) {\n        const value = kernel.kernelConstants[i];\n        if (value.type === 'HTMLImageArray') {\n          const constant = kernel.constants[value.name];\n          const variable = `uploadValue_${value.name}[${constant.indexOf(value.uploadValue)}]`;\n          context.insertVariable(variable, kernel.constants);\n          return variable;\n        } else if (value.uploadValue === argument) {\n          const variable = `uploadValue_${value.name}`;\n          context.insertVariable(variable, value);\n          return variable;\n        }\n      }\n    }\n  });\n  let subKernelsResultVariableSetup = false;\n  let subKernelsResultIndex = 0;\n  const {\n    source,\n    canvas,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n    kernelArguments,\n    kernelConstants,\n  } = originKernel;\n  const kernel = new Kernel(source, {\n    canvas,\n    context,\n    checkContext: false,\n    output,\n    pipeline,\n    graphical,\n    loopMaxIterations,\n    constants,\n    optimizeFloatMemory,\n    precision,\n    fixIntegerDivisionAccuracy,\n    functions,\n    nativeFunctions,\n    subKernels,\n    immutable,\n    argumentTypes,\n    constantTypes,\n  });\n  let result = [];\n  context.setIndent(2);\n  kernel.build.apply(kernel, args);\n  result.push(context.toString());\n  context.reset();\n  const upgradedArguments = Array.from(args).map(arg => {\n    switch (typeof arg) {\n      case 'number':\n      case 'boolean':\n        return new arg.constructor(arg);\n    }\n    return arg;\n  });\n  kernel.kernelArguments.forEach((kernelArgument, i) => {\n    switch (kernelArgument.type) {\n      // primitives\n      case 'Integer':\n      case 'Boolean':\n      case 'Number':\n      case 'Float':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, upgradedArguments[i]);\n        break;\n\n        // non-primitives\n      case 'Array':\n      case 'Array(2)':\n      case 'Array(3)':\n      case 'Array(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, upgradedArguments[i]);\n        break;\n      case 'HTMLImage':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, upgradedArguments[i]);\n        break;\n      case 'HTMLImageArray':\n        for (let imageIndex = 0; imageIndex < args[i].length; imageIndex++) {\n          const arg = args[i];\n          context.insertVariable(`uploadValue_${kernelArgument.name}[${imageIndex}]`, arg[imageIndex]);\n        }\n        break;\n      case 'Input':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, kernelArgument.uploadValue);\n        break;\n      case 'MemoryOptimizedNumberTexture':\n      case 'NumberTexture':\n      case 'Array1D(2)':\n      case 'Array1D(3)':\n      case 'Array1D(4)':\n      case 'Array2D(2)':\n      case 'Array2D(3)':\n      case 'Array2D(4)':\n      case 'Array3D(2)':\n      case 'Array3D(3)':\n      case 'Array3D(4)':\n      case 'ArrayTexture(1)':\n      case 'ArrayTexture(2)':\n      case 'ArrayTexture(3)':\n      case 'ArrayTexture(4)':\n        context.insertVariable(`uploadValue_${kernelArgument.name}`, upgradedArguments[i].texture);\n        break;\n      default:\n        throw new Error(`unhandled kernelArgumentType insertion for glWiretap of type ${kernelArgument.type}`);\n    }\n  });\n  result.push('/** start of injected functions **/');\n  result.push(`function ${toStringWithoutUtils(utils.flattenTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten2dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.flatten3dArrayTo)}`);\n  result.push(`function ${toStringWithoutUtils(utils.isArray)}`);\n  if (kernel.renderOutput !== kernel.renderTexture && kernel.formatValues) {\n    result.push(\n      `  const renderOutput = function ${toStringWithoutUtils(kernel.formatValues)};`\n    );\n  }\n  result.push('/** end of injected functions **/');\n  result.push(`  const innerKernel = function (${kernel.kernelArguments.map(kernelArgument => kernelArgument.varName).join(', ')}) {`);\n  context.setIndent(4);\n  kernel.run.apply(kernel, upgradedArguments);\n  if (kernel.renderKernels) {\n    kernel.renderKernels();\n  } else if (kernel.renderOutput) {\n    kernel.renderOutput();\n  }\n  result.push('/** start setup uploads for kernel values **/');\n  kernel.kernelArguments.forEach(kernelArgument => {\n    result.push(kernelArgument.getStringValueHandler());\n  });\n  result.push('/** end setup uploads for kernel values **/');\n  result.push(context.toString());\n  if (kernel.renderOutput === kernel.renderTexture) {\n    context.reset();\n    const results = kernel.renderKernels();\n    const textureName = context.getContextVariableName(kernel.outputTexture);\n    result.push(`    return {\n      result: {\n        texture: ${ textureName },\n        type: '${ results.result.type }',\n        toArray: ${ getToArrayString(results.result, textureName) }\n      },`);\n    const { subKernels, subKernelOutputTextures } = kernel;\n    for (let i = 0; i < subKernels.length; i++) {\n      const texture = subKernelOutputTextures[i];\n      const subKernel = subKernels[i];\n      const subKernelResult = results[subKernel.property];\n      const subKernelTextureName = context.getContextVariableName(texture);\n      result.push(`\n      ${subKernel.property}: {\n        texture: ${ subKernelTextureName },\n        type: '${ subKernelResult.type }',\n        toArray: ${ getToArrayString(subKernelResult, subKernelTextureName) }\n      },`);\n    }\n    result.push(`    };`);\n  }\n  result.push(`    ${destroyContextString ? '\\n' + destroyContextString + '    ': ''}`);\n  result.push(postResult.join('\\n'));\n  result.push('  };');\n  if (kernel.graphical) {\n    result.push(getGetPixelsString(kernel));\n    result.push(`innerKernel.getPixels = getPixels;`);\n  }\n  result.push('  return innerKernel;');\n\n  let constantsUpload = [];\n  kernelConstants.forEach((kernelConstant) => {\n    constantsUpload.push(`${  kernelConstant.getStringValueHandler()}`);\n  });\n  return `function kernel(settings) {\n  const { context, constants } = settings;\n  ${constantsUpload.join('')}\n  ${setupContextString ? setupContextString : ''}\n${result.join('\\n')}\n}`;\n}\n\nfunction getRenderString(targetName, kernel) {\n  const readBackValue = kernel.precision === 'single' ? targetName : `new Float32Array(${targetName}.buffer)`;\n  if (kernel.output[2]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]}, ${kernel.output[2]})`;\n  }\n  if (kernel.output[1]) {\n    return `renderOutput(${readBackValue}, ${kernel.output[0]}, ${kernel.output[1]})`;\n  }\n\n  return `renderOutput(${readBackValue}, ${kernel.output[0]})`;\n}\n\nfunction getGetPixelsString(kernel) {\n  const getPixels = kernel.getPixels.toString();\n  const useFunctionKeyword = !/^function/.test(getPixels);\n  return utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ getPixels }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      }\n      return null;\n    },\n    thisLookup: (property) => {\n      if (property === 'context') {\n        return null;\n      }\n      if (kernel.hasOwnProperty(property)) {\n        return JSON.stringify(kernel[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n}\n\nfunction getToArrayString(kernelResult, textureName) {\n  const toArray = kernelResult.toArray.toString();\n  const useFunctionKeyword = !/^function/.test(toArray);\n  const flattenedFunctions = utils.flattenFunctionToString(`${useFunctionKeyword ? 'function ' : ''}${ toArray }`, {\n    findDependency: (object, name) => {\n      if (object === 'utils') {\n        return `const ${name} = ${utils[name].toString()};`;\n      } else if (object === 'this') {\n        return `${useFunctionKeyword ? 'function ' : ''}${kernelResult[name].toString()}`;\n      } else {\n        throw new Error('unhandled fromObject');\n      }\n    },\n    thisLookup: (property) => {\n      if (property === 'texture') {\n        return textureName;\n      }\n      if (kernelResult.hasOwnProperty(property)) {\n        return JSON.stringify(kernelResult[property]);\n      }\n      throw new Error(`unhandled thisLookup ${ property }`);\n    }\n  });\n  return `() => {\n  ${flattenedFunctions}\n  return toArray();\n  }`;\n}\nmodule.exports = {\n  glKernelString\n};","/**\n * @class KernelValue\n */\nclass KernelValue {\n  /**\n   *\n   * @param {IKernelArgumentSettings} settings\n   */\n  constructor(value, settings) {\n    const {\n      name,\n      kernel,\n      context,\n      checkContext,\n      onRequestContextHandle,\n      onUpdateValueMismatch,\n      origin,\n      strictIntegers,\n      type,\n    } = settings;\n    if (!name) {\n      throw new Error('name not set');\n    }\n    if (!type) {\n      throw new Error('type not set');\n    }\n    if (!origin) {\n      throw new Error('origin not set');\n    }\n    if (origin !== 'user' && origin !== 'constants') {\n      throw new Error(`origin must be \"user\" or \"constants\" value is \"${ origin }\"`);\n    }\n    if (!onRequestContextHandle) {\n      throw new Error('onRequestContextHandle is not set');\n    }\n    this.name = name;\n    this.origin = origin;\n    this.id = `${this.origin}_${name}`;\n    this.varName = origin === 'constants' ? `constants.${name}` : name;\n    this.kernel = kernel;\n    this.strictIntegers = strictIntegers;\n    // handle textures\n    this.type = value.type || type;\n    this.size = value.size || null;\n    this.index = null;\n    this.context = context;\n    this.checkContext = checkContext !== null && checkContext !== undefined ? checkContext : true;\n    this.contextHandle = null;\n    this.onRequestContextHandle = onRequestContextHandle;\n    this.onUpdateValueMismatch = onUpdateValueMismatch;\n  }\n\n  getSource() {\n    throw new Error(`\"getSource\" not defined on ${ this.constructor.name }`);\n  }\n\n  updateValue(value) {\n    throw new Error(`\"updateValue\" not defined on ${ this.constructor.name }`);\n  }\n}\n\nmodule.exports = {\n  KernelValue\n};","const { utils } = require('../../../utils');\nconst { Input } = require('../../../input');\nconst { KernelValue } = require('../../kernel-value');\n\nclass WebGLKernelValue extends KernelValue {\n  /**\n   *\n   * @param {IWebGLKernerlValueSettings} settings\n   */\n  constructor(value, settings) {\n    super(value, settings);\n    this.dimensionsId = null;\n    this.sizeId = null;\n    this.initialValueConstructor = value.constructor;\n    this.onRequestTexture = settings.onRequestTexture;\n    this.onRequestIndex = settings.onRequestIndex;\n    this.uploadValue = null;\n    this.textureSize = null;\n    this.bitRatio = null;\n  }\n\n  requestTexture() {\n    this.texture = this.onRequestTexture();\n    this.setupTexture();\n  }\n\n  setupTexture() {\n    this.contextHandle = this.onRequestContextHandle();\n    this.index = this.onRequestIndex();\n    this.dimensionsId = this.id + 'Dim';\n    this.sizeId = this.id + 'Size';\n  }\n\n  getTransferArrayType(value) {\n    if (Array.isArray(value[0])) {\n      return this.getTransferArrayType(value[0]);\n    }\n    switch (value.constructor) {\n      case Array:\n      case Int32Array:\n      case Int16Array:\n      case Int8Array:\n        return Float32Array;\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Uint16Array:\n      case Uint32Array:\n      case Float32Array:\n      case Float64Array:\n        return value.constructor;\n    }\n    console.warn('Unfamiliar constructor type.  Will go ahead and use, but likley this may result in a transfer of zeros');\n    return value.constructor;\n  }\n  /**\n   * @desc Adds kernel parameters to the Value Texture,\n   * binding it to the context, etc.\n   *\n   * @param {Array|Float32Array|Uint16Array} value - The actual Value supplied to the kernel\n   * @param {Number} length - the expected total length of the output array\n   * @param {Object} [Type]\n   * @returns {Float32Array|Uint16Array|Uint8Array} flattened array to transfer\n   */\n  formatArrayTransfer(value, length, Type) {\n    if (utils.isArray(value[0]) || this.optimizeFloatMemory) {\n      // not already flat\n      const valuesFlat = new Float32Array(length);\n      utils.flattenTo(value, valuesFlat);\n      return valuesFlat;\n    } else {\n      switch (value.constructor) {\n        case Uint8ClampedArray:\n        case Uint8Array:\n        case Int8Array:\n        case Uint16Array:\n        case Int16Array:\n        case Float32Array:\n        case Int32Array: {\n          const valuesFlat = new(Type || value.constructor)(length);\n          utils.flattenTo(value, valuesFlat);\n          return valuesFlat;\n        }\n        default: {\n          const valuesFlat = new Float32Array(length);\n          utils.flattenTo(value, valuesFlat);\n          return valuesFlat;\n        }\n      }\n    }\n  }\n\n  /**\n   * bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n   * @param value\n   * @returns {number}\n   */\n  getBitRatio(value) {\n    if (Array.isArray(value[0])) {\n      return this.getBitRatio(value[0]);\n    } else if (value.constructor === Input) {\n      return this.getBitRatio(value.value);\n    }\n    switch (value.constructor) {\n      case Uint8ClampedArray:\n      case Uint8Array:\n      case Int8Array:\n        return 1;\n      case Uint16Array:\n      case Int16Array:\n        return 2;\n      case Float32Array:\n      case Int32Array:\n      default:\n        return 4;\n    }\n  }\n\n  /**\n   * Used for when we want a string output of our kernel, so we can still input values to the kernel\n   */\n  getStringValueHandler() {\n    throw new Error(`\"getStringValueHandler\" not implemented on ${this.constructor.name}`);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValue\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueBoolean extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const bool ${this.id} = ${value};\\n`;\n    }\n    return `uniform bool ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueBoolean\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueFloat extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      if (Number.isInteger(value)) {\n        return `const float ${this.id} = ${value}.0;\\n`;\n      }\n      return `const float ${this.id} = ${value};\\n`;\n    }\n    return `uniform float ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1f(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueFloat\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueInteger extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueInteger\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueHTMLImage extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    const { width, height } = value;\n    this.dimensions = [width, height, 1];\n    this.requestTexture();\n    this.textureSize = [width, height];\n    this.uploadValue = value;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputImage) {\n    if (inputImage.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue = inputImage);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueHTMLImage\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('./html-image');\n\nclass WebGLKernelValueDynamicHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    const { width, height } = value;\n    this.dimensions = [width, height, 1];\n    this.textureSize = [width, height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicHTMLImage\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleInput extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}.value, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('./single-input');\n\nclass WebGLKernelValueDynamicSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueUnsignedInput extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = this.getBitRatio(value);\n    const [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.TranserArrayType = this.getTransferArrayType(value.value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}.value, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    if (input.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('./unsigned-input');\n\nclass WebGLKernelValueDynamicUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    const Type = this.getTransferArrayType(value.value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueMemoryOptimizedNumberTexture extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.setupTexture();\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.uploadValue = value.texture;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type }) must be from same context`);\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueMemoryOptimizedNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./memory-optimized-number-texture');\n\nclass WebGLKernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    this.dimensions = inputTexture.dimensions;\n    this.textureSize = inputTexture.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(inputTexture);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicMemoryOptimizedNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueNumberTexture extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.setupTexture();\n    const { size: textureSize, dimensions } = value;\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = dimensions;\n    this.textureSize = textureSize;\n    this.uploadValue = value.texture;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName}.texture;\\n`;\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(inputTexture) {\n    if (inputTexture.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    if (this.checkContext && inputTexture.context !== this.context) {\n      throw new Error(`Value ${this.name} (${this.type}) must be from same context`);\n    }\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.uploadValue = inputTexture.texture);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('./number-texture');\n\nclass WebGLKernelValueDynamicNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = value.dimensions;\n    this.textureSize = value.size;\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('./single-array');\n\nclass WebGLKernelValueDynamicSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray1DI extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], 1, 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten2dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray1DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('./single-array1d-i');\n\nclass WebGLKernelValueDynamicSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray1DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray2DI extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], 1]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten3dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('./single-array2d-i');\n\nclass WebGLKernelValueDynamicSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray2DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray3DI extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = 4;\n    this.setShape(value);\n  }\n\n  setShape(value) {\n    const valueDimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(valueDimensions, this.bitRatio);\n    this.dimensions = new Int32Array([valueDimensions[1], valueDimensions[2], valueDimensions[3]]);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const uploadValue_${this.name} = new Float32Array(${this.uploadArrayLength})`,\n      `flattenTo(${this.varName}, uploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flatten4dArrayTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('./single-array3d-i');\n\nclass WebGLKernelValueDynamicSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicSingleArray3DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray2 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec2 ${this.id} = vec2(${value[0]},${value[1]});\\n`;\n    }\n    return `uniform vec2 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform2fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray2\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray3 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec3 ${this.id} = vec3(${value[0]},${value[1]},${value[2]});\\n`;\n    }\n    return `uniform vec3 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform3fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray3\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueSingleArray4 extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.uploadValue = value;\n  }\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const vec4 ${this.id} = vec4(${value[0]},${value[1]},${value[2]},${value[3]});\\n`;\n    }\n    return `uniform vec4 ${this.id};\\n`;\n  }\n\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform4fv(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueSingleArray4\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('./index');\n\nclass WebGLKernelValueUnsignedArray extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.bitRatio = this.getBitRatio(value);\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    this.TranserArrayType = this.getTransferArrayType(value);\n    this.preUploadValue = new this.TranserArrayType(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n  }\n\n  getStringValueHandler() {\n    return utils.linesToString([\n      `const preUploadValue_${this.name} = new ${this.TranserArrayType.name}(${this.uploadArrayLength})`,\n      `const uploadValue_${this.name} = new Uint8Array(preUploadValue_${this.name}.buffer)`,\n      `flattenTo(${this.varName}, preUploadValue_${this.name})`,\n    ]);\n  }\n\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.preUploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueUnsignedArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('./unsigned-array');\n\nclass WebGLKernelValueDynamicUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedPackedTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * (4 / this.bitRatio);\n    const Type = this.getTransferArrayType(value);\n    this.preUploadValue = new Type(this.uploadArrayLength);\n    this.uploadValue = new Uint8Array(this.preUploadValue.buffer);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGLKernelValueDynamicUnsignedArray\n};","const { WebGLKernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGLKernelValueFloat } = require('./kernel-value/float');\nconst { WebGLKernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGLKernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGLKernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGLKernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGLKernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGLKernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGLKernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGLKernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGLKernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGLKernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGLKernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGLKernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGLKernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGLKernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGLKernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGLKernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGLKernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGLKernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGLKernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGLKernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGLKernelValueUnsignedInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Integer': WebGLKernelValueInteger,\n      'Float': WebGLKernelValueFloat,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueDynamicSingleArray3DI,\n      'Array': WebGLKernelValueDynamicSingleArray,\n      'Input': WebGLKernelValueDynamicSingleInput,\n      'NumberTexture': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueDynamicHTMLImage,\n      'HTMLImageArray': false,\n    },\n    static: {\n      'Boolean': WebGLKernelValueBoolean,\n      'Float': WebGLKernelValueFloat,\n      'Integer': WebGLKernelValueInteger,\n      'Array': WebGLKernelValueSingleArray,\n      'Array(2)': WebGLKernelValueSingleArray2,\n      'Array(3)': WebGLKernelValueSingleArray3,\n      'Array(4)': WebGLKernelValueSingleArray4,\n      'Array1D(2)': WebGLKernelValueSingleArray1DI,\n      'Array1D(3)': WebGLKernelValueSingleArray1DI,\n      'Array1D(4)': WebGLKernelValueSingleArray1DI,\n      'Array2D(2)': WebGLKernelValueSingleArray2DI,\n      'Array2D(3)': WebGLKernelValueSingleArray2DI,\n      'Array2D(4)': WebGLKernelValueSingleArray2DI,\n      'Array3D(2)': WebGLKernelValueSingleArray3DI,\n      'Array3D(3)': WebGLKernelValueSingleArray3DI,\n      'Array3D(4)': WebGLKernelValueSingleArray3DI,\n      'Input': WebGLKernelValueSingleInput,\n      'NumberTexture': WebGLKernelValueNumberTexture,\n      'ArrayTexture(1)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(2)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(3)': WebGLKernelValueNumberTexture,\n      'ArrayTexture(4)': WebGLKernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGLKernelValueMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGLKernelValueHTMLImage,\n      'HTMLImageArray': false,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType\n};","const { GLKernel } = require('../gl/kernel');\nconst { FunctionBuilder } = require('../function-builder');\nconst { WebGLFunctionNode } = require('./function-node');\nconst { utils } = require('../../utils');\nconst triangleNoise = require('../../plugins/triangle-noise');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { glKernelString } = require('../gl/kernel-string');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nconst plugins = [triangleNoise];\nconst canvases = [];\nconst maxTexSizes = {};\n\n\n/**\n * @desc Kernel Implementation for WebGL.\n * <p>This builds the shaders and runs them on the GPU,\n * the outputs the result back as float(enabled by default) and Texture.</p>\n *\n * @prop {Object} textureCache - webGl Texture cache\n * @prop {Object} programUniformLocationCache - Location of program variables in memory\n * @prop {Object} framebuffer - Webgl frameBuffer\n * @prop {Object} buffer - WebGL buffer\n * @prop {Object} program - The webGl Program\n * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n * @prop {Boolean} pipeline - Set output type to FAST mode (GPU to GPU via Textures), instead of float\n * @prop {String} endianness - Endian information like Little-endian, Big-endian.\n * @prop {Array} argumentTypes - Types of parameters sent to the Kernel\n * @prop {String} compiledFragmentShader - Compiled fragment shader string\n * @prop {String} compiledVertexShader - Compiled Vertical shader string\n * @extends GLKernel\n */\nclass WebGLKernel extends GLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl') || testCanvas.getContext('experimental-webgl');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      OES_texture_float: testContext.getExtension('OES_texture_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    if (typeof WebGLRenderingContext !== 'undefined') {\n      return context instanceof WebGLRenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  /**\n   *\n   * @param {String} source\n   * @param {IKernelSettings} settings\n   */\n  constructor(source, settings) {\n    super(source, settings);\n    this.program = null;\n    this.pipeline = settings.pipeline;\n    this.endianness = utils.systemEndianness();\n    this.extensions = {};\n    this.subKernelOutputTextures = null;\n    this.kernelArguments = null;\n    this.argumentTextureCount = 0;\n    this.constantTextureCount = 0;\n    this.compiledFragmentShader = null;\n    this.compiledVertexShader = null;\n    this.fragShader = null;\n    this.vertShader = null;\n    this.drawBuffersMap = null;\n    this.outputTexture = null;\n\n    /**\n     *\n     * @type {Int32Array|null}\n     */\n    this.maxTexSize = null;\n    this.switchingKernels = false;\n    this.onRequestSwitchKernel = null;\n\n    this.mergeSettings(source.settings || settings);\n\n    /**\n     * The thread dimensions, x, y and z\n     * @type {Array|null}\n     */\n    this.threadDim = null;\n    this.framebuffer = null;\n    this.buffer = null;\n    this.textureCache = {};\n    this.programUniformLocationCache = {};\n    this.uniform1fCache = {};\n    this.uniform1iCache = {};\n    this.uniform2fCache = {};\n    this.uniform2fvCache = {};\n    this.uniform2ivCache = {};\n    this.uniform3fvCache = {};\n    this.uniform3ivCache = {};\n    this.uniform4fvCache = {};\n    this.uniform4ivCache = {};\n  }\n\n  initCanvas() {\n    if (typeof document !== 'undefined') {\n      const canvas = document.createElement('canvas');\n      // Default width and height, to fix webgl issue in safari\n      canvas.width = 2;\n      canvas.height = 2;\n      return canvas;\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      return new OffscreenCanvas(0, 0);\n    }\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    return this.canvas.getContext('webgl', settings) || this.canvas.getContext('experimental-webgl', settings);\n  }\n\n  initPlugins(settings) {\n    // default plugins\n    const pluginsToUse = [];\n    const { source } = this;\n    if (typeof source === 'string') {\n      for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        if (source.match(plugin.functionMatch)) {\n          pluginsToUse.push(plugin);\n        }\n      }\n    } else if (typeof source === 'object') {\n      // `source` is from object, json\n      if (settings.pluginNames) { //TODO: in context of JSON support, pluginNames may not exist here\n        for (let i = 0; i < plugins.length; i++) {\n          const plugin = plugins[i];\n          const usePlugin = settings.pluginNames.some(pluginName => pluginName === plugin.name);\n          if (usePlugin) {\n            pluginsToUse.push(plugin);\n          }\n        }\n      }\n    }\n    return pluginsToUse;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n      WEBGL_color_buffer_float: this.context.getExtension('WEBGL_color_buffer_float'),\n    };\n  }\n\n  /**\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\n   * @param {IArguments} args\n   */\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const { features } = this.constructor;\n    if (this.optimizeFloatMemory === true && !features.isTextureFloat) {\n      throw new Error('Float textures are not supported');\n    } else if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Single precision not supported');\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.subKernels && this.subKernels.length > 0 && !this.extensions.WEBGL_draw_buffers) {\n      throw new Error('could not instantiate draw buffers extension');\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      if (argType === 'Array') {\n        this.output = utils.getDimensions(argType);\n      } else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n        this.output = args[0].output;\n      } else {\n        throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'precision') {\n        this.precision = 'unsigned';\n        console.warn('Cannot use graphical mode and single precision at the same time');\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n  }\n\n  updateMaxTexSize() {\n    const { texSize, canvas } = this;\n    if (this.maxTexSize === null) {\n      let canvasIndex = canvases.indexOf(canvas);\n      if (canvasIndex === -1) {\n        canvasIndex = canvases.length;\n        canvases.push(canvas);\n        maxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n      }\n      this.maxTexSize = maxTexSizes[canvasIndex];\n    }\n    if (this.maxTexSize[0] < texSize[0]) {\n      this.maxTexSize[0] = texSize[0];\n    }\n    if (this.maxTexSize[1] < texSize[1]) {\n      this.maxTexSize[1] = texSize[1];\n    }\n  }\n\n  // TODO: move channel checks to new place\n  _oldtranslateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n\n    // need this line to automatically get returnType\n    const translatedSource = functionBuilder.getPrototypeString('kernel');\n\n    if (!this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    let requiredChannels = 0;\n    const returnTypes = functionBuilder.getReturnTypes();\n    for (let i = 0; i < returnTypes.length; i++) {\n      switch (returnTypes[i]) {\n        case 'Float':\n        case 'Number':\n        case 'Integer':\n          requiredChannels++;\n          break;\n        case 'Array(2)':\n          requiredChannels += 2;\n          break;\n        case 'Array(3)':\n          requiredChannels += 3;\n          break;\n        case 'Array(4)':\n          requiredChannels += 4;\n          break;\n      }\n    }\n\n    if (features && requiredChannels > features.channelCount) {\n      throw new Error('Too many channels!');\n    }\n\n    return this.translatedSource = translatedSource;\n  }\n\n  setupArguments(args) {\n    this.kernelArguments = [];\n    this.argumentTextureCount = 0;\n    const needsArgumentTypes = this.argumentTypes === null;\n    // TODO: remove\n    if (needsArgumentTypes) {\n      this.argumentTypes = [];\n    }\n    this.argumentSizes = [];\n    this.argumentBitRatios = [];\n    // TODO: end remove\n\n    if (args.length < this.argumentNames.length) {\n      throw new Error('not enough arguments for kernel');\n    } else if (args.length > this.argumentNames.length) {\n      throw new Error('too many arguments for kernel');\n    }\n\n    const { context: gl } = this;\n    let textureIndexes = 0;\n    for (let index = 0; index < args.length; index++) {\n      const value = args[index];\n      const name = this.argumentNames[index];\n      let type;\n      if (needsArgumentTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.argumentTypes.push(type);\n      } else {\n        type = this.argumentTypes[index];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, this.dynamicArguments ? 'dynamic' : 'static', this.precision, args[index]);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelArgument = new KernelValue(value, {\n        name,\n        type,\n        origin: 'user',\n        context: gl,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.context.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onUpdateValueMismatch: () => {\n          this.switchingKernels = true;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount++;\n        }\n      });\n      this.kernelArguments.push(kernelArgument);\n      this.argumentSizes.push(kernelArgument.textureSize);\n      this.argumentBitRatios[index] = kernelArgument.bitRatio;\n    }\n  }\n\n  setupConstants(args) {\n    const { context: gl } = this;\n    this.kernelConstants = [];\n    let needsConstantTypes = this.constantTypes === null;\n    if (needsConstantTypes) {\n      this.constantTypes = {};\n    }\n    this.constantBitRatios = {};\n    let textureIndexes = 0;\n    for (const name in this.constants) {\n      const value = this.constants[name];\n      let type;\n      if (needsConstantTypes) {\n        type = utils.getVariableType(value, this.strictIntegers);\n        this.constantTypes[name] = type;\n      } else {\n        type = this.constantTypes[name];\n      }\n      const KernelValue = this.constructor.lookupKernelValueType(type, 'static', this.precision, value);\n      if (KernelValue === null) {\n        return this.requestFallback(args);\n      }\n      const kernelValue = new KernelValue(value, {\n        name,\n        type,\n        origin: 'constants',\n        context: this.context,\n        checkContext: this.checkContext,\n        kernel: this,\n        strictIntegers: this.strictIntegers,\n        onRequestTexture: () => {\n          return this.context.createTexture();\n        },\n        onRequestIndex: () => {\n          return textureIndexes++;\n        },\n        onRequestContextHandle: () => {\n          return gl.TEXTURE0 + this.constantTextureCount++;\n        }\n      });\n      this.constantBitRatios[name] = kernelValue.bitRatio;\n      this.kernelConstants.push(kernelValue);\n    }\n  }\n\n  build() {\n    this.initExtensions();\n    this.validateSettings(arguments);\n    this.setupConstants(arguments);\n    if (this.fallbackRequested) return;\n    this.setupArguments(arguments);\n    if (this.fallbackRequested) return;\n    this.updateMaxTexSize();\n    this.translateSource();\n    const failureResult = this.pickRenderStrategy(arguments);\n    if (failureResult) {\n      return failureResult;\n    }\n    const { texSize, context: gl, canvas } = this;\n    gl.enable(gl.SCISSOR_TEST);\n    if (this.pipeline && this.precision === 'single') {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    } else {\n      gl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n      canvas.width = this.maxTexSize[0];\n      canvas.height = this.maxTexSize[1];\n    }\n    const threadDim = this.threadDim = Array.from(this.output);\n    while (threadDim.length < 3) {\n      threadDim.push(1);\n    }\n\n    const compiledVertexShader = this.getVertexShader(arguments);\n    const vertShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertShader, compiledVertexShader);\n    gl.compileShader(vertShader);\n    this.vertShader = vertShader;\n\n    const compiledFragmentShader = this.getFragmentShader(arguments);\n    const fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragShader, compiledFragmentShader);\n    gl.compileShader(fragShader);\n    this.fragShader = fragShader;\n\n    if (this.debug) {\n      console.log('GLSL Shader Output:');\n      console.log(compiledFragmentShader);\n    }\n\n    if (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling vertex shader: ' + gl.getShaderInfoLog(vertShader));\n    }\n    if (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n      throw new Error('Error compiling fragment shader: ' + gl.getShaderInfoLog(fragShader));\n    }\n\n    const program = this.program = gl.createProgram();\n    gl.attachShader(program, vertShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    this.framebuffer = gl.createFramebuffer();\n    this.framebuffer.width = texSize[0];\n    this.framebuffer.height = texSize[1];\n\n    const vertices = new Float32Array([-1, -1,\n      1, -1, -1, 1,\n      1, 1\n    ]);\n    const texCoords = new Float32Array([\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1\n    ]);\n\n    const texCoordOffset = vertices.byteLength;\n\n    let buffer = this.buffer;\n    if (!buffer) {\n      buffer = this.buffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n    } else {\n      gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    }\n\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n    const aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n    gl.enableVertexAttribArray(aPosLoc);\n    gl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, false, 0, 0);\n    const aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n    gl.enableVertexAttribArray(aTexCoordLoc);\n    gl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, false, 0, texCoordOffset);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n    let i = 0;\n    gl.useProgram(this.program);\n    for (let p in this.constants) {\n      this.kernelConstants[i++].updateValue(this.constants[p]);\n    }\n\n    if (!this.immutable) {\n      this._setupOutputTexture();\n      if (\n        this.subKernels !== null &&\n        this.subKernels.length > 0\n      ) {\n        this._setupSubOutputTextures();\n      }\n    }\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGLFunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments } = this;\n    const texSize = this.texSize;\n    const gl = this.context;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', this.threadDim);\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    this.switchingKernels = false;\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (!this.outputTexture || this.immutable) {\n          this._setupOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return new this.TextureConstructor({\n          texture: this.outputTexture,\n          size: texSize,\n          dimensions: this.threadDim,\n          output: this.output,\n          context: this.context,\n        });\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._setupOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._setupSubOutputTextures();\n      }\n      this.extensions.WEBGL_draw_buffers.drawBuffersWEBGL(this.drawBuffersMap);\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  /**\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n   * @returns {Object} Output Texture Cache\n   */\n  getOutputTexture() {\n    return this.outputTexture;\n  }\n\n  /**\n   * @desc Setup and replace output texture\n   */\n  _setupOutputTexture() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    const texture = this.outputTexture = this.context.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    // if (this.precision === 'single') {\n    //   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n    // } else {\n    //   gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    // }\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        // TODO: investigate if webgl1 can handle gl.RED usage in gl.texImage2D, otherwise, simplify the below\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n            } else {\n              gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n            }\n            break;\n          case 'Array(2)':\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n            break;\n          case 'Array(3)':\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n            break;\n          case 'Array(4)':\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n            break;\n          default:\n            if (!this.graphical) {\n              throw new Error('Unhandled return type');\n            }\n        }\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      }\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  }\n\n  /**\n   * @desc Setup and replace sub-output textures\n   */\n  _setupSubOutputTextures() {\n    const gl = this.context;\n    const texSize = this.texSize;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.subKernelOutputTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.context.createTexture();\n      this.subKernelOutputTextures.push(texture);\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n    }\n  }\n\n  /**\n   * @desc This uses *getTextureCache** to get the Texture Cache of the argument supplied\n   * @param {String} name - Name of the argument\n   */\n  getArgumentTexture(name) {\n    return this.getTextureCache(`ARGUMENT_${name}`);\n  }\n\n  /**\n   * @desc Returns the Texture Cache of the supplied parameter (can be kernel, sub-kernel or argument)\n   * @param {String} name - Name of the subkernel, argument, or kernel.\n   * @returns {Object} Texture cache\n   */\n  getTextureCache(name) {\n    if (this.textureCache.hasOwnProperty(name)) {\n      return this.textureCache[name];\n    }\n    return this.textureCache[name] = this.context.createTexture();\n  }\n\n  /**\n   * @desc removes a texture from the kernel's cache\n   * @param {String} name - Name of texture\n   */\n  detachTextureCache(name) {\n    delete this.textureCache[name];\n  }\n\n  setUniform1f(name, value) {\n    if (this.uniform1fCache.hasOwnProperty(name)) {\n      const cache = this.uniform1fCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1fCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1f(loc, value);\n  }\n\n  setUniform1i(name, value) {\n    if (this.uniform1iCache.hasOwnProperty(name)) {\n      const cache = this.uniform1iCache[name];\n      if (value === cache) {\n        return;\n      }\n    }\n    this.uniform1iCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform1i(loc, value);\n  }\n\n  setUniform2f(name, value1, value2) {\n    if (this.uniform2fCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fCache[name];\n      if (\n        value1 === cache[0] &&\n        value2 === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fCache[name] = [value1, value2];\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2f(loc, value1, value2);\n  }\n\n  setUniform2fv(name, value) {\n    if (this.uniform2fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform2fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2fv(loc, value);\n  }\n\n  setUniform2iv(name, value) {\n    if (this.uniform2ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform2ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1]\n      ) {\n        return;\n      }\n    }\n    this.uniform2ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform2iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform3iv(name, value) {\n    if (this.uniform3ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform3ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3iv(loc, value);\n  }\n\n  setUniform3fv(name, value) {\n    if (this.uniform3fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform3fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2]\n      ) {\n        return;\n      }\n    }\n    this.uniform3fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform3fv(loc, value);\n  }\n\n  setUniform4iv(name, value) {\n    if (this.uniform4ivCache.hasOwnProperty(name)) {\n      const cache = this.uniform4ivCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4ivCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4iv(loc, value);\n  }\n\n  setUniform4fv(name, value) {\n    if (this.uniform4fvCache.hasOwnProperty(name)) {\n      const cache = this.uniform4fvCache[name];\n      if (\n        value[0] === cache[0] &&\n        value[1] === cache[1] &&\n        value[2] === cache[2] &&\n        value[3] === cache[3]\n      ) {\n        return;\n      }\n    }\n    this.uniform4fvCache[name] = value;\n    const loc = this.getUniformLocation(name);\n    this.context.uniform4fv(loc, value);\n  }\n\n  /**\n   * @desc Return WebGlUniformLocation for various variables\n   * related to webGl program, such as user-defined variables,\n   * as well as, dimension sizes, etc.\n   */\n  getUniformLocation(name) {\n    if (this.programUniformLocationCache.hasOwnProperty(name)) {\n      return this.programUniformLocationCache[name];\n    }\n    return this.programUniformLocationCache[name] = this.context.getUniformLocation(this.program, name);\n  }\n\n  /**\n   * @desc Generate Shader artifacts for the kernel program.\n   * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\n   */\n  _getFragShaderArtifactMap(args) {\n    return {\n      HEADER: this._getHeaderString(),\n      LOOP_MAX: this._getLoopMaxString(),\n      PLUGINS: this._getPluginsString(),\n      CONSTANTS: this._getConstantsString(),\n      DECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n      ENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n      DIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n      MAIN_CONSTANTS: this._getMainConstantsString(),\n      MAIN_ARGUMENTS: this._getMainArgumentsString(args),\n      KERNEL: this.getKernelString(),\n      MAIN_RESULT: this.getMainResultString()\n    };\n  }\n\n  /**\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   */\n  _getHeaderString() {\n    return (\n      this.subKernels !== null ?\n      '#extension GL_EXT_draw_buffers : require\\n' :\n      ''\n    );\n  }\n\n  /**\n   * @desc Get the maximum loop size String.\n   * @returns {String} result\n   */\n  _getLoopMaxString() {\n    return (\n      this.loopMaxIterations ?\n      ` ${parseInt(this.loopMaxIterations)};\\n` :\n      ' 1000;\\n'\n    );\n  }\n\n  _getPluginsString() {\n    if (!this.plugins) return '\\n';\n    return this.plugins.map(plugin => plugin.source && this.source.match(plugin.functionMatch) ? plugin.source : '').join('\\n');\n  }\n\n  /**\n   * @desc Generate transpiled glsl Strings for constant parameters sent to a kernel\n   * @returns {String} result\n   */\n  _getConstantsString() {\n    const result = [];\n    const { threadDim, texSize } = this;\n    if (this.dynamicOutput) {\n      result.push(\n        'uniform ivec3 uOutputDim',\n        'uniform ivec2 uTexSize'\n      );\n    } else {\n      result.push(\n        `ivec3 uOutputDim = ivec3(${threadDim[0]}, ${threadDim[1]}, ${threadDim[2]})`,\n        `ivec2 uTexSize = ivec2(${texSize[0]}, ${texSize[1]})`\n      );\n    }\n    return utils.linesToString(result);\n  }\n\n  /**\n   * @desc Get texture coordinate string for the program\n   * @returns {String} result\n   */\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'varying vec2 vTexCoord;\\n';\n    } else {\n      return 'out vec2 vTexCoord;\\n';\n    }\n  }\n\n  /**\n   * @desc Get Decode32 endianness string for little-endian and big-endian\n   * @returns {String} result\n   */\n  _getDecode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  /**\n   * @desc Get Encode32 endianness string for little-endian and big-endian\n   * @returns {String} result\n   */\n  _getEncode32EndiannessString() {\n    return (\n      this.endianness === 'LE' ?\n      '' :\n      '  texel.rgba = texel.abgr;\\n'\n    );\n  }\n\n  /**\n   * @desc if fixIntegerDivisionAccuracy provide method to replace /\n   * @returns {String} result\n   */\n  _getDivideWithIntegerCheckString() {\n    return this.fixIntegerDivisionAccuracy ?\n      `float div_with_int_check(float x, float y) {\n  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\n    return float(int(x)/int(y));\n  }\n  return x / y;\n}` :\n      '';\n  }\n\n  /**\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {String} result\n   */\n  _getMainArgumentsString(args) {\n    const results = [];\n    const { argumentNames } = this;\n    for (let i = 0; i < argumentNames.length; i++) {\n      results.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return results.join('');\n  }\n\n  _getMainConstantsString() {\n    const result = [];\n    const { constants } = this;\n    if (constants) {\n      let i = 0;\n      for (const name in constants) {\n        result.push(this.kernelConstants[i++].getSource(this.constants[name]));\n      }\n    }\n    return result.join('');\n  }\n\n  /**\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   * @returns {String} result\n   */\n  getKernelString() {\n    let kernelResultDeclaration;\n    switch (this.returnType) {\n      case 'Array(2)':\n        kernelResultDeclaration = 'vec2 kernelResult';\n        break;\n      case 'Array(3)':\n        kernelResultDeclaration = 'vec3 kernelResult';\n        break;\n      case 'Array(4)':\n        kernelResultDeclaration = 'vec4 kernelResult';\n        break;\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        kernelResultDeclaration = 'float kernelResult';\n        break;\n      default:\n        if (this.graphical) {\n          kernelResultDeclaration = 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n\n    const result = [];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        kernelResultDeclaration\n      );\n      switch (this.returnType) {\n        case 'Number':\n        case 'Float':\n        case 'Integer':\n          for (let i = 0; i < subKernels.length; i++) {\n            const subKernel = subKernels[i];\n            result.push(\n              subKernel.returnType === 'Integer' ?\n              `int subKernelResult_${ subKernel.name } = 0` :\n              `float subKernelResult_${ subKernel.name } = 0.0`\n            );\n          }\n          break;\n        case 'Array(2)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec2 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(3)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec3 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n        case 'Array(4)':\n          for (let i = 0; i < subKernels.length; i++) {\n            result.push(\n              `vec4 subKernelResult_${ subKernels[i].name }`\n            );\n          }\n          break;\n      }\n    } else {\n      result.push(\n        kernelResultDeclaration\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragColor = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  /**\n   * @return {String}\n   */\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  /**\n   * @return {String}\n   */\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}] = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  gl_FragData[0].${channel} = kernelResult`,\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = float(subKernelResult_${this.subKernels[i].name})`,\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}].${channel} = subKernelResult_${this.subKernels[i].name}`,\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  gl_FragData[${i + 1}][0] = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0][0] = kernelResult[0]',\n      '  gl_FragData[0][1] = kernelResult[1]',\n      '  gl_FragData[0][2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n        `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n        `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  gl_FragData[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    switch (this.returnType) {\n      case 'Number':\n      case 'Float':\n      case 'Integer':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          const subKernel = this.subKernels[i];\n          if (subKernel.returnType === 'Integer') {\n            result.push(\n              `  gl_FragData[${i + 1}] = float(subKernelResult_${this.subKernels[i].name})`,\n            );\n          } else {\n            result.push(\n              `  gl_FragData[${i + 1}] = subKernelResult_${this.subKernels[i].name}`,\n            );\n          }\n        }\n        break;\n      case 'Array(2)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n          );\n        }\n        break;\n      case 'Array(3)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n          );\n        }\n        break;\n      case 'Array(4)':\n        for (let i = 0; i < this.subKernels.length; ++i) {\n          result.push(\n            `  gl_FragData[${i + 1}][0] = subKernelResult_${this.subKernels[i].name}[0]`,\n            `  gl_FragData[${i + 1}][1] = subKernelResult_${this.subKernels[i].name}[1]`,\n            `  gl_FragData[${i + 1}][2] = subKernelResult_${this.subKernels[i].name}[2]`,\n            `  gl_FragData[${i + 1}][3] = subKernelResult_${this.subKernels[i].name}[3]`,\n          );\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  /**\n   * @param {String} src - Shader string\n   * @param {Object} map - Variables/Constants associated with shader\n   */\n  replaceArtifacts(src, map) {\n    return src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z])*)__;\\n/g, (match, artifact) => {\n      if (map.hasOwnProperty(artifact)) {\n        return map[artifact];\n      }\n      throw `unhandled artifact ${artifact}`;\n    });\n  }\n\n  /**\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {string} Fragment Shader string\n   */\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  /**\n   * @desc Get the vertical shader String\n   * @param {Array|IArguments} args - The actual parameters sent to the Kernel\n   * @returns {string} Vertical Shader string\n   */\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.constructor.vertexShader;\n  }\n\n  /**\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   */\n  toString() {\n    const setupContextString = utils.linesToString([\n      `const gl = context`,\n    ]);\n    return glKernelString(this.constructor, arguments, this, setupContextString);\n  }\n\n  destroy(removeCanvasReferences) {\n    if (this.outputTexture) {\n      this.context.deleteTexture(this.outputTexture);\n    }\n    if (this.buffer) {\n      this.context.deleteBuffer(this.buffer);\n    }\n    if (this.framebuffer) {\n      this.context.deleteFramebuffer(this.framebuffer);\n    }\n    if (this.vertShader) {\n      this.context.deleteShader(this.vertShader);\n    }\n    if (this.fragShader) {\n      this.context.deleteShader(this.fragShader);\n    }\n    if (this.program) {\n      this.context.deleteProgram(this.program);\n    }\n\n    const keys = Object.keys(this.textureCache);\n\n    for (let i = 0; i < keys.length; i++) {\n      const name = keys[i];\n      this.context.deleteTexture(this.textureCache[name]);\n    }\n\n    if (this.subKernelOutputTextures) {\n      for (let i = 0; i < this.subKernelOutputTextures.length; i++) {\n        this.context.deleteTexture(this.subKernelOutputTextures[i]);\n      }\n    }\n    if (removeCanvasReferences) {\n      const idx = canvases.indexOf(this.canvas);\n      if (idx >= 0) {\n        canvases[idx] = null;\n        maxTexSizes[idx] = null;\n      }\n    }\n    this.destroyExtensions();\n    delete this.context;\n    delete this.canvas;\n  }\n\n  destroyExtensions() {\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGLFunctionNode).toJSON();\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGLKernel\n};","const getContext = require('gl');\nconst { WebGLKernel } = require('../web-gl/kernel');\nconst { glKernelString } = require('../gl/kernel-string');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\nlet features = null;\n\nclass HeadlessGLKernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) return isSupported;\n    this.setupFeatureChecks();\n    isSupported = testContext !== null;\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    testCanvas = null;\n    testExtensions = null;\n    if (typeof getContext !== 'function') return;\n    try { // just in case, edge cases\n      testContext = getContext(2, 2, {\n        preserveDrawingBuffer: true\n      });\n      if (!testContext || !testContext.getExtension) return;\n      testExtensions = {\n        STACKGL_resize_drawingbuffer: testContext.getExtension('STACKGL_resize_drawingbuffer'),\n        STACKGL_destroy_context: testContext.getExtension('STACKGL_destroy_context'),\n        OES_texture_float: testContext.getExtension('OES_texture_float'),\n        OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n        OES_element_index_uint: testContext.getExtension('OES_element_index_uint'),\n        WEBGL_draw_buffers: testContext.getExtension('WEBGL_draw_buffers'),\n      };\n      features = this.getFeatures();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  static isContextMatch(context) {\n    try {\n      return context.getParameter(context.RENDERER) === 'ANGLE';\n    } catch (e) {\n      return false;\n    }\n  }\n\n  static getFeatures() {\n    const isDrawBuffers = this.getIsDrawBuffers();\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      isTextureFloat: this.getIsTextureFloat(),\n      isDrawBuffers,\n      kernelMap: isDrawBuffers,\n      channelCount: this.getChannelCount(),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return Boolean(testExtensions.OES_texture_float);\n  }\n\n  static getIsDrawBuffers() {\n    return Boolean(testExtensions.WEBGL_draw_buffers);\n  }\n\n  static getChannelCount() {\n    return testExtensions.WEBGL_draw_buffers ?\n      testContext.getParameter(testExtensions.WEBGL_draw_buffers.MAX_DRAW_BUFFERS_WEBGL) :\n      1;\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  static get features() {\n    return features;\n  }\n\n  initCanvas() {\n    return {};\n  }\n\n  initContext() {\n    const context = getContext(2, 2, {\n      preserveDrawingBuffer: true\n    });\n    return context;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      STACKGL_resize_drawingbuffer: this.context.getExtension('STACKGL_resize_drawingbuffer'),\n      STACKGL_destroy_context: this.context.getExtension('STACKGL_destroy_context'),\n      OES_texture_float: this.context.getExtension('OES_texture_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n      OES_element_index_uint: this.context.getExtension('OES_element_index_uint'),\n      WEBGL_draw_buffers: this.context.getExtension('WEBGL_draw_buffers'),\n    };\n  }\n\n  build() {\n    super.build.apply(this, arguments);\n    if (!this.fallbackRequested) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n\n  destroyExtensions() {\n    this.extensions.STACKGL_resize_drawingbuffer = null;\n    this.extensions.STACKGL_destroy_context = null;\n    this.extensions.OES_texture_float = null;\n    this.extensions.OES_texture_float_linear = null;\n    this.extensions.OES_element_index_uint = null;\n    this.extensions.WEBGL_draw_buffers = null;\n  }\n\n  static destroyContext(context) {\n    const extension = context.getExtension('STACKGL_destroy_context');\n    if (extension && extension.destroy) {\n      extension.destroy();\n    }\n  }\n\n  /**\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   */\n  toString() {\n    const setupContextString = `const gl = context || require('gl')(1, 1);\\n`;\n    const destroyContextString = `if (!context) { gl.getExtension('STACKGL_destroy_context').destroy(); }\\n`;\n    return glKernelString(this.constructor, arguments, this, setupContextString, destroyContextString);\n  }\n\n  setOutput(output) {\n    super.setOutput(output);\n    if (this.graphical && this.extensions.STACKGL_resize_drawingbuffer) {\n      this.extensions.STACKGL_resize_drawingbuffer.resize(this.maxTexSize[0], this.maxTexSize[1]);\n    }\n  }\n}\n\nmodule.exports = {\n  HeadlessGLKernel\n};","const { WebGLFunctionNode } = require('../web-gl/function-node');\n\n/**\n * @class WebGL2FunctionNode\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to toString its respective webGL code.\n * @extends WebGLFunctionNode\n * @returns the converted webGL function string\n */\nclass WebGL2FunctionNode extends WebGLFunctionNode {\n\n  /**\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   * @returns {Array} the append retArr\n   */\n  astIdentifierExpression(idtNode, retArr) {\n    if (idtNode.type !== 'Identifier') {\n      throw this.astErrorOutput(\n        'IdentifierExpression - not an Identifier',\n        idtNode\n      );\n    }\n\n    const type = this.getType(idtNode);\n\n    if (idtNode.name === 'Infinity') {\n      retArr.push('intBitsToFloat(2139095039)');\n    } else if (type === 'Boolean') {\n      if (this.argumentNames.indexOf(idtNode.name) > -1) {\n        retArr.push(`bool(user_${idtNode.name})`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    } else {\n      const userArgumentName = this.getKernelArgumentName(idtNode.name);\n      if (userArgumentName) {\n        retArr.push(`user_${userArgumentName}`);\n      } else {\n        retArr.push(`user_${idtNode.name}`);\n      }\n    }\n\n    return retArr;\n  }\n}\n\nmodule.exports = {\n  WebGL2FunctionNode\n};","// language=GLSL\nconst fragmentShader = `#version 300 es\n__HEADER__;\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp sampler2DArray;\n\nconst int LOOP_MAX = __LOOP_MAX__;\n\n__PLUGINS__;\n__CONSTANTS__;\n\nin vec2 vTexCoord;\n\nconst int BIT_COUNT = 32;\nint modi(int x, int y) {\n  return x - y * (x / y);\n}\n\nint bitwiseOr(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) || (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseXOR(int a, int b) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) != (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 || b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseAnd(int a, int b) {\n  int result = 0;\n  int n = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if ((modi(a, 2) == 1) && (modi(b, 2) == 1)) {\n      result += n;\n    }\n    a = a / 2;\n    b = b / 2;\n    n = n * 2;\n    if(!(a > 0 && b > 0)) {\n      break;\n    }\n  }\n  return result;\n}\nint bitwiseNot(int a) {\n  int result = 0;\n  int n = 1;\n  \n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (modi(a, 2) == 0) {\n      result += n;    \n    }\n    a = a / 2;\n    n = n * 2;\n  }\n  return result;\n}\nint bitwiseZeroFillLeftShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n *= 2;\n  }\n\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nint bitwiseSignedRightShift(int num, int shifts) {\n  return int(floor(float(num) / pow(2.0, float(shifts))));\n}\n\nint bitwiseZeroFillRightShift(int n, int shift) {\n  int maxBytes = BIT_COUNT;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (maxBytes >= n) {\n      break;\n    }\n    maxBytes *= 2;\n  }\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= shift) {\n      break;\n    }\n    n /= 2;\n  }\n  int result = 0;\n  int byteVal = 1;\n  for (int i = 0; i < BIT_COUNT; i++) {\n    if (i >= maxBytes) break;\n    if (modi(n, 2) > 0) { result += byteVal; }\n    n = int(n / 2);\n    byteVal *= 2;\n  }\n  return result;\n}\n\nvec2 integerMod(vec2 x, float y) {\n  vec2 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec3 integerMod(vec3 x, float y) {\n  vec3 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nvec4 integerMod(vec4 x, vec4 y) {\n  vec4 res = floor(mod(x, y));\n  return res * step(1.0 - floor(y), -res);\n}\n\nfloat integerMod(float x, float y) {\n  float res = floor(mod(x, y));\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\n}\n\nint integerMod(int x, int y) {\n  return x - (y * int(x/y));\n}\n\n__DIVIDE_WITH_INTEGER_CHECK__;\n\n// Here be dragons!\n// DO NOT OPTIMIZE THIS CODE\n// YOU WILL BREAK SOMETHING ON SOMEBODY\\'S MACHINE\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\nfloat decode32(vec4 texel) {\n  __DECODE32_ENDIANNESS__;\n  texel *= 255.0;\n  vec2 gte128;\n  gte128.x = texel.b >= 128.0 ? 1.0 : 0.0;\n  gte128.y = texel.a >= 128.0 ? 1.0 : 0.0;\n  float exponent = 2.0 * texel.a - 127.0 + dot(gte128, MAGIC_VEC);\n  float res = exp2(round(exponent));\n  texel.b = texel.b - 128.0 * gte128.x;\n  res = dot(texel, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\n  res *= gte128.y * -2.0 + 1.0;\n  return res;\n}\n\nfloat decode16(vec4 texel, int index) {\n  int channel = integerMod(index, 2);\n  return texel[channel*2] * 255.0 + texel[channel*2 + 1] * 65280.0;\n}\n\nfloat decode8(vec4 texel, int index) {\n  int channel = integerMod(index, 4);\n  return texel[channel] * 255.0;\n}\n\nvec4 legacyEncode32(float f) {\n  float F = abs(f);\n  float sign = f < 0.0 ? 1.0 : 0.0;\n  float exponent = floor(log2(F));\n  float mantissa = (exp2(-exponent) * F);\n  // exponent += floor(log2(mantissa));\n  vec4 texel = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\n  texel.rg = integerMod(texel.rg, 256.0);\n  texel.b = integerMod(texel.b, 128.0);\n  texel.a = exponent*0.5 + 63.5;\n  texel.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\n  texel = floor(texel);\n  texel *= 0.003921569; // 1/255\n  __ENCODE32_ENDIANNESS__;\n  return texel;\n}\n\n// https://github.com/gpujs/gpu.js/wiki/Encoder-details\nvec4 encode32(float value) {\n  if (value == 0.0) return vec4(0, 0, 0, 0);\n\n  float exponent;\n  float mantissa;\n  vec4  result;\n  float sgn;\n\n  sgn = step(0.0, -value);\n  value = abs(value);\n\n  exponent = floor(log2(value));\n\n  mantissa = value*pow(2.0, -exponent)-1.0;\n  exponent = exponent+127.0;\n  result   = vec4(0,0,0,0);\n\n  result.a = floor(exponent/2.0);\n  exponent = exponent - result.a*2.0;\n  result.a = result.a + 128.0*sgn;\n\n  result.b = floor(mantissa * 128.0);\n  mantissa = mantissa - result.b / 128.0;\n  result.b = result.b + exponent*128.0;\n\n  result.g = floor(mantissa*32768.0);\n  mantissa = mantissa - result.g/32768.0;\n\n  result.r = floor(mantissa*8388608.0);\n  return result/255.0;\n}\n// Dragons end here\n\nint index;\nivec3 threadId;\n\nivec3 indexTo3D(int idx, ivec3 texDim) {\n  int z = int(idx / (texDim.x * texDim.y));\n  idx -= z * int(texDim.x * texDim.y);\n  int y = int(idx / texDim.x);\n  int x = int(integerMod(idx, texDim.x));\n  return ivec3(x, y, z);\n}\n\nfloat get32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return decode32(texel);\n}\n\nfloat get16(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 2;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 2, texSize.y));\n  return decode16(texel, index);\n}\n\nfloat get8(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int w = texSize.x * 4;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize.x * 4, texSize.y));\n  return decode8(texel, index);\n}\n\nfloat getMemoryOptimized32(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + (texDim.x * (y + (texDim.y * z)));\n  int channel = integerMod(index, 4);\n  index = index / 4;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  index = index / 4;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return texel[channel];\n}\n\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, st / vec2(texSize));\n}\n\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  return texture(tex, vec3(st / vec2(texSize), z));\n}\n\nfloat getFloatFromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return result[0];\n}\n\nvec2 getVec2FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec2(result[0], result[1]);\n}\n\nvec2 getMemoryOptimizedVec2(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  index = index / 2;\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  if (channel == 0) return vec2(texel.r, texel.g);\n  if (channel == 1) return vec2(texel.b, texel.a);\n  return vec2(0.0, 0.0);\n}\n\nvec3 getVec3FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  vec4 result = getImage2D(tex, texSize, texDim, z, y, x);\n  return vec3(result[0], result[1], result[2]);\n}\n\nvec3 getMemoryOptimizedVec3(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int fieldIndex = 3 * (x + texDim.x * (y + texDim.y * z));\n  int vectorIndex = fieldIndex / 4;\n  int vectorOffset = fieldIndex - vectorIndex * 4;\n  int readY = vectorIndex / texSize.x;\n  int readX = vectorIndex - readY * texSize.x;\n  vec4 tex1 = texture(tex, (vec2(readX, readY) + 0.5) / vec2(texSize));\n\n  if (vectorOffset == 0) {\n    return tex1.xyz;\n  } else if (vectorOffset == 1) {\n    return tex1.yzw;\n  } else {\n    readX++;\n    if (readX >= texSize.x) {\n      readX = 0;\n      readY++;\n    }\n    vec4 tex2 = texture(tex, vec2(readX, readY) / vec2(texSize));\n    if (vectorOffset == 2) {\n      return vec3(tex1.z, tex1.w, tex2.x);\n    } else {\n      return vec3(tex1.w, tex2.x, tex2.y);\n    }\n  }\n}\n\nvec4 getVec4FromSampler2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  return getImage2D(tex, texSize, texDim, z, y, x);\n}\n\nvec4 getMemoryOptimizedVec4(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\n  int index = x + texDim.x * (y + texDim.y * z);\n  int channel = integerMod(index, 2);\n  int w = texSize.x;\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\n  vec4 texel = texture(tex, st / vec2(texSize));\n  return vec4(texel.r, texel.g, texel.b, texel.a);\n}\n\nvec4 actualColor;\nvoid color(float r, float g, float b, float a) {\n  actualColor = vec4(r,g,b,a);\n}\n\nvoid color(float r, float g, float b) {\n  color(r,g,b,1.0);\n}\n\n__MAIN_CONSTANTS__;\n__MAIN_ARGUMENTS__;\n__KERNEL__;\n\nvoid main(void) {\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\n  __MAIN_RESULT__;\n}`;\n\nmodule.exports = {\n  fragmentShader\n};","const vertexShader = `#version 300 es\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nin vec2 aPos;\nin vec2 aTexCoord;\n\nout vec2 vTexCoord;\nuniform vec2 ratio;\n\nvoid main(void) {\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\n  vTexCoord = aTexCoord;\n}`;\n\nmodule.exports = {\n  vertexShader\n};","const { WebGLKernelValueBoolean } = require('../../web-gl/kernel-value/boolean');\n\nclass WebGL2KernelValueBoolean extends WebGLKernelValueBoolean {}\n\nmodule.exports = {\n  WebGL2KernelValueBoolean\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueFloat } = require('../../web-gl/kernel-value/float');\n\nclass WebGL2KernelValueFloat extends WebGLKernelValueFloat {}\n\nmodule.exports = {\n  WebGL2KernelValueFloat\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueInteger } = require('../../web-gl/kernel-value/integer');\n\nclass WebGL2KernelValueInteger extends WebGLKernelValueInteger {\n  getSource(value) {\n    if (this.origin === 'constants') {\n      return `const highp int ${this.id} = ${ parseInt(value) };\\n`;\n    }\n    return `uniform highp int ${this.id};\\n`;\n  }\n\n  updateValue(value) {\n    if (this.origin === 'constants') return;\n    this.kernel.setUniform1i(this.id, this.uploadValue = value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueInteger\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueHTMLImage } = require('../../web-gl/kernel-value/html-image');\n\nclass WebGL2KernelValueHTMLImage extends WebGLKernelValueHTMLImage {\n  getSource() {\n    // TODO: Do we really need highp?\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHTMLImage\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicHTMLImage } = require('../../web-gl/kernel-value/dynamic-html-image');\n\nclass WebGL2KernelValueDynamicHTMLImage extends WebGLKernelValueDynamicHTMLImage {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHTMLImage\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValue } = require('../../web-gl/kernel-value/index');\n\nclass WebGL2KernelValueHtmlImageArray extends WebGLKernelValue {\n  constructor(value, settings) {\n    super(value, settings);\n    this.requestTexture();\n    this.dimensions = [value[0].width, value[0].height, value.length];\n    this.textureSize = [value[0].width, value[0].height];\n  }\n  getStringValueHandler() {\n    return `const uploadValue_${this.name} = ${this.varName};\\n`;\n  }\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2DArray ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(images) {\n    const { context: gl } = this;\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n    // Upload the images into the texture.\n    gl.texImage3D(\n      gl.TEXTURE_2D_ARRAY,\n      0,\n      gl.RGBA,\n      images[0].width,\n      images[0].height,\n      images.length,\n      0,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      null\n    );\n    for (let i = 0; i < images.length; i++) {\n      const xOffset = 0;\n      const yOffset = 0;\n      const imageDepth = 1;\n      gl.texSubImage3D(\n        gl.TEXTURE_2D_ARRAY,\n        0,\n        xOffset,\n        yOffset,\n        i,\n        images[i].width,\n        images[i].height,\n        imageDepth,\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.uploadValue = images[i]\n      );\n    }\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueHtmlImageArray\n};","const { WebGL2KernelValueHtmlImageArray } = require('./html-image-array');\n\nclass WebGL2KernelValueDynamicHtmlImageArray extends WebGL2KernelValueHtmlImageArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2DArray ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(images) {\n    this.dimensions = [images[0].width, images[0].height, images.length];\n    this.textureSize = [images[0].width, images[0].height];\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(images);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicHtmlImageArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleInput } = require('../../web-gl/kernel-value/single-input');\n\nclass WebGL2KernelValueSingleInput extends WebGLKernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(input) {\n    const { context: gl } = this;\n    utils.flattenTo(input.value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleInput\n};","const { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleInput } = require('../../web-gl2/kernel-value/single-input');\n\nclass WebGL2KernelValueDynamicSingleInput extends WebGL2KernelValueSingleInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    let [w, h, d] = value.size;\n    this.dimensions = new Int32Array([w || 1, h || 1, d || 1]);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedInput } = require('../../web-gl/kernel-value/unsigned-input');\n\nclass WebGL2KernelValueUnsignedInput extends WebGLKernelValueUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedInput } = require('../../web-gl/kernel-value/dynamic-unsigned-input');\n\nclass WebGL2KernelValueDynamicUnsignedInput extends WebGLKernelValueDynamicUnsignedInput {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedInput\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/memory-optimized-number-texture');\n\nclass WebGL2KernelValueMemoryOptimizedNumberTexture extends WebGLKernelValueMemoryOptimizedNumberTexture {\n  getSource() {\n    //TODO: do we really need highp?\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueMemoryOptimizedNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicMemoryOptimizedNumberTexture } = require('../../web-gl/kernel-value/dynamic-memory-optimized-number-texture');\n\nclass WebGL2KernelValueDynamicMemoryOptimizedNumberTexture extends WebGLKernelValueDynamicMemoryOptimizedNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform sampler2D ${this.id}`,\n      `uniform ivec2 ${this.sizeId}`,\n      `uniform ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicMemoryOptimizedNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueNumberTexture } = require('../../web-gl/kernel-value/number-texture');\n\nclass WebGL2KernelValueNumberTexture extends WebGLKernelValueNumberTexture {\n  getSource() {\n    //TODO: Do we really need highp?\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicNumberTexture } = require('../../web-gl/kernel-value/dynamic-number-texture');\n\nclass WebGL2KernelValueDynamicNumberTexture extends WebGLKernelValueDynamicNumberTexture {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicNumberTexture\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray } = require('../../web-gl/kernel-value/single-array');\n\nclass WebGL2KernelValueSingleArray extends WebGLKernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray\n};","const { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray } = require('../../web-gl2/kernel-value/single-array');\n\nclass WebGL2KernelValueDynamicSingleArray extends WebGL2KernelValueSingleArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.dimensions = utils.getDimensions(value, true);\n    this.textureSize = utils.getMemoryOptimizedFloatTextureSize(this.dimensions, this.bitRatio);\n    this.uploadArrayLength = this.textureSize[0] * this.textureSize[1] * this.bitRatio;\n    this.uploadValue = new Float32Array(this.uploadArrayLength);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray1DI } = require('../../web-gl/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueSingleArray1DI extends WebGLKernelValueSingleArray1DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray1DI\n};","const { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray1DI } = require('../../web-gl2/kernel-value/single-array1d-i');\n\nclass WebGL2KernelValueDynamicSingleArray1DI extends WebGL2KernelValueSingleArray1DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray1DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray2DI } = require('../../web-gl/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueSingleArray2DI extends WebGLKernelValueSingleArray2DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2DI\n};","const { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray2DI } = require('../../web-gl2/kernel-value/single-array2d-i');\n\nclass WebGL2KernelValueDynamicSingleArray2DI extends WebGL2KernelValueSingleArray2DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray2DI\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueSingleArray3DI } = require('../../web-gl/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueSingleArray3DI extends WebGLKernelValueSingleArray3DI {\n  updateValue(value) {\n    if (value.constructor !== this.initialValueConstructor) {\n      this.onUpdateValueMismatch();\n      return;\n    }\n    const { context: gl } = this;\n    utils.flattenTo(value, this.uploadValue);\n    gl.activeTexture(this.contextHandle);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.textureSize[0], this.textureSize[1], 0, gl.RGBA, gl.FLOAT, this.uploadValue);\n    this.kernel.setUniform1i(this.id, this.index);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3DI\n};","const { utils } = require('../../../utils');\nconst { WebGL2KernelValueSingleArray3DI } = require('../../web-gl2/kernel-value/single-array3d-i');\n\nclass WebGL2KernelValueDynamicSingleArray3DI extends WebGL2KernelValueSingleArray3DI {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n\n  updateValue(value) {\n    this.setShape(value);\n    this.kernel.setUniform3iv(this.dimensionsId, this.dimensions);\n    this.kernel.setUniform2iv(this.sizeId, this.textureSize);\n    super.updateValue(value);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicSingleArray3DI\n};","const { WebGLKernelValueSingleArray2 } = require('../../web-gl/kernel-value/single-array2');\n\nclass WebGL2KernelValueSingleArray2 extends WebGLKernelValueSingleArray2 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray2\n};","const { WebGLKernelValueSingleArray3 } = require('../../web-gl/kernel-value/single-array3');\n\nclass WebGL2KernelValueSingleArray3 extends WebGLKernelValueSingleArray3 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray3\n};","const { WebGLKernelValueSingleArray4 } = require('../../web-gl/kernel-value/single-array4');\n\nclass WebGL2KernelValueSingleArray4 extends WebGLKernelValueSingleArray4 {}\n\nmodule.exports = {\n  WebGL2KernelValueSingleArray4\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueUnsignedArray } = require('../../web-gl/kernel-value/unsigned-array');\n\nclass WebGL2KernelValueUnsignedArray extends WebGLKernelValueUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `highp ivec2 ${this.sizeId} = ivec2(${this.textureSize[0]}, ${this.textureSize[1]})`,\n      `highp ivec3 ${this.dimensionsId} = ivec3(${this.dimensions[0]}, ${this.dimensions[1]}, ${this.dimensions[2]})`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueUnsignedArray\n};","const { utils } = require('../../../utils');\nconst { WebGLKernelValueDynamicUnsignedArray } = require('../../web-gl/kernel-value/dynamic-unsigned-array');\n\nclass WebGL2KernelValueDynamicUnsignedArray extends WebGLKernelValueDynamicUnsignedArray {\n  getSource() {\n    return utils.linesToString([\n      `uniform highp sampler2D ${this.id}`,\n      `uniform highp ivec2 ${this.sizeId}`,\n      `uniform highp ivec3 ${this.dimensionsId}`,\n    ]);\n  }\n}\n\nmodule.exports = {\n  WebGL2KernelValueDynamicUnsignedArray\n};","const { WebGL2KernelValueBoolean } = require('./kernel-value/boolean');\nconst { WebGL2KernelValueFloat } = require('./kernel-value/float');\nconst { WebGL2KernelValueInteger } = require('./kernel-value/integer');\n\nconst { WebGL2KernelValueHTMLImage } = require('./kernel-value/html-image');\nconst { WebGL2KernelValueDynamicHTMLImage } = require('./kernel-value/dynamic-html-image');\n\nconst { WebGL2KernelValueHtmlImageArray } = require('./kernel-value/html-image-array');\nconst { WebGL2KernelValueDynamicHtmlImageArray } = require('./kernel-value/dynamic-html-image-array');\n\nconst { WebGL2KernelValueSingleInput } = require('./kernel-value/single-input');\nconst { WebGL2KernelValueDynamicSingleInput } = require('./kernel-value/dynamic-single-input');\n\nconst { WebGL2KernelValueUnsignedInput } = require('./kernel-value/unsigned-input');\nconst { WebGL2KernelValueDynamicUnsignedInput } = require('./kernel-value/dynamic-unsigned-input');\n\nconst { WebGL2KernelValueMemoryOptimizedNumberTexture } = require('./kernel-value/memory-optimized-number-texture');\nconst { WebGL2KernelValueDynamicMemoryOptimizedNumberTexture } = require('./kernel-value/dynamic-memory-optimized-number-texture');\n\nconst { WebGL2KernelValueNumberTexture } = require('./kernel-value/number-texture');\nconst { WebGL2KernelValueDynamicNumberTexture } = require('./kernel-value/dynamic-number-texture');\n\nconst { WebGL2KernelValueSingleArray } = require('./kernel-value/single-array');\nconst { WebGL2KernelValueDynamicSingleArray } = require('./kernel-value/dynamic-single-array');\n\nconst { WebGL2KernelValueSingleArray1DI } = require('./kernel-value/single-array1d-i');\nconst { WebGL2KernelValueDynamicSingleArray1DI } = require('./kernel-value/dynamic-single-array1d-i');\n\nconst { WebGL2KernelValueSingleArray2DI } = require('./kernel-value/single-array2d-i');\nconst { WebGL2KernelValueDynamicSingleArray2DI } = require('./kernel-value/dynamic-single-array2d-i');\n\nconst { WebGL2KernelValueSingleArray3DI } = require('./kernel-value/single-array3d-i');\nconst { WebGL2KernelValueDynamicSingleArray3DI } = require('./kernel-value/dynamic-single-array3d-i');\n\nconst { WebGL2KernelValueSingleArray2 } = require('./kernel-value/single-array2');\nconst { WebGL2KernelValueSingleArray3 } = require('./kernel-value/single-array3');\nconst { WebGL2KernelValueSingleArray4 } = require('./kernel-value/single-array4');\n\nconst { WebGL2KernelValueUnsignedArray } = require('./kernel-value/unsigned-array');\nconst { WebGL2KernelValueDynamicUnsignedArray } = require('./kernel-value/dynamic-unsigned-array');\n\nconst kernelValueMaps = {\n  unsigned: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueDynamicUnsignedInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHtmlImageArray,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueUnsignedArray,\n      'Array(2)': false,\n      'Array(3)': false,\n      'Array(4)': false,\n      'Array1D(2)': false,\n      'Array1D(3)': false,\n      'Array1D(4)': false,\n      'Array2D(2)': false,\n      'Array2D(3)': false,\n      'Array2D(4)': false,\n      'Array3D(2)': false,\n      'Array3D(3)': false,\n      'Array3D(4)': false,\n      'Input': WebGL2KernelValueUnsignedInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHtmlImageArray,\n    }\n  },\n  single: {\n    dynamic: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Integer': WebGL2KernelValueInteger,\n      'Float': WebGL2KernelValueFloat,\n      'Array': WebGL2KernelValueDynamicSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueDynamicSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueDynamicSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueDynamicSingleArray3DI,\n      'Input': WebGL2KernelValueDynamicSingleInput,\n      'NumberTexture': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueDynamicNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueDynamicNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueDynamicMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueDynamicHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueDynamicHtmlImageArray,\n    },\n    static: {\n      'Boolean': WebGL2KernelValueBoolean,\n      'Float': WebGL2KernelValueFloat,\n      'Integer': WebGL2KernelValueInteger,\n      'Array': WebGL2KernelValueSingleArray,\n      'Array(2)': WebGL2KernelValueSingleArray2,\n      'Array(3)': WebGL2KernelValueSingleArray3,\n      'Array(4)': WebGL2KernelValueSingleArray4,\n      'Array1D(2)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(3)': WebGL2KernelValueSingleArray1DI,\n      'Array1D(4)': WebGL2KernelValueSingleArray1DI,\n      'Array2D(2)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(3)': WebGL2KernelValueSingleArray2DI,\n      'Array2D(4)': WebGL2KernelValueSingleArray2DI,\n      'Array3D(2)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(3)': WebGL2KernelValueSingleArray3DI,\n      'Array3D(4)': WebGL2KernelValueSingleArray3DI,\n      'Input': WebGL2KernelValueSingleInput,\n      'NumberTexture': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(1)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(2)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(3)': WebGL2KernelValueNumberTexture,\n      'ArrayTexture(4)': WebGL2KernelValueNumberTexture,\n      'MemoryOptimizedNumberTexture': WebGL2KernelValueMemoryOptimizedNumberTexture,\n      'HTMLImage': WebGL2KernelValueHTMLImage,\n      'HTMLImageArray': WebGL2KernelValueHtmlImageArray,\n    }\n  },\n};\n\nfunction lookupKernelValueType(type, dynamic, precision, value) {\n  if (!type) {\n    throw new Error('type missing');\n  }\n  if (!dynamic) {\n    throw new Error('dynamic missing');\n  }\n  if (!precision) {\n    throw new Error('precision missing');\n  }\n  if (value.type) {\n    type = value.type;\n  }\n  const types = kernelValueMaps[precision][dynamic];\n  if (types[type] === false) {\n    return null;\n  } else if (types[type] === undefined) {\n    throw new Error(`Could not find a KernelValue for ${ type }`);\n  }\n  return types[type];\n}\n\nmodule.exports = {\n  lookupKernelValueType\n};","const { WebGLKernel } = require('../web-gl/kernel');\nconst { WebGL2FunctionNode } = require('./function-node');\nconst { FunctionBuilder } = require('../function-builder');\nconst { utils } = require('../../utils');\nconst { fragmentShader } = require('./fragment-shader');\nconst { vertexShader } = require('./vertex-shader');\nconst { lookupKernelValueType } = require('./kernel-value-maps');\n\nlet isSupported = null;\nlet testCanvas = null;\nlet testContext = null;\nlet testExtensions = null;\n\n/**\n *\n * @type {IKernelFeatures}\n */\nlet features = null;\n\n/**\n * @extends WebGLKernel\n */\nclass WebGL2Kernel extends WebGLKernel {\n  static get isSupported() {\n    if (isSupported !== null) {\n      return isSupported;\n    }\n    this.setupFeatureChecks();\n    isSupported = this.isContextMatch(testContext);\n    return isSupported;\n  }\n\n  static setupFeatureChecks() {\n    if (typeof document !== 'undefined') {\n      testCanvas = document.createElement('canvas');\n    } else if (typeof OffscreenCanvas !== 'undefined') {\n      testCanvas = new OffscreenCanvas(0, 0);\n    }\n    if (!testCanvas) return;\n    testContext = testCanvas.getContext('webgl2');\n    if (!testContext || !testContext.getExtension) return;\n    testExtensions = {\n      EXT_color_buffer_float: testContext.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: testContext.getExtension('OES_texture_float_linear'),\n    };\n    features = this.getFeatures();\n  }\n\n  static isContextMatch(context) {\n    // from global\n    if (typeof WebGL2RenderingContext !== 'undefined') {\n      return context instanceof WebGL2RenderingContext;\n    }\n    return false;\n  }\n\n  static getFeatures() {\n    return Object.freeze({\n      isFloatRead: this.getIsFloatRead(),\n      isIntegerDivisionAccurate: this.getIsIntegerDivisionAccurate(),\n      kernelMap: true,\n      isTextureFloat: true,\n      channelCount: this.getChannelCount(),\n    });\n  }\n\n  static getIsTextureFloat() {\n    return true;\n  }\n\n  static getIsIntegerDivisionAccurate() {\n    return super.getIsIntegerDivisionAccurate();\n  }\n\n  static getChannelCount() {\n    return testContext.getParameter(testContext.MAX_DRAW_BUFFERS);\n  }\n\n  static lookupKernelValueType(type, dynamic, precision, value) {\n    return lookupKernelValueType(type, dynamic, precision, value);\n  }\n\n  static get testCanvas() {\n    return testCanvas;\n  }\n\n  static get testContext() {\n    return testContext;\n  }\n\n  /**\n   *\n   * @returns {{isFloatRead: Boolean, isIntegerDivisionAccurate: Boolean, kernelMap: Boolean, isTextureFloat: Boolean}}\n   */\n  static get features() {\n    return features;\n  }\n\n  static get fragmentShader() {\n    return fragmentShader;\n  }\n  static get vertexShader() {\n    return vertexShader;\n  }\n\n  initContext() {\n    const settings = {\n      alpha: false,\n      depth: false,\n      antialias: false\n    };\n    const context = this.canvas.getContext('webgl2', settings);\n    return context;\n  }\n\n  initExtensions() {\n    this.extensions = {\n      EXT_color_buffer_float: this.context.getExtension('EXT_color_buffer_float'),\n      OES_texture_float_linear: this.context.getExtension('OES_texture_float_linear'),\n    };\n  }\n\n  /**\n   * @desc Validate settings related to Kernel, such as dimensions size, and auto output support.\n   * @param {IArguments} args\n   */\n  validateSettings(args) {\n    if (!this.validate) {\n      this.texSize = utils.getKernelTextureSize({\n        optimizeFloatMemory: this.optimizeFloatMemory,\n        precision: this.precision,\n      }, this.output);\n      return;\n    }\n\n    const features = this.constructor.features;\n    if (this.precision === 'single' && !features.isFloatRead) {\n      throw new Error('Float texture outputs are not supported');\n    } else if (!this.graphical && this.precision === null) {\n      this.precision = features.isFloatRead ? 'single' : 'unsigned';\n    }\n\n    if (this.fixIntegerDivisionAccuracy === null) {\n      this.fixIntegerDivisionAccuracy = !features.isIntegerDivisionAccurate;\n    } else if (this.fixIntegerDivisionAccuracy && features.isIntegerDivisionAccurate) {\n      this.fixIntegerDivisionAccuracy = false;\n    }\n\n    this.checkOutput();\n\n    if (!this.output || this.output.length === 0) {\n      if (args.length !== 1) {\n        throw new Error('Auto output only supported for kernels with only one input');\n      }\n\n      const argType = utils.getVariableType(args[0], this.strictIntegers);\n      switch (argType) {\n        case 'Array':\n          this.output = utils.getDimensions(argType);\n          break;\n        case 'NumberTexture':\n        case 'MemoryOptimizedNumberTexture':\n        case 'ArrayTexture(1)':\n        case 'ArrayTexture(2)':\n        case 'ArrayTexture(3)':\n        case 'ArrayTexture(4)':\n          this.output = args[0].output;\n          break;\n        default:\n          throw new Error('Auto output not supported for input type: ' + argType);\n      }\n    }\n\n    if (this.graphical) {\n      if (this.output.length !== 2) {\n        throw new Error('Output must have 2 dimensions on graphical mode');\n      }\n\n      if (this.precision === 'single') {\n        console.warn('Cannot use graphical mode and single precision at the same time');\n        this.precision = 'unsigned';\n      }\n\n      this.texSize = utils.clone(this.output);\n      return;\n    } else if (!this.graphical && this.precision === null && features.isTextureFloat) {\n      this.precision = 'single';\n    }\n\n    this.texSize = utils.getKernelTextureSize({\n      optimizeFloatMemory: this.optimizeFloatMemory,\n      precision: this.precision,\n    }, this.output);\n  }\n\n  translateSource() {\n    const functionBuilder = FunctionBuilder.fromKernel(this, WebGL2FunctionNode, {\n      fixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n    });\n    this.translatedSource = functionBuilder.getPrototypeString('kernel');\n    if (!this.graphical && !this.returnType) {\n      this.returnType = functionBuilder.getKernelResultType();\n    }\n\n    if (this.subKernels && this.subKernels.length > 0) {\n      for (let i = 0; i < this.subKernels.length; i++) {\n        const subKernel = this.subKernels[i];\n        if (!subKernel.returnType) {\n          subKernel.returnType = functionBuilder.getSubKernelResultType(i);\n        }\n      }\n    }\n  }\n\n  run() {\n    const { kernelArguments, texSize } = this;\n    const gl = this.context;\n\n    gl.useProgram(this.program);\n    gl.scissor(0, 0, texSize[0], texSize[1]);\n\n    if (this.dynamicOutput) {\n      this.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n      this.setUniform2iv('uTexSize', texSize);\n    }\n\n    this.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n    for (let i = 0; i < kernelArguments.length; i++) {\n      kernelArguments[i].updateValue(arguments[i]);\n      if (this.switchingKernels) return;\n    }\n\n    if (this.plugins) {\n      for (let i = 0; i < this.plugins.length; i++) {\n        const plugin = this.plugins[i];\n        if (plugin.onBeforeRun) {\n          plugin.onBeforeRun(this);\n        }\n      }\n    }\n\n    if (this.graphical) {\n      if (this.pipeline) {\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n        if (!this.outputTexture || this.immutable) {\n          this._setupOutputTexture();\n        }\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        return new this.TextureConstructor({\n          texture: this.outputTexture,\n          size: texSize,\n          dimensions: this.threadDim,\n          output: this.output,\n          context: this.context\n        });\n      }\n      gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n      return;\n    }\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    if (this.immutable) {\n      this._setupOutputTexture();\n    }\n\n    if (this.subKernels !== null) {\n      if (this.immutable) {\n        this._setupSubOutputTextures();\n      }\n      gl.drawBuffers(this.drawBuffersMap);\n    }\n\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  drawBuffers() {\n    this.context.drawBuffers(this.drawBuffersMap);\n  }\n\n  getOutputTexture() {\n    return this.outputTexture;\n  }\n\n  _setupOutputTexture() {\n    const { texSize } = this;\n    const gl = this.context;\n    const texture = this.outputTexture = gl.createTexture();\n    gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    if (this.precision === 'single') {\n      if (this.pipeline) {\n        switch (this.returnType) {\n          case 'Number':\n          case 'Float':\n          case 'Integer':\n            if (this.optimizeFloatMemory) {\n              gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\n            } else {\n              gl.texStorage2D(gl.TEXTURE_2D, 1, gl.R32F, texSize[0], texSize[1]);\n            }\n            break;\n          case 'Array(2)':\n            gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RG32F, texSize[0], texSize[1]);\n            break;\n          case 'Array(3)': // there is _no_ 3 channel format which is guaranteed to be color-renderable\n          case 'Array(4)':\n            gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\n            break;\n          default:\n            throw new Error('Unhandled return type');\n        }\n      } else {\n        gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA32F, texSize[0], texSize[1]);\n      }\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    }\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  }\n\n  _setupSubOutputTextures() {\n    const { texSize } = this;\n    const gl = this.context;\n    this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n    this.subKernelOutputTextures = [];\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const texture = this.context.createTexture();\n      this.subKernelOutputTextures.push(texture);\n      this.drawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n      gl.activeTexture(gl.TEXTURE0 + this.constantTextureCount + this.argumentTextureCount + i);\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      // TODO: upgrade this\n      if (this.precision === 'single') {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n    }\n  }\n\n  /**\n   *\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   */\n  _getHeaderString() {\n    return '';\n  }\n\n  /**\n   * @desc Get texture coordinate string for the program\n   * @returns {String} result\n   */\n  _getTextureCoordinate() {\n    const subKernels = this.subKernels;\n    if (subKernels === null || subKernels.length < 1) {\n      return 'in highp vec2 vTexCoord;\\n';\n    } else {\n      return 'out highp vec2 vTexCoord;\\n';\n    }\n  }\n\n  /**\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {String} result\n   */\n  _getMainArgumentsString(args) {\n    const result = [];\n    const argumentNames = this.argumentNames;\n    for (let i = 0; i < argumentNames.length; i++) {\n      result.push(this.kernelArguments[i].getSource(args[i]));\n    }\n    return result.join('');\n  }\n\n  /**\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   * @returns {String} result\n   */\n  getKernelString() {\n    let kernelResultDeclaration;\n    switch (this.returnType) {\n      case 'Array(2)':\n        kernelResultDeclaration = 'vec2 kernelResult';\n        break;\n      case 'Array(3)':\n        kernelResultDeclaration = 'vec3 kernelResult';\n        break;\n      case 'Array(4)':\n        kernelResultDeclaration = 'vec4 kernelResult';\n        break;\n      case 'LiteralInteger':\n      case 'Float':\n      case 'Number':\n      case 'Integer':\n        kernelResultDeclaration = 'float kernelResult';\n        break;\n      default:\n        if (this.graphical) {\n          kernelResultDeclaration = 'float kernelResult';\n        } else {\n          throw new Error(`unrecognized output type \"${ this.returnType }\"`);\n        }\n    }\n\n    const result = [];\n    const subKernels = this.subKernels;\n    if (subKernels !== null) {\n      result.push(\n        kernelResultDeclaration,\n        'layout(location = 0) out vec4 data0'\n      );\n      for (let i = 0; i < subKernels.length; i++) {\n        const subKernel = subKernels[i];\n        result.push(\n          subKernel.returnType === 'Integer' ?\n          `int subKernelResult_${ subKernel.name } = 0` :\n          `float subKernelResult_${ subKernel.name } = 0.0`,\n          `layout(location = ${ i + 1 }) out vec4 data${ i + 1 }`\n        );\n      }\n    } else {\n      result.push(\n        'out vec4 data0',\n        kernelResultDeclaration\n      );\n    }\n\n    return utils.linesToString(result) + this.translatedSource;\n  }\n\n  getMainResultGraphical() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = actualColor',\n    ]);\n  }\n\n  getMainResultPackedPixels() {\n    switch (this.returnType) {\n      case 'LiteralInteger':\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        return this.getMainResultKernelPackedPixels() +\n          this.getMainResultSubKernelPackedPixels();\n      default:\n        throw new Error(`packed output only usable with Numbers, \"${this.returnType}\" specified`);\n    }\n  }\n\n  /**\n   * @return {String}\n   */\n  getMainResultKernelPackedPixels() {\n    return utils.linesToString([\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0 = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(kernelResult)`\n    ]);\n  }\n\n  /**\n   * @return {String}\n   */\n  getMainResultSubKernelPackedPixels() {\n    const result = [];\n    if (!this.subKernels) return '';\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(float(subKernelResult_${this.subKernels[i].name}))`\n        );\n      } else {\n        result.push(\n          `  data${i + 1} = ${this.useLegacyEncoder ? 'legacyEncode32' : 'encode32'}(subKernelResult_${this.subKernels[i].name})`\n        );\n      }\n    }\n    return utils.linesToString(result);\n  }\n\n  getMainResultMemoryOptimizedFloats() {\n    const result = [\n      '  index *= 4',\n    ];\n\n    switch (this.returnType) {\n      case 'Number':\n      case 'Integer':\n      case 'Float':\n        const channels = ['r', 'g', 'b', 'a'];\n        for (let i = 0; i < channels.length; i++) {\n          const channel = channels[i];\n          this.getMainResultKernelMemoryOptimizedFloats(result, channel);\n          this.getMainResultSubKernelMemoryOptimizedFloats(result, channel);\n          if (i + 1 < channels.length) {\n            result.push('  index += 1');\n          }\n        }\n        break;\n      default:\n        throw new Error(`optimized output only usable with Numbers, ${this.returnType} specified`);\n    }\n\n    return utils.linesToString(result);\n  }\n\n  getMainResultKernelMemoryOptimizedFloats(result, channel) {\n    result.push(\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      `  data0.${channel} = kernelResult`,\n    );\n  }\n\n  getMainResultSubKernelMemoryOptimizedFloats(result, channel) {\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; i++) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}.${channel} = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  data${i + 1}.${channel} = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n  }\n\n  getMainResultKernelNumberTexture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelNumberTexture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      if (subKernel.returnType === 'Integer') {\n        result.push(\n          `  data${i + 1}[0] = float(subKernelResult_${subKernel.name})`,\n        );\n      } else {\n        result.push(\n          `  data${i + 1}[0] = subKernelResult_${subKernel.name}`,\n        );\n      }\n    }\n    return result;\n  }\n\n  getMainResultKernelArray2Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n    ];\n  }\n\n  getMainResultSubKernelArray2Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray3Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0[0] = kernelResult[0]',\n      '  data0[1] = kernelResult[1]',\n      '  data0[2] = kernelResult[2]',\n    ];\n  }\n\n  getMainResultSubKernelArray3Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      const subKernel = this.subKernels[i];\n      result.push(\n        `  data${i + 1}[0] = subKernelResult_${subKernel.name}[0]`,\n        `  data${i + 1}[1] = subKernelResult_${subKernel.name}[1]`,\n        `  data${i + 1}[2] = subKernelResult_${subKernel.name}[2]`,\n      );\n    }\n    return result;\n  }\n\n  getMainResultKernelArray4Texture() {\n    return [\n      '  threadId = indexTo3D(index, uOutputDim)',\n      '  kernel()',\n      '  data0 = kernelResult',\n    ];\n  }\n\n  getMainResultSubKernelArray4Texture() {\n    const result = [];\n    if (!this.subKernels) return result;\n    for (let i = 0; i < this.subKernels.length; ++i) {\n      result.push(\n        `  data${i + 1} = subKernelResult_${this.subKernels[i].name}`,\n      );\n    }\n    return result;\n  }\n\n  /**\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {string} Fragment Shader string\n   */\n  getFragmentShader(args) {\n    if (this.compiledFragmentShader !== null) {\n      return this.compiledFragmentShader;\n    }\n    return this.compiledFragmentShader = this.replaceArtifacts(this.constructor.fragmentShader, this._getFragShaderArtifactMap(args));\n  }\n\n  /**\n   * @desc Get the vertical shader String\n   * @param {Array} args - The actual parameters sent to the Kernel\n   * @returns {string} Vertical Shader string\n   *\n   */\n  getVertexShader(args) {\n    if (this.compiledVertexShader !== null) {\n      return this.compiledVertexShader;\n    }\n    return this.compiledVertexShader = this.constructor.vertexShader;\n  }\n\n  destroyExtensions() {\n    this.extensions.EXT_color_buffer_float = null;\n    this.extensions.OES_texture_float_linear = null;\n  }\n\n  toJSON() {\n    const json = super.toJSON();\n    json.functionNodes = FunctionBuilder.fromKernel(this, WebGL2FunctionNode).toJSON();\n    return json;\n  }\n}\n\nmodule.exports = {\n  WebGL2Kernel\n};","const { utils } = require('./utils');\n\n/**\n * Makes kernels easier for mortals (including me)\n * @param kernel\n * @returns {function()}\n */\nfunction kernelRunShortcut(kernel) {\n  let run = function() {\n    kernel.build.apply(kernel, arguments);\n    if (kernel.renderKernels) {\n      run = function() {\n        kernel.run.apply(kernel, arguments);\n        if (kernel.switchingKernels) {\n          kernel.switchingKernels = false;\n          return kernel.onRequestSwitchKernel(arguments, kernel);\n        }\n        return kernel.renderKernels();\n      };\n    } else if (kernel.renderOutput) {\n      run = function() {\n        kernel.run.apply(kernel, arguments);\n        if (kernel.switchingKernels) {\n          kernel.switchingKernels = false;\n          return kernel.onRequestSwitchKernel(arguments, kernel);\n        }\n        return kernel.renderOutput();\n      };\n    } else {\n      run = function() {\n        return kernel.run.apply(kernel, arguments);\n      };\n    }\n    return run.apply(kernel, arguments);\n  };\n  const shortcut = function() {\n    return run.apply(kernel, arguments);\n  };\n  /**\n   * Run kernel in async mode\n   * @returns {Promise<KernelOutput>}\n   */\n  shortcut.exec = function() {\n    return new Promise((accept, reject) => {\n      try {\n        accept(run.apply(this, arguments));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  };\n  shortcut.replaceKernel = function(replacementKernel) {\n    kernel = replacementKernel;\n    bindKernelToShortcut(kernel, shortcut);\n    shortcut.kernel = kernel;\n  };\n\n  bindKernelToShortcut(kernel, shortcut);\n  shortcut.kernel = kernel;\n  return shortcut;\n}\n\nfunction bindKernelToShortcut(kernel, shortcut) {\n  const properties = utils.allPropertiesOf(kernel);\n  for (let i = 0; i < properties.length; i++) {\n    const property = properties[i];\n    if (property[0] === '_' && property[1] === '_') continue;\n    if (typeof kernel[property] === 'function') {\n      if (property.substring(0, 3) === 'add' || property.substring(0, 3) === 'set') {\n        shortcut[property] = function() {\n          kernel[property].apply(kernel, arguments);\n          return shortcut;\n        };\n      } else {\n        if (property === 'toString') {\n          shortcut.toString = function() {\n            return kernel.toString.apply(kernel, arguments);\n          };\n        } else {\n          shortcut[property] = kernel[property].bind(kernel);\n        }\n      }\n    } else {\n      shortcut.__defineGetter__(property, () => {\n        return kernel[property];\n      });\n      shortcut.__defineSetter__(property, (value) => {\n        kernel[property] = value;\n      });\n    }\n  }\n}\nmodule.exports = {\n  kernelRunShortcut\n};","const { gpuMock } = require('gpu-mock.js');\nconst { utils } = require('./utils');\nconst { CPUKernel } = require('./backend/cpu/kernel');\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\nconst { kernelRunShortcut } = require('./kernel-run-shortcut');\n\n\n/**\n *\n * @type {Kernel[]}\n */\nconst kernelOrder = [HeadlessGLKernel, WebGL2Kernel, WebGLKernel];\n\n/**\n *\n * @type {string[]}\n */\nconst kernelTypes = ['gpu', 'cpu'];\n\nconst internalKernels = {\n  'headlessgl': HeadlessGLKernel,\n  'webgl2': WebGL2Kernel,\n  'webgl': WebGLKernel,\n};\n\nlet validate = true;\n\n/**\n * The GPU.js library class which manages the GPU context for the creating kernels\n */\nclass GPU {\n  static disableValidation() {\n    validate = false;\n  }\n\n  static enableValidation() {\n    validate = true;\n  }\n\n  static get isGPUSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported);\n  }\n\n  /**\n   *\n   * @returns {boolean}\n   */\n  static get isKernelMapSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.kernelMap);\n  }\n\n  /**\n   * @desc TRUE is platform supports OffscreenCanvas\n   */\n  static get isOffscreenCanvasSupported() {\n    return (typeof Worker !== 'undefined' && typeof OffscreenCanvas !== 'undefined') || typeof importScripts !== 'undefined';\n  }\n\n  /**\n   * @desc TRUE if platform supports WebGL\n   */\n  static get isWebGLSupported() {\n    return WebGLKernel.isSupported;\n  }\n\n  /**\n   * @desc TRUE if platform supports WebGL2\n   */\n  static get isWebGL2Supported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  /**\n   * @desc TRUE if platform supports HeadlessGL\n   */\n  static get isHeadlessGLSupported() {\n    return HeadlessGLKernel.isSupported;\n  }\n\n  /**\n   *\n   * @desc TRUE if platform supports Canvas\n   */\n  static get isCanvasSupported() {\n    return typeof HTMLCanvasElement !== 'undefined';\n  }\n\n  /**\n   * @desc TRUE if platform supports HTMLImageArray}\n   */\n  static get isGPUHTMLImageArraySupported() {\n    return WebGL2Kernel.isSupported;\n  }\n\n  /**\n   * @desc TRUE if platform supports single precision}\n   * @returns {boolean}\n   */\n  static get isSinglePrecisionSupported() {\n    return kernelOrder.some(Kernel => Kernel.isSupported && Kernel.features.isFloatRead && Kernel.features.isTextureFloat);\n  }\n\n  /**\n   * Creates an instance of GPU.\n   * @param {IGPUSettings} [settings] - Settings to set mode, and other properties\n   */\n  constructor(settings) {\n    settings = settings || {};\n    this.canvas = settings.canvas || null;\n    this.context = settings.context || null;\n    this.mode = settings.mode;\n    this.Kernel = null;\n    this.kernels = [];\n    this.functions = [];\n    this.nativeFunctions = [];\n    if (this.mode === 'dev') return;\n    this.chooseKernel();\n    // add functions from settings\n    if (settings.functions) {\n      for (let i = 0; i < settings.functions.length; i++) {\n        this.addFunction(settings.functions[i]);\n      }\n    }\n\n    // add native functions from settings\n    if (settings.nativeFunctions) {\n      for (const p in settings.nativeFunctions) {\n        this.addNativeFunction(p, settings.nativeFunctions[p]);\n      }\n    }\n  }\n\n  /**\n   * Choose kernel type and save on .Kernel property of GPU\n   */\n  chooseKernel() {\n    if (this.Kernel) return;\n\n    let Kernel = null;\n\n    if (this.context) {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        const ExternalKernel = kernelOrder[i];\n        if (ExternalKernel.isContextMatch(this.context)) {\n          if (!ExternalKernel.isSupported) {\n            throw new Error(`Kernel type ${ExternalKernel.name} not supported`);\n          }\n          Kernel = ExternalKernel;\n          break;\n        }\n      }\n      if (Kernel === null) {\n        throw new Error('unknown Context');\n      }\n    } else if (this.mode) {\n      if (this.mode in internalKernels) {\n        if (!validate || internalKernels[this.mode].isSupported) {\n          Kernel = internalKernels[this.mode];\n        }\n      } else if (this.mode === 'gpu') {\n        for (let i = 0; i < kernelOrder.length; i++) {\n          if (kernelOrder[i].isSupported) {\n            Kernel = kernelOrder[i];\n            break;\n          }\n        }\n      } else if (this.mode === 'cpu') {\n        Kernel = CPUKernel;\n      }\n      if (!Kernel) {\n        throw new Error(`A requested mode of \"${this.mode}\" and is not supported`);\n      }\n    } else {\n      for (let i = 0; i < kernelOrder.length; i++) {\n        if (kernelOrder[i].isSupported) {\n          Kernel = kernelOrder[i];\n          break;\n        }\n      }\n      if (!Kernel) {\n        Kernel = CPUKernel;\n      }\n    }\n\n    if (!this.mode) {\n      this.mode = Kernel.mode;\n    }\n    this.Kernel = Kernel;\n  }\n\n  /**\n   * @desc This creates a callable function object to call the kernel function with the argument parameter set\n   * @param {Function|String|object} source - The calling to perform the conversion\n   * @param {Object} [settings] - The parameter configuration object\n   * @return {Kernel} callable function to run\n   */\n  createKernel(source, settings) {\n    if (typeof source === 'undefined') {\n      throw new Error('Missing source parameter');\n    }\n    if (typeof source !== 'object' && !utils.isFunction(source) && typeof source !== 'string') {\n      throw new Error('source parameter not a function');\n    }\n\n    if (this.mode === 'dev') {\n      const devKernel = gpuMock(source, upgradeDeprecatedCreateKernelSettings(settings));\n      this.kernels.push(devKernel);\n      return devKernel;\n    }\n\n    source = typeof source === 'function' ? source.toString() : source;\n    const switchableKernels = {};\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings) || {};\n    // handle conversion of argumentTypes\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    function onRequestFallback(args) {\n      const fallbackKernel = new CPUKernel(source, {\n        argumentTypes: kernelRun.argumentTypes,\n        constantTypes: kernelRun.constantTypes,\n        graphical: kernelRun.graphical,\n        loopMaxIterations: kernelRun.loopMaxIterations,\n        constants: kernelRun.constants,\n        dynamicOutput: kernelRun.dynamicOutput,\n        dynamicArgument: kernelRun.dynamicArguments,\n        output: kernelRun.output,\n        precision: kernelRun.precision,\n        pipeline: kernelRun.pipeline,\n        immutable: kernelRun.immutable,\n        optimizeFloatMemory: kernelRun.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernelRun.fixIntegerDivisionAccuracy,\n        functions: kernelRun.functions,\n        nativeFunctions: kernelRun.nativeFunctions,\n        subKernels: kernelRun.subKernels,\n        strictIntegers: kernelRun.strictIntegers,\n        debug: kernelRun.debug,\n        warnVarUsage: kernelRun.warnVarUsage,\n      });\n      fallbackKernel.build.apply(fallbackKernel, args);\n      const result = fallbackKernel.run.apply(fallbackKernel, args);\n      kernelRun.replaceKernel(fallbackKernel);\n      return result;\n    }\n\n    function onRequestSwitchKernel(args, kernel) {\n      const argumentTypes = new Array(args.length);\n      for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        const type = kernel.argumentTypes[i];\n        if (arg.type) {\n          argumentTypes[i] = arg.type;\n        } else {\n          switch (type) {\n            case 'Number':\n            case 'Integer':\n            case 'Float':\n            case 'ArrayTexture(1)':\n              argumentTypes[i] = utils.getVariableType(arg);\n              break;\n            default:\n              argumentTypes[i] = type;\n          }\n        }\n      }\n      const signature = argumentTypes.join(',');\n      const existingKernel = switchableKernels[signature];\n      if (existingKernel) {\n        existingKernel.run.apply(existingKernel, args);\n        if (existingKernel.renderKernels) {\n          return existingKernel.renderKernels();\n        } else {\n          return existingKernel.renderOutput();\n        }\n      }\n\n      const newKernel = switchableKernels[signature] = new kernel.constructor(source, {\n        argumentTypes,\n        constantTypes: kernel.constantTypes,\n        graphical: kernel.graphical,\n        loopMaxIterations: kernel.loopMaxIterations,\n        constants: kernel.constants,\n        dynamicOutput: kernel.dynamicOutput,\n        dynamicArgument: kernel.dynamicArguments,\n        context: kernel.context,\n        canvas: kernel.canvas,\n        output: kernel.output,\n        precision: kernel.precision,\n        pipeline: kernel.pipeline,\n        immutable: kernel.immutable,\n        optimizeFloatMemory: kernel.optimizeFloatMemory,\n        fixIntegerDivisionAccuracy: kernel.fixIntegerDivisionAccuracy,\n        functions: kernel.functions,\n        nativeFunctions: kernel.nativeFunctions,\n        subKernels: kernel.subKernels,\n        strictIntegers: kernel.strictIntegers,\n        debug: kernel.debug,\n        gpu: kernel.gpu,\n        validate,\n        warnVarUsage: kernel.warnVarUsage,\n        returnType: kernel.returnType,\n        onRequestFallback,\n        onRequestSwitchKernel,\n      });\n      newKernel.build.apply(newKernel, args);\n      newKernel.run.apply(newKernel, args);\n      kernelRun.replaceKernel(newKernel);\n      if (newKernel.renderKernels) {\n        return newKernel.renderKernels();\n      } else {\n        return newKernel.renderOutput();\n      }\n    }\n    const mergedSettings = Object.assign({\n      context: this.context,\n      canvas: this.canvas,\n      functions: this.functions,\n      nativeFunctions: this.nativeFunctions,\n      gpu: this,\n      validate,\n      onRequestFallback,\n      onRequestSwitchKernel\n    }, settingsCopy);\n\n    const kernelRun = kernelRunShortcut(new this.Kernel(source, mergedSettings));\n\n    //if canvas didn't come from this, propagate from kernel\n    if (!this.canvas) {\n      this.canvas = kernelRun.canvas;\n    }\n\n    //if context didn't come from this, propagate from kernel\n    if (!this.context) {\n      this.context = kernelRun.context;\n    }\n\n    this.kernels.push(kernelRun);\n\n    return kernelRun;\n  }\n\n  /**\n   *\n   * Create a super kernel which executes sub kernels\n   * and saves their output to be used with the next sub kernel.\n   * This can be useful if we want to save the output on one kernel,\n   * and then use it as an input to another kernel. *Machine Learning*\n   *\n   * @param {Object|Array} subKernels - Sub kernels for this kernel\n   * @param {Function} rootKernel - Root kernel\n   *\n   * @returns {Function} callable kernel function\n   *\n   * @example\n   * const megaKernel = gpu.createKernelMap({\n   *   addResult: function add(a, b) {\n   *     return a[this.thread.x] + b[this.thread.x];\n   *   },\n   *   multiplyResult: function multiply(a, b) {\n   *     return a[this.thread.x] * b[this.thread.x];\n   *   },\n   *  }, function(a, b, c) {\n   *       return multiply(add(a, b), c);\n   * });\n   *\n   * megaKernel(a, b, c);\n   *\n   * Note: You can also define subKernels as an array of functions.\n   * > [add, multiply]\n   *\n   */\n  createKernelMap() {\n    let fn;\n    let settings;\n    if (typeof arguments[arguments.length - 2] === 'function') {\n      fn = arguments[arguments.length - 2];\n      settings = arguments[arguments.length - 1];\n    } else {\n      fn = arguments[arguments.length - 1];\n    }\n\n    if (this.mode !== 'dev') {\n      if (!this.Kernel.isSupported || !this.Kernel.features.kernelMap) {\n        if (this.mode && kernelTypes.indexOf(this.mode) < 0) {\n          throw new Error(`kernelMap not supported on ${this.Kernel.name}`);\n        }\n      }\n    }\n\n    const settingsCopy = upgradeDeprecatedCreateKernelSettings(settings);\n    // handle conversion of argumentTypes\n    if (settings && typeof settings.argumentTypes === 'object') {\n      settingsCopy.argumentTypes = Object.keys(settings.argumentTypes).map(argumentName => settings.argumentTypes[argumentName]);\n    }\n\n    if (Array.isArray(arguments[0])) {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let i = 0; i < functions.length; i++) {\n        const source = functions[i].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name,\n          source,\n          property: i,\n        });\n      }\n    } else {\n      settingsCopy.subKernels = [];\n      const functions = arguments[0];\n      for (let p in functions) {\n        if (!functions.hasOwnProperty(p)) continue;\n        const source = functions[p].toString();\n        const name = utils.getFunctionNameFromString(source);\n        settingsCopy.subKernels.push({\n          name: name || p,\n          source,\n          property: p,\n        });\n      }\n    }\n    const kernel = this.createKernel(fn, settingsCopy);\n\n    return kernel;\n  }\n\n  /**\n   *\n   * Combine different kernels into one super Kernel,\n   * useful to perform multiple operations inside one\n   * kernel without the penalty of data transfer between\n   * cpu and gpu.\n   *\n   * The number of kernel functions sent to this method can be variable.\n   * You can send in one, two, etc.\n   *\n   * @param {Function} subKernels - Kernel function(s) to combine.\n   * @param {Function} rootKernel - Root kernel to combine kernels into\n   *\n   * @example\n   *   combineKernels(add, multiply, function(a,b,c){\n   *     return add(multiply(a,b), c)\n   *  })\n   *\n   * @returns {Function} Callable kernel function\n   *\n   */\n  combineKernels() {\n    const firstKernel = arguments[0];\n    const combinedKernel = arguments[arguments.length - 1];\n    if (firstKernel.kernel.constructor.mode === 'cpu') return combinedKernel;\n    const canvas = arguments[0].canvas;\n    const context = arguments[0].context;\n    const max = arguments.length - 1;\n    for (let i = 0; i < max; i++) {\n      arguments[i]\n        .setCanvas(canvas)\n        .setContext(context)\n        .setPipeline(true);\n    }\n\n    return function() {\n      const texture = combinedKernel.apply(this, arguments);\n      if (texture.toArray) {\n        return texture.toArray();\n      }\n      return texture;\n    };\n  }\n\n  /**\n   * @desc Adds additional functions, that the kernel may call.\n   * @param {Function|String} source - Javascript function to convert\n   * @param {IFunctionSettings} [settings]\n   * @returns {GPU} returns itself\n   */\n  addFunction(source, settings) {\n    this.functions.push(utils.functionToIFunction(source, settings));\n    return this;\n  }\n\n  /**\n   * @desc Adds additional native functions, that the kernel may call.\n   * @param {String} name - native function name, used for reverse lookup\n   * @param {String} source - the native function implementation, as it would be defined in it's entirety\n   * @param {object} [settings]\n   * @returns {GPU} returns itself\n   */\n  addNativeFunction(name, source, settings) {\n    if (this.kernels.length > 0) {\n      throw new Error('Cannot call \"addNativeFunction\" after \"createKernels\" has been called.');\n    }\n    settings = settings || {};\n    const { argumentTypes, argumentNames } = this.Kernel.nativeFunctionArguments(source) || {};\n    this.nativeFunctions.push({\n      name,\n      source,\n      settings,\n      argumentTypes,\n      argumentNames,\n      returnType: settings.returnType || this.Kernel.nativeFunctionReturnType(source),\n    });\n    return this;\n  }\n\n  /**\n   * @desc Destroys all memory associated with gpu.js & the webGl if we created it\n   */\n  destroy() {\n    if (!this.kernels) return;\n    // perform on next run loop - for some reason we dont get lose context events\n    // if webGl is created and destroyed in the same run loop.\n    setTimeout(() => {\n      for (let i = 0; i < this.kernels.length; i++) {\n        this.kernels[i].destroy(true); // remove canvas if exists\n      }\n      // all kernels are associated with one context, go ahead and take care of it here\n      let firstKernel = this.kernels[0];\n      if (firstKernel) {\n        // if it is shortcut\n        if (firstKernel.kernel) {\n          firstKernel = firstKernel.kernel;\n        }\n        if (firstKernel.constructor.destroyContext) {\n          firstKernel.constructor.destroyContext(this.context);\n        }\n      }\n    }, 0);\n  }\n}\n\n\nfunction upgradeDeprecatedCreateKernelSettings(settings) {\n  if (!settings) {\n    return {};\n  }\n  const upgradedSettings = Object.assign({}, settings);\n\n  if (settings.hasOwnProperty('floatOutput')) {\n    utils.warnDeprecated('setting', 'floatOutput', 'precision');\n    upgradedSettings.precision = settings.floatOutput ? 'single' : 'unsigned';\n  }\n  if (settings.hasOwnProperty('outputToTexture')) {\n    utils.warnDeprecated('setting', 'outputToTexture', 'pipeline');\n    upgradedSettings.pipeline = Boolean(settings.outputToTexture);\n  }\n  if (settings.hasOwnProperty('outputImmutable')) {\n    utils.warnDeprecated('setting', 'outputImmutable', 'immutable');\n    upgradedSettings.immutable = Boolean(settings.outputImmutable);\n  }\n  if (settings.hasOwnProperty('floatTextures')) {\n    utils.warnDeprecated('setting', 'floatTextures', 'optimizeFloatMemory');\n    upgradedSettings.optimizeFloatMemory = Boolean(settings.floatTextures);\n  }\n  return upgradedSettings;\n}\n\nmodule.exports = {\n  GPU,\n  kernelOrder,\n  kernelTypes\n};","const { utils } = require('./utils');\n\n/**\n *\n * @param name\n * @param source\n * @returns {Function}\n */\nfunction alias(name, source) {\n  const fnString = source.toString();\n  return new Function(`return function ${ name } (${ utils.getArgumentNamesFromString(fnString).join(', ') }) {\n  ${ utils.getFunctionBodyFromString(fnString) }\n}`)();\n}\n\nmodule.exports = {\n  alias\n};","const { GPU } = require('./gpu');\nconst { alias } = require('./alias');\nconst { utils } = require('./utils');\nconst { Input, input } = require('./input');\nconst { Texture } = require('./texture');\nconst { FunctionBuilder } = require('./backend/function-builder');\nconst { FunctionNode } = require('./backend/function-node');\nconst { CPUFunctionNode } = require('./backend/cpu/function-node');\nconst { CPUKernel } = require('./backend/cpu/kernel');\n\nconst { HeadlessGLKernel } = require('./backend/headless-gl/kernel');\n\nconst { WebGLFunctionNode } = require('./backend/web-gl/function-node');\nconst { WebGLKernel } = require('./backend/web-gl/kernel');\n\nconst { WebGL2FunctionNode } = require('./backend/web-gl2/function-node');\nconst { WebGL2Kernel } = require('./backend/web-gl2/kernel');\n\nconst { GLKernel } = require('./backend/gl/kernel');\n\nconst { Kernel } = require('./backend/kernel');\n\nmodule.exports = {\n  alias,\n  CPUFunctionNode,\n  CPUKernel,\n  GPU,\n  FunctionBuilder,\n  FunctionNode,\n  HeadlessGLKernel,\n  Input,\n  input,\n  Texture,\n  utils,\n  WebGL2FunctionNode,\n  WebGL2Kernel,\n  WebGLFunctionNode,\n  WebGLKernel,\n  GLKernel,\n  Kernel,\n};","const { GPU } = require('gpu.js');\n\nlet gpuInstance = null;\n\nfunction setup(value) {\n  gpuInstance = value;\n}\n\nfunction teardown() {\n  if (gpuInstance) {\n    gpuInstance.destroy();\n  }\n  gpuInstance = null;\n}\n\nfunction makeKernel(fn, settings) {\n  if (gpuInstance === null) {\n    setup(new GPU({ mode: 'gpu' }));\n  }\n  if (settings.hasOwnProperty('map')) {\n    return gpuInstance\n      .createKernelMap(settings.map, fn, settings)\n      .setPipeline(true);\n  }\n  return gpuInstance\n    .createKernel(fn, settings)\n    .setPipeline(true);\n}\n\nfunction makeDevKernel(fn, settings) {\n  if (settings && settings.map) {\n    throw new Error('map kernels are not supported by dev kernels');\n  }\n  const gpu = new GPU({ mode: 'dev' });\n  return gpu.createKernel(fn, settings);\n}\n\nfunction kernelInput(input, size) {\n  return GPU.input(input, size);\n}\n\nmodule.exports = { setup, teardown, makeKernel, makeDevKernel, kernelInput };\n","module.exports = function zeros(size) {\n  return new Float32Array(size);\n};\n","const zeros = require('./zeros');\n\nmodule.exports = function zeros2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = zeros(width);\n  }\n  return result;\n};\n","const zeros2D = require('./zeros-2d');\n\nmodule.exports = function zeros3D(width, height, depth) {\n  const result = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = zeros2D(width, height);\n  }\n  return result;\n}\n","const zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nclass Base {\n  static get defaults() {\n    return {\n      width: 1,\n      height: 1,\n      depth: 1,\n      weights: null,\n      deltas: null,\n      name: null,\n      praxisOpts: null,\n    };\n  }\n\n  constructor(settings) {\n    // size\n    this.width = null;\n    this.height = null;\n\n    // what matters :P\n    this.deltas = null;\n    this.weights = null;\n\n    this.praxis = null;\n    this.praxisOpts = null;\n\n    if (this.constructor !== Base) {\n      Object.assign(this, Base.defaults, settings);\n    }\n    Object.assign(this, this.constructor.defaults, settings);\n\n    // special settings\n    this.setupPraxis(settings);\n  }\n\n  setupPraxis(settings) {\n    if (!settings) return;\n    if (settings.hasOwnProperty('praxis')) {\n      if (typeof settings.praxis === 'function') {\n        this.praxis = settings.praxis(this, settings.praxisOpts);\n      } else {\n        this.praxis = settings.praxis;\n      }\n    }\n  }\n\n  /*\n  get weights() {\n    return this._weights;\n  }\n\n  set weights(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.weights being set with improper value height`);\n      }\n    }\n    this._weights = value;\n  }\n\n  get deltas() {\n    return this._deltas;\n  }\n\n  set deltas(value) {\n    if (value) {\n      if (value[0].length !== this.width) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value width`);\n      }\n      if (value.length !== this.height) {\n        throw new Error(`${this.constructor.name}.deltas being set with improper value height`);\n      }\n    }\n    this._deltas = value;\n  } */\n\n  validate() {\n    if (Number.isNaN(this.height)) {\n      throw new Error(`${this.constructor.name} layer height is not a number`);\n    }\n    if (Number.isNaN(this.width)) {\n      throw new Error(`${this.constructor.name} layer width is not a number`);\n    }\n    if (this.height < 1) {\n      throw new Error(`${this.constructor.name} layer height is less than 1`);\n    }\n    if (this.width < 1) {\n      throw new Error(`${this.constructor.name} layer width is less than 1`);\n    }\n  }\n\n  setupKernels() {\n    // console.log(`${this.constructor.name}-setupKernels is not yet implemented`)\n  }\n\n  reuseKernels(layer) {\n    if (layer.width !== this.width) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${layer.width} is not ${\n          this.width\n        }`\n      );\n    }\n    if (layer.height !== this.height) {\n      throw new Error(\n        `${this.constructor.name} kernel width mismatch ${\n          layer.height\n        } is not ${this.height}`\n      );\n    }\n    if (layer.hasOwnProperty('predictKernel')) {\n      this.predictKernel = layer.predictKernel;\n    }\n    if (layer.hasOwnProperty('compareKernel')) {\n      this.compareKernel = layer.compareKernel;\n    }\n    this.praxis = layer.praxis;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  // eslint-disable-next-line\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n\n    // TODO: put into a kernel\n    if (this.depth > 1) {\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n    } else {\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  toArray() {\n    return this.weights.toArray();\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    if (this.constructor !== Base) {\n      Object.assign(defaults, Base.defaults, defaults);\n    }\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key === 'deltas') continue;\n      if (key === 'name' && this[key] === null) continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n}\n\nmodule.exports = {\n  Base\n};\n","const { Base } = require('./base');\n\nclass Activation extends Base {}\nclass Internal {}\nclass Filter extends Base {}\nclass Model extends Base {}\nclass Modifier extends Base {}\nclass Operator extends Base {}\n\nmodule.exports = { Activation, Internal, Filter, Model, Modifier, Operator };\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Operator } = require('./types');\n\nfunction predict(inputWeights1, inputWeights2) {\n  return inputWeights1[this.thread.y][this.thread.x] + inputWeights2[this.thread.y][this.thread.x];\n}\n\nclass Add extends Operator {\n  constructor(inputLayer1, inputLayer2, settings) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.width = this.inputLayer1.width;\n    this.height = this.inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n    this.setupPraxis(settings);\n  }\n\n  validate() {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.width) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.width\n        }`\n      );\n    }\n\n    if (this.inputLayer1.height !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer height mismatch of ${this.inputLayer1.height} and ${\n          this.inputLayer2.height\n        }`\n      );\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n  }\n\n  // eslint-disable-next-line\n  compare() {\n    this.inputLayer1.deltas = this.deltas;\n    this.inputLayer2.deltas = this.deltas;\n  }\n}\n\nfunction add(inputLayer1, inputLayer2, settings) {\n  return new Add(inputLayer1, inputLayer2, settings);\n}\n\nmodule.exports = { Add, add, predict };\n","class Base {\n  static get defaults() {\n    return {};\n  }\n\n  constructor(layer, settings = {}) {\n    this.layer = layer;\n    this.width = layer.width || null;\n    this.height = layer.height || null;\n    this.depth = layer.depth || null;\n    Object.assign(this, this.constructor.defaults, settings);\n  }\n\n  setupKernels() {}\n\n  run() {}\n}\n\nmodule.exports = {\n  Base\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Base } = require('./base');\n\nfunction updateChange(value) {\n  return value;\n}\n\nfunction update(changes, weights, incomingWeights, inputDeltas) {\n  const lastChange = changes[this.thread.y][this.thread.x];\n  const inputDelta = inputDeltas[this.thread.y][0];\n  const weight = weights[this.thread.y][this.thread.x];\n  const incoming = incomingWeights[this.thread.x][0];\n\n  const change = this.constants.learningRate * inputDelta * incoming + this.constants.momentum * lastChange;\n  updateChange(change);\n  return weight + change;\n}\n\nclass ArthurDeviationWeights extends Base {\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      momentum: 0.1\n    };\n  }\n\n  constructor(layer, settings) {\n    super(layer, settings);\n    this.weightsLayer = null;\n    this.incomingLayer = null;\n    this.deltaLayer = null;\n\n    if (settings) {\n      if (settings.weightsLayer) {\n        this.weightsLayer = settings.weightsLayer\n      }\n      if (settings.incomingLayer) {\n        this.incomingLayer = settings.incomingLayer;\n      }\n      if (settings.deltaLayer) {\n        this.deltaLayer = settings.deltaLayer;\n      }\n    }\n\n    this.changes = zeros2D(layer.width, layer.height);\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(\n      this.changes,\n      this.weightsLayer.weights,\n      this.incomingLayer.weights,\n      this.deltaLayer.deltas\n    );\n    this.changes = output.changes;\n    return output.result;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      map: {\n        changes: updateChange\n      },\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.learningRate,\n        momentum: this.momentum\n      }\n    });\n  }\n}\n\nfunction arthurDeviationWeights(layer, settings) {\n  return new ArthurDeviationWeights(layer, settings);\n}\n\nmodule.exports = {\n  ArthurDeviationWeights,\n  arthurDeviationWeights\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst { Base } = require('./base');\n\nfunction update(weights, deltas) {\n  return weights[this.thread.y][this.thread.x] + this.constants.learningRate * deltas[this.thread.y][this.thread.x];\n}\n\nclass ArthurDeviationBiases extends Base {\n  static get defaults() {\n    return {\n      learningRate: 0.3\n    };\n  }\n\n  constructor(layer, settings) {\n    super(layer, settings);\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(layer.weights, layer.deltas);\n    return output;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        learningRate: this.learningRate\n      }\n    });\n  }\n}\n\nfunction arthurDeviationBiases(layer, settings) {\n  return new ArthurDeviationBiases(layer, settings);\n}\n\nmodule.exports = {\n  ArthurDeviationBiases,\n  arthurDeviationBiases\n};\n","module.exports = function randomWeight() {\n  return Math.random() * 0.4 - 0.2;\n}\n","const randomWeight = require('./random-weight');\n\nmodule.exports = function randos(size) {\n  const array = new Float32Array(size);\n  for (let i = 0; i < size; i++) {\n    array[i] = randomWeight();\n  }\n  return array;\n};\n","const randos = require('./randos');\n\nmodule.exports = function randos2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = randos(width);\n  }\n  return result;\n}\n","const { Model } = require('./types');\nconst randos2D = require('../utilities/randos-2d');\nconst zeros2D = require('../utilities/zeros-2d');\n\nclass Random extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = randos2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nfunction random(settings) {\n  return new Random(settings);\n}\n\nmodule.exports = {\n  Random,\n  random\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Operator } = require('./types');\n\nfunction predict(weights1, weights2) {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += weights1[this.thread.y][i] * weights2[i][this.thread.x];\n  }\n  return sum;\n}\n\nfunction compareFromX(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[this.thread.y][i] * inputWeights[this.thread.x][i];\n  }\n  return sum;\n}\n\nfunction compareFromY(deltas, inputDeltas, inputWeights) {\n  let sum = inputDeltas[this.thread.y][this.thread.x];\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += deltas[i][this.thread.x] * inputWeights[i][this.thread.y];\n  }\n  return sum;\n}\n\nclass Multiply extends Operator {\n  constructor(inputLayer1, inputLayer2, settings = {}) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n    this.compareKernel1 = null;\n    this.compareKernel2 = null;\n\n    this.width = inputLayer2.width;\n    this.height = inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n\n    this.setupPraxis(settings);\n  }\n\n  validate() {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.height\n        }`\n      );\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      constants: {\n        size: this.inputLayer2.height,\n      },\n    });\n    this.compareKernel1 = makeKernel(compareFromX, {\n      output: [this.inputLayer1.width, this.inputLayer1.height],\n      constants: {\n        size: this.inputLayer2.width,\n      },\n    });\n    this.compareKernel2 = makeKernel(compareFromY, {\n      output: [this.inputLayer2.width, this.inputLayer2.height],\n      constants: {\n        size: this.inputLayer1.height,\n      },\n    });\n  }\n\n  reuseKernels(layer) {\n    super.reuseKernels(layer);\n    this.compareKernel1 = layer.compareKernel1;\n    this.compareKernel2 = layer.compareKernel2;\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer1.weights,\n      this.inputLayer2.weights\n    );\n  }\n\n  compare() {\n    const newDeltas1 = this.compareKernel1(\n      this.deltas,\n      this.inputLayer1.deltas,\n      this.inputLayer2.weights\n    );\n    const newDeltas2 = this.compareKernel2(\n      this.deltas,\n      this.inputLayer2.deltas,\n      this.inputLayer1.weights\n    );\n    this.inputLayer2.deltas = newDeltas2;\n    this.inputLayer1.deltas = newDeltas1;\n  }\n}\n\nfunction multiply(inputLayer1, inputLayer2, settings) {\n  return new Multiply(inputLayer1, inputLayer2, settings);\n}\n\nmodule.exports = { Multiply, multiply, predict, compareFromX, compareFromY };\n","const { Activation } = require('./types');\nconst { makeKernel, makeDevKernel } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/sigmoid');\nconst zeros2D = require('../utilities/zeros-2d');\n\nfunction predict(inputs) {\n  return 1 / (1 + Math.exp(-inputs[this.thread.y][this.thread.x]));\n}\n\nfunction compare(weights, deltas) {\n  const weight = weights[this.thread.y][this.thread.x];\n  const delta = deltas[this.thread.y][this.thread.x];\n  return weight * (1 - weight) * delta;\n}\n\nclass Sigmoid extends Activation {\n  constructor(inputLayer, settings) {\n    super();\n    this.inputLayer = inputLayer;\n\n    const { width, height } = inputLayer;\n    this.width = width;\n    this.height = height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n    this.setupPraxis(settings);\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n      functions: [activate],\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n      functions: [measure],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction sigmoid(inputLayer, settings) {\n  return new Sigmoid(inputLayer, settings);\n}\n\nmodule.exports = { Sigmoid, sigmoid, predict, compare };\n","const { arthurDeviationWeights } = require('../praxis/arthur-deviation-weights');\nconst { arthurDeviationBiases } = require('../praxis/arthur-deviation-biases');\nconst { add } = require('./add');\nconst { random } = require('./random');\nconst { multiply } = require('./multiply');\nconst { sigmoid } = require('./sigmoid');\n\nfunction noopPraxis() {\n  return { run: (layer) => layer.weights };\n}\n\nfunction arthurFeedForward(settings, inputLayer) {\n  const { height } = settings;\n  function weightsPraxis(layer, settings) {\n    return arthurDeviationWeights(layer, settings);\n  }\n  function biasesPraxis(layer, settings) {\n    return arthurDeviationBiases(layer, settings);\n  }\n  const weightsLayer = random({\n    name: 'weights',\n    height,\n    width: inputLayer.height,\n    praxis: weightsPraxis,\n  });\n\n  const biasesLayer = random({\n    name: 'biases',\n    height,\n    praxis: biasesPraxis,\n  });\n\n  const multiplyLayer = multiply(weightsLayer, inputLayer, { praxis: noopPraxis });\n  const addLayer = add(multiplyLayer, biasesLayer, { praxis: noopPraxis });\n  const sigmoidLayer = sigmoid(addLayer, { praxis: noopPraxis });\n\n  weightsLayer.praxis.weightsLayer = weightsLayer;\n  weightsLayer.praxis.incomingLayer = inputLayer;\n  weightsLayer.praxis.deltaLayer = sigmoidLayer;\n  return sigmoidLayer;\n}\n\nmodule.exports = {\n  arthurFeedForward\n};\n","function setStride(layer, settings) {\n  const { defaults } = layer.constructor;\n\n  if (settings.hasOwnProperty('stride')) {\n    layer.strideX = settings.stride;\n    layer.strideY = settings.stride;\n  } else {\n    if (settings.hasOwnProperty('strideX')) {\n      layer.strideX = settings.strideX;\n    } else {\n      layer.strideX = defaults.stride;\n    }\n\n    if (settings.hasOwnProperty('strideY')) {\n      layer.strideY = settings.strideY;\n    } else {\n      layer.strideY = defaults.stride;\n    }\n  }\n}\n\nfunction setPadding(layer, settings) {\n  const { defaults } = layer.constructor;\n\n  if (settings.hasOwnProperty('padding')) {\n    layer.paddingX = settings.padding;\n    layer.paddingY = settings.padding;\n  } else {\n    if (settings.hasOwnProperty('paddingX')) {\n      layer.paddingX = settings.paddingX;\n    } else {\n      layer.paddingX = defaults.padding;\n    }\n\n    if (settings.hasOwnProperty('paddingY')) {\n      layer.paddingY = settings.paddingY;\n    } else {\n      layer.paddingY = defaults.padding;\n    }\n  }\n}\n\nmodule.exports = { setStride, setPadding };\n","const rondos2D = require('./randos-2d');\n\nmodule.exports = function randos3D(width, height, depth) {\n  const result = new Array(depth);\n  for (let z = 0; z < depth; z++) {\n    result[z] = rondos2D(width, height);\n  }\n  return result;\n}\n","module.exports = function values(size, value) {\n  return new Float32Array(size).fill(value);\n}","const { makeKernel } = require('../utilities/kernel');\nconst { setStride, setPadding } = require('../utilities/layer-setup');\nconst { Filter } = require('./types');\nconst randos = require('../utilities/randos');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros3D = require('../utilities/zeros-3d');\nconst values = require('../utilities/values');\n\nfunction predict(inputs, filters, biases) {\n  const startFilterX = this.constants.paddingX - (this.thread.x * this.constants.strideX);\n  const startInputX = (this.thread.x * this.constants.strideX) - this.constants.paddingX;\n  const endFilterX = Math.min(this.constants.filterWidth, startFilterX + this.constants.inputWidth);\n\n  const startFilterY = this.constants.paddingY - (this.thread.y * this.constants.strideY);\n  const startInputY = (this.thread.y * this.constants.strideY) - this.constants.paddingY;\n  const endFilterY = Math.min(this.constants.filterHeight, startFilterY + this.constants.inputHeight);\n\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let filterY = Math.max(0, startFilterY), inputY = Math.max(0, startInputY); filterY < endFilterY; filterY++, inputY++) {\n      for (let filterX = Math.max(0, startFilterX), inputX = Math.max(0, startInputX); filterX < endFilterX; filterX++, inputX++) {\n        sum += filters[z][filterY][filterX] * inputs[z][inputY][inputX];\n      }\n    }\n  }\n  return sum + biases[this.thread.z];\n}\n\nfunction compareFilterDeltas(filterDeltas, inputs, deltas) {\n  const startDeltaX = Math.max(0, Math.ceil((this.constants.paddingX - this.thread.x) / this.constants.strideX));\n  const startInputX = startDeltaX * this.constants.strideX + this.thread.x - this.constants.paddingX;\n  const endDeltaX = Math.min(this.constants.deltaWidth, Math.floor(((this.constants.inputWidth - 1) - this.thread.x + this.constants.paddingX) / this.constants.strideX) + 1);\n\n  const startDeltaY = Math.max(0, Math.ceil((this.constants.paddingY - this.thread.y) / this.constants.strideY));\n  const startInputY = startDeltaY * this.constants.strideY + this.thread.y - this.constants.paddingY;\n  const endDeltaY = Math.min(this.constants.deltaHeight, Math.floor(((this.constants.inputHeight - 1) - this.thread.y + this.constants.paddingY) / this.constants.strideY) + 1);\n\n  let sum = filterDeltas[this.thread.z][this.thread.y][this.thread.x];\n  for (let deltaY = startDeltaY, inputY = startInputY; deltaY < endDeltaY; deltaY++, inputY += this.constants.strideY) {\n    for (let deltaX = startDeltaX, inputX = startInputX; deltaX < endDeltaX; deltaX++, inputX += this.constants.strideX) {\n      sum += inputs[this.thread.z][inputY][inputX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nfunction compareInputDeltas(inputDeltas, filters, deltas) {\n  const x = this.thread.x + this.constants.paddingX;\n  const startDeltaX = x < this.constants.filterWidth ? 0 : Math.floor((x - this.constants.filterWidth + this.constants.strideX) / this.constants.strideX);\n  const startFilterX = x - startDeltaX * this.constants.strideX;\n  const endDeltaX = Math.min(startDeltaX + Math.floor(startFilterX / this.constants.strideX) + 1, this.constants.deltaWidth);\n\n  const y = this.thread.y + this.constants.paddingY;\n  const startDeltaY = y < this.constants.filterHeight ? 0 : Math.floor((y - this.constants.filterHeight + this.constants.strideY) / this.constants.strideY);\n  const startFilterY = y - startDeltaY * this.constants.strideY;\n  const endDeltaY = Math.min(startDeltaY + Math.floor(startFilterY / this.constants.strideY) + 1, this.constants.deltaHeight);\n\n  let sum = inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n  let deltaY = startDeltaY;\n  for (let filterY = startFilterY; deltaY < endDeltaY; filterY -= this.constants.strideY, deltaY++) {\n    let deltaX = startDeltaX;\n    for (let filterX = startFilterX; deltaX < endDeltaX; filterX -= this.constants.strideX, deltaX++) {\n      sum += filters[this.thread.z][filterY][filterX] * deltas[this.constants.deltaZ][deltaY][deltaX];\n    }\n  }\n  return sum;\n}\n\nfunction compareBiases(biasDeltas, deltas) {\n  let sum = 0;\n  for (let y = 0; y < this.constants.deltaHeight; y++) {\n    for (let x = 0; x < this.constants.deltaWidth; x++) {\n      sum += deltas[this.thread.z][y][x];\n    }\n  }\n  return biasDeltas[this.thread.z][this.thread.y][this.thread.x] + sum;\n}\n\nclass Convolution extends Filter {\n  static get defaults() {\n    return {\n      stride: 0,\n      padding: 0,\n      bias: 0.1,\n      filterCount: 1,\n      filterWidth: 0,\n      filterHeight: 0,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n\n    this.stride = null;\n    this.strideX = null;\n    this.strideY = null;\n    setStride(this, settings);\n\n    this.padding = null;\n    this.paddingX = null;\n    this.paddingY = null;\n    setPadding(this, settings);\n\n    this.filterCount = settings.filterCount;\n    this.filterWidth = settings.filterWidth;\n    this.filterHeight = settings.filterHeight;\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    );\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n    this.depth = this.filterCount;\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.biases = values(this.depth, this.bias);\n    this.biasDeltas = randos(this.depth);\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n\n    this.learnFilters = null;\n    this.learnInputs = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n    });\n\n    this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n      constants: {\n        deltasWidth: this.width,\n        deltasHeight: this.height,\n        deltasDepth: this.depth,\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        inputDepth: this.inputLayer.depth,\n        strideX: this.strideX,\n        strideY: this.strideY,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterWidth: this.filterWidth,\n        filterHeight: this.filterHeight,\n      },\n      output: [this.width, this.height, this.depth],\n    });\n\n    this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n      constants: {\n        filterCount: this.filterCount,\n      },\n      output: [\n        this.inputLayer.width,\n        this.inputLayer.height,\n        this.inputLayer.depth,\n      ],\n    });\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [1, 1, this.depth],\n      constants: {\n        deltaWidth: this.width,\n        deltaHeight: this.height,\n      },\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare() {\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      this.filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n    this.biasDeltas = this.compareBiasesKernel(this.biasDeltas, this.deltas);\n    this.deltas = this.compareInputDeltasKernel(this.filters, this.inputLayer.deltas);\n    this.inputLayer.deltas = this.deltas;\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    // TODO: handle filters\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n  }\n}\n\nfunction convolution(settings, inputLayer) {\n  return new Convolution(settings, inputLayer);\n}\n\nmodule.exports = {\n  Convolution,\n  convolution,\n  predict,\n  compareFilterDeltas,\n  compareInputDeltas,\n  compareBiases\n};\n","const { Filter } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\n\n// TODO: implement random in glsl in gpu.js\nfunction trainingPredict(inputs) {\n  if (Math.random() < this.constants.probability) {\n    return 0;\n  }\n  return inputs[this.thread.y][this.thread.x];\n}\n\nfunction predict(inputs) {\n  return inputs[this.thread.y][this.thread.x] * this.constants.probability;\n}\n\nclass Dropout extends Filter {\n  static get defaults() {\n    return {\n      width: 0,\n      height: 0,\n      depth: 0,\n      probability: 0.5,\n      isTraining: false,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    if (this.isTraining) {\n      this.predictKernel = makeKernel(trainingPredict, {\n        output: [this.width, this.height, this.depth],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height, this.depth],\n      });\n    }\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    this.deltas = this.learnKernel(this.deltas);\n  }\n}\n\nfunction dropout(settings, inputLayer) {\n  return new Dropout(settings, inputLayer);\n}\n\nmodule.exports = { Dropout, dropout, trainingPredict, predict };\n","const { random } = require('./random');\nconst { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { sigmoid } = require('./sigmoid');\n\nfunction feedForward(settings, input) {\n  const { height } = settings;\n  const weights = random({ name: 'weights', height, width: input.height });\n  const biases = random({ name: 'biases', height });\n  return sigmoid(add(multiply(weights, input), biases));\n}\n\nmodule.exports = {\n  feedForward\n};\n","const { Filter } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\nconst values = require('../utilities/values');\nconst randos2D = require('../utilities/randos-2d');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction predict(inputs, filters, biases) {\n  let output = 0;\n  let i = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      output += inputs[y][x] * filters[this.thread.x][i];\n      i++;\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nfunction predict3D(inputs, filters, biases) {\n  let output = 0;\n  let i = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        output += inputs[z][y][x] * filters[this.thread.x][i];\n        i++;\n      }\n    }\n  }\n  return output + biases[this.thread.x];\n}\n\nfunction compareInputDeltas(inputDeltas, deltas, filters) {\n  let sum = 0;\n  const filterX = this.thread.x + (this.thread.y * this.output.x);\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.y][this.thread.x];\n}\n\nfunction compareInputDeltas3D(inputDeltas, deltas, filters) {\n  let sum = 0;\n  const filterX = this.thread.x + (this.thread.y * this.output.x);\n  for (let filterY = 0; filterY < this.constants.filterCount; filterY++) {\n    sum += filters[filterY][filterX] * deltas[0][filterY];\n  }\n  return sum + inputDeltas[this.thread.z][this.thread.y][this.thread.x];\n}\n\nfunction compareBiases(biases, deltas) {\n  return biases[this.thread.x] + deltas[this.thread.y][this.thread.x];\n}\n\nfunction compareFilterDeltas(filterDeltas, inputWeights, deltas) {\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[this.thread.y][this.thread.x] * deltas[this.constants.deltaY][this.constants.deltaX]);\n}\n\nfunction compareFilterDeltas3D(filterDeltas, inputWeights, deltas) {\n  const inputZ = Math.floor(this.thread.x / (this.constants.inputWidth * this.constants.inputHeight));\n  const inputY = Math.floor((this.thread.x - inputZ * this.constants.inputWidth * this.constants.inputHeight) / this.constants.inputWidth);\n  const inputX = this.thread.x - this.constants.inputWidth * (inputY + this.constants.inputHeight * inputZ);\n  return filterDeltas[this.thread.y][this.thread.x] + (inputWeights[inputZ][inputY][inputX] * deltas[0][this.thread.y]);\n}\n\nclass FullyConnected extends Filter {\n  static get defaults() {\n    return {\n      bias: 0.1,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n    this.compareFilterDeltasKernel = null;\n    this.compareInputDeltasKernel = null;\n    this.compareBiasesKernel = null;\n\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n\n    this.biases = values(this.height, this.bias);\n    this.biasDeltas = zeros(this.height);\n\n    this.filters = randos2D(connectionCount, this.height);\n    this.filterDeltas = zeros2D(connectionCount, this.height);\n\n    if (this.depth > 1) {\n      this.weights = randos3D(this.width, this.height);\n      this.deltas = zeros3D(this.width, this.height);\n    } else if (this.height > 1) {\n      this.weights = randos2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n    }\n  }\n\n  validate() {\n    super.validate();\n    if (this.depth > 1) throw new Error('depth not supported');\n  }\n\n  setupKernels() {\n    const { inputLayer } = this;\n    const connectionCount = inputLayer.width * inputLayer.height * inputLayer.depth;\n    if (inputLayer.depth > 1) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n          inputDepth: inputLayer.depth,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas3D, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n          inputHeight: inputLayer.height,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas3D, {\n        output: [inputLayer.width, inputLayer.height, inputLayer.depth],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [this.width, this.height],\n        constants: {\n          inputHeight: inputLayer.height,\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareFilterDeltasKernel = makeKernel(compareFilterDeltas, {\n        output: [connectionCount, this.height],\n        constants: {\n          inputWidth: inputLayer.width,\n        },\n      });\n\n      this.compareInputDeltasKernel = makeKernel(compareInputDeltas, {\n        output: [inputLayer.width, inputLayer.height],\n        constants: {\n          filterCount: this.height,\n        },\n      });\n    }\n\n    this.compareBiasesKernel = makeKernel(compareBiases, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(\n      this.inputLayer.weights,\n      this.filters,\n      this.biases\n    );\n  }\n\n  compare() {\n    this.inputLayer.deltas = this.compareInputDeltasKernel(\n      this.inputLayer.deltas,\n      this.deltas,\n      this.filters\n    );\n\n    // TODO: handle biasDeltas learn\n    this.biasDeltas = this.compareBiasesKernel(this.biases, this.deltas);\n\n    // TODO: handle filterDeltas learn\n    this.filterDeltas = this.compareFilterDeltasKernel(\n      this.filterDeltas,\n      this.inputLayer.weights,\n      this.deltas\n    );\n  }\n}\n\nfunction fullyConnected(settings, inputLayer) {\n  return new FullyConnected(settings, inputLayer);\n}\n\nmodule.exports = { FullyConnected, fullyConnected, predict, predict3D, compareInputDeltas, compareInputDeltas3D, compareBiases, compareFilterDeltas, compareFilterDeltas3D };\n","const { makeKernel } = require('../utilities/kernel');\nconst { Modifier } = require('./types');\n\nfunction predict(weights) {\n  return -weights[this.thread.y][this.thread.x];\n}\n\nclass Negative extends Modifier {\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n}\n\nfunction negative(settings, inputLayer) {\n  return new Negative(settings, inputLayer);\n}\n\nmodule.exports = { Negative, negative, predict };\n","const { makeKernel } = require('../utilities/kernel');\nconst { Operator } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\n\nfunction predict(weights, inputLayerWeights) {\n  return (\n    weights[this.thread.y][this.thread.x] *\n    inputLayerWeights[this.thread.y][this.thread.x]\n  );\n}\n\nfunction compare(weights, deltas) {\n  return (\n    weights[this.thread.y][this.thread.x] * deltas[this.thread.y][this.thread.x]\n  );\n}\n\nclass MultiplyElement extends Operator {\n  constructor(inputLayer1, inputLayer2) {\n    super();\n    this.inputLayer1 = inputLayer1;\n    this.inputLayer2 = inputLayer2;\n\n    this.width = inputLayer1.width;\n    this.height = inputLayer1.height;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  validate() {\n    super.validate();\n    if (this.inputLayer1.width !== this.inputLayer2.width) {\n      throw new Error(\n        `Layer width mismatch of ${this.inputLayer1.width} and ${\n          this.inputLayer2.width\n        }`\n      );\n    }\n\n    if (this.inputLayer1.height !== this.inputLayer2.height) {\n      throw new Error(\n        `Layer height mismatch of ${this.inputLayer1.height} and ${\n          this.inputLayer2.height\n        }`\n      );\n    }\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.weights, this.inputLayer.weights);\n  }\n\n  compare() {\n    this.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction multiplyElement(inputLayer1, inputLayer2) {\n  return new MultiplyElement(inputLayer1, inputLayer2);\n}\n\nmodule.exports = { MultiplyElement, multiplyElement };\n","module.exports = function ones(size) {\n  return new Float32Array(size).fill(1);\n}\n","const ones = require('./ones');\n\nmodule.exports = function ones2D(width, height) {\n  const result = new Array(height);\n  for (let y = 0; y < height; y++) {\n    result[y] = ones(width);\n  }\n  return result;\n}\n","const ones2D = require('../utilities/ones-2d');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { Model } = require('./types');\n\nclass Ones extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = ones2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n}\n\nfunction ones(settings) {\n  return new Ones(settings);\n}\n\nmodule.exports = {\n  Ones,\n  ones\n};\n","const { Activation } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\nconst { tanhDerivative } = require('../activation/tanh');\nconst zeros2D = require('../utilities/zeros-2d');\n\nfunction predict(inputs) {\n  return Math.tanh(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction compare(weights, errors) {\n  return tanhDerivative(\n    weights[this.thread.y][this.thread.x],\n    errors[this.thread.y][this.thread.x]\n  );\n}\n\nclass Tanh extends Activation {\n  constructor(inputLayer) {\n    super();\n    this.inputLayer = inputLayer;\n\n    const { width, height, depth } = this.inputLayer;\n    this.width = width;\n    this.height = height;\n    this.depth = depth;\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height],\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n      functions: [tanhDerivative],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    this.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction tanh(inputLayer) {\n  return new Tanh(inputLayer);\n}\n\nmodule.exports = { Tanh, tanh, predict, compare };\n","const zeros2D = require('../utilities/zeros-2d');\nconst { Model } = require('./types');\n\nclass Zeros extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = zeros2D(this.width, this.height);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n}\n\nfunction zeros(settings) {\n  return new Zeros(settings);\n}\n\nmodule.exports = {\n  Zeros,\n  zeros\n};\n","const { add } = require('./add');\nconst { negative } = require('./negative');\nconst { multiply } = require('./multiply');\nconst { multiplyElement } = require('./multiply-element');\nconst { ones } = require('./ones');\nconst { sigmoid } = require('./sigmoid');\nconst { random } = require('./random');\nconst { tanh } = require('./tanh');\nconst { zeros } = require('./zeros');\n\nfunction gru(settings, recurrentInput, input) {\n  const { height } = settings;\n  const updateGateWeights = random({ height, width: input.height });\n  const updateGatePeepholes = random({ width: height, height });\n  const updateGateBias = zeros({ height });\n  const updateGate = sigmoid(\n    add(\n      add(\n        multiply(updateGateWeights, input),\n        multiply(updateGatePeepholes, recurrentInput)\n      ),\n      updateGateBias\n    )\n  );\n\n  const resetGateWeights = random({ height, width: input.height });\n  const resetGatePeepholes = random({ width: height, height });\n  const resetGateBias = zeros({ height });\n  const resetGate = sigmoid(\n    add(\n      add(\n        multiply(resetGateWeights, input),\n        multiply(resetGatePeepholes, recurrentInput)\n      ),\n      resetGateBias\n    )\n  );\n\n  const cellWeights = random({ height, width: input.height });\n  const cellPeepholes = random({ width: height, height });\n  const cellBias = zeros({ height });\n  const cell = tanh(\n    add(\n      add(\n        multiply(cellWeights, input),\n        multiply(cellPeepholes, multiplyElement(resetGate, recurrentInput))\n      ),\n      cellBias\n    )\n  );\n\n  // compute hidden state as gated, saturated cell activations\n  // negate updateGate\n  return add(\n    multiplyElement(\n      add(ones(updateGate.rows, updateGate.columns), negative(updateGate)),\n      cell\n    ),\n    multiplyElement(recurrentInput, updateGate)\n  );\n}\n\nmodule.exports = {\n  gru\n};\n","const { Model } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\nconst { kernelInput } = require('../utilities/kernel');\nconst { makeKernel } = require('../utilities/kernel');\n\nclass Input extends Model {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n    this.weights = null;\n    this.reshapeInput = null;\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels() {\n    if (this.width === 1) {\n      this.predict = this.predict1D;\n      this.reshapeInput = makeKernel(function(value) {\n        return value[this.thread.y];\n      }, {\n        output: [1, this.height]\n      });\n    } else {\n      this.reshapeInput = (inputs) => inputs;\n    }\n  }\n\n  predict(inputs) {\n    if (inputs.length === this.height * this.width) {\n      this.weights = kernelInput(inputs, [this.width, this.height]);\n    } else if (\n      inputs.length === this.height &&\n      inputs[0].length === this.width\n    ) {\n      this.weights = inputs;\n    } else {\n      throw new Error('Inputs are not of sized correctly');\n    }\n  }\n\n  predict1D(inputs) {\n    this.weights = this.reshapeInput(inputs);\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  toJSON() {\n    const jsonLayer = {};\n    const { defaults, name } = this.constructor;\n    const keys = Object.keys(defaults);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      if (key === 'deltas' || key === 'weights') continue;\n      jsonLayer[key] = this[key];\n    }\n    jsonLayer.type = name;\n    return jsonLayer;\n  }\n}\n\nfunction input(settings) {\n  return new Input(settings);\n}\n\nmodule.exports = {\n  Input,\n  input\n};\n","const { Activation } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\nconst lra = require('../activation/leaky-relu');\nconst activate = lra.activate;\nconst measure = lra.measure;\n\nfunction predict(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction compare(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nclass LeakyRelu extends Activation {\n  constructor(inputLayer) {\n    super();\n    this.inputLayer = inputLayer;\n    const { width, height, depth } = inputLayer;\n    this.width = width;\n    this.height = height;\n    this.depth = depth;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      functions: [activate],\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      functions: [measure],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    this.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction leakyRelu(inputLayer) {\n  return new LeakyRelu(inputLayer);\n}\n\nmodule.exports = { LeakyRelu, leakyRelu, predict, compare };\n","const { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { multiplyElement } = require('./multiply-element');\nconst { random } = require('./random');\nconst { sigmoid } = require('./sigmoid');\nconst { tanh } = require('./tanh');\nconst { zeros } = require('./zeros');\n\nfunction lstm(settings, recurrentInput, input) {\n  const { height } = settings;\n  const inputGateWeights = random({ height, width: input.height });\n  const inputGatePeepholes = random({ width: height, height });\n  const inputGateBias = zeros({ height });\n  const inputGate = sigmoid(\n    add(\n      add(\n        multiply(inputGateWeights, input),\n        multiply(inputGatePeepholes, recurrentInput)\n      ),\n      inputGateBias\n    )\n  );\n\n  const forgetGateWeights = random({ height, width: input.height });\n  const forgetGatePeepholes = random({ width: height, height });\n  const forgetGateBias = zeros({ height });\n  const forgetGate = sigmoid(\n    add(\n      add(\n        multiply(forgetGateWeights, input),\n        multiply(forgetGatePeepholes, recurrentInput)\n      ),\n      forgetGateBias\n    )\n  );\n\n  const outputGateWeights = random({ height, width: input.height });\n  const outputGatePeepholes = random({ width: height, height });\n  const outputGateBias = zeros({ height });\n  const outputGate = sigmoid(\n    add(\n      add(\n        multiply(outputGateWeights, input),\n        multiply(outputGatePeepholes, recurrentInput)\n      ),\n      outputGateBias\n    )\n  );\n\n  const memoryWeights = random({ height, width: input.height });\n  const memoryPeepholes = random({ width: height, height });\n  const memoryBias = zeros({ height });\n  const memory = tanh(\n    add(\n      add(\n        multiply(memoryWeights, input),\n        multiply(memoryPeepholes, recurrentInput)\n      ),\n      memoryBias\n    )\n  );\n\n  // compute new cell activation\n  const retainCell = multiplyElement(forgetGate, input); // what do we keep from cell\n  const writeCell = multiplyElement(inputGate, memory); // what do we write to cell\n  const cell = add(retainCell, writeCell); // new cell contents\n\n  // compute hidden state as gated, saturated cell activations\n  return multiplyElement(outputGate, tanh(cell));\n}\n\nmodule.exports = {\n  lstm\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\nconst { Filter } = require('./types');\n\nfunction compare1D(weights, targetValues) {\n  // return targetValues[this.thread.x] - weights[this.thread.y][this.thread.x];\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.x];\n}\n\nfunction compare2D(weights, targetValues) {\n  // return targetValues[this.thread.y][this.thread.x] - weights[this.thread.y][this.thread.x];\n  return weights[this.thread.y][this.thread.x] - targetValues[this.thread.y][this.thread.x];\n}\n\nclass Target extends Filter {\n  constructor(settings, inputLayer) {\n    super(settings);\n    this.inputLayer = inputLayer;\n    this.width = inputLayer.width;\n    this.height = inputLayer.height;\n    this.depth = inputLayer.depth;\n    this.validate();\n    if (this.depth > 1) {\n      this.weights = zeros3D(this.width, this.height, this.depth);\n      this.deltas = zeros3D(this.width, this.height, this.depth);\n      this.errors = zeros3D(this.width, this.height, this.depth);\n    } else if (this.height > 1) {\n      this.weights = zeros2D(this.width, this.height);\n      this.deltas = zeros2D(this.width, this.height);\n      this.errors = zeros2D(this.width, this.height);\n    } else {\n      this.weights = zeros(this.width);\n      this.deltas = zeros(this.width);\n      this.errors = zeros(this.width);\n    }\n  }\n\n  setupKernels() {\n    const compareFn = this.width === 1 ? compare1D : compare2D;\n    this.compareKernel = makeKernel(compareFn, {\n      output: [this.width, this.height]\n    });\n  }\n\n  predict() {\n    // NOTE: this looks like it shouldn't be, but the weights are immutable, and this is where they are reused.\n    this.weights = this.inputLayer.weights;\n  }\n\n  compare(targetValues) {\n    // this is where weights attach to deltas\n    // deltas will be zero on learn, so save it in error for comparing to mse later\n    this.errors = this.compareKernel(this.weights, targetValues);\n    this.deltas = this.errors;\n    this.inputLayer.deltas = this.deltas;\n  }\n}\n\nfunction target(settings, inputLayer) {\n  return new Target(settings, inputLayer);\n}\n\nmodule.exports = {\n  Target,\n  target\n};\n","const { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { random } = require('./random');\nconst { target } = require('./target');\nconst { zeros } = require('./zeros');\n\nfunction output(settings, inputLayer) {\n  const { height } = settings;\n  const outputGate = random({ height, width: inputLayer.height });\n  const output = zeros({ height });\n  const outputGateConnector = multiply(outputGate, inputLayer);\n  return target(settings, add(outputGateConnector, output));\n}\n\nmodule.exports = {\n  output\n};\n","const { Filter } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\nconst { setPadding, setStride } = require('../utilities/layer-setup');\nconst zeros3D = require('../utilities/zeros-3d');\nconst randos3D = require('../utilities/randos-3d');\n\nfunction setSwitchY(value) {\n  return value;\n}\n\nfunction setSwitchX(value) {\n  return value;\n}\n\nfunction predict(inputs) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.inputWidth -\n      this.constants.paddingX\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.inputHeight -\n      this.constants.paddingY\n  );\n  let largestValue = -Infinity;\n  let largestX = -1;\n  let largestY = -1;\n\n  // convolve centered at this particular location\n  for (let filterY = 0; filterY < this.constants.filterHeight; filterY++) {\n    // coordinates in the original input array coordinates\n    const inputY = filterY + y;\n    for (let filterX = 0; filterX < this.constants.filterWidth; filterX++) {\n      const inputX = filterX + x;\n      if (\n        inputY >= 0 &&\n        inputY < this.constants.inputHeight &&\n        inputX >= 0 &&\n        inputX < this.constants.inputWidth\n      ) {\n        const input = inputs[this.thread.z][inputY][inputX];\n        if (input > largestValue) {\n          largestValue = input;\n          largestY = inputY;\n          largestX = inputX;\n        }\n      }\n    }\n  }\n  setSwitchY(largestY);\n  setSwitchX(largestX);\n  return largestValue;\n}\n\nfunction compare(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[deltasY][deltasX];\n      const switchYValue = switchY[deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction compare3D(deltas, switchY, switchX) {\n  const x = Math.floor(\n    (this.thread.x / this.output.x) * this.constants.outputWidth\n  );\n  const y = Math.floor(\n    (this.thread.y / this.output.y) * this.constants.outputHeight\n  );\n\n  let value = 0;\n\n  for (let deltasY = 0; deltasY < this.constants.inputHeight; deltasY++) {\n    for (let deltasX = 0; deltasX < this.constants.inputWidth; deltasX++) {\n      const switchXValue = switchX[this.thread.z][deltasY][deltasX];\n      const switchYValue = switchY[this.thread.z][deltasY][deltasX];\n      if (switchXValue === x && switchYValue === y) {\n        value += deltas[this.thread.z][deltasY][deltasX];\n      }\n    }\n  }\n\n  return value;\n}\n\nclass Pool extends Filter {\n  static get defaults() {\n    return {\n      padding: 0,\n      bias: 0,\n      filterWidth: 0,\n      filterHeight: 0,\n      filterCount: 0,\n    };\n  }\n\n  constructor(settings, inputLayer) {\n    super(settings);\n\n    this.stride = null;\n    this.strideX = null;\n    this.strideY = null;\n    setStride(this, settings);\n\n    this.padding = null;\n    this.paddingX = null;\n    this.paddingY = null;\n    setPadding(this, settings);\n\n    this.filterCount = settings.filterCount;\n    this.filterWidth = settings.filterWidth;\n    this.filterHeight = settings.filterHeight;\n\n    this.width = Math.floor(\n      (inputLayer.width + this.paddingX * 2 - this.filterWidth) / this.strideX +\n        1\n    );\n    this.height = Math.floor(\n      (inputLayer.height + this.paddingY * 2 - this.filterHeight) /\n        this.strideY +\n        1\n    );\n    // TODO: handle 1 depth?\n    this.depth = this.filterCount;\n\n    this.weights = randos3D(this.width, this.height, this.depth);\n    this.deltas = zeros3D(this.width, this.height, this.depth);\n\n    this.filters = randos3D(this.filterWidth, this.filterHeight, this.filterCount);\n    this.filterDeltas = zeros3D(this.filterWidth, this.filterHeight, this.filterCount);\n\n    this.learnFilters = null;\n    this.learnInputs = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.width, this.height, this.depth],\n      map: {\n        switchX: setSwitchX,\n        switchY: setSwitchY,\n      },\n      constants: {\n        inputWidth: this.inputLayer.width,\n        inputHeight: this.inputLayer.height,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n        filterHeight: this.filterHeight,\n        filterWidth: this.filterWidth,\n      },\n    });\n\n    this.compareKernel = makeKernel(compare, {\n      output: [this.inputLayer.width, this.inputLayer.height, this.inputLayer.depth],\n      constants: {\n        outputWidth: this.width,\n        outputHeight: this.height,\n        outputDepth: this.depth,\n        paddingX: this.paddingX,\n        paddingY: this.paddingY,\n      },\n    });\n  }\n\n  predict() {\n    const weights = this.predictKernel(this.inputLayer.weights);\n    this.switchX = weights.switchX;\n    this.switchY = weights.switchY;\n    this.weights = weights.result;\n    return this.weights;\n  }\n\n  compare() {\n    debugger;\n    const depth = this.inputLayer.deltas.length;\n    const height = this.inputLayer.deltas[0].length;\n    const width = this.inputLayer.deltas[0][0].length;\n    const type = typeof this.inputLayer.deltas[0][0][0];\n    this.inputLayer.deltas = this.compareKernel(\n      this.deltas,\n      this.switchX,\n      this.switchY\n    );\n    debugger;\n    if (depth !== this.inputLayer.deltas.length) debugger;\n    if (height !== this.inputLayer.deltas[0].length) debugger;\n    if (width !== this.inputLayer.deltas[0][0].length) debugger;\n    if (type !== typeof this.inputLayer.deltas[0][0][0]) debugger;\n  }\n}\n\nfunction pool(settings, inputLayer) {\n  return new Pool(settings, inputLayer);\n}\n\nmodule.exports = { Pool, pool, predict, compare, compare3D };\n","const { Activation } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\nconst { activate, measure } = require('../activation/relu');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction predict(inputs) {\n  return activate(inputs[this.thread.y][this.thread.x]);\n}\n\nfunction compare(weights, deltas) {\n  return measure(\n    weights[this.thread.y][this.thread.x],\n    deltas[this.thread.y][this.thread.x]\n  );\n}\n\nfunction predict3D(inputs) {\n  return activate(inputs[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction compare3D(weights, deltas) {\n  return measure(\n    weights[this.thread.z][this.thread.y][this.thread.x],\n    deltas[this.thread.z][this.thread.y][this.thread.x]\n  );\n}\n\nclass Relu extends Activation {\n  constructor(inputLayer) {\n    super();\n    this.inputLayer = inputLayer;\n\n    const { width, height, depth } = inputLayer;\n    this.width = width;\n    this.height = height;\n    this.validate();\n    if (depth > 1) {\n      this.depth = depth;\n      this.weights = zeros3D(width, height, depth);\n      this.deltas = zeros3D(width, height, depth);\n    } else {\n      this.depth = 1;\n      this.weights = zeros2D(width, height);\n      this.deltas = zeros2D(width, height);\n    }\n  }\n\n  setupKernels() {\n    const { width, height, depth } = this.inputLayer;\n    if (this.depth > 1) {\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n        functions: [measure],\n      });\n    } else {\n      this.predictKernel = makeKernel(predict, {\n        output: [width, height],\n        functions: [activate],\n      });\n\n      this.compareKernel = makeKernel(compare, {\n        output: [width, height],\n        functions: [measure],\n      });\n    }\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    this.inputLayer.deltas = this.compareKernel(this.weights, this.deltas);\n  }\n}\n\nfunction relu(inputLayer) {\n  return new Relu(inputLayer);\n}\n\nmodule.exports = { Relu, relu, predict, compare, predict3D, compare3D };\n","const { relu } = require('./relu');\nconst { add } = require('./add');\nconst { multiply } = require('./multiply');\nconst { random } = require('./random');\nconst { zeros } = require('./zeros');\n\nfunction recurrent(settings, input, recurrentInput) {\n  const { height } = settings;\n\n  recurrentInput.setDimensions(1, height);\n\n  // wxh\n  const weight = random({ name: 'weight', height, width: input.height });\n  // whh\n  const transition = random({ name: 'transition', height, width: height });\n  // bhh\n  const bias = zeros({ name: 'bias', height });\n\n  return relu(\n    add(\n      add(multiply(weight, input), multiply(transition, recurrentInput)),\n      bias\n    )\n  );\n}\n\nmodule.exports = {\n  recurrent\n};\n","const { Base } = require('./base');\n\nclass Regression extends Base {\n  constructor(settings) {\n    super(settings);\n    this.validate();\n  }\n\n  predict() {\n    this.weights = this.inputs;\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(inputs, targets) {\n  return inputs[this.thread.x] - targets[this.thread.x];\n}\n\n// TODO: handle `loss += 0.5*dy*dy;` total and sum in learn\nfunction regression(settings, inputLayer) {\n  return new Regression(settings, inputLayer);\n}\n\nmodule.exports = {\n  Regression,\n  regression,\n  learn\n};\n","const { makeKernel } = require('../utilities/kernel');\nconst { Filter } = require('./types');\nconst randos = require('../utilities/randos');\nconst randos2D = require('../utilities/randos-2d');\nconst randos3D = require('../utilities/randos-3d');\nconst zeros = require('../utilities/zeros');\nconst zeros2D = require('../utilities/zeros-2d');\nconst zeros3D = require('../utilities/zeros-3d');\n\nfunction getMaxValue(inputs) {\n  let maxInput = -Infinity;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    const input = inputs[x];\n    if (input > maxInput) {\n      maxInput = input;\n    }\n  }\n  return maxInput;\n}\n\nfunction getMaxValue2D(inputs) {\n  let maxInput = -Infinity;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      const input = inputs[y][x];\n      if (input > maxInput) {\n        maxInput = input;\n      }\n    }\n  }\n  return maxInput;\n}\n\nfunction getMaxValue3D(inputs) {\n  let maxInput = -Infinity;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        const input = inputs[z][y][x];\n        if (input > maxInput) {\n          maxInput = input;\n        }\n      }\n    }\n  }\n  return maxInput;\n}\n\nfunction getSum(inputs) {\n  let sum = 0;\n  for (let x = 0; x < this.constants.inputWidth; x++) {\n    sum += inputs[x];\n  }\n  return sum;\n}\n\nfunction getSum2D(inputs) {\n  let sum = 0;\n  for (let y = 0; y < this.constants.inputHeight; y++) {\n    for (let x = 0; x < this.constants.inputWidth; x++) {\n      sum += inputs[y][x];\n    }\n  }\n  return sum;\n}\n\nfunction getSum3D(inputs) {\n  let sum = 0;\n  for (let z = 0; z < this.constants.inputDepth; z++) {\n    for (let y = 0; y < this.constants.inputHeight; y++) {\n      for (let x = 0; x < this.constants.inputWidth; x++) {\n        sum += inputs[z][y][x];\n      }\n    }\n  }\n  return sum;\n}\n\nfunction getExponentials(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.x] - maxInput[0]\n  );\n}\n\nfunction getExponentials2D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nfunction getExponentials3D(inputs, maxInput) {\n  return Math.exp(\n    inputs[this.thread.z][this.thread.y][this.thread.x] - maxInput[0]\n  );\n}\n\nfunction predict(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.x] / exponentialsSum[0]\n  );\n}\n\nfunction predict2D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nfunction predict3D(exponentials, exponentialsSum) {\n  return (\n    exponentials[this.thread.z][this.thread.y][this.thread.x] /\n    exponentialsSum[0]\n  );\n}\n\nfunction compare(target, exponentials) {\n  let indicator = 0;\n  if (this.thread.x === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.x]);\n}\n\nfunction compare2D(target, exponentials) {\n  let indicator = 0;\n  const index = this.thread.x + (this.thread.y * this.output.x);\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.y][this.thread.x]);\n}\n\nfunction compare3D(target, exponentials) {\n  let indicator = 0;\n  const index = this.thread.x\n    + (this.thread.y * this.output.x)\n    + (this.thread.z * this.output.x * this.output.y);\n  if (index === target) {\n    indicator = 1;\n  }\n  return -(indicator - exponentials[this.thread.z][this.thread.y][this.thread.x]);\n}\n\nfunction loss(exponentials) {\n  return -Math.log();\n}\n\n// TODO: handle: `return -Math.log(this.es[y]);` in learn\n\nclass SoftMax extends Filter {\n  constructor(inputLayer) {\n    super();\n    this.width = inputLayer.width;\n    this.height = inputLayer.height;\n    this.depth = inputLayer.depth;\n    this.getExponentialsKernel = null;\n    this.getMaxValueKernel = null;\n    this.getSumKernel = null;\n    this.inputLayer = inputLayer;\n    this.validate();\n    if (this.height > 1) {\n      if (this.depth > 1) {\n        this.weights = randos3D(this.width, this.height, this.depth);\n        this.deltas = zeros3D(this.width, this.height, this.depth);\n      } else {\n        this.weights = randos2D(this.width, this.height);\n        this.deltas = zeros2D(this.width, this.height);\n      }\n    } else {\n      this.weights = randos(this.width);\n      this.deltas = zeros(this.width);\n    }\n  }\n\n  setupKernels() {\n    const { width, height, depth } = this;\n    if (depth > 1) {\n      this.getExponentialsKernel = makeKernel(getExponentials3D, {\n        output: [width, height, depth],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum3D, {\n        output: [1, 1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n          inputDepth: depth,\n        },\n      });\n      this.predictKernel = makeKernel(predict3D, {\n        output: [width, height, depth],\n      });\n      this.compareKernel = makeKernel(compare3D, {\n        output: [width, height, depth],\n      });\n    } else {\n      this.getExponentialsKernel = makeKernel(getExponentials, {\n        output: [width, height],\n      });\n      this.getMaxValueKernel = makeKernel(getMaxValue2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.getSumKernel = makeKernel(getSum2D, {\n        output: [1, 1],\n        constants: {\n          inputWidth: width,\n          inputHeight: height,\n        },\n      });\n      this.predictKernel = makeKernel(predict2D, {\n        output: [width, height],\n      });\n      this.compareKernel = makeKernel(compare2D, {\n        output: [width, height],\n      });\n    }\n  }\n\n  predict() {\n    const maxValue = this.getMaxValueKernel(this.inputLayer.weights);\n    const exponentials = this.getExponentialsKernel(\n      this.inputLayer.weights,\n      maxValue\n    );\n    const exponentialsSum = this.getSumKernel(exponentials);\n    this.weights = this.predictKernel(exponentials, exponentialsSum);\n  }\n\n  compare(targetValues) {\n    this.errors = this.compareKernel(targetValues[0], this.deltas);\n    this.deltas = this.errors;\n    this.inputLayer.deltas = this.deltas;\n  }\n}\n\nfunction softMax(settings, inputLayer) {\n  return new SoftMax(settings, inputLayer);\n}\n\nmodule.exports = {\n  SoftMax, softMax,\n  getMaxValue, getMaxValue2D, getMaxValue3D,\n  getSum, getSum2D, getSum3D,\n  getExponentials, getExponentials2D, getExponentials3D,\n  predict, predict2D, predict3D,\n  compare, compare2D, compare3D,\n  loss\n};\n","const { Base } = require('./base');\n\nclass SVM extends Base {\n  predict() {\n    this.weights = this.inputs;\n    this.validate();\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n}\n\nfunction learn(target) {\n  // if(y === i) { continue; }\n  // var ydiff = -yscore + x.w[i] + margin;\n  // if(ydiff > 0) {\n  //   // violating dimension, apply loss\n  //   x.dw[i] += 1;\n  //   x.dw[y] -= 1;\n  //   loss += ydiff;\n  // }\n}\n\nfunction svm(settings, inputLayer) {\n  return new SVM(settings, inputLayer);\n}\n\nmodule.exports = {\n  SVM,\n  svm\n};\n","const { Modifier } = require('./types');\nconst { makeKernel } = require('../utilities/kernel');\n\nfunction predict(array) {\n  return array[this.thread.x][this.thread.y];\n}\n\nconst compare = predict;\n\nclass Transpose extends Modifier {\n  constructor(inputLayer) {\n    super();\n    this.inputLayer = inputLayer;\n    this.width = this.inputLayer.height;\n    this.height = this.inputLayer.width;\n    this.validate();\n  }\n\n  setupKernels() {\n    this.predictKernel = makeKernel(predict, {\n      output: [this.height, this.width],\n    });\n    this.compareKernel = makeKernel(compare, {\n      output: [this.width, this.height],\n    });\n  }\n\n  predict() {\n    this.weights = this.predictKernel(this.inputLayer.weights);\n  }\n\n  compare() {\n    // TODO: needs switched to this.compareKernel?\n    this.inputLayer.deltas = this.predictKernel(this.deltas);\n  }\n}\n\nfunction transpose(inputLayer) {\n  return new Transpose(inputLayer);\n}\n\nmodule.exports = {\n  Transpose,\n  transpose,\n};\n","const { Add, add } = require('./add');\nconst { arthurFeedForward } = require('./arthur-feed-forward');\nconst { Base } = require('./base');\nconst { Convolution, convolution } = require('./convolution');\nconst { Dropout, dropout } = require('./dropout');\nconst { feedForward } = require('./feed-forward');\nconst { FullyConnected, fullyConnected } = require('./fully-connected');\nconst { gru } = require('./gru');\nconst { Input, input } = require('./input');\nconst { LeakyRelu, leakyRelu } = require('./leaky-relu');\nconst { lstm } = require('./lstm');\nconst { Multiply, multiply } = require('./multiply');\nconst { MultiplyElement, multiplyElement } = require('./multiply-element');\nconst { Negative, negative } = require('./negative');\nconst { Ones, ones } = require('./ones');\nconst { output } = require('./output');\nconst { Pool, pool } = require('./pool');\nconst { Random, random } = require('./random');\nconst { recurrent } = require('./recurrent');\nconst { Regression, regression } = require('./regression');\nconst { Relu, relu } = require('./relu');\nconst { Sigmoid, sigmoid } = require('./sigmoid');\nconst { SoftMax, softMax } = require('./soft-max');\nconst { SVM, svm } = require('./svm');\nconst { Tanh, tanh } = require('./tanh');\nconst { Target, target } = require('./target');\nconst { Transpose, transpose } = require('./transpose');\nconst { Zeros, zeros } = require('./zeros');\n\n/**\n * @description Layer API, to make it easier to use layers for the world\n */\nmodule.exports = {\n  Add,\n  add,\n  arthurFeedForward,\n  Base,\n  Convolution,\n  convolution,\n  Dropout,\n  dropout,\n  feedForward,\n  FullyConnected,\n  fullyConnected,\n  gru,\n  Input,\n  input,\n  LeakyRelu,\n  leakyRelu,\n  lstm,\n  Multiply,\n  multiply,\n  MultiplyElement,\n  multiplyElement,\n  Negative,\n  negative,\n  Ones,\n  ones,\n  output,\n  Pool,\n  pool,\n  Random,\n  random,\n  recurrent,\n  Regression,\n  regression,\n  Relu,\n  relu,\n  Sigmoid,\n  sigmoid,\n  SoftMax,\n  softMax,\n  SVM,\n  svm,\n  Tanh,\n  tanh,\n  Target,\n  target,\n  Transpose,\n  transpose,\n  Zeros,\n  zeros,\n};\n","/**\n *\n * @param {*} input\n * @param {NeuralNetwork} net\n * @returns {*}\n */\nmodule.exports = function likely(input, net) {\n  const output = net.run(input);\n  let maxProp = null;\n  let maxValue = -1;\n\n  Object.keys(output).forEach(key => {\n    const value = output[key];\n    if (value > maxValue) {\n      maxProp = key;\n      maxValue = value;\n    }\n  });\n\n  return maxProp;\n}\n","/* Functions for turning sparse hashes into arrays and vice versa */\nclass lookup {\n  /**\n   * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n   * @param {Object} hashes\n   * @returns {Object}\n   */\n  static buildLookup(hashes) {\n    const reducedHash = hashes.reduce(\n      (memo, hash) => Object.assign(memo, hash),\n      {}\n    );\n\n    return lookup.lookupFromHash(reducedHash);\n  }\n\n  /**\n   * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n   * @param {Object} hash\n   * @returns {Object}\n   */\n  static lookupFromHash(hash) {\n    const lookupHash = {};\n    let index = 0;\n\n    Object.keys(hash).forEach(i => {\n      lookupHash[i] = index;\n      index += 1;\n    });\n\n    return lookupHash;\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n   * @param {*} lookupHash\n   * @param {*} hash\n   * @returns {Float32Array}\n   */\n  static toArray(lookupHash, hash) {\n    const keys = Object.keys(lookupHash);\n    const array = new Float32Array(keys.length);\n    keys.forEach(i => {\n      array[lookupHash[i]] = hash[i] || 0;\n    });\n    return array;\n  }\n\n  /**\n   * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n   * @param {Object} lookupHash\n   * @param {Array} array\n   * @returns {Object}\n   */\n  static toHash(lookupHash, array) {\n    const hash = {};\n\n    Object.keys(lookupHash).forEach(i => {\n      hash[i] = array[lookupHash[i]];\n    });\n\n    return hash;\n  }\n\n  /**\n   *\n   * @param {Array} array\n   * @returns {*}\n   */\n  static lookupFromArray(array) {\n    const lookupHash = {};\n    let z = 0;\n    let i = array.length;\n\n    while (i-- > 0) {\n      lookupHash[array[i]] = z++;\n    }\n\n    return lookupHash;\n  }\n}\n\nmodule.exports = lookup;\n","// TODO: implement and test\nclass Adam {}\n\nfunction adam() {\n  // gradient = grad_fun(theta)\n  //\n  //           # Update moment estimates\n  // moment1 = beta1 * moment1 + (1 - beta1) * gradient\n  // moment2 = beta2 * moment2 + (1 - beta2) * np.square(gradient)\n  //\n  //           # Yield adapted gradient\n  // theta = ( theta - alpha * (1 - beta2**t)**0.5 / (1 - beta1**t) *\n  //   moment1 / (epsilon + np.sqrt(moment2)) )\n  // yield theta\n  // t += 1\n  // adam update\n  // gsumi[j] = gsumi[j] * this.beta1 + (1- this.beta1) * gij; // update biased first moment estimate\n  // xsumi[j] = xsumi[j] * this.beta2 + (1-this.beta2) * gij * gij; // update biased second moment estimate\n  // var biasCorr1 = gsumi[j] * (1 - Math.pow(this.beta1, this.k)); // correct bias first moment estimate\n  // var biasCorr2 = xsumi[j] * (1 - Math.pow(this.beta2, this.k)); // correct bias second moment estimate\n  // var dx =  - this.learning_rate * biasCorr1 / (Math.sqrt(biasCorr2) + this.eps);\n  // p[j] += dx;\n}\n\nmodule.exports = {\n  Adam, adam\n};\n","const { makeKernel, makeDevKernel } = require('../utilities/kernel');\nconst zeros2D = require('../utilities/zeros-2d');\n\nconst { Base } = require('./base');\n\nfunction getMomentum(delta, decay, previousMomentum) {\n  return previousMomentum * decay + (1 - decay) * delta * delta;\n}\n\nfunction clipByValue(value, max, min) {\n  if (value > max) {\n    return max;\n  }\n  if (value < min) {\n    return min;\n  }\n  return value;\n}\n\n/**\n * @description Momentum Root Mean Square Propagation Function\n * @returns {number}\n */\nfunction update(\n  weights,\n  deltas,\n  previousMomentums\n) {\n  const delta = deltas[this.thread.y][this.thread.x];\n  const clippedDelta = clipByValue(\n    delta,\n    this.constants.clipValue,\n    -this.constants.clipValue\n  );\n  const weight = weights[this.thread.y][this.thread.x];\n  const previousMomentum = previousMomentums[this.thread.y][this.thread.x];\n  const momentum = getMomentum(\n    delta,\n    this.constants.decayRate,\n    previousMomentum\n  );\n  return (\n    weight +\n    (-this.constants.learningRate * clippedDelta) /\n      Math.sqrt(momentum + this.constants.smoothEps) -\n    this.constants.regularizationStrength * weight\n  );\n}\n\nfunction isClippedByValue(value, max, min) {\n  if (value > max) {\n    return 1;\n  }\n  if (value < min) {\n    return 1;\n  }\n  return 0;\n}\n\nclass MomentumRootMeanSquaredPropagation extends Base {\n  static get defaults() {\n    return {\n      decayRate: 0.999,\n      regularizationStrength: 0.000001,\n      learningRate: 0.01,\n      smoothEps: 1e-8,\n      clipValue: 5\n    };\n  }\n\n  constructor(layer, settings = {}) {\n    super(layer, settings);\n    this.momentums = zeros2D(layer.width, layer.height);\n    this.setupKernels();\n  }\n\n  run(layer, previousLayer, nextLayer, learningRate) {\n    const output = this.kernel(layer.weights, layer.deltas, this.momentums);\n    this.momentums = output.momentums;\n    return output.result;\n  }\n\n  setupKernels() {\n    this.kernel = makeKernel(update, {\n      output: [this.width, this.height],\n      constants: {\n        clipValue: this.clipValue,\n        decayRate: this.decayRate,\n        learningRate: this.learningRate,\n        regularizationStrength: this.regularizationStrength,\n        smoothEps: this.smoothEps,\n      },\n      functions: [clipByValue],\n      map: {\n        momentums: getMomentum,\n      },\n    });\n  }\n}\n\nfunction momentumRootMeanSquaredPropagation(layer, settings) {\n  return new MomentumRootMeanSquaredPropagation(layer, settings);\n}\n\n/**\n * @description Mathematician friendly name of MomentumRootMeanSquaredPropagation class. For those that are not mere mortals\n * @type {MomentumRootMeanSquaredPropagation}\n */\nconst MRmsProp = MomentumRootMeanSquaredPropagation;\nconst mRmsProp = momentumRootMeanSquaredPropagation;\n\nmodule.exports = {\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp,\n  getMomentum, clipByValue, isClippedByValue\n};\n","const { Adam, adam } = require('./adam');\nconst { ArthurDeviationBiases, arthurDeviationBiases } = require('./arthur-deviation-biases');\nconst { ArthurDeviationWeights, arthurDeviationWeights } = require('./arthur-deviation-weights');\nconst {\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp\n} = require('./momentum-root-mean-squared-propagation');\n\nmodule.exports = {\n  Adam, adam,\n  ArthurDeviationBiases, arthurDeviationBiases,\n  ArthurDeviationWeights, arthurDeviationWeights,\n  MomentumRootMeanSquaredPropagation, momentumRootMeanSquaredPropagation,\n  MRmsProp, mRmsProp,\n};\n","module.exports = function mse2d(errors) {\n  // mean squared error 2d\n  let sum = 0;\n  const length = errors.length * errors[0].length;\n  for (let y = 0; y < errors.length; y++) {\n    for (let x = 0; x < errors[y].length; x++) {\n      sum += errors[y][x] ** 2;\n    }\n  }\n  return sum / length;\n};\n","const layer = require('../layer');\n\nmodule.exports = function layerFromJSON(jsonLayer) {\n  if (!layer.hasOwnProperty(jsonLayer.type)) return null;\n  const Layer = layer[jsonLayer.type];\n\n  // eslint-disable-next-line\n  const realLayer = Reflect.construct(Layer, arguments)\n\n  Object.keys(jsonLayer).forEach(p => {\n    if (p !== 'type') {\n      realLayer[p] = jsonLayer[p];\n    }\n  });\n\n  return realLayer;\n}\n","module.exports = function traverseLayersFrom(layer, cb) {\n  if (layer.hasOwnProperty('inputLayer')) {\n    traverseLayersFrom(layer.inputLayer, cb);\n  } else {\n    if (layer.hasOwnProperty('inputLayer1')) {\n      traverseLayersFrom(layer.inputLayer1, cb);\n    }\n    if (layer.hasOwnProperty('inputLayer2')) {\n      traverseLayersFrom(layer.inputLayer2, cb);\n    }\n  }\n  cb(layer);\n}\n","const traverseLayersFrom = require('./traverse-layers-from');\n\nmodule.exports = function flattenLayers(layers) {\n  const result = layers.slice(0);\n  for (let i = 0; i < result.length; i++) {\n    let offset = 0;\n    traverseLayersFrom(result[i], layer => {\n      if (result.indexOf(layer) === -1) {\n        result.splice(i + offset, 0, layer);\n        offset++;\n      }\n    });\n  }\n  return result;\n}\n","const lookup = require('./lookup');\n// import TrainStream from './train-stream'\nconst mse2d = require('./utilities/mse-2d');\nconst layerFromJSON = require('./utilities/layer-from-json');\nconst praxis = require('./praxis');\nconst flattenLayers = require('./utilities/flatten-layers');\nconst { makeKernel } = require('./utilities/kernel');\n\nclass FeedForward {\n  static get trainDefaults() {\n    return {\n      iterations: 20000,\n      errorThresh: 0.005,\n      log: false,\n      logPeriod: 10,\n      learningRate: 0.3,\n      callback: null,\n      callbackPeriod: 10,\n      errorCheckInterval: 100,\n      reinforce: false,\n    };\n  }\n\n  static get defaults() {\n    return {\n      learningRate: 0.3,\n      binaryThresh: 0.5,\n      hiddenLayers: null,\n      inputLayer: null,\n      outputLayer: null,\n      praxisOpts: null,\n      praxis: (layer, settings) => praxis.momentumRootMeanSquaredPropagation(layer, settings),\n    };\n  }\n\n  /**\n   *\n   * @param options\n   * @private\n   */\n  static _validateTrainingOptions(options) {\n    const validations = {\n      iterations: val => typeof val === 'number' && val > 0,\n      errorThresh: val => typeof val === 'number' && val > 0 && val < 1,\n      log: val => typeof val === 'function' || typeof val === 'boolean',\n      logPeriod: val => typeof val === 'number' && val > 0,\n      learningRate: val => typeof val === 'number' && val > 0 && val < 1,\n      callback: val => typeof val === 'function' || val === null,\n      callbackPeriod: val => typeof val === 'number' && val > 0,\n      timeout: val => typeof val === 'number' && val > 0,\n    };\n    Object.keys(FeedForward.trainDefaults).forEach(key => {\n      if (validations.hasOwnProperty(key) && !validations[key](options[key])) {\n        throw new Error(\n          `[${key}, ${\n            options[key]\n          }] is out of normal training range, your network will probably not train.`\n        );\n      }\n    });\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  _setLogMethod(log) {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      // eslint-disable-next-line\n      this.trainOpts.log = console.log\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param opts\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number)\n   */\n  _updateTrainingOptions(opts) {\n    Object.keys(this.constructor.trainDefaults).forEach(opt => {\n      this.trainOpts[opt] = opts.hasOwnProperty(opt)\n        ? opts[opt]\n        : this.trainOpts[opt];\n    });\n    this.constructor._validateTrainingOptions(this.trainOpts);\n    this._setLogMethod(opts.log || this.trainOpts.log);\n  }\n\n  static get structure() {\n    return {\n      layers: null,\n      _inputLayer: null,\n      _outputLayer: null,\n    };\n  }\n\n  /**\n   *\n   * @param {object} options\n   * @constructor\n   */\n  constructor(options = {}) {\n    this.inputLayer = null;\n    this.hiddenLayers = null;\n    this.outputLayer = null;\n    this.praxisOpts = null;\n    this.praxis = null;\n    Object.assign(this, this.constructor.defaults, options);\n    this.trainOpts = {};\n    this._updateTrainingOptions(\n      Object.assign({}, this.constructor.trainDefaults, options)\n    );\n    Object.assign(this, this.constructor.structure);\n  }\n\n  _connectLayers() {\n    const layers = [];\n    this._inputLayer = this.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(this._inputLayer);\n    this._outputLayer = this.outputLayer(\n      hiddenLayers[hiddenLayers.length - 1],\n      hiddenLayers.length\n    );\n    layers.push(this._inputLayer);\n    layers.push(...hiddenLayers);\n    layers.push(this._outputLayer);\n    this.layers = flattenLayers(layers);\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, i);\n      hiddenLayers.push(hiddenLayer);\n      previousLayer = hiddenLayer;\n    }\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this._connectLayers();\n    this.initializeLayers(this.layers);\n  }\n\n  initializeLayers(layers) {\n    for (let i = 0; i < layers.length; i++) {\n      const layer = layers[i];\n      layer.setupKernels();\n      if (layer.hasOwnProperty('praxis') && layer.praxis === null) {\n        layer.praxis = this.praxis(layer, this.praxisOpts);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input);\n    }\n\n    let output = this.runInput(input);\n\n    if (output.toArray) {\n      output = output.toArray();\n    }\n\n    if (this.outputLookup) {\n      output = lookup.toHash(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  runInput(input) {\n    this.layers[0].predict(input);\n    for (let i = 1; i < this.layers.length; i++) {\n      this.layers[i].predict();\n    }\n    return this.layers[this.layers.length - 1].weights;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    let status;\n    let endTime;\n    ({ data, status, endTime } = this._prepTraining(data, options));\n\n    while (this._trainingTick(data, status, endTime));\n    return status;\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param {Number} endTime\n   */\n  _trainingTick(data, status, endTime) {\n    if (\n      status.iterations >= this.trainOpts.iterations ||\n      status.error <= this.trainOpts.errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (\n      this.trainOpts.log &&\n      status.iterations % this.trainOpts.logPeriod === 0\n    ) {\n      status.error = this._calculateTrainingError(data);\n      this.trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      );\n    } else if (status.iterations % this.trainOpts.errorCheckInterval === 0) {\n      status.error = this._calculateTrainingError(data);\n    } else {\n      this._trainPatterns(data);\n    }\n\n    if (\n      this.trainOpts.callback &&\n      status.iterations % this.trainOpts.callbackPeriod === 0\n    ) {\n      this.trainOpts.callback(Object.assign(status));\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  _prepTraining(data, options) {\n    this._updateTrainingOptions(options);\n    if (this.trainOpts.callback && this.trainOpts.callbackPeriod !== this.trainOpts.errorCheckInterval) {\n      console.warn(`options.callbackPeriod with value of ${ this.trainOpts.callbackPeriod } does not match options.errorCheckInterval with value of ${ this.trainOpts.errorCheckInterval }, if logging error, it will repeat.  These values may need to match`);\n    }\n    const formattedData = this._formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    if (!options.reinforce) {\n      this.initialize();\n    }\n\n    const transferredData = new Array(formattedData.length);\n    const transferInput = makeKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      immutable: true,\n      output: [formattedData[0].input.length]\n    });\n    const transferOutput = makeKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      immutable: true,\n      output: [formattedData[0].output.length]\n    });\n\n    for (let i = 0; i < formattedData.length; i++) {\n      const formattedDatum = formattedData[i];\n      transferredData[i] = {\n        input: transferInput(formattedDatum.input),\n        output: transferOutput(formattedDatum.output),\n      };\n    }\n\n    return {\n      data: transferredData,\n      status,\n      endTime,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  _calculateTrainingError(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this._trainPattern(data[i].input, data[i].output, true);\n    }\n    return sum / data.length;\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false);\n    }\n  }\n\n  /**\n   *\n   * @param input\n   * @param target\n   * @param {Boolean} logErrorRate\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target);\n    this._adjustWeights();\n\n    if (logErrorRate) {\n      return mse2d(\n        this._outputLayer.errors.toArray\n          ? this._outputLayer.errors.toArray()\n          : this._outputLayer.errors\n      );\n    }\n    return null;\n  }\n\n  _calculateDeltas(target) {\n    for (let i = this.layers.length - 1; i > -1; i--) {\n      this.layers[i].compare(target);\n    }\n  }\n\n  /**\n   *\n   */\n  _adjustWeights() {\n    for (let i = 0; i < this.layers.length; i++) {\n      this.layers[i].learn(\n        this.layers[i - 1],\n        this.layers[i + 1],\n        this.trainOpts.learningRate\n      );\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  _formatData(data) {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = [];\n      tmp.push(data);\n      data = tmp;\n    }\n\n    // turn sparse hash input into arrays with 0s as filler\n    const inputDatumCheck = data[0].input;\n    if (!Array.isArray(inputDatumCheck) && !(inputDatumCheck instanceof Float32Array)) {\n      if (!this.inputLookup) {\n        this.inputLookup = lookup.buildLookup(data.map(value => value.input));\n      }\n      data = data.map(datumParam => {\n        const array = lookup.toArray(this.inputLookup, datumParam.input);\n        return Object.assign({}, datumParam, { input: array });\n      }, this);\n    }\n\n    const outputDatumCheck = data[0].output;\n    if (!Array.isArray(outputDatumCheck) && !(outputDatumCheck instanceof Float32Array)) {\n      if (!this.outputLookup) {\n        this.outputLookup = lookup.buildLookup(data.map(value => value.output));\n      }\n      data = data.map(datumParam => {\n        const array = lookup.toArray(this.outputLookup, datumParam.output);\n        return Object.assign({}, datumParam, { output: array });\n      }, this);\n    }\n    return data;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test() {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`);\n  }\n\n  /**\n   *\n   */\n  toJSON() {\n    const jsonLayers = [];\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      const jsonLayer = layer.toJSON();\n      if (layer.hasOwnProperty('inputLayer')) {\n        jsonLayer.inputLayerIndex = this.layers.indexOf(layer.inputLayer);\n      } else if (\n        layer.hasOwnProperty('inputLayer1') &&\n        layer.hasOwnProperty('inputLayer2')\n      ) {\n        jsonLayer.inputLayer1Index = this.layers.indexOf(layer.inputLayer1);\n        jsonLayer.inputLayer2Index = this.layers.indexOf(layer.inputLayer2);\n      }\n      jsonLayers.push(jsonLayer);\n    }\n    return {\n      layers: jsonLayers,\n    };\n  }\n\n  /**\n   *\n   * @param json\n   * @param [getLayer]\n   * @returns {FeedForward}\n   */\n  static fromJSON(json, getLayer) {\n    const jsonLayers = json.layers;\n    const layers = [];\n    const inputLayer = layerFromJSON(jsonLayers[0]) || getLayer(jsonLayers[0]);\n    layers.push(inputLayer);\n\n    for (let i = 1; i < jsonLayers.length; i++) {\n      const jsonLayer = jsonLayers[i];\n      if (jsonLayer.hasOwnProperty('inputLayerIndex')) {\n        const inputLayer1 = layers[jsonLayer.inputLayerIndex];\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer1) ||\n            getLayer(jsonLayer, inputLayer1)\n        );\n      } else {\n        if (!jsonLayer.hasOwnProperty('inputLayer1Index'))\n          throw new Error('inputLayer1Index not defined');\n        if (!jsonLayer.hasOwnProperty('inputLayer2Index'))\n          throw new Error('inputLayer2Index not defined');\n        const inputLayer1 = layers[jsonLayer.inputLayer1Index];\n        const inputLayer2 = layers[jsonLayer.inputLayer2Index];\n\n        if (inputLayer1 === undefined)\n          throw new Error(\n            `layer of index ${jsonLayer.inputLayer1Index} not found`\n          );\n        if (inputLayer2 === undefined)\n          throw new Error(\n            `layer of index ${jsonLayer.inputLayer2Index} not found`\n          );\n\n        layers.push(\n          layerFromJSON(jsonLayer, inputLayer) ||\n            getLayer(jsonLayer, inputLayer1, inputLayer2)\n        );\n      }\n    }\n\n    const net = new FeedForward(json);\n    net.layers = layers;\n    return net;\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n\n  /**\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\n   * @param opts training options\n   * @returns {TrainStream|*}\n   */\n  createTrainStream() {\n    throw new Error(\n      `${this.constructor.name}-createTrainStream is not yet implemented`\n    );\n  }\n}\n\nmodule.exports = {\n  FeedForward\n};\n","//private variables\nlet thawing = false;\nlet thaws = [];\n\n/**\n * thaw an array of items\n * @param {Array} items\n * @param {Object} [options]\n * @constructor\n */\nexport default class Thaw {\n  /**\n   *\n   * @type {{each: null, done: null}}\n   */\n  static get defaultSettings() {\n    return {\n      each: null,\n      done: null\n    };\n  }\n\n  /**\n   * returns if Thaw.js is thawing\n   * @returns {boolean}\n   */\n  static get isThawing() {\n    return thawing;\n  }\n\n  /**\n   * Stops all Thaw instances\n   */\n  static stopAll() {\n    for(let i = 0;i< thaws.length; i++) {\n      thaws[i].stop();\n    }\n  }\n\n  constructor(items, options = {}) {\n    const { each, done } = {...this.constructor.defaultSettings, ...options};\n    this.items = items;\n    this.i = 0;\n    this.options = options;\n    const tick = this.tick = () => {\n      if (this.i < 0) return;\n\n      this.timeout = setTimeout(tick, 0);\n\n      if (thawing) return;\n      const item = items[this.i];\n      if (this.i >= items.length) {\n        if (done !== null) {\n          thawing = true;\n          done(item, this.i);\n          thawing = false;\n        }\n\n        this.i = -1;\n        clearTimeout(this.timeout);\n        return;\n      }\n      if (each !== null) {\n        thawing = true;\n        each(item, this.i);\n        thawing = false;\n      } else if (item !== undefined) {\n        item();\n      }\n      this.i++;\n    };\n\n    thaws.push(this);\n    if (!options.delay) {\n      tick();\n    }\n  }\n\n  /**\n   * readies thaw to continue\n   * @returns {boolean} if had to get ready\n   */\n  makeReady() {\n    if (this.i < 0) {\n      this.i = this.items.length;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n   * @param item\n   * @returns {Thaw}\n   */\n  add(item) {\n    const doTick = this.makeReady();\n\n    this.items.push(item);\n\n    if (doTick) {\n      this.tick();\n    }\n    return this;\n  }\n\n  /**\n   * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n   * @param item\n   * @returns {Thaw}\n   */\n  insert(item) {\n    const doTick = this.makeReady();\n\n    this.items.splice(this.i, 0, item);\n\n    if (doTick) {\n      this.tick();\n    }\n\n    return this;\n  }\n\n  /**\n   * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n   * @param {Array} items\n   * @returns {Thaw}\n   */\n  addArray(items) {\n    const doTick = this.makeReady();\n\n    this.items = this.items.concat(items);\n\n    if (doTick) {\n      this.tick();\n    }\n\n    return this;\n  }\n\n  /**\n   * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n   * @param {Array} items\n   * @returns {Thaw}\n   */\n  insertArray(items) {\n    const doTick = this.makeReady();\n    const left = this.items;\n    const middle = items;\n    const right = this.items.splice(this.i, (this.items.length - this.i) + 1);\n\n    this.items = left.concat(middle, right);\n\n    if (doTick) {\n      this.tick();\n    }\n    return this;\n  }\n\n  /**\n   * Stops this instance of Thaw\n   * @returns {Thaw}\n   */\n  stop() {\n    this.i = -1;\n    clearTimeout(this.timeout);\n    if (this.options.done) {\n      this.options.done();\n    }\n    return this;\n  }\n}\n\n/**\n * simple thaw\n * @param {Array} items\n * @param {Object} [options]\n * @returns Thaw\n */\nexport function thaw(items, options = {}) {\n  return new Thaw(items, options);\n}","import Thaw from './';\n\n/**\n *\n * @param {Object} [options]\n * @param {Number} [count]\n * @constructor\n */\nexport default class Block {\n  constructor(options, count) {\n    this.index = 0;\n    this.thaws = [];\n    this.count = count || 200;\n    this.options = options;\n  }\n\n  /**\n   * add an item to the end of items\n   * @param item\n   * @returns {Block}\n   */\n  add(item) {\n    const next = this._next();\n    next.add(item);\n\n    return this;\n  }\n\n  /**\n   * add an Array to the end of items\n   * @param items\n   * @returns {Block}\n   */\n  addArray(items) {\n    const next = this._next();\n    next.addArray(items);\n\n    return this;\n  }\n\n  /**\n   * insert an item into items @ current position\n   * @param item\n   * @returns {Block}\n   */\n  insert(item) {\n    const next = this._next();\n    next.insert(item);\n\n    return this;\n  }\n\n  /**\n   * insert and array into items @ current position\n   * @param items\n   * @returns {Block}\n   */\n  insertArray(items) {\n    const next = this._next();\n    next.insertArray(items);\n\n    return this;\n  }\n\n  /**\n   * Stops all thaws in this block\n   * @returns {Block}\n   */\n  stop() {\n    for (let i = 0;i < this.thaws.length;i++) {\n      this.thaws[i].stop();\n    }\n    return this;\n  }\n\n  /**\n   * Get next available in block\n   * @returns {*}\n   * @private\n   */\n  _next() {\n    let thaw = null;\n    const thaws = this.thaws;\n\n    if (thaws.length < this.count) {\n      thaws.push(thaw = new Thaw([], this.options));\n    } else {\n      thaw = thaws[this.index];\n    }\n    this.index++;\n    if (this.index >= this.count) {\n      this.index = 0;\n    }\n\n    return thaw;\n  }\n};","const activation = require('./activation');\nconst crossValidate = require('./cross-validate').crossValidate;\nconst layer = require('./layer');\nconst likely = require('./likely');\nconst lookup = require('./lookup');\nconst praxis = require('./praxis');\nconst { FeedForward } = require('./feed-forward');\nconst NeuralNetwork = require('./neural-network');\nconst NeuralNetworkGPU = require('./neural-network-gpu');\nconst TrainStream = require('./train-stream');\nconst { Recurrent } = require('./recurrent');\nconst RNNTimeStep = require('./recurrent/rnn-time-step');\nconst LSTMTimeStep = require('./recurrent/lstm-time-step');\nconst GRUTimeStep = require('./recurrent/gru-time-step');\nconst RNN = require('./recurrent/rnn');\nconst LSTM = require('./recurrent/lstm');\nconst GRU = require('./recurrent/gru');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst ones = require('./utilities/ones');\nconst random = require('./utilities/random');\nconst randomWeight = require('./utilities/random-weight');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst DataFormatter = require('./utilities/data-formatter');\nconst zeros = require('./utilities/zeros');\n\nconst brain = {\n  activation,\n  crossValidate,\n  likely,\n  layer,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n  },\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = require('events').EventEmitter;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","const Writable = require('stream').Writable;\nconst lookup = require('./lookup');\n\n/**\n *\n * https://gist.github.com/telekosmos/3b62a31a5c43f40849bb\n * @param arr\n * @returns {Array}\n */\nfunction uniques(arr) {\n  // Sets cannot contain duplicate elements, which is what we want\n  return [...new Set(arr)];\n}\n\n/**\n *\n * @param opts\n * @returns {TrainStream}\n * @constructor\n */\nclass TrainStream extends Writable {\n  constructor(opts) {\n    super({\n      objectMode: true,\n    });\n\n    opts = opts || {};\n\n    // require the neuralNetwork\n    if (!opts.neuralNetwork) {\n      throw new Error('no neural network specified');\n    }\n\n    this.neuralNetwork = opts.neuralNetwork;\n    this.dataFormatDetermined = false;\n\n    this.inputKeys = [];\n    this.outputKeys = []; // keeps track of keys seen\n    this.i = 0; // keep track of the for loop i variable that we got rid of\n    this.iterations = opts.iterations || 20000;\n    this.errorThresh = opts.errorThresh || 0.005;\n    // eslint-disable-next-line\n    this.log = opts.log\n      ? typeof opts.log === 'function'\n        ? opts.log\n        : console.log //eslint-disable-line\n      : false;\n    this.logPeriod = opts.logPeriod || 10;\n    this.callback = opts.callback;\n    this.callbackPeriod = opts.callbackPeriod || 10;\n    this.floodCallback = opts.floodCallback;\n    this.doneTrainingCallback = opts.doneTrainingCallback;\n\n    this.size = 0;\n    this.count = 0;\n\n    this.sum = 0;\n\n    this.on('finish', this.finishStreamIteration.bind(this));\n\n    return this;\n  }\n\n  /**\n   * _write expects data to be in the form of a datum. ie. {input: {a: 1 b: 0}, output: {z: 0}}\n   * @param chunk\n   * @param enc\n   * @param next\n   * @returns {*}\n   * @private\n   */\n  _write(chunk, enc, next) {\n    if (!chunk) {\n      // check for the end of one iteration of the stream\n      this.emit('finish');\n      return next();\n    }\n\n    if (!this.dataFormatDetermined) {\n      this.size++;\n      this.inputKeys = uniques(\n        this.inputKeys.slice(0).concat(Object.keys(chunk.input))\n      );\n      this.outputKeys = uniques(\n        this.outputKeys.slice(0).concat(Object.keys(chunk.output))\n      );\n      this.firstDatum = this.firstDatum || chunk;\n      return next();\n    }\n\n    this.count++;\n\n    const data = this.neuralNetwork.formatData(chunk);\n    this.trainDatum(data[0]);\n\n    // tell the Readable Stream that we are ready for more data\n    return next();\n  }\n\n  /**\n   *\n   * @param datum\n   */\n  trainDatum(datum) {\n    const err = this.neuralNetwork.trainPattern(datum.input, datum.output);\n    this.sum += err;\n  }\n\n  /**\n   *\n   * @returns {*}\n   */\n  finishStreamIteration() {\n    if (this.dataFormatDetermined && this.size !== this.count) {\n      this.log(\"This iteration's data length was different from the first.\");\n    }\n\n    if (!this.dataFormatDetermined) {\n      // create the lookup\n      this.neuralNetwork.inputLookup = lookup.lookupFromArray(this.inputKeys);\n      if (!Array.isArray(this.firstDatum.output)) {\n        this.neuralNetwork.outputLookup = lookup.lookupFromArray(\n          this.outputKeys\n        );\n      }\n\n      const data = this.neuralNetwork.formatData(this.firstDatum);\n      const sizes = [];\n      const inputSize = data[0].input.length;\n      const outputSize = data[0].output.length;\n      const { hiddenSizes } = this;\n\n      if (!hiddenSizes) {\n        sizes.push(Math.max(3, Math.floor(inputSize / 2)));\n      } else {\n        hiddenSizes.forEach(size => {\n          sizes.push(size);\n        });\n      }\n\n      sizes.unshift(inputSize);\n      sizes.push(outputSize);\n\n      this.dataFormatDetermined = true;\n      this.neuralNetwork.initialize(sizes);\n\n      if (typeof this.floodCallback === 'function') {\n        this.floodCallback();\n      }\n      return;\n    }\n\n    const error = this.sum / this.size;\n\n    if (this.log && this.i % this.logPeriod === 0) {\n      this.log('iterations:', this.i, 'training error:', error);\n    }\n    if (this.callback && this.i % this.callbackPeriod === 0) {\n      this.callback({\n        error,\n        iterations: this.i,\n      });\n    }\n\n    this.sum = 0;\n    this.count = 0;\n    // update the iterations\n    this.i++;\n\n    // do a check here to see if we need the stream again\n    if (this.i < this.iterations && error > this.errorThresh) {\n      if (typeof this.floodCallback === 'function') {\n        // eslint-disable-next-line\n        return this.floodCallback()\n      }\n    }\n    // done training\n    else if (typeof this.doneTrainingCallback === 'function') {\n      // eslint-disable-next-line\n      return this.doneTrainingCallback({\n        error,\n        iterations: this.i,\n      });\n    }\n  }\n}\n\nmodule.exports = TrainStream;\n","/**\n *\n * @param values\n * @returns {*}\n */\nmodule.exports = function toArray(values) {\n  if (Array.isArray(values)) {\n    return values;\n  }\n  return new Float32Array(Object.values(values));\n}\n","const toArray = require('./to-array');\n/**\n *\n * @param values\n * @returns {number}\n */\nmodule.exports = function max(values) {\n  return Math.max(...toArray(values));\n}\n","module.exports = function mse(errors) {\n  // mean squared error\n  let sum = 0;\n  for (let i = 0; i < errors.length; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / errors.length;\n}\n","/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nmodule.exports = function range(start, end) {\n  const result = [];\n  for (; start < end; start++) {\n    result.push(start);\n  }\n  return result;\n}\n","const Thaw = require('thaw.js');\nconst lookup = require('./lookup');\nconst TrainStream = require('./train-stream');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst zeros = require('./utilities/zeros');\n\n/**\n * @param {object} options\n * @constructor\n */\nclass NeuralNetwork {\n  static get trainDefaults() {\n    return {\n      iterations: 20000, // the maximum times to iterate the training data\n      errorThresh: 0.005, // the acceptable error percentage from training data\n      log: false, // true to use console.log, when a function is supplied it is used\n      logPeriod: 10, // iterations between logging out\n      learningRate: 0.3, // multiply's against the input and the delta then adds to momentum\n      momentum: 0.1, // multiply's against the specified \"change\" then adds to learning rate for change\n      callback: null, // a periodic call back that can be triggered while training\n      callbackPeriod: 10, // the number of iterations through the training data between callback calls\n      timeout: Infinity, // the max number of milliseconds to train for\n    };\n  }\n\n  static get defaults() {\n    return {\n      binaryThresh: 0.5, // ¯\\_(ツ)_/¯\n      hiddenLayers: [3], // array of ints for the sizes of the hidden layers in the network\n      activation: 'sigmoid', // Supported activation types ['sigmoid', 'relu', 'leaky-relu', 'tanh']\n    };\n  }\n\n  /**\n   *\n   * @param options\n   * @private\n   */\n  static _validateTrainingOptions(options) {\n    const validations = {\n      iterations: val => typeof val === 'number' && val > 0,\n      errorThresh: val => typeof val === 'number' && val > 0 && val < 1,\n      log: val => typeof val === 'function' || typeof val === 'boolean',\n      logPeriod: val => typeof val === 'number' && val > 0,\n      learningRate: val => typeof val === 'number' && val > 0 && val < 1,\n      momentum: val => typeof val === 'number' && val > 0 && val < 1,\n      callback: val => typeof val === 'function' || val === null,\n      callbackPeriod: val => typeof val === 'number' && val > 0,\n      timeout: val => typeof val === 'number' && val > 0,\n    };\n    Object.keys(NeuralNetwork.trainDefaults).forEach(key => {\n      if (validations.hasOwnProperty(key) && !validations[key](options[key])) {\n        throw new Error(\n          `[${key}, ${\n            options[key]\n          }] is out of normal training range, your network will probably not train.`\n        );\n      }\n    });\n  }\n\n  constructor(options = {}) {\n    Object.assign(this, this.constructor.defaults, options);\n    this.hiddenSizes = options.hiddenLayers;\n    this.trainOpts = {};\n    this._updateTrainingOptions(\n      Object.assign({}, this.constructor.trainDefaults, options)\n    );\n\n    this.sizes = null;\n    this.outputLayer = null;\n    this.biases = null; // weights for bias nodes\n    this.weights = null;\n    this.outputs = null;\n\n    // state for training\n    this.deltas = null;\n    this.changes = null; // for momentum\n    this.errors = null;\n    this.errorCheckInterval = 1;\n    if (!this.constructor.prototype.hasOwnProperty('runInput')) {\n      this.runInput = null;\n    }\n    if (!this.constructor.prototype.hasOwnProperty('calculateDeltas')) {\n      this.calculateDeltas = null;\n    }\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n  _initialize() {\n    if (!this.sizes) throw new Error('Sizes must be set before initializing');\n\n    this.outputLayer = this.sizes.length - 1;\n    this.biases = []; // weights for bias nodes\n    this.weights = [];\n    this.outputs = [];\n\n    // state for training\n    this.deltas = [];\n    this.changes = []; // for momentum\n    this.errors = [];\n\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      const size = this.sizes[layer];\n      this.deltas[layer] = zeros(size);\n      this.errors[layer] = zeros(size);\n      this.outputs[layer] = zeros(size);\n\n      if (layer > 0) {\n        this.biases[layer] = randos(size);\n        this.weights[layer] = new Array(size);\n        this.changes[layer] = new Array(size);\n\n        for (let node = 0; node < size; node++) {\n          const prevSize = this.sizes[layer - 1];\n          this.weights[layer][node] = randos(prevSize);\n          this.changes[layer][node] = zeros(prevSize);\n        }\n      }\n    }\n\n    this.setActivation();\n  }\n\n  /**\n   *\n   * @param activation supported inputs: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  setActivation(activation) {\n    this.activation = activation || this.activation;\n    switch (this.activation) {\n      case 'sigmoid':\n        this.runInput = this.runInput || this._runInputSigmoid;\n        this.calculateDeltas =\n          this.calculateDeltas || this._calculateDeltasSigmoid;\n        break;\n      case 'relu':\n        this.runInput = this.runInput || this._runInputRelu;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasRelu;\n        break;\n      case 'leaky-relu':\n        this.runInput = this.runInput || this._runInputLeakyRelu;\n        this.calculateDeltas =\n          this.calculateDeltas || this._calculateDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        this.runInput = this.runInput || this._runInputTanh;\n        this.calculateDeltas = this.calculateDeltas || this._calculateDeltasTanh;\n        break;\n      default:\n        throw new Error(\n          `unknown activation ${\n            this.activation\n          }, The activation should be one of ['sigmoid', 'relu', 'leaky-relu', 'tanh']`\n        );\n    }\n  }\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable() {\n    if (!this.runInput) {\n      console.error(\n        'Activation function has not been initialized, did you run train()?'\n      );\n      return false;\n    }\n\n    const checkFns = [\n      'sizes',\n      'outputLayer',\n      'biases',\n      'weights',\n      'outputs',\n      'deltas',\n      'changes',\n      'errors',\n    ].filter(c => this[c] === null);\n\n    if (checkFns.length > 0) {\n      console.error(\n        `Some settings have not been initialized correctly, did you run train()? Found issues with: ${checkFns.join(\n          ', '\n        )}`\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input);\n    }\n\n    let output = [...this.runInput(input)];\n\n    if (this.outputLookup) {\n      output = lookup.toHash(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  /**\n   * trains via sigmoid\n   * @param input\n   * @returns {*}\n   */\n  _runInputSigmoid(input) {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const weights = this.weights[layer][node];\n\n        let sum = this.biases[layer][node];\n\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // sigmoid\n        this.outputs[layer][node] = 1 / (1 + Math.exp(-sum));\n      }\n      input = this.outputs[layer];\n      output = input;\n    }\n    return output;\n  }\n\n  _runInputRelu(input) {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const weights = this.weights[layer][node];\n\n        let sum = this.biases[layer][node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // relu\n        this.outputs[layer][node] = sum < 0 ? 0 : sum;\n      }\n      input = this.outputs[layer];\n      output = input;\n    }\n    return output;\n  }\n\n  _runInputLeakyRelu(input) {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const weights = this.weights[layer][node];\n\n        let sum = this.biases[layer][node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // leaky relu\n        this.outputs[layer][node] = sum < 0 ? 0 : 0.01 * sum;\n      }\n      input = this.outputs[layer];\n      output = input;\n    }\n    return output;\n  }\n\n  _runInputTanh(input) {\n    this.outputs[0] = input; // set output state of input layer\n\n    let output = null;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const weights = this.weights[layer][node];\n\n        let sum = this.biases[layer][node];\n        for (let k = 0; k < weights.length; k++) {\n          sum += weights[k] * input[k];\n        }\n        // tanh\n        this.outputs[layer][node] = Math.tanh(sum);\n      }\n      input = this.outputs[layer];\n      output = input;\n    }\n    return output;\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initilaized\n   * If they are not it will initialize them based off the data set.\n   */\n  _verifyIsInitialized(data) {\n    if (this.sizes) return;\n\n    this.sizes = [];\n    this.sizes.push(data[0].input.length);\n    if (!this.hiddenSizes) {\n      this.sizes.push(Math.max(3, Math.floor(data[0].input.length / 2)));\n    } else {\n      this.hiddenSizes.forEach(size => {\n        this.sizes.push(size);\n      });\n    }\n    this.sizes.push(data[0].output.length);\n\n    this._initialize();\n  }\n\n  /**\n   *\n   * @param opts\n   *    Supports all `trainDefaults` properties\n   *    also supports:\n   *       learningRate: (number),\n   *       momentum: (number),\n   *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n   */\n  _updateTrainingOptions(opts) {\n    Object.keys(NeuralNetwork.trainDefaults).forEach(opt => {\n      this.trainOpts[opt] = opts.hasOwnProperty(opt)\n        ? opts[opt]\n        : this.trainOpts[opt];\n\n      return this.trainOpts[opt];\n    });\n    NeuralNetwork._validateTrainingOptions(this.trainOpts);\n    this._setLogMethod(opts.log || this.trainOpts.log);\n    this.activation = opts.activation || this.activation;\n  }\n\n  /**\n   *\n   *  Gets JSON of trainOpts object\n   *    NOTE: Activation is stored directly on JSON object and not in the training options\n   */\n  _getTrainOptsJSON() {\n    return Object.keys(NeuralNetwork.trainDefaults).reduce((opts, opt) => {\n      if (opt === 'timeout' && this.trainOpts[opt] === Infinity) return opts;\n      if (this.trainOpts[opt]) opts[opt] = this.trainOpts[opt];\n      if (opt === 'log') opts.log = typeof opts.log === 'function';\n      return opts;\n    }, {});\n  }\n\n  /**\n   *\n   * @param log\n   * if a method is passed in method is used\n   * if false passed in nothing is logged\n   * @returns error\n   */\n  _setLogMethod(log) {\n    if (typeof log === 'function') {\n      this.trainOpts.log = log;\n    } else if (log) {\n      this.trainOpts.log = console.log;\n    } else {\n      this.trainOpts.log = false;\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {Number} error\n   */\n  _calculateTrainingError(data) {\n    let sum = 0;\n    for (let i = 0; i < data.length; ++i) {\n      sum += this._trainPattern(data[i].input, data[i].output, true);\n    }\n    return sum / data.length;\n  }\n\n  /**\n   * @param data\n   * @private\n   */\n  _trainPatterns(data) {\n    for (let i = 0; i < data.length; ++i) {\n      this._trainPattern(data[i].input, data[i].output, false);\n    }\n  }\n\n  /**\n   *\n   * @param {object} data\n   * @param {object} status { iterations: number, error: number }\n   * @param endTime\n   */\n  _trainingTick(data, status, endTime) {\n    if (\n      status.iterations >= this.trainOpts.iterations ||\n      status.error <= this.trainOpts.errorThresh ||\n      Date.now() >= endTime\n    ) {\n      return false;\n    }\n\n    status.iterations++;\n\n    if (\n      this.trainOpts.log &&\n      status.iterations % this.trainOpts.logPeriod === 0\n    ) {\n      status.error = this._calculateTrainingError(data);\n      this.trainOpts.log(\n        `iterations: ${status.iterations}, training error: ${status.error}`\n      );\n    } else if (status.iterations % this.errorCheckInterval === 0) {\n      status.error = this._calculateTrainingError(data);\n    } else {\n      this._trainPatterns(data);\n    }\n\n    if (\n      this.trainOpts.callback &&\n      status.iterations % this.trainOpts.callbackPeriod === 0\n    ) {\n      this.trainOpts.callback(Object.assign(status));\n    }\n    return true;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  _prepTraining(data, options) {\n    this._updateTrainingOptions(options);\n    data = this._formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this._verifyIsInitialized(data);\n\n    return {\n      data,\n      status,\n      endTime,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    let status;\n    let endTime;\n    ({ data, status, endTime } = this._prepTraining(data, options));\n\n    while (this._trainingTick(data, status, endTime));\n    return status;\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @returns {Promise}\n   * @resolves {{error: number, iterations: number}}\n   * @rejects {{trainError: string, status: {error: number, iterations: number}}\n   */\n  trainAsync(data, options = {}) {\n    let status;\n    let endTime\n    ;({ data, status, endTime } = this._prepTraining(data, options));\n\n    return new Promise((resolve, reject) => {\n      try {\n        const thawedTrain = new Thaw(new Array(this.trainOpts.iterations), {\n          delay: true,\n          each: () =>\n            this._trainingTick(data, status, endTime) || thawedTrain.stop(),\n          done: () => resolve(status),\n        });\n        thawedTrain.tick();\n      } catch (trainError) {\n        reject(new Error({ trainError, status }));\n      }\n    });\n  }\n\n  /**\n   *\n   * @param input\n   * @param target\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this.calculateDeltas(target);\n    this._adjustWeights();\n\n    if (logErrorRate) {\n      return mse(this.errors[this.outputLayer]);\n    }\n    return null;\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasSigmoid(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const output = this.outputs[layer][node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          const deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * this.weights[layer + 1][k][node];\n          }\n        }\n        this.errors[layer][node] = error;\n        this.deltas[layer][node] = error * output * (1 - output);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasRelu(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const output = this.outputs[layer][node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          const deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * this.weights[layer + 1][k][node];\n          }\n        }\n        this.errors[layer][node] = error;\n        this.deltas[layer][node] = output > 0 ? error : 0;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasLeakyRelu(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const output = this.outputs[layer][node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          const deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * this.weights[layer + 1][k][node];\n          }\n        }\n        this.errors[layer][node] = error;\n        this.deltas[layer][node] = output > 0 ? error : 0.01 * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param target\n   */\n  _calculateDeltasTanh(target) {\n    for (let layer = this.outputLayer; layer >= 0; layer--) {\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const output = this.outputs[layer][node];\n\n        let error = 0;\n        if (layer === this.outputLayer) {\n          error = target[node] - output;\n        } else {\n          const deltas = this.deltas[layer + 1];\n          for (let k = 0; k < deltas.length; k++) {\n            error += deltas[k] * this.weights[layer + 1][k][node];\n          }\n        }\n        this.errors[layer][node] = error;\n        this.deltas[layer][node] = (1 - output * output) * error;\n      }\n    }\n  }\n\n  /**\n   *\n   * Changes weights of networks\n   */\n  _adjustWeights() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const incoming = this.outputs[layer - 1];\n\n      for (let node = 0; node < this.sizes[layer]; node++) {\n        const delta = this.deltas[layer][node];\n\n        for (let k = 0; k < incoming.length; k++) {\n          let change = this.changes[layer][node][k];\n\n          change =\n            this.trainOpts.learningRate * delta * incoming[k] +\n            this.trainOpts.momentum * change;\n\n          this.changes[layer][node][k] = change;\n          this.weights[layer][node][k] += change;\n        }\n        this.biases[layer][node] += this.trainOpts.learningRate * delta;\n      }\n    }\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {*}\n   */\n  _formatData(data) {\n    if (!Array.isArray(data)) {\n      // turn stream datum into array\n      const tmp = [];\n      tmp.push(data);\n      data = tmp;\n    }\n    // turn sparse hash input into arrays with 0s as filler\n    const inputDatumCheck = data[0].input;\n    if (!Array.isArray(inputDatumCheck) && !(inputDatumCheck instanceof Float32Array)) {\n      if (!this.inputLookup) {\n        this.inputLookup = lookup.buildLookup(data.map(value => value.input));\n      }\n      data = data.map(datum => {\n        const array = lookup.toArray(this.inputLookup, datum.input);\n        return Object.assign({}, datum, { input: array });\n      }, this);\n    }\n\n    const outputDatumCheck = data[0].output;\n    if (!Array.isArray(outputDatumCheck) && !(outputDatumCheck instanceof Float32Array)) {\n      if (!this.outputLookup) {\n        this.outputLookup = lookup.buildLookup(data.map(value => value.output));\n      }\n      data = data.map(datum => {\n        const array = lookup.toArray(this.outputLookup, datum.output);\n        return Object.assign({}, datum, { output: array });\n      }, this);\n    }\n    return data;\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test(data) {\n    data = this._formatData(data);\n\n    // for binary classification problems with one output node\n    const isBinary = data[0].output.length === 1;\n    let falsePos = 0;\n    let falseNeg = 0;\n    let truePos = 0;\n    let trueNeg = 0;\n\n    // for classification problems\n    const misclasses = [];\n\n    // run each pattern through the trained network and collect\n    // error and misclassification statistics\n    let sum = 0;\n    for (let i = 0; i < data.length; i++) {\n      const output = this.runInput(data[i].input);\n      const target = data[i].output;\n\n      let actual;\n      let expected;\n      if (isBinary) {\n        actual = output[0] > this.binaryThresh ? 1 : 0;\n        // eslint-disable-next-line\n        expected = target[0]\n      } else {\n        actual = output.indexOf(max(output));\n        expected = target.indexOf(max(target));\n      }\n\n      if (actual !== expected) {\n        const misclass = data[i];\n        Object.assign(misclass, {\n          actual,\n          expected,\n        });\n        misclasses.push(misclass);\n      }\n\n      if (isBinary) {\n        if (actual === 0 && expected === 0) {\n          trueNeg++;\n        } else if (actual === 1 && expected === 1) {\n          truePos++;\n        } else if (actual === 0 && expected === 1) {\n          falseNeg++;\n        } else if (actual === 1 && expected === 0) {\n          falsePos++;\n        }\n      }\n\n      const errors = output.map((value, j) => target[j] - value);\n      sum += mse(errors);\n    }\n    const error = sum / data.length;\n\n    const stats = {\n      error,\n      misclasses,\n    };\n\n    if (isBinary) {\n      Object.assign(stats, {\n        trueNeg,\n        truePos,\n        falseNeg,\n        falsePos,\n        total: data.length,\n        precision: truePos / (truePos + falsePos),\n        recall: truePos / (truePos + falseNeg),\n        accuracy: (trueNeg + truePos) / data.length,\n      });\n    }\n    return stats;\n  }\n\n  /**\n   *\n   * @returns\n   *  {\n   *    layers: [\n   *      {\n   *        x: {},\n   *        y: {}\n   *      },\n   *      {\n   *        '0': {\n   *          bias: -0.98771313,\n   *          weights: {\n   *            x: 0.8374838,\n   *            y: 1.245858\n   *          },\n   *        '1': {\n   *          bias: 3.48192004,\n   *          weights: {\n   *            x: 1.7825821,\n   *            y: -2.67899\n   *          }\n   *        }\n   *      },\n   *      {\n   *        f: {\n   *          bias: 0.27205739,\n   *          weights: {\n   *            '0': 1.3161821,\n   *            '1': 2.00436\n   *          }\n   *        }\n   *      }\n   *    ]\n   *  }\n   */\n  toJSON() {\n    const layers = [];\n    for (let layer = 0; layer <= this.outputLayer; layer++) {\n      layers[layer] = [];\n\n      let nodes;\n      // turn any internal arrays back into hashes for readable json\n      if (layer === 0 && this.inputLookup) {\n        nodes = Object.keys(this.inputLookup);\n      } else if (layer === this.outputLayer && this.outputLookup) {\n        nodes = Object.keys(this.outputLookup);\n      } else {\n        nodes = range(0, this.sizes[layer]);\n      }\n\n      for (let j = 0; j < nodes.length; j++) {\n        const node = nodes[j];\n        layers[layer][node] = {};\n\n        if (layer > 0) {\n          layers[layer][node].bias = this.biases[layer][j];\n          layers[layer][node].weights = [];\n\n          Object.keys(layers[layer - 1]).forEach(k => {\n            let index = k;\n            if (layer === 1 && this.inputLookup) {\n              index = this.inputLookup[k];\n            }\n            layers[layer][node].weights[k] = this.weights[layer][j][index];\n          });\n        }\n      }\n    }\n    return {\n      sizes: this.sizes,\n      layers,\n      outputLookup: !!this.outputLookup,\n      inputLookup: !!this.inputLookup,\n      activation: this.activation,\n      trainOpts: this._getTrainOptsJSON(),\n    };\n  }\n\n  /**\n   *\n   * @param json\n   * @returns {NeuralNetwork}\n   */\n  fromJSON(json) {\n    this.sizes = json.sizes;\n    this._initialize();\n\n    for (let i = 0; i <= this.outputLayer; i++) {\n      const layer = json.layers[i];\n      if (i === 0 && (!layer[0] || json.inputLookup)) {\n        this.inputLookup = lookup.lookupFromHash(layer);\n      } else if (i === this.outputLayer && (!layer[0] || json.outputLookup)) {\n        this.outputLookup = lookup.lookupFromHash(layer);\n      }\n      if (i > 0) {\n        const nodes = Object.keys(layer);\n        this.sizes[i] = nodes.length;\n\n        Object.keys(nodes).forEach(j => {\n          const node = nodes[j];\n          this.biases[i][j] = layer[node].bias;\n          this.weights[i][j] = toArray(layer[node].weights);\n        });\n      }\n    }\n    if (json.hasOwnProperty('trainOpts')) {\n      this._updateTrainingOptions(json.trainOpts);\n    }\n    this.setActivation(this.activation || 'sigmoid');\n    return this;\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    const { activation } = this;\n    function nodeHandle(layers, layerNumber, nodeKey) {\n      if (layerNumber === 0) {\n        return typeof nodeKey === 'string'\n          ? `input['${nodeKey}']`\n          : `input[${nodeKey}]`;\n      }\n\n      const layer = layers[layerNumber];\n      const node = layer[nodeKey];\n      const result = [node.bias];\n\n      Object.keys(node.weights).forEach(w => {\n        if (node.weights[w] < 0) {\n          result.push(\n            `${node.weights[w]}*(${nodeHandle(layers, layerNumber - 1, w)})`\n          );\n        } else {\n          result.push(\n            `+${node.weights[w]}*(${nodeHandle(layers, layerNumber - 1, w)})`\n          );\n        }\n      });\n\n      switch (activation) {\n        case 'sigmoid':\n          return `1/(1+1/Math.exp(${result.join('')}))`;\n        case 'relu':\n          return `var sum = ${result.join('')};(sum < 0 ? 0 : sum);`;\n        case 'leaky-relu':\n          return `var sum = ${result.join('')};(sum < 0 ? 0 : 0.01 * sum);`;\n        case 'tanh':\n          return `Math.tanh(${result.join('')});`;\n        default:\n          throw new Error(`unknown activation type ${activation}`);\n      }\n    }\n\n    const { layers } = this.toJSON();\n    const layersAsMath = [];\n    let result;\n\n    Object.keys(layers[layers.length - 1]).forEach(l => {\n      layersAsMath.push(nodeHandle(layers, layers.length - 1, l));\n    });\n\n    if (this.outputLookup) {\n      result = `{${Object.keys(this.outputLookup).map(\n        (key, i) => `'${key}':${layersAsMath[i]}`\n      )}}`;\n    } else {\n      result = `[${layersAsMath.join(',')}]`;\n    }\n    // eslint-disable-next-line\n    return new Function('input', `return ${result}`)\n  }\n\n  /**\n   * This will create a TrainStream (WriteStream) for us to send the training data to.\n   * @param opts training options\n   * @returns {TrainStream|*}\n   */\n  createTrainStream(opts) {\n    opts = opts || {};\n    opts.neuralNetwork = this;\n    this.setActivation();\n    this.trainStream = new TrainStream(opts);\n    return this.trainStream;\n  }\n}\n\nmodule.exports = NeuralNetwork;\n","const { GPU, alias } = require('gpu.js');\nconst NeuralNetwork = require('./neural-network');\nconst lookup = require('./lookup');\n\nfunction weightedSumSigmoid(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(weights, biases, inputs) {\n  let sum = biases[this.thread.x];\n  for (let k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  // tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output, targets) {\n  return targets[this.thread.x] - output;\n}\n\nfunction calcDeltasSigmoid(error, output) {\n  // sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error, output) {\n  // relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error, output) {\n  // leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error, output) {\n  // tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(nextWeights, nextDeltas) {\n  let error = 0;\n  for (let k = 0; k < this.constants.size; k++) {\n    error += nextDeltas[k] * nextWeights[k][this.thread.x];\n  }\n  return error;\n}\n\nfunction calcChanges(previousChanges, deltas, previousOutputs) {\n  return (\n    this.constants.learningRate *\n      deltas[this.thread.y] *\n      previousOutputs[this.thread.x] +\n    this.constants.momentum * previousChanges[this.thread.y][this.thread.x]\n  );\n}\n\nfunction addWeights(change, weights) {\n  return change + weights[this.thread.y][this.thread.x];\n}\n\nfunction addBiases(biases, deltas) {\n  return (\n    biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate\n  );\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(errors) {\n  let sum = 0;\n  for (let i = 0; i < this.constants.size; i++) {\n    sum += errors[i] ** 2;\n  }\n  return sum / this.constants.size;\n}\n\n/**\n *\n * @param {object} options\n * @constructor\n */\nclass NeuralNetworkGPU extends NeuralNetwork {\n  constructor(options = {}) {\n    super(options);\n    this.forwardPropagate = [];\n    this.backwardPropagate = [];\n    this.changesPropagate = [];\n    this.biasesPropagate = [];\n    this.biasCopies = [];\n    this.copyBias = [];\n    this.changesCopies = [];\n    this.copyChanges = [];\n    this.weightsCopies = [];\n    this.copyWeights = [];\n    this.errorCheckInterval = 100;\n    this.gpu = new GPU({ mode: options.mode });\n  }\n\n  /**\n   *\n   */\n  _initialize() {\n    super._initialize();\n    this.buildRunInput();\n    this.buildCalculateDeltas();\n    this.buildGetChanges();\n    this.buildChangeBiases();\n    this.buildGetMSE();\n  }\n\n  setActivation() {\n    return;\n    throw new Error(\n      `${this.constructor.name}-setActivation is not yet implemented`\n    );\n  }\n\n  /**\n   *\n   * @param input\n   * @param target\n   * @param logErrorRate\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // backward propagate\n    this.calculateDeltas(target);\n    this.getChanges();\n    this.changeBiases();\n\n    if (logErrorRate) {\n      return this.getMSE(this.errors[this.outputLayer])[0];\n    }\n    return null;\n  }\n\n  buildRunInput() {\n    let weightedSum = null;\n\n    switch (this.activation) {\n      case 'sigmoid':\n        weightedSum = weightedSumSigmoid;\n        break;\n      case 'relu':\n        weightedSum = weightedSumRelu;\n        break;\n      case 'leaky-relu':\n        weightedSum = weightedSumLeakyRelu;\n        break;\n      case 'tanh':\n        weightedSum = weightedSumTanh;\n        break;\n      default:\n        throw new Error(`unknown activation ${this.activation}`);\n    }\n\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          size: this.sizes[layer - 1],\n        },\n      });\n    }\n\n    this._texturizeInputData = this.gpu.createKernel(function(value) {\n      return value[this.thread.x];\n    }, {\n      output: [this.sizes[1]],\n      pipeline: true,\n      immutable: true,\n    });\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  runInput(input) {\n    let output;\n    this.outputs[0] = input;\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.outputs[layer] = this.forwardPropagate[layer](\n        this.weights[layer],\n        this.biases[layer],\n        input\n      );\n      input = this.outputs[layer];\n      output = input;\n    }\n    return output;\n  }\n\n  buildCalculateDeltas() {\n    let calcDeltas = null;\n\n    switch (this.activation) {\n      case 'sigmoid':\n        calcDeltas = calcDeltasSigmoid;\n        break;\n      case 'relu':\n        calcDeltas = calcDeltasRelu;\n        break;\n      case 'leaky-relu':\n        calcDeltas = calcDeltasLeakyRelu;\n        break;\n      case 'tanh':\n        calcDeltas = calcDeltasTanh;\n        break;\n      default:\n        throw new Error(`unknown activation ${this.activation}`);\n    }\n\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      if (layer === this.outputLayer) {\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: alias('calcErrorOutput', calcErrorOutput),\n            deltas: alias('calcDeltas', calcDeltas),\n          },\n          function (outputs, targets) {\n            const output = outputs[this.thread.x];\n            return calcDeltas(calcErrorOutput(output, targets), output);\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n          }\n        );\n      } else {\n        this.backwardPropagate[layer] = this.gpu.createKernelMap(\n          {\n            error: alias('calcError', calcError),\n            deltas: alias('calcDeltas', calcDeltas),\n          },\n          function (nextWeights, outputs, nextDeltas) {\n            const output = outputs[this.thread.x];\n            return calcDeltas(calcError(nextWeights, nextDeltas), output);\n          },\n          {\n            output: [this.sizes[layer]],\n            pipeline: true,\n            constants: {\n              size: this.deltas[layer + 1].length,\n            },\n          }\n        );\n      }\n    }\n  }\n\n  calculateDeltas(target) {\n    for (let layer = this.outputLayer; layer > 0; layer--) {\n      let output;\n\n      if (layer === this.outputLayer) {\n        output = this.backwardPropagate[layer](this.outputs[layer], target);\n      } else {\n        output = this.backwardPropagate[layer](\n          this.weights[layer + 1],\n          this.outputs[layer],\n          this.deltas[layer + 1]\n        );\n      }\n\n      this.deltas[layer] = output.deltas;\n      this.errors[layer] = output.error;\n    }\n  }\n\n  buildGetChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.changesPropagate[layer] = this.gpu.createKernelMap(\n        {\n          weights: alias('addWeights', addWeights),\n          changes: alias('calcChanges', calcChanges),\n        },\n        function (previousOutputs, deltas, weights, changes) {\n          const change = calcChanges(changes, deltas, previousOutputs);\n\n          return addWeights(change, weights);\n        },\n        {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          pipeline: true,\n          constants: {\n            size: this.outputs[layer - 1].length,\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum,\n          },\n        }\n      );\n\n      this.copyChanges[layer] = this.gpu.createKernel(\n        function(value) { return value[this.thread.y][this.thread.x]; },\n        {\n          output: this.changesPropagate[layer].output,\n          pipeline: true,\n        }\n      );\n\n      this.copyWeights[layer] = this.gpu.createKernel(\n        function (value) { return value[this.thread.y][this.thread.x]; },\n        {\n          output: this.changesPropagate[layer].output,\n          pipeline: true,\n        }\n      );\n    }\n  }\n\n  getChanges() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      const output = this.changesPropagate[layer](\n        this.outputs[layer - 1],\n        this.deltas[layer],\n        this.weightsCopies[layer] || this.weights[layer],\n        this.changesCopies[layer] || this.changes[layer]\n      );\n      this.changes[layer] = output.changes;\n      this.weights[layer] = output.weights;\n\n      this.changesCopies[layer] = this.copyChanges[layer](output.changes);\n      this.weightsCopies[layer] = this.copyWeights[layer](output.weights);\n    }\n  }\n\n  buildChangeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n        output: [this.sizes[layer]],\n        pipeline: true,\n        constants: {\n          learningRate: this.trainOpts.learningRate,\n        },\n      });\n      this.copyBias[layer] = this.gpu.createKernel(\n        function(value) { return value[this.thread.x]; },\n        {\n          output: this.biasesPropagate[layer].output,\n          pipeline: true,\n        }\n      );\n    }\n  }\n\n  changeBiases() {\n    for (let layer = 1; layer <= this.outputLayer; layer++) {\n      this.biases[layer] = this.biasesPropagate[layer](\n        this.biasCopies[layer] || this.biases[layer],\n        this.deltas[layer]\n      );\n      this.biasCopies[layer] = this.copyBias[layer](this.biases[layer]);\n    }\n  }\n\n  buildGetMSE() {\n    this.getMSE = this.gpu.createKernel(mse, {\n      output: [1],\n      constants: {\n        size: this.sizes[this.outputLayer],\n      },\n    });\n  }\n\n  /**\n   *\n   * @param input\n   * @returns {*}\n   */\n  run(input) {\n    if (!this.isRunnable) return null;\n    if (this.inputLookup) {\n      input = lookup.toArray(this.inputLookup, input);\n    }\n    const inputTexture = this._texturizeInputData(input);\n    const outputTextures = this.runInput(inputTexture);\n    let output = outputTextures.toArray ? outputTextures.toArray() : outputTextures;\n\n    if (this.outputLookup) {\n      output = lookup.toHash(this.outputLookup, output);\n    }\n    return output;\n  }\n\n  /**\n   *\n   * @param data\n   * Verifies network sizes are initilaized\n   * If they are not it will initialize them based off the data set.\n   */\n  _verifyIsInitialized(data) {\n    if (this.sizes) return;\n\n    this.sizes = [];\n    if (!data[0].size) {\n      data[0].size = {\n        input: data[0].input.length,\n        output: data[0].output.length,\n      };\n    }\n\n    this.sizes.push(data[0].size.input);\n    if (!this.hiddenSizes) {\n      this.sizes.push(Math.max(3, Math.floor(data[0].size.input / 2)));\n    } else {\n      this.hiddenSizes.forEach(size => {\n        this.sizes.push(size);\n      });\n    }\n    this.sizes.push(data[0].size.output);\n\n    this._initialize();\n  }\n\n  /**\n   *\n   * @param data\n   * @param options\n   * @protected\n   * @return { data, status, endTime }\n   */\n  _prepTraining(data, options) {\n    this._updateTrainingOptions(options);\n    data = this._formatData(data);\n    const endTime = Date.now() + this.trainOpts.timeout;\n\n    const status = {\n      error: 1,\n      iterations: 0,\n    };\n\n    this._verifyIsInitialized(data);\n\n    const texturizeOutputData = this.gpu.createKernel(\n      function(value) { return value[this.thread.x]; },\n      {\n        output: [data[0].output.length],\n        pipeline: true,\n        immutable: true,\n      }\n    );\n\n    return {\n      data: data.map(set => ({\n        size: set.size,\n        input: this._texturizeInputData(set.input),\n        output: texturizeOutputData(set.output),\n      })),\n      status,\n      endTime,\n    };\n  }\n\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n}\n\nmodule.exports = NeuralNetworkGPU;\n","const { Internal } = require('./types');\nconst zeros2D = require('../utilities/zeros-2d');\n\nclass RecurrentConnection extends Internal {\n  setLayer(layer) {\n    this.layer = layer;\n  }\n\n  get width() {\n    return this.layer.width;\n  }\n\n  set width(value) {\n    throw new Error(`${this.constructor.name}-width is not yet implemented`);\n  }\n\n  get height() {\n    return this.layer.height;\n  }\n\n  set height(value) {\n    throw new Error(`${this.constructor.name}-height is not yet implemented`);\n  }\n\n  get deltas() {\n    return this.layer.deltas;\n  }\n\n  set deltas(deltas) {\n    this.layer.deltas = deltas;\n  }\n\n  get weights() {\n    return this.layer.weights;\n  }\n\n  set weights(weights) {\n    this.layer.weights = weights;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    this.layer.deltas = zeros2D(this.width, this.height);\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n\nmodule.exports = {\n  RecurrentConnection\n};\n","// import zeros2D from '../utilities/zeros-2d'\nconst { Internal } = require('./types');\nconst { Base } = require('./base');\n\nclass RecurrentInput extends Internal {\n  setRecurrentInput(recurrentInput) {\n    this.recurrentInput = recurrentInput;\n    this.validate();\n  }\n\n  get deltas() {\n    return this.recurrentInput.deltas;\n  }\n\n  set deltas(deltas) {\n    this.recurrentInput.deltas = deltas;\n  }\n\n  get weights() {\n    return this.recurrentInput.weights;\n  }\n\n  set weights(weights) {\n    this.recurrentInput.weights = weights;\n  }\n\n  validate() {\n    Base.prototype.validate.call(this);\n    if (this.width !== this.recurrentInput.width) {\n      throw new Error(\n        `${this.constructor.name} layer width ${this.width} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.width}) are not same`\n      );\n    }\n\n    if (this.height !== this.recurrentInput.height) {\n      throw new Error(\n        `${this.constructor.name} layer height ${this.height} and ${\n          this.recurrentInput.constructor.name\n        } width (${this.recurrentInput.height}) are not same`\n      );\n    }\n  }\n\n  setDimensions(width, height) {\n    this.width = width;\n    this.height = height;\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn() {\n    // throw new Error(`${this.constructor.name}-learn is not yet implemented`)\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n}\n\nmodule.exports = {\n  RecurrentInput\n};\n","const zeros2D = require('../utilities/zeros-2d');\nconst { Internal } = require('./types');\n\nclass RecurrentZeros extends Internal {\n  setDimensions(width, height) {\n    this.praxis = null;\n    this.width = width;\n    this.height = height;\n    this.weights = zeros2D(width, height);\n    this.deltas = zeros2D(width, height);\n  }\n\n  setupKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-setupKernels is not yet implemented`\n    // )\n  }\n\n  reuseKernels() {\n    // throw new Error(\n    //   `${this.constructor.name}-reuseKernels is not yet implemented`\n    // )\n  }\n\n  predict() {\n    // throw new Error(`${this.constructor.name}-predict is not yet implemented`)\n  }\n\n  compare() {\n    // throw new Error(`${this.constructor.name}-compare is not yet implemented`)\n  }\n\n  learn(previousLayer, nextLayer, learningRate) {\n    this.weights = this.praxis.run(this, previousLayer, nextLayer, learningRate);\n    this.deltas = zeros2D(this.width, this.height);\n  }\n\n  validate() {\n    throw new Error(`${this.constructor.name}-validate is not yet implemented`);\n  }\n\n  reset() {\n    throw new Error(`${this.constructor.name}-reset is not yet implemented`);\n  }\n}\n\nmodule.exports = {\n  RecurrentZeros\n};\n","const { RecurrentConnection } = require('./layer/recurrent-connection');\nconst { RecurrentInput } = require('./layer/recurrent-input');\nconst { RecurrentZeros } = require('./layer/recurrent-zeros');\nconst flattenLayers = require('./utilities/flatten-layers');\nconst mse2d = require('./utilities/mse-2d');\nconst { FeedForward } = require('./feed-forward');\n// const Base from './layer/base'\n\nclass Recurrent extends FeedForward {\n  static get structure() {\n    return {\n      /**\n       *\n       * _inputLayers are a 1 dimensional array of input layers defined once\n       * @type Object[]\n       * @private\n       */\n      _inputLayers: null,\n\n      /**\n       * _hiddenLayers are a 2 dimensional array of hidden layers defined for each recursion\n       * @type Object[][]\n       * @private\n       */\n      _hiddenLayers: null,\n\n      /**\n       * _outputLayers are a 1 dimensional array of output layers defined once\n       * @type Object[]\n       * @private\n       */\n      _outputLayers: null,\n      _outputConnection: null,\n      _previousInputs: null,\n      _model: null,\n      _recurrentIndices: null,\n    };\n  }\n\n  _connectLayers() {\n    const initialLayers = [];\n    const inputLayer = this.inputLayer();\n    const hiddenLayers = this._connectHiddenLayers(inputLayer);\n    this._outputConnection.setLayer(hiddenLayers[hiddenLayers.length - 1]);\n    const outputLayer = this.outputLayer(\n      this._outputConnection,\n      hiddenLayers.length\n    );\n    initialLayers.push(inputLayer);\n    initialLayers.push(...hiddenLayers);\n    initialLayers.push(outputLayer);\n    const flattenedLayers = flattenLayers(initialLayers);\n    this._inputLayers = flattenedLayers.slice(\n      0,\n      flattenedLayers.indexOf(inputLayer) + 1\n    );\n    this._hiddenLayers = [\n      flattenedLayers.slice(\n        flattenedLayers.indexOf(inputLayer) + 1,\n        flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1\n      ),\n    ];\n    this._outputLayers = flattenedLayers.slice(\n      flattenedLayers.indexOf(hiddenLayers[hiddenLayers.length - 1]) + 1\n    );\n    this._outputLayers.unshift();\n    this._recurrentIndices = [];\n    this._model = [];\n    for (let i = 0; i < this._hiddenLayers[0].length; i++) {\n      if (\n        Object.getPrototypeOf(this._hiddenLayers[0][i].constructor).name ===\n        'Model'\n      ) {\n        this._model.push(this._hiddenLayers[0][i]);\n        this._hiddenLayers[0].splice(i, 1);\n      }\n    }\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      this._recurrentIndices.push(\n        this._hiddenLayers[0].indexOf(hiddenLayers[i])\n      );\n    }\n  }\n\n  _connectHiddenLayers(previousLayer) {\n    const hiddenLayers = [];\n    for (let i = 0; i < this.hiddenLayers.length; i++) {\n      const recurrentInput = new RecurrentZeros();\n      const hiddenLayer = this.hiddenLayers[i](previousLayer, recurrentInput, i);\n      previousLayer = hiddenLayer;\n      hiddenLayers.push(hiddenLayer);\n    }\n    return hiddenLayers;\n  }\n\n  _connectHiddenLayersDeep() {\n    const hiddenLayers = [];\n    const previousHiddenLayers = this._hiddenLayers[\n      this._hiddenLayers.length - 1\n    ];\n    const firstLayer = this._hiddenLayers[0];\n    let recurrentIndex = 0;\n    for (let i = 0; i < previousHiddenLayers.length; i++) {\n      const previousHiddenLayer = previousHiddenLayers[i];\n      let layer = null;\n      switch (Object.getPrototypeOf(firstLayer[i].constructor).name) {\n        case 'Activation': {\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(inputLayer);\n          break;\n        }\n        case 'Filter': {\n          const settings = previousHiddenLayer;\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(settings, inputLayer);\n          break;\n        }\n        case 'Internal': {\n          switch (previousHiddenLayer.constructor.name) {\n            case 'RecurrentConnection':\n              break;\n            case 'RecurrentInput':\n            case 'RecurrentZeros':\n            default:\n              layer = new RecurrentInput();\n              layer.setDimensions(\n                previousHiddenLayer.width,\n                previousHiddenLayer.height\n              );\n              layer.setRecurrentInput(\n                previousHiddenLayers[this._recurrentIndices[recurrentIndex]]\n              );\n              recurrentIndex++;\n              break;\n          }\n          break;\n        }\n        case 'Model': {\n          layer = previousHiddenLayer;\n          break;\n        }\n        case 'Modifier': {\n          const inputLayer =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer)\n            ] || previousHiddenLayer.inputLayer;\n          layer = new previousHiddenLayer.constructor(inputLayer);\n          break;\n        }\n        case 'Operator': {\n          const inputLayer1 =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer1)\n            ] || previousHiddenLayer.inputLayer1;\n          const inputLayer2 =\n            hiddenLayers[\n              previousHiddenLayers.indexOf(previousHiddenLayer.inputLayer2)\n            ] || previousHiddenLayer.inputLayer2;\n          layer = new previousHiddenLayer.constructor(inputLayer1, inputLayer2);\n          break;\n        }\n        default:\n          throw new Error(\n            `hidden layer ${\n              previousHiddenLayer.constructor.name\n            } extends unknown hidden layer ${\n              Object.getPrototypeOf(previousHiddenLayer.constructor).name\n            }`\n          );\n      }\n\n      hiddenLayers[i] = layer;\n    }\n    this._hiddenLayers.push(hiddenLayers);\n    return hiddenLayers;\n  }\n\n  initialize() {\n    this._previousInputs = [];\n    this._outputConnection = new RecurrentConnection();\n    this._connectLayers();\n    this.initializeLayers(this._model);\n    this.initializeLayers(this._inputLayers);\n    this.initializeLayers(this._hiddenLayers[0]);\n    this.initializeLayers(this._outputLayers);\n  }\n\n  initializeDeep() {\n    const hiddenLayers = this._connectHiddenLayersDeep();\n    for (let i = 0; i < hiddenLayers.length; i++) {\n      const hiddenLayer = hiddenLayers[i];\n      hiddenLayer.reuseKernels(this._hiddenLayers[0][i]);\n    }\n  }\n\n  runInput(input) {\n    const max = input.length - 1;\n    for (let x = 0; x < max; x++) {\n      const hiddenLayers = this._hiddenLayers[x];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n\n      this._inputLayers[0].predict([input[x]]);\n      this._previousInputs.push(this._inputLayers[0].weights);\n      for (let i = 1; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].predict();\n      }\n      for (let i = 0; i < this._hiddenLayers[x].length; i++) {\n        this._hiddenLayers[x][i].predict();\n      }\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].predict();\n      }\n    }\n    return this._outputLayers[this._outputLayers.length - 1].weights;\n  }\n\n  _prepTraining(data, options) {\n    const stats = super._prepTraining(data, options);\n    this.initializeDeep();\n    return stats;\n  }\n\n  _calculateDeltas(target, offset) {\n    for (let x = target.length - 1; x >= 0; x--) {\n      const hiddenLayersIndex = offset + x;\n      const hiddenLayers = this._hiddenLayers[hiddenLayersIndex];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n      if (this._previousInputs.length > 0) {\n        this._inputLayers[0].weights = this._previousInputs.pop();\n      }\n\n      this._outputLayers[this._outputLayers.length - 1].compare([target[x]]);\n      for (let i = this._outputLayers.length - 2; i >= 0; i--) {\n        this._outputLayers[i].compare();\n      }\n      for (let i = hiddenLayers.length - 1; i >= 0; i--) {\n        hiddenLayers[i].compare();\n      }\n      for (let i = this._inputLayers.length - 1; i >= 1; i--) {\n        this._inputLayers[i].compare();\n      }\n    }\n  }\n\n  _adjustWeights() {\n    for (\n      let hiddenLayersIndex = 0;\n      hiddenLayersIndex < this._hiddenLayers.length;\n      hiddenLayersIndex++\n    ) {\n      const hiddenLayers = this._hiddenLayers[hiddenLayersIndex];\n      const hiddenConnection = hiddenLayers[hiddenLayers.length - 1];\n      this._outputConnection.setLayer(hiddenConnection);\n      for (let i = 0; i < this._inputLayers.length; i++) {\n        this._inputLayers[i].learn();\n      }\n\n      for (let i = 0; i < hiddenLayers.length; i++) {\n        hiddenLayers[i].learn();\n      }\n\n      for (let i = 0; i < this._outputLayers.length; i++) {\n        this._outputLayers[i].learn();\n      }\n\n      for (let i = 0; i < this._model.length; i++) {\n        this._model[i].learn();\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {number[]} input\n   * @param {number[]} target\n   * @param {Boolean} [logErrorRate]\n   */\n  _trainPattern(input, target, logErrorRate) {\n    // forward propagate\n    this.runInput(input);\n\n    // back propagate\n    this._calculateDeltas(target, input.length - 1);\n    this._calculateDeltas(input.slice(1), 0);\n    this._adjustWeights();\n\n    if (logErrorRate) {\n      const outputLayer = this._outputLayers[this._outputLayers.length - 1];\n      return mse2d(\n        outputLayer.errors.hasOwnProperty('toArray')\n          ? outputLayer.errors.toArray()\n          : outputLayer.errors\n      );\n    }\n    return null;\n  }\n}\n\nmodule.exports = {\n  Recurrent\n};\n","const zeros = require('../../utilities/zeros');\n\n/**\n * A matrix\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nclass Matrix {\n  constructor(rows, columns) {\n    if (rows === undefined) return;\n    if (columns === undefined) return;\n\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n    this.deltas = zeros(rows * columns);\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @returns {Float32Array|Array}\n   */\n  getWeights(row, col) {\n    // slow but careful accessor function\n    // we want row-major order\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('get accessor is skewed');\n    return this.weights[ix];\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setWeight(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed');\n    this.weights[ix] = v;\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @param v\n   * @returns {Matrix}\n   */\n  setDeltas(row, col, v) {\n    // slow but careful accessor function\n    const ix = this.columns * row + col;\n    if (ix < 0 && ix >= this.weights.length)\n      throw new Error('set accessor is skewed');\n    this.deltas[ix] = v;\n  }\n\n  /**\n   *\n   * @returns {{rows: *, columns: *, weights: Array}}\n   */\n  toJSON() {\n    return {\n      rows: this.rows,\n      columns: this.columns,\n      weights: this.weights.slice(0),\n    };\n  }\n\n  static fromJSON(json) {\n    const matrix = new Matrix(json.rows, json.columns);\n    for (let i = 0, max = json.rows * json.columns; i < max; i++) {\n      matrix.weights[i] = json.weights[i]; // copy over weights\n    }\n    return matrix;\n  }\n\n  /**\n   *\n   * @param weightRows\n   * @param [deltasRows]\n   * @returns {Matrix}\n   */\n  static fromArray(weightRows, deltasRows) {\n    const rows = weightRows.length;\n    const columns = weightRows[0].length;\n    const m = new Matrix(rows, columns);\n\n    deltasRows = deltasRows || weightRows;\n\n    for (let rowIndex = 0; rowIndex < rows; rowIndex++) {\n      const weightValues = weightRows[rowIndex];\n      const deltasValues = deltasRows[rowIndex];\n      for (let columnIndex = 0; columnIndex < columns; columnIndex++) {\n        m.setWeight(rowIndex, columnIndex, weightValues[columnIndex]);\n        m.setDeltas(rowIndex, columnIndex, deltasValues[columnIndex]);\n      }\n    }\n\n    return m;\n  }\n\n  weightsToArray() {\n    const deltas = [];\n    let row = 0;\n    let column = 0;\n    for (let i = 0; i < this.weights.length; i++) {\n      if (column === 0) {\n        deltas.push([]);\n      }\n      deltas[row].push(this.weights[i]);\n      column++;\n      if (column >= this.columns) {\n        column = 0;\n        row++;\n      }\n    }\n    return deltas;\n  }\n\n  deltasToArray() {\n    const deltas = [];\n    let row = 0;\n    let column = 0;\n    for (let i = 0; i < this.deltas.length; i++) {\n      if (column === 0) {\n        deltas.push([]);\n      }\n      deltas[row].push(this.deltas[i]);\n      column++;\n      if (column >= this.columns) {\n        column = 0;\n        row++;\n      }\n    }\n    return deltas;\n  }\n}\n\nmodule.exports = Matrix;\n","function randomFloat(a, b) {\n  return Math.random() * (b - a) + a;\n}\n\n// Random numbers utils\nfunction gaussRandom() {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false;\n    return gaussRandom.vVal;\n  }\n  const u = 2 * Math.random() - 1;\n  const v = 2 * Math.random() - 1;\n  const r = u * u + v * v;\n  if (r === 0 || r > 1) {\n    return gaussRandom();\n  }\n  const c = Math.sqrt((-2 * Math.log(r)) / r);\n  gaussRandom.vVal = v * c; // cache this\n  gaussRandom.returnV = true;\n  return u * c;\n}\n\nfunction randomInteger(a, b) {\n  return Math.floor(Math.random() * (b - a) + a);\n}\n\nfunction randomN(mu, std) {\n  return mu + gaussRandom() * std;\n}\n\ngaussRandom.returnV = false;\ngaussRandom.vVal = 0;\n\nmodule.exports = { randomFloat, randomInteger, randomN };\n","const Matrix = require('.');\nconst randomFloat = require('../../utilities/random').randomFloat;\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @param std\n * @constructor\n */\nclass RandomMatrix extends Matrix {\n  constructor(rows, columns, std) {\n    super(rows, columns);\n    this.rows = rows;\n    this.columns = columns;\n    this.std = std;\n    for (let i = 0, max = this.weights.length; i < max; i++) {\n      this.weights[i] = randomFloat(-std, std);\n    }\n  }\n}\n\nmodule.exports = RandomMatrix;\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function cloneNegative(product, left) {\n  product.rows = parseInt(left.rows, 10);\n  product.columns = parseInt(left.columns, 10);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * add {left} and {right} matrix weights into {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function add(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * adds {from} deltas to {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function addB(product, left, right) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i];\n    right.deltas[i] = product.deltas[i];\n  }\n}\n","/**\n * makes matrix weights and deltas all ones\n * @param {Matrix} product\n */\nmodule.exports = function allOnes(product) {\n  for (let i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1;\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * multiply {left} and {right} matrix weights to {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiply(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow;\n    const rightRowBase = rightColumns * leftRow;\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // dot product loop\n      let dot = 0;\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftIndex = leftRowBase + leftColumn;\n        const rightIndex = rightColumnBase + rightColumn;\n        dot += left.weights[leftIndex] * right.weights[rightIndex];\n        left.deltas[leftIndex] = 0;\n        right.deltas[rightIndex] = 0;\n      }\n      product.weights[rightRowBase + rightColumn] = dot;\n    }\n  }\n}\n","/**\n * multiplies {from} deltas to {left} and {right}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyB(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for (let leftRowRoot = 0; leftRowRoot < leftRows; leftRowRoot++) {\n    const leftRowBase = leftColumns * leftRowRoot;\n    const rightRowBase = rightColumns * leftRowRoot;\n    // loop over cols of right\n    for (let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n      // loop over columns of left\n      for (let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftRow = leftRowBase + leftColumn;\n        const rightRow = rightColumnBase + rightColumn;\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyElement(product, left, right) {\n  const { weights } = left;\n  for (let i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nmodule.exports = function multiplyElementB(product, left, right) {\n  for (let i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n","/**\n *\n * relu {m} weights to {into} weights\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function relu(product, left) {\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n    product.deltas[i] = 0;\n  }\n}\n","/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n * @param {Matrix} product\n * @param {Matrix} m\n */\nmodule.exports = function reluB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowPluckIndex\n */\nmodule.exports = function rowPluck(product, left, rowPluckIndex) {\n  const { columns } = left;\n  const rowBase = columns * rowPluckIndex;\n  for (let column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column];\n    product.deltas[column] = 0;\n  }\n}\n","/**\n * adds {from} deltas into {m} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nmodule.exports = function rowPluckB(product, left, rowIndex) {\n  const { columns } = left;\n  const rowBase = columns * rowIndex;\n  for (let column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function sigmoid(product, left) {\n  // sigmoid nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\nfunction sig(x) {\n  // helper function for computing sigmoid\n  return 1 / (1 + Math.exp(-x));\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function sigmoidB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    const mwi = product.weights[i];\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n  }\n}\n","/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function tanh(product, left) {\n  // tanh nonlinearity\n  for (let i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i]);\n    product.deltas[i] = 0;\n  }\n}\n","/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function tanhB(product, left) {\n  for (let i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    const mwi = product.weights[i];\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n  }\n}\n","const Matrix = require('.');\nconst cloneNegative = require('./clone-negative');\nconst add = require('./add');\nconst addB = require('./add-b');\nconst allOnes = require('./all-ones');\nconst multiply = require('./multiply');\nconst multiplyB = require('./multiply-b');\nconst multiplyElement = require('./multiply-element');\nconst multiplyElementB = require('./multiply-element-b');\nconst relu = require('./relu');\nconst reluB = require('./relu-b');\nconst rowPluck = require('./row-pluck');\nconst rowPluckB = require('./row-pluck-b');\nconst sigmoid = require('./sigmoid');\nconst sigmoidB = require('./sigmoid-b');\nconst tanh = require('./tanh');\nconst tanhB = require('./tanh-b');\n\nclass Equation {\n  constructor() {\n    this.inputRow = 0;\n    this.inputValue = null;\n    this.states = [];\n  }\n\n  /**\n   * connects two matrices together by add\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  add(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, left.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: add,\n      backpropagationFn: addB,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param {Number} rows\n   * @param {Number} columns\n   * @returns {Matrix}\n   */\n  allOnes(rows, columns) {\n    const product = new Matrix(rows, columns);\n    this.states.push({\n      left: product,\n      product,\n      forwardFn: allOnes,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  cloneNegative(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: cloneNegative,\n    });\n    return product;\n  }\n\n  /**\n   * connects two matrices together by subtract\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  subtract(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    return this.add(\n      this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)),\n      right\n    );\n  }\n\n  /**\n   * connects two matrices together by multiply\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiply(left, right) {\n    if (left.columns !== right.rows) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, right.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiply,\n      backpropagationFn: multiplyB,\n    });\n    return product;\n  }\n\n  /**\n   * connects two matrices together by multiplyElement\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n  multiplyElement(left, right) {\n    if (left.weights.length !== right.weights.length) {\n      throw new Error('misaligned matrices');\n    }\n    const product = new Matrix(left.rows, left.columns);\n    this.states.push({\n      left,\n      right,\n      product,\n      forwardFn: multiplyElement,\n      backpropagationFn: multiplyElementB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to relu\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  relu(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: relu,\n      backpropagationFn: reluB,\n    });\n    return product;\n  }\n\n  /**\n   * copy a matrix\n   * @param {Matrix} input\n   * @returns {Matrix}\n   */\n  input(input) {\n    const self = this;\n    this.states.push({\n      product: input,\n      forwardFn: () => {\n        input.weights = self.inputValue;\n      },\n    });\n    return input;\n  }\n\n  /**\n   * connects a matrix via a row\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  inputMatrixToRow(m) {\n    const self = this;\n    const product = new Matrix(m.columns, 1);\n    this.states.push({\n      left: m,\n      get right() {\n        return self.inputRow;\n      },\n      product,\n      forwardFn: rowPluck,\n      backpropagationFn: rowPluckB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to sigmoid\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  sigmoid(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: sigmoid,\n      backpropagationFn: sigmoidB,\n    });\n    return product;\n  }\n\n  /**\n   * connects a matrix to tanh\n   * @param {Matrix} m\n   * @returns {Matrix}\n   */\n  tanh(m) {\n    const product = new Matrix(m.rows, m.columns);\n    this.states.push({\n      left: m,\n      product,\n      forwardFn: tanh,\n      backpropagationFn: tanhB,\n    });\n    return product;\n  }\n\n  /**\n   *\n   * @param m\n   * @returns {Matrix}\n   */\n  observe(m) {\n    let iForward = 0;\n    let iBackpropagate = 0;\n    this.states.push({\n      forwardFn() {\n        iForward++;\n      },\n      backpropagationFn() {\n        iBackpropagate++;\n      },\n    });\n    return m;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  run(rowIndex = 0) {\n    this.inputRow = rowIndex;\n    let state;\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue;\n      }\n      state.forwardFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runInput(inputValue) {\n    this.inputValue = inputValue;\n    let state;\n    for (let i = 0, max = this.states.length; i < max; i++) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('forwardFn')) {\n        continue;\n      }\n      state.forwardFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n\n  /**\n   * @patam {Number} [rowIndex]\n   * @output {Matrix}\n   */\n  runBackpropagate(rowIndex = 0) {\n    this.inputRow = rowIndex;\n\n    let i = this.states.length;\n    let state;\n    while (i-- > 0) {\n      state = this.states[i];\n      if (!state.hasOwnProperty('backpropagationFn')) {\n        continue;\n      }\n      state.backpropagationFn(state.product, state.left, state.right);\n    }\n\n    return state.product;\n  }\n}\n\nmodule.exports = Equation;\n","const _randomF = require('../../utilities/random').randomFloat;\n\n// prevent parser from renaming when calling toString() method later\nconst randomF = _randomF;\n/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nmodule.exports = function sampleI(m) {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  const r = randomF(0, 1);\n  let x = 0;\n  let i = 0;\n  const w = m.weights;\n\n  while (true) {\n    x += w[i];\n    if (x > r) {\n      return i;\n    }\n    i++;\n  }\n}\n","/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nmodule.exports = function maxI(m) {\n  // argmax of array w\n  const { weights } = m;\n  let maxv = weights[0];\n  let maxix = 0;\n  for (let i = 1; i < weights.length; i++) {\n    const v = weights[i];\n    if (v < maxv) continue;\n\n    maxix = i;\n    maxv = v;\n  }\n  return maxix;\n}\n","const Matrix = require('.');\n\n/**\n *\n * @param {Matrix} m\n * @returns {Matrix}\n */\nmodule.exports = function softmax(m) {\n  const result = new Matrix(m.rows, m.columns); // probability volume\n  let maxVal = -999999;\n  for (let i = 0; i < m.weights.length; i++) {\n    if (m.weights[i] > maxVal) {\n      maxVal = m.weights[i];\n    }\n  }\n\n  let s = 0;\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] = Math.exp(m.weights[i] - maxVal);\n    s += result.weights[i];\n  }\n\n  for (let i = 0; i < m.weights.length; i++) {\n    result.weights[i] /= s;\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result;\n}\n","/*\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nmodule.exports = function copy(product, left) {\n  product.rows = parseInt(left.rows, 10);\n  product.columns = parseInt(left.columns, 10);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n}\n","/**\n *\n * @param {String[]|Number[]} values\n * @param maxThreshold\n * @constructor\n */\nclass DataFormatter {\n  constructor(values, maxThreshold = 0) {\n    if (values === undefined) return;\n\n    this.values = values;\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n    this.indexTable = {};\n    this.characterTable = {};\n    this.characters = [];\n    this.buildCharactersFromIterable(values);\n    this.buildTables(maxThreshold);\n  }\n\n  buildCharactersFromIterable(values) {\n    const tempCharactersTable = {};\n    for (\n      let dataFormatterIndex = 0, dataFormatterLength = values.length;\n      dataFormatterIndex < dataFormatterLength;\n      dataFormatterIndex++\n    ) {\n      const characters = values[dataFormatterIndex];\n\n      if (characters.hasOwnProperty('length')) {\n        for (\n          let characterIndex = 0, charactersLength = characters.length;\n          characterIndex < charactersLength;\n          characterIndex++\n        ) {\n          const character = characters[characterIndex];\n          if (tempCharactersTable.hasOwnProperty(character)) continue;\n          tempCharactersTable[character] = true;\n          this.characters.push(character);\n        }\n      } else {\n        const character = values[dataFormatterIndex];\n        if (tempCharactersTable.hasOwnProperty(character)) continue;\n        tempCharactersTable[dataFormatterIndex] = true;\n        this.characters.push(character);\n      }\n    }\n  }\n\n  buildTables(maxThreshold) {\n    // filter by count threshold and create pointers\n    const charactersLength = this.characters.length;\n    for (\n      let characterIndex = 0;\n      characterIndex < charactersLength;\n      characterIndex++\n    ) {\n      const character = this.characters[characterIndex];\n      if (characterIndex >= maxThreshold) {\n        // add character to dataFormatter\n        this.indexTable[character] = characterIndex;\n        this.characterTable[characterIndex] = character;\n      }\n    }\n  }\n\n  toIndexes(value, maxThreshold = 0) {\n    const result = [];\n    const { indexTable } = this;\n\n    for (let i = 0, max = value.length; i < max; i++) {\n      const character = value[i];\n      const index = indexTable[character];\n      if (index === undefined) {\n        throw new Error(`unrecognized character \"${character}\"`);\n      }\n      if (index < maxThreshold) continue;\n      result.push(index);\n    }\n\n    return result;\n  }\n\n  toIndexesInputOutput(value1, value2 = null, maxThreshold = 0) {\n    let result;\n    if (typeof value1 === 'string') {\n      result = this.toIndexes(\n        value1.split('').concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    } else {\n      result = this.toIndexes(\n        value1.concat(['stop-input', 'start-output']),\n        maxThreshold\n      );\n    }\n\n    if (value2 === null) return result;\n\n    if (typeof value2 === 'string') {\n      return result.concat(this.toIndexes(value2.split(''), maxThreshold));\n    }\n    return result.concat(this.toIndexes(value2, maxThreshold));\n  }\n\n  toCharacters(indices, maxThreshold = 0) {\n    const result = [];\n    const { characterTable } = this;\n\n    for (let i = 0, max = indices.length; i < max; i++) {\n      const index = indices[i];\n      if (index < maxThreshold) continue;\n      const character = characterTable[index];\n      if (character === undefined) {\n        throw new Error(`unrecognized index \"${index}\"`);\n      }\n      result.push(character);\n    }\n\n    return result;\n  }\n\n  toString(indices, maxThreshold) {\n    return this.toCharacters(indices, maxThreshold).join('');\n  }\n\n  addInputOutput() {\n    this.addSpecial('stop-input');\n    this.addSpecial('start-output');\n  }\n\n  static fromAllPrintable(maxThreshold, values = ['\\n']) {\n    for (let i = 32; i <= 126; i++) {\n      values.push(String.fromCharCode(i));\n    }\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromAllPrintableInputOutput(maxThreshold, values = ['\\n']) {\n    const dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromStringInputOutput(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string));\n    const dataFormatter = new DataFormatter(values, maxThreshold);\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromArrayInputOutput(array, maxThreshold) {\n    const dataFormatter = new DataFormatter(\n      array.filter((v, i, a) => a.indexOf(v) === i).sort(),\n      maxThreshold\n    );\n    dataFormatter.addInputOutput();\n    return dataFormatter;\n  }\n\n  static fromString(string, maxThreshold) {\n    const values = String.prototype.concat(...new Set(string));\n    return new DataFormatter(values, maxThreshold);\n  }\n\n  static fromJSON(json) {\n    const dataFormatter = new DataFormatter();\n    dataFormatter.indexTable = json.indexTable;\n    dataFormatter.characterTable = json.characterTable;\n    dataFormatter.values = json.values;\n    dataFormatter.characters = json.characters;\n    return dataFormatter;\n  }\n\n  addSpecial(...args) {\n    for (let i = 0; i < args.length; i++) {\n      const special = args[i];\n      this.indexTable[special] = this.characters.length;\n      const specialIndex = this.indexTable[special];\n      this.characterTable[specialIndex] = special;\n      this.characters.push(special);\n    }\n  }\n\n  toFunctionString() {\n    return `\nvar characterTable = ${JSON.stringify(this.characterTable)};\nvar indexTable = ${JSON.stringify(this.indexTable)};\nvar characters = ${JSON.stringify(this.characters)};\n${this.toIndexes\n      .toString()\n      .replace(/(let|var) indexTable = this[.]indexTable;\\n/, '')\n      .replace(/this[.]/g, '')}\n${this.toIndexesInputOutput.toString().replace(/this[.]/g, '')}\n${this.toCharacters\n      .toString()\n      .replace(/(let|var) characterTable = this[.]characterTable;\\n/g, '')\n      .replace(/this[.]/, '')}\n`;\n  }\n}\n\nmodule.exports = DataFormatter;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst Equation = require('./matrix/equation');\nconst sampleI = require('./matrix/sample-i');\nconst maxI = require('./matrix/max-i');\nconst softmax = require('./matrix/softmax');\nconst copy = require('./matrix/copy');\nconst randomFloat = require('../utilities/random').randomFloat;\nconst zeros = require('../utilities/zeros');\nconst DataFormatter = require('../utilities/data-formatter');\n\nclass RNN {\n  constructor(options = {}) {\n    const { defaults } = this.constructor;\n\n    Object.assign(this, defaults, options);\n\n    this.stepCache = {};\n    this.runs = 0;\n    this.totalCost = null;\n    this.ratioClipped = null;\n    this.model = null;\n\n    this.initialLayerInputs = this.hiddenSizes.map(\n      () => new Matrix(this.hiddenSizes[0], 1)\n    );\n    this.inputLookup = null;\n    this.outputLookup = null;\n    this.initialize();\n  }\n\n  initialize() {\n    this.model = {\n      input: null,\n      hiddenLayers: [],\n      output: null,\n      equations: [],\n      allMatrices: [],\n      equationConnections: [],\n    };\n\n    if (this.dataFormatter !== null) {\n      this.outputSize = this.dataFormatter.characters.length;\n      this.inputRange = this.outputSize;\n      this.inputSize = this.inputRange;\n    }\n\n    if (this.json) {\n      this.fromJSON(this.json);\n    } else {\n      this.mapModel();\n    }\n  }\n\n  createHiddenLayers() {\n    const { model, hiddenSizes } = this;\n    const { hiddenLayers } = model;\n    // 0 is end, so add 1 to offset\n    hiddenLayers.push(RNN.getModel(hiddenSizes[0], this.inputSize));\n    let prevSize = hiddenSizes[0];\n\n    for (let d = 1; d < hiddenSizes.length; d++) {\n      // loop over depths\n      const hiddenSize = hiddenSizes[d];\n      hiddenLayers.push(RNN.getModel(hiddenSize, prevSize));\n      prevSize = hiddenSize;\n    }\n  }\n\n  /**\n   *\n   * @param {Number} hiddenSize\n   * @param {Number} prevSize\n   * @returns {object}\n   */\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // wxh\n      weight: new RandomMatrix(hiddenSize, prevSize, 0.08),\n      // whh\n      transition: new RandomMatrix(hiddenSize, hiddenSize, 0.08),\n      // bhh\n      bias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const relu = equation.relu.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n\n    return relu(\n      add(\n        add(\n          multiply(hiddenLayer.weight, inputMatrix),\n          multiply(hiddenLayer.transition, previousResult)\n        ),\n        hiddenLayer.bias\n      )\n    );\n  }\n\n  createInputMatrix() {\n    // 0 is end, so add 1 to offset\n    this.model.input = new RandomMatrix(\n      this.inputRange + 1,\n      this.inputSize,\n      0.08\n    );\n  }\n\n  createOutputMatrix() {\n    const { model, outputSize } = this.model;\n    const lastHiddenSize = this.hiddenSizes[this.hiddenSizes.length - 1];\n\n    // 0 is end, so add 1 to offset\n    // whd\n    model.outputConnector = new RandomMatrix(\n      outputSize + 1,\n      lastHiddenSize,\n      0.08\n    );\n    // 0 is end, so add 1 to offset\n    // bd\n    model.output = new Matrix(outputSize + 1, 1);\n  }\n\n  bindEquation() {\n    const { model, hiddenSizes } = this.model;\n    const { hiddenLayers } = model;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? model.equationConnections[model.equationConnections.length - 1]\n        : this.initialLayerInputs;\n\n    // 0 index\n    let output = this.getEquation(\n      equation,\n      equation.inputMatrixToRow(model.input),\n      equationConnection[0],\n      hiddenLayers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenSizes.length; i < max; i++) {\n      output = this.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        hiddenLayers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  mapModel() {\n    const { model } = this;\n    const { hiddenLayers, allMatrices } = model;\n\n    this.createInputMatrix();\n    if (!model.input) throw new Error('net.model.input not set');\n    allMatrices.push(model.input);\n\n    this.createHiddenLayers();\n    if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n    for (let i = 0, max = hiddenLayers.length; i < max; i++) {\n      Object.values(hiddenLayers[i]).forEach(val => {\n        allMatrices.push(val);\n      });\n    }\n\n    this.createOutputMatrix();\n    if (!model.outputConnector)\n      throw new Error('net.model.outputConnector not set');\n    if (!model.output) throw new Error('net.model.output not set');\n\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @param {Number} [learningRate]\n   * @returns {number}\n   */\n  trainPattern(input, learningRate = null) {\n    const error = this.runInput(input);\n    this.runBackpropagate(input);\n    this.step(learningRate);\n    return error;\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @returns {number}\n   */\n  runInput(input) {\n    this.runs++;\n    const { model } = this;\n    const max = input.length;\n    let log2ppl = 0;\n    let cost = 0;\n    let equation;\n    while (model.equations.length <= input.length + 1) {\n      // last is zero\n      this.bindEquation();\n    }\n    for (\n      let inputIndex = -1, inputMax = input.length;\n      inputIndex < inputMax;\n      inputIndex++\n    ) {\n      // start and end tokens are zeros\n      const equationIndex = inputIndex + 1;\n      equation = model.equations[equationIndex];\n\n      const source = inputIndex === -1 ? 0 : input[inputIndex] + 1; // first step: start with START token\n      const target = inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1; // last step: end with END token\n      const output = equation.run(source);\n      // set gradients into log probabilities\n      const logProbabilities = output; // interpret output as log probabilities\n      const probabilities = softmax(output); // compute the softmax probabilities\n\n      log2ppl += -Math.log2(probabilities.weights[target]); // accumulate base 2 log prob and do smoothing\n      cost += -Math.log(probabilities.weights[target]);\n      // write gradients into log probabilities\n      logProbabilities.deltas = probabilities.weights.slice(0);\n      logProbabilities.deltas[target] -= 1;\n    }\n\n    this.totalCost = cost;\n    return 2 ** (log2ppl / (max - 1));\n  }\n\n  /**\n   * @param {Number[]} input\n   */\n  runBackpropagate(input) {\n    let i = input.length;\n    const { model } = this;\n    const { equations } = model;\n    while (i > 0) {\n      equations[i].runBackpropagate(input[i - 1] + 1);\n      i--;\n    }\n    equations[0].runBackpropagate(0);\n  }\n\n  /**\n   *\n   * @param {Number} [learningRate]\n   */\n  step(learningRate = null) {\n    // perform parameter update\n    // TODO: still not sure if this is ready for learningRate\n    const stepSize = learningRate || this.learningRate;\n    const { regc, clipval, model } = this;\n    let numClipped = 0;\n    let numTot = 0;\n    const { allMatrices } = model;\n    for (let matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n      const matrix = allMatrices[matrixIndex];\n      const { weights, deltas } = matrix;\n      if (!(matrixIndex in this.stepCache)) {\n        this.stepCache[matrixIndex] = zeros(matrix.rows * matrix.columns);\n      }\n      const cache = this.stepCache[matrixIndex];\n      for (let i = 0; i < weights.length; i++) {\n        let r = deltas[i];\n        const w = weights[i];\n        // rmsprop adaptive learning rate\n        cache[i] = cache[i] * this.decayRate + (1 - this.decayRate) * r * r;\n        // gradient clip\n        if (r > clipval) {\n          r = clipval;\n          numClipped++;\n        }\n        if (r < -clipval) {\n          r = -clipval;\n          numClipped++;\n        }\n        numTot++;\n        // update (and regularize)\n        weights[i] =\n          w + (-stepSize * r) / Math.sqrt(cache[i] + this.smoothEps) - regc * w;\n      }\n    }\n    this.ratioClipped = numClipped / numTot;\n  }\n\n  /**\n   *\n   * @returns boolean\n   */\n  get isRunnable() {\n    if (this.model.equations.length === 0) {\n      console.error(`No equations bound, did you run train()?`);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   *\n   * @param {Number[]|*} [rawInput]\n   * @param {Number} [maxPredictionLength]\n   * @param {Boolean} [isSampleI]\n   * @param {Number} temperature\n   * @returns {*}\n   */\n  run(\n    rawInput = [],\n    maxPredictionLength = 100,\n    isSampleI = false,\n    temperature = 1\n  ) {\n    if (!this.isRunnable) return null;\n    const input = this.formatDataIn(rawInput);\n    const { model } = this;\n    const output = [];\n    let i = 0;\n    while (model.equations.length < maxPredictionLength) {\n      this.bindEquation();\n    }\n    while (true) {\n      /* eslint-disable */\n      const previousIndex =\n        i === 0 ? 0 : i < input.length ? input[i - 1] + 1 : output[i - 1]\n      /* eslint-enable */\n      const equation = model.equations[i];\n      // sample predicted letter\n      const outputMatrix = equation.run(previousIndex);\n      const logProbabilities = new Matrix(\n        model.output.rows,\n        model.output.columns\n      );\n      copy(logProbabilities, outputMatrix);\n      if (temperature !== 1 && isSampleI) {\n        /**\n         * scale log probabilities by temperature and re-normalize\n         * if temperature is high, logProbabilities will go towards zero\n         * and the softmax outputs will be more diffuse. if temperature is\n         * very low, the softmax outputs will be more peaky\n         */\n        for (let j = 0, max = logProbabilities.weights.length; j < max; j++) {\n          logProbabilities.weights[j] /= temperature;\n        }\n      }\n\n      const probs = softmax(logProbabilities);\n      const nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n      i++;\n      if (nextIndex === 0) {\n        // END token predicted, break out\n        break;\n      }\n      if (i >= maxPredictionLength) {\n        // something is wrong\n        break;\n      }\n\n      output.push(nextIndex);\n    }\n\n    /**\n     * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n     * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n     * locks in on a value.\n     * Kind of like this, values are from input:\n     * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n     * 2 -> 2 (oh how interesting, I've narrowed down values...)\n     * 1 -> 9 (oh how interesting, I've now know what the values are...)\n     * then the output looks like: [4, 2, 9,...]\n     * so we then remove the erroneous data to get our true output\n     */\n    return this.formatDataOut(\n      input,\n      output.slice(input.length).map(value => value - 1)\n    );\n  }\n\n  /**\n   *\n   * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n   * @param {Object} [options]\n   * @returns {{error: number, iterations: number}}\n   */\n  train(data, options = {}) {\n    options = Object.assign({}, this.constructor.trainDefaults, options);\n    const {\n      iterations,\n      errorThresh,\n      logPeriod,\n      callback,\n      callbackPeriod,\n    } = options;\n\n    const log = options.log === true ? console.log : options.log;\n    const learningRate = options.learningRate || this.learningRate;\n    let error = Infinity;\n    let i;\n\n    if (this.hasOwnProperty('setupData')) {\n      data = this.setupData(data);\n    }\n\n    if (!options.keepNetworkIntact) {\n      this.initialize();\n    }\n\n    for (i = 0; i < iterations && error > errorThresh; i++) {\n      let sum = 0;\n      for (let j = 0; j < data.length; j++) {\n        const err = this.trainPattern(data[j], learningRate);\n        sum += err;\n      }\n      error = sum / data.length;\n\n      if (Number.isNaN(error))\n        throw new Error(\n          'network error rate is unexpected NaN, check network configurations and try again'\n        );\n      if (log && i % logPeriod === 0) {\n        log('iterations:', i, 'training error:', error);\n      }\n      if (callback && i % callbackPeriod === 0) {\n        callback({ error, iterations: i });\n      }\n    }\n\n    return {\n      error,\n      iterations: i,\n    };\n  }\n\n  /**\n   *\n   * @param data\n   * @returns {\n   *  {\n   *    error: number,\n   *    misclasses: Array\n   *  }\n   * }\n   */\n  test() {\n    throw new Error(`${this.constructor.name}-test is not yet implemented`);\n  }\n\n  /**\n   *\n   * @returns {Object}\n   */\n  toJSON() {\n    const { defaults } = this.constructor;\n    const { model } = this;\n    const options = {};\n\n    Object.keys(defaults).forEach(p => {\n      options[p] = this[p];\n    });\n\n    return {\n      type: this.constructor.name,\n      options,\n      input: model.input.toJSON(),\n      hiddenLayers: model.hiddenLayers.map(hiddenLayer => {\n        const layers = {};\n\n        Object.keys(hiddenLayer).forEach(p => {\n          layers[p] = hiddenLayer[p].toJSON();\n        });\n\n        return layers;\n      }),\n      outputConnector: this.model.outputConnector.toJSON(),\n      output: this.model.output.toJSON(),\n    };\n  }\n\n  toJSONString() {\n    return JSON.stringify(this.toJSON());\n  }\n\n  fromJSON(json) {\n    this.json = json;\n    const { defaults } = this.constructor;\n    const { model } = this.model;\n    const { options } = json;\n    const { allMatrices } = model;\n\n    model.input = Matrix.fromJSON(json.input);\n    allMatrices.push(model.input);\n    model.hiddenLayers = json.hiddenLayers.map(hiddenLayer => {\n      const layers = {};\n\n      Object.keys(hiddenLayer).forEach(p => {\n        layers[p] = Matrix.fromJSON(hiddenLayer[p]);\n        allMatrices.push(layers[p]);\n      });\n\n      return layers;\n    });\n    model.outputConnector = Matrix.fromJSON(json.outputConnector);\n    model.output = Matrix.fromJSON(json.output);\n    allMatrices.push(model.outputConnector);\n    allMatrices.push(model.output);\n\n    Object.keys(defaults).forEach(p => {\n      this[p] = options.hasOwnProperty(p) ? options[p] : defaults[p];\n    });\n\n    if (\n      options.hasOwnProperty('dataFormatter') &&\n      options.dataFormatter !== null\n    ) {\n      this.dataFormatter = DataFormatter.fromJSON(options.dataFormatter);\n      delete options.dataFormatter;\n    }\n\n    this.bindEquation();\n  }\n\n  fromJSONString(json) {\n    return this.fromJSON(JSON.parse(json));\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    const { model } = this;\n    const { equations } = this.model;\n    const equation = equations[1];\n    const { states } = equation;\n    const jsonString = JSON.stringify(this.toJSON());\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const { states0 } = equations[0];\n      for (let i = 0, max = states0.length; i < max; i++) {\n        if (states0[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        const state = states[i];\n\n        if (i === stateIndex) {\n          const j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${\n                  m.rows\n                }, ${m.columns})`;\n              }\n\n              break;\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${j}] === 'object' ? prevStates[${j}].product : new Matrix(${\n                  m.rows\n                }, ${m.columns})`;\n              }\n              break;\n            case state.product:\n              return `new Matrix(${m.rows}, ${m.columns})`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${i}].product`;\n        if (m === state.right) return `states[${i}].right`;\n        if (m === state.left) return `states[${i}].left`;\n      }\n\n      return null;\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n\n      if (m === model.input) return `json.input`;\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        const hiddenLayer = model.hiddenLayers[i];\n\n        // eslint-disable-next-line\n        Object.keys(hiddenLayer).forEach(p => {\n          if (hiddenLayer[p] === m) {\n            return `json.hiddenLayers[${i}].${p}`;\n          }\n        });\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n      return fnString\n        .join('}')\n        .split('\\n')\n        .join('\\n        ')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${fnName.replace(\n        /[A-Z]/g,\n        value => `-${value.toLowerCase()}`\n      )}.js`;\n    }\n\n    const statesRaw = [];\n    const usedFunctionNames = {};\n    const innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      const state = states[i];\n      statesRaw.push(`states[${i}] = {\n      name: '${state.forwardFn.name}',\n      left: ${matrixToString(state.left, i)},\n      right: ${matrixToString(state.right, i)},\n      product: ${matrixToString(state.product, i)}\n    }`);\n\n      const fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${fnName}': //compiled from ${fileName(fnName)}\n          ${toInner(state.forwardFn.toString())}\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  if (typeof maxPredictionLength === 'undefined') maxPredictionLength = 100;\n  if (typeof isSampleI === 'undefined') isSampleI = false;\n  if (typeof temperature === 'undefined') temperature = 1;\n  ${this.dataFormatter !== null ? this.dataFormatter.toFunctionString() : ''}\n\n  var input = ${\n    this.dataFormatter !== null && typeof this.formatDataIn === 'function'\n      ? 'formatDataIn(rawInput)'\n      : 'rawInput'\n  };\n  var json = ${jsonString};\n  var _i = 0;\n  var output = [];\n  var states = [];\n  var prevStates;\n  while (true) {\n    var previousIndex = (_i === 0\n        ? 0\n        : _i < input.length\n          ? input[_i - 1] + 1\n          : output[_i - 1])\n          ;\n    var rowPluckIndex = previousIndex;\n    prevStates = states;\n    states = [];\n    ${statesRaw.join(';\\n    ')};\n    for (var stateIndex = 0, stateMax = ${\n      statesRaw.length\n    }; stateIndex < stateMax; stateIndex++) {\n      var state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n\n      switch (state.name) {\n${innerFunctionsSwitch.join('\\n')}\n      }\n    }\n\n    var logProbabilities = state.product;\n    if (temperature !== 1 && isSampleI) {\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\n        logProbabilities.weights[q] /= temperature;\n      }\n    }\n\n    var probs = softmax(logProbabilities);\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\n\n    _i++;\n    if (nextIndex === 0) {\n      break;\n    }\n    if (_i >= maxPredictionLength) {\n      break;\n    }\n\n    output.push(nextIndex);\n  }\n  ${\n    this.dataFormatter !== null && typeof this.formatDataOut === 'function'\n      ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))'\n      : 'return output.slice(input.length).map(function(value) { return value - 1; })'\n  };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${\n    this.dataFormatter !== null && typeof this.formatDataIn === 'function'\n      ? `function formatDataIn(input, output) { ${toInner(\n          this.formatDataIn.toString()\n        )\n          .replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '')\n          .replace(/this[.]dataFormatter[.]/g, '')\n          .replace(/this[.]dataFormatter/g, 'true')} }`\n      : ''\n  }\n  ${\n    this.dataFormatter !== null && typeof this.formatDataOut === 'function'\n      ? `function formatDataOut(input, output) { ${toInner(\n          this.formatDataOut.toString()\n        )\n          .replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '')\n          .replace(/this[.]dataFormatter[.]/g, '')\n          .replace(/this[.]dataFormatter/g, 'true')} }`\n      : ''\n  }\n  ${zeros.toString()}\n  ${softmax.toString().replace('_2.default', 'Matrix')}\n  ${randomFloat.toString()}\n  ${sampleI.toString()}\n  ${maxI.toString()}`;\n    // eslint-disable-next-line\n    return new Function(\n      'rawInput',\n      'maxPredictionLength',\n      'isSampleI',\n      'temperature',\n      src\n    );\n  }\n}\n\nRNN.defaults = {\n  inputSize: 20,\n  inputRange: 20,\n  hiddenSizes: [20, 20],\n  outputSize: 20,\n  learningRate: 0.01,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  json: null,\n  /**\n   *\n   * @param {*[]} data\n   * @returns {Number[]}\n   */\n  setupData(data) {\n    if (\n      typeof data[0] !== 'string' &&\n      !Array.isArray(data[0]) &&\n      (!data[0].hasOwnProperty('input') || !data[0].hasOwnProperty('output'))\n    ) {\n      return data;\n    }\n    const values = [];\n    const result = [];\n    if (typeof data[0] === 'string' || Array.isArray(data[0])) {\n      if (this.dataFormatter === null) {\n        for (let i = 0; i < data.length; i++) {\n          values.push(data[i]);\n        }\n        this.dataFormatter = new DataFormatter(values);\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(this.formatDataIn(data[i]));\n      }\n    } else {\n      if (this.dataFormatter === null) {\n        for (let i = 0; i < data.length; i++) {\n          values.push(data[i].input);\n          values.push(data[i].output);\n        }\n        this.dataFormatter = DataFormatter.fromArrayInputOutput(values);\n      }\n      for (let i = 0, max = data.length; i < max; i++) {\n        result.push(this.formatDataIn(data[i].input, data[i].output));\n      }\n    }\n    return result;\n  },\n  /**\n   *\n   * @param {*[]} input\n   * @param {*[]} output\n   * @returns {Number[]}\n   */\n  formatDataIn(input, output = null) {\n    if (this.dataFormatter !== null) {\n      if (this.dataFormatter.indexTable.hasOwnProperty('stop-input')) {\n        return this.dataFormatter.toIndexesInputOutput(input, output);\n      }\n      return this.dataFormatter.toIndexes(input);\n    }\n    return input;\n  },\n  /**\n   *\n   * @param {Number[]} input\n   * @param {Number[]} output\n   * @returns {*}\n   */\n  formatDataOut(input, output) {\n    if (this.dataFormatter !== null) {\n      return this.dataFormatter.toCharacters(output).join('');\n    }\n    return output;\n  },\n  dataFormatter: null,\n};\n\nRNN.trainDefaults = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.3,\n  callback: null,\n  callbackPeriod: 10,\n  keepNetworkIntact: false,\n};\n\nmodule.exports = RNN;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst Equation = require('./matrix/equation');\nconst RNN = require('./rnn');\n\nclass RNNTimeStep extends RNN {\n  // eslint-disable-next-line\n  constructor(options) {\n    super(options);\n  }\n\n  createInputMatrix() {\n    this.model.input = new RandomMatrix(this.inputSize, 1, 0.08);\n  }\n\n  createOutputMatrix() {\n    const { model, outputSize } = this;\n    const lastHiddenSize = this.hiddenSizes[this.hiddenSizes.length - 1];\n\n    // whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    // bd\n    model.output = new Matrix(outputSize, 1);\n  }\n\n  bindEquation() {\n    const { model, hiddenSizes } = this;\n    const { hiddenLayers } = model;\n    const equation = new Equation();\n    const outputs = [];\n    const equationConnection =\n      model.equationConnections.length > 0\n        ? model.equationConnections[model.equationConnections.length - 1]\n        : this.initialLayerInputs;\n\n    // 0 index\n    let output = RNNTimeStep.getEquation(\n      equation,\n      equation.input(model.input),\n      equationConnection[0],\n      hiddenLayers[0]\n    );\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenSizes.length; i < max; i++) {\n      output = RNNTimeStep.getEquation(\n        equation,\n        output,\n        equationConnection[i],\n        hiddenLayers[i]\n      );\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @returns {number}\n   */\n  runInput(input) {\n    this.runs++;\n    const { model } = this;\n    let errorSum = 0;\n    let equation;\n    while (model.equations.length < input.length - 1) {\n      this.bindEquation();\n    }\n    const outputs = [];\n\n    if (this.inputSize === 1) {\n      for (\n        let inputIndex = 0, max = input.length - 1;\n        inputIndex < max;\n        inputIndex++\n      ) {\n        // start and end tokens are zeros\n        equation = model.equations[inputIndex];\n\n        const current = input[inputIndex];\n        const next = input[inputIndex + 1];\n        const output = equation.runInput([current]);\n        for (let i = 0; i < output.weights.length; i++) {\n          const error = output.weights[i] - next;\n          // set gradients into log probabilities\n          errorSum += Math.abs(error);\n\n          // write gradients into log probabilities\n          output.deltas[i] = error;\n          outputs.push(output.weights);\n        }\n      }\n    } else {\n      for (\n        let inputIndex = 0, max = input.length - 1;\n        inputIndex < max;\n        inputIndex++\n      ) {\n        // start and end tokens are zeros\n        equation = model.equations[inputIndex];\n\n        const current = input[inputIndex];\n        const next = input[inputIndex + 1];\n        const output = equation.runInput(current);\n        for (let i = 0; i < output.weights.length; i++) {\n          const error = output.weights[i] - next[i];\n          // set gradients into log probabilities\n          errorSum += Math.abs(error);\n\n          // write gradients into log probabilities\n          output.deltas[i] = error;\n          outputs.push(output.weights);\n        }\n      }\n    }\n    // this.model.equations.length - 1;\n    this.totalCost = errorSum;\n    return errorSum;\n  }\n\n  runBackpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].runBackpropagate();\n    }\n  }\n\n  /**\n   *\n   * @param {Number[]|Number} [input]\n   * @param {Number} [maxPredictionLength]\n   * @param {Boolean} [isSampleI]\n   * @param {Number} temperature\n   * @returns {Number[]|Number}\n   */\n  run(\n    input = [],\n    maxPredictionLength = 1 /* , isSampleI = false, temperature = 1 */\n  ) {\n    if (!this.isRunnable) return null;\n    const { model } = this;\n    while (model.equations.length < maxPredictionLength) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    if (this.inputSize === 1) {\n      for (let i = 0; i < input.length; i++) {\n        const outputMatrix = model.equations[i].runInput([input[i]]);\n        lastOutput = outputMatrix.weights;\n      }\n    } else {\n      for (let i = 0; i < input.length; i++) {\n        const outputMatrix = model.equations[i].runInput(input[i]);\n        lastOutput = outputMatrix.weights;\n      }\n    }\n    if (this.outputSize === 1) {\n      return lastOutput[0];\n    }\n    return lastOutput;\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    throw new Error(\n      `${this.constructor.name}-toFunction is not yet implemented`\n    );\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenSizes: [20],\n  outputSize: 1,\n  learningRate: 0.01,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  json: null,\n  dataFormatter: null,\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;\n\nmodule.exports = RNNTimeStep;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst RNN = require('./rnn');\n\nclass LSTM extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // gates parameters\n      // wix\n      inputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wih\n      inputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bi\n      inputBias: new Matrix(hiddenSize, 1),\n      // wfx\n      forgetMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wfh\n      forgetHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bf\n      forgetBias: new Matrix(hiddenSize, 1),\n      // wox\n      outputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // woh\n      outputHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bo\n      outputBias: new Matrix(hiddenSize, 1),\n      // cell write params\n      // wcx\n      cellActivationMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wch\n      cellActivationHidden: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellActivationBias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n\n    const inputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.inputMatrix, inputMatrix),\n          multiply(hiddenLayer.inputHidden, previousResult)\n        ),\n        hiddenLayer.inputBias\n      )\n    );\n\n    const forgetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.forgetMatrix, inputMatrix),\n          multiply(hiddenLayer.forgetHidden, previousResult)\n        ),\n        hiddenLayer.forgetBias\n      )\n    );\n\n    // output gate\n    const outputGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.outputMatrix, inputMatrix),\n          multiply(hiddenLayer.outputHidden, previousResult)\n        ),\n        hiddenLayer.outputBias\n      )\n    );\n\n    // write operation on cells\n    const cellWrite = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellActivationMatrix, inputMatrix),\n          multiply(hiddenLayer.cellActivationHidden, previousResult)\n        ),\n        hiddenLayer.cellActivationBias\n      )\n    );\n\n    // compute new cell activation\n    const retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n    const writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n    const cell = add(retainCell, writeCell); // new cell contents\n\n    // compute hidden state as gated, saturated cell activations\n    return multiplyElement(outputGate, tanh(cell));\n  }\n}\n\nmodule.exports = LSTM;\n","const Matrix = require('./matrix');\nconst LSTM = require('./lstm');\nconst RNNTimeStep = require('./rnn-time-step');\n\nclass LSTMTimeStep extends RNNTimeStep {\n  getModel(hiddenSize, prevSize) {\n    return LSTM.prototype.getModel.call(this, hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return LSTM.prototype.getEquation.call(\n      this,\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    );\n  }\n}\n\nmodule.exports = LSTMTimeStep;\n","const Matrix = require('./matrix');\nconst RandomMatrix = require('./matrix/random-matrix');\nconst RNN = require('./rnn');\n\nclass GRU extends RNN {\n  static getModel(hiddenSize, prevSize) {\n    return {\n      // update Gate\n      // wzxh\n      updateGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wzhh\n      updateGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bz\n      updateGateBias: new Matrix(hiddenSize, 1),\n      // reset Gate\n      // wrxh\n      resetGateInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wrhh\n      resetGateHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // br\n      resetGateBias: new Matrix(hiddenSize, 1),\n      // cell write parameters\n      // wcxh\n      cellWriteInputMatrix: new RandomMatrix(hiddenSize, prevSize, 0.08), // wchh\n      cellWriteHiddenMatrix: new RandomMatrix(hiddenSize, hiddenSize, 0.08), // bc\n      cellWriteBias: new Matrix(hiddenSize, 1),\n    };\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    const sigmoid = equation.sigmoid.bind(equation);\n    const add = equation.add.bind(equation);\n    const multiply = equation.multiply.bind(equation);\n    const multiplyElement = equation.multiplyElement.bind(equation);\n    const tanh = equation.tanh.bind(equation);\n    const allOnes = equation.allOnes.bind(equation);\n    const cloneNegative = equation.cloneNegative.bind(equation);\n\n    // update gate\n    const updateGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.updateGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.updateGateBias\n      )\n    );\n\n    // reset gate\n    const resetGate = sigmoid(\n      add(\n        add(\n          multiply(hiddenLayer.resetGateInputMatrix, inputMatrix),\n          multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)\n        ),\n        hiddenLayer.resetGateBias\n      )\n    );\n\n    // cell\n    const cell = tanh(\n      add(\n        add(\n          multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix),\n          multiply(\n            hiddenLayer.cellWriteHiddenMatrix,\n            multiplyElement(resetGate, previousResult)\n          )\n        ),\n        hiddenLayer.cellWriteBias\n      )\n    );\n\n    // compute hidden state as gated, saturated cell activations\n    // negate updateGate\n    return add(\n      multiplyElement(\n        add(\n          allOnes(updateGate.rows, updateGate.columns),\n          cloneNegative(updateGate)\n        ),\n        cell\n      ),\n      multiplyElement(previousResult, updateGate)\n    );\n  }\n}\n\nmodule.exports = GRU;\n","// import Matrix from './matrix'\nconst GRU = require('./gru');\nconst RNNTimeStep = require('./rnn-time-step');\n\nclass GRUTimeStep extends RNNTimeStep {\n  static getModel(hiddenSize, prevSize) {\n    return GRU.prototype.getModel(hiddenSize, prevSize);\n  }\n\n  /**\n   *\n   * @param {Equation} equation\n   * @param {Matrix} inputMatrix\n   * @param {Matrix} previousResult\n   * @param {Object} hiddenLayer\n   * @returns {Matrix}\n   */\n  static getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n    return GRU.prototype.getEquation(\n      equation,\n      inputMatrix,\n      previousResult,\n      hiddenLayer\n    );\n  }\n}\n\nmodule.exports = GRUTimeStep;\n","const activation = require('./activation');\nconst crossValidate = require('./cross-validate').crossValidate;\nconst layer = require('./layer');\nconst likely = require('./likely');\nconst lookup = require('./lookup');\nconst praxis = require('./praxis');\nconst { FeedForward } = require('./feed-forward');\nconst NeuralNetwork = require('./neural-network');\nconst NeuralNetworkGPU = require('./neural-network-gpu');\nconst TrainStream = require('./train-stream');\nconst { Recurrent } = require('./recurrent');\nconst RNNTimeStep = require('./recurrent/rnn-time-step');\nconst LSTMTimeStep = require('./recurrent/lstm-time-step');\nconst GRUTimeStep = require('./recurrent/gru-time-step');\nconst RNN = require('./recurrent/rnn');\nconst LSTM = require('./recurrent/lstm');\nconst GRU = require('./recurrent/gru');\nconst max = require('./utilities/max');\nconst mse = require('./utilities/mse');\nconst ones = require('./utilities/ones');\nconst random = require('./utilities/random');\nconst randomWeight = require('./utilities/random-weight');\nconst randos = require('./utilities/randos');\nconst range = require('./utilities/range');\nconst toArray = require('./utilities/to-array');\nconst DataFormatter = require('./utilities/data-formatter');\nconst zeros = require('./utilities/zeros');\n\nconst brain = {\n  activation,\n  crossValidate,\n  likely,\n  layer,\n  lookup,\n  praxis,\n  FeedForward,\n  NeuralNetwork,\n  NeuralNetworkGPU,\n  Recurrent,\n  TrainStream,\n  recurrent: {\n    RNNTimeStep,\n    LSTMTimeStep,\n    GRUTimeStep,\n    RNN,\n    LSTM,\n    GRU,\n  },\n  utilities: {\n    max,\n    mse,\n    ones,\n    random,\n    randomWeight,\n    randos,\n    range,\n    toArray,\n    DataFormatter,\n    zeros,\n  },\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain //eslint-disable-line\n}\n\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n"]}